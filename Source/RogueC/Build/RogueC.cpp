#include <stdio.h>
#include "RogueC.h"

//=============================================================================
//  Rogue.cpp
//
//  Rogue runtime.
//
//  ---------------------------------------------------------------------------
//
//  Created 2015.01.19 by Abe Pralle
//
//  This is free and unencumbered software released into the public domain
//  under the terms of the UNLICENSE ( http://unlicense.org ).
//=============================================================================

#include <fcntl.h>
#include <math.h>
#include <string.h>
#include <sys/timeb.h>
#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <inttypes.h>
#include <exception>

#if !defined(ROGUE_PLATFORM_WINDOWS)
#  include <sys/time.h>
#  include <unistd.h>
#  include <signal.h>
#  include <dirent.h>
#  include <sys/socket.h>
#  include <sys/uio.h>
#  include <sys/stat.h>
#  include <netdb.h>
#  include <errno.h>
#  include <pthread.h>
#endif

#if defined(ANDROID)
#  include <netinet/in.h>
#endif

#if defined(_WIN32)
#  include <direct.h>
#  define chdir _chdir
#endif

#if TARGET_OS_IPHONE
#  include <sys/types.h>
#  include <sys/sysctl.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#ifndef PATH_MAX
#  define PATH_MAX 4096
#endif

//-----------------------------------------------------------------------------
//  GLOBAL PROPERTIES
//-----------------------------------------------------------------------------
int                Rogue_gc_threshold = ROGUE_GC_THRESHOLD_DEFAULT;
bool               Rogue_gc_requested = false;
RogueLogical       Rogue_configured = 0;
int                Rogue_allocation_bytes_until_gc = Rogue_gc_threshold;
int                Rogue_argc;
const char**       Rogue_argv;
RogueDebugTrace*   Rogue_call_stack = 0;
RogueCallbackInfo  Rogue_on_gc_begin;
RogueCallbackInfo  Rogue_on_gc_trace_finished;
RogueCallbackInfo  Rogue_on_gc_end;
char               RogueDebugTrace::buffer[120];

struct RogueWeakReference;
RogueWeakReference* Rogue_weak_references = 0;

//-----------------------------------------------------------------------------
//  RogueDebugTrace
//-----------------------------------------------------------------------------
RogueDebugTrace::RogueDebugTrace( const char* method_signature, const char* filename, int line )
  : method_signature(method_signature), filename(filename), line(line), previous_trace(0)
{
  previous_trace = Rogue_call_stack;
  Rogue_call_stack = this;
}

RogueDebugTrace::~RogueDebugTrace()
{
  Rogue_call_stack = previous_trace;
}

int RogueDebugTrace::count()
{
  int n = 1;
  RogueDebugTrace* current = previous_trace;
  while (current)
  {
    ++n;
    current = current->previous_trace;
  }
  return n;
}

char* RogueDebugTrace::to_c_string()
{
  sprintf( buffer, "[%s %s:%d]", method_signature, filename, line );
  return buffer;
}

//-----------------------------------------------------------------------------
//  RogueType
//-----------------------------------------------------------------------------
RogueArray* RogueType_create_array( int count, int element_size, bool is_reference_array )
{
  if (count < 0) count = 0;
  int data_size  = count * element_size;
  int total_size = sizeof(RogueArray) + data_size;

  RogueArray* array = (RogueArray*) RogueAllocator_allocate_object( RogueTypeArray->allocator, RogueTypeArray, total_size );

  memset( array->as_bytes, 0, data_size );
  array->count = count;
  array->element_size = element_size;
  array->is_reference_array = is_reference_array;

  return array;
}

RogueTypeInfo* RogueType_type_info( RogueType* THIS )
{
  if ( !THIS->type_info )
  {
    THIS->type_info = RogueTypeInfo__init__Int32_String( (RogueTypeInfo*)ROGUE_CREATE_OBJECT(TypeInfo),
        THIS->index, Rogue_literal_strings[ THIS->name_index ] );

    for (int i=0; i<THIS->global_property_count; ++i)
    {
      RogueTypeInfo__add_global_property_info__Int32_Int32( THIS->type_info,
          THIS->global_property_name_indices[i], THIS->global_property_type_indices[i] );
    }

    for (int i=0; i<THIS->property_count; ++i)
    {
      RogueTypeInfo__add_property_info__Int32_Int32( THIS->type_info,
          THIS->property_name_indices[i], THIS->property_type_indices[i] );
    }
  }

  return THIS->type_info;
}

RogueObject* RogueType_create_object( RogueType* THIS, RogueInt32 size )
{
  ROGUE_DEF_LOCAL_REF_NULL(RogueObject*, obj);
  RogueInitFn  fn;

  obj = RogueAllocator_allocate_object( THIS->allocator, THIS, size ? size : THIS->object_size );

  if ((fn = THIS->init_object_fn)) return fn( obj );
  else                             return obj;
}

RogueString* RogueType_name( RogueType* THIS )
{
  return Rogue_literal_strings[ THIS->name_index ];
}

bool RogueType_name_equals( RogueType* THIS, const char* name )
{
  // For debugging purposes
  RogueString* st = Rogue_literal_strings[ THIS->name_index ];
  if ( !st ) return false;

  return (0 == strcmp((char*)st->utf8,name));
}

void RogueType_print_name( RogueType* THIS )
{
  RogueString* st = Rogue_literal_strings[ THIS->name_index ];
  if (st)
  {
    printf( "%s", st->utf8 );
  }
}

RogueType* RogueType_retire( RogueType* THIS )
{
  if (THIS->base_types)
  {
#if !ROGUE_GC_MODE_BOEHM
    delete [] THIS->base_types;
#endif
    THIS->base_types = 0;
    THIS->base_type_count = 0;
  }

  return THIS;
}

RogueObject* RogueType_singleton( RogueType* THIS )
{
  RogueInitFn fn;

  if (THIS->_singleton) return THIS->_singleton;

  // NOTE: _singleton must be assigned before calling init_object()
  // so we can't just call RogueType_create_object().
  THIS->_singleton = RogueAllocator_allocate_object( THIS->allocator, THIS, THIS->object_size );

  if ((fn = THIS->init_object_fn)) THIS->_singleton = fn( THIS->_singleton );

  if ((fn = THIS->init_fn)) return fn( THIS->_singleton );
  else                      return THIS->_singleton;

  return THIS->_singleton;
}

//-----------------------------------------------------------------------------
//  RogueObject
//-----------------------------------------------------------------------------
RogueObject* RogueObject_as( RogueObject* THIS, RogueType* specialized_type )
{
  if (RogueObject_instance_of(THIS,specialized_type)) return THIS;
  return 0;
}

RogueLogical RogueObject_instance_of( RogueObject* THIS, RogueType* ancestor_type )
{
  RogueType* this_type;

  if ( !THIS )
  {
    return false;
  }

  this_type = THIS->type;
  if (this_type == ancestor_type)
  {
    return true;
  }

  int count = this_type->base_type_count;
  RogueType** base_type_ptr = this_type->base_types - 1;
  while (--count >= 0)
  {
    if (ancestor_type == *(++base_type_ptr))
    {
      return true;
    }
  }

  return false;
}

void* RogueObject_retain( RogueObject* THIS )
{
  ROGUE_INCREF(THIS);
  return THIS;
}

void* RogueObject_release( RogueObject* THIS )
{
  ROGUE_DECREF(THIS);
  return THIS;
}

RogueString* RogueObject_to_string( RogueObject* THIS )
{
  RogueToStringFn fn = THIS->type->to_string_fn;
  if (fn) return fn( THIS );

  return Rogue_literal_strings[ THIS->type->name_index ];
}

void RogueObject_trace( void* obj )
{
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
}

void RogueString_trace( void* obj )
{
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
}

void RogueArray_trace( void* obj )
{
  int count;
  RogueObject** src;
  RogueArray* array = (RogueArray*) obj;

  if ( !array || array->object_size < 0 ) return;
  array->object_size = ~array->object_size;

  if ( !array->is_reference_array ) return;

  count = array->count;
  src = array->as_objects + count;
  while (--count >= 0)
  {
    RogueObject* cur = *(--src);
    if (cur && cur->object_size >= 0)
    {
      cur->type->trace_fn( cur );
    }
  }
}

//-----------------------------------------------------------------------------
//  RogueString
//-----------------------------------------------------------------------------
RogueString* RogueString_create_with_byte_count( int byte_count )
{
  if (byte_count < 0) byte_count = 0;

  int total_size = sizeof(RogueString) + (byte_count+1);

  RogueString* st = (RogueString*) RogueAllocator_allocate_object( RogueTypeString->allocator, RogueTypeString, total_size );
  st->byte_count = byte_count;

  return st;
}

RogueString* RogueString_create_from_utf8( const char* utf8, int count )
{
  if (count == -1) count = (int) strlen( utf8 );

  RogueString* st = RogueString_create_with_byte_count( count );
  memcpy( st->utf8, utf8, count );
  return RogueString_validate( st );
}

RogueString* RogueString_create_from_characters( RogueCharacter_List* characters )
{
  if ( !characters ) return RogueString_create_with_byte_count(0);

  RogueCharacter* data = characters->data->as_characters;
  int count = characters->count;
  int utf8_count = 0;
  for (int i=count; --i>=0; )
  {
    RogueCharacter ch = data[i];
    if (ch <= 0x7F)         ++utf8_count;
    else if (ch <= 0x7FF)   utf8_count += 2;
    else if (ch <= 0xFFFF)  utf8_count += 3;
    else                    utf8_count += 4;
  }

  RogueString* result = RogueString_create_with_byte_count( utf8_count );
  RogueByte*   dest = result->utf8;
  for (int i=0; i<count; ++i)
  {
    RogueCharacter ch = data[i];
    if (ch < 0)
    {
      *(dest++) = 0;
    }
    else if (ch <= 0x7F)
    {
      *(dest++) = (RogueByte) ch;
    }
    else if (ch <= 0x7FF)
    {
      dest[0] = (RogueByte) (0xC0 | ((ch >> 6) & 0x1F));
      dest[1] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 2;
    }
    else if (ch <= 0xFFFF)
    {
      dest[0] = (RogueByte) (0xE0 | ((ch >> 12) & 0xF));
      dest[1] = (RogueByte) (0x80 | ((ch >> 6) & 0x3F));
      dest[2] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 3;
    }
    else
    {
      dest[0] = (RogueByte) (0xF0 | ((ch >> 18) & 0x7));
      dest[1] = (RogueByte) (0x80 | ((ch >> 12) & 0x3F));
      dest[2] = (RogueByte) (0x80 | ((ch >> 6) & 0x3F));
      dest[3] = (RogueByte) (0x80 | (ch & 0x3F));
      dest += 4;
    }
  }

  result->character_count = count;

  return RogueString_validate( result );
}

void RogueString_print_string( RogueString* st )
{
  if (st)
  {
    RogueString_print_utf8( st->utf8, st->byte_count );
  }
  else
  {
    printf( "null" );
  }
}

void RogueString_print_characters( RogueCharacter* characters, int count )
{
  if (characters)
  {
    RogueCharacter* src = characters - 1;
    while (--count >= 0)
    {
      int ch = *(++src);

      if (ch < 0)
      {
        putchar( 0 );
      }
      else if (ch < 0x80)
      {
        // %0xxxxxxx
        putchar( ch );
      }
      else if (ch < 0x800)
      {
        // %110xxxxx 10xxxxxx
        putchar( ((ch >> 6) & 0x1f) | 0xc0 );
        putchar( (ch & 0x3f) | 0x80 );
      }
      else if (ch <= 0xFFFF)
      {
        // %1110xxxx 10xxxxxx 10xxxxxx
        putchar( ((ch >> 12) & 15) | 0xe0 );
        putchar( ((ch >> 6) & 0x3f) | 0x80 );
        putchar( (ch & 0x3f) | 0x80 );
      }
      else
      {
        // Assume 21-bit
        // %11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
        putchar( 0xf0 | ((ch>>18) & 7) );
        putchar( 0x80 | ((ch>>12) & 0x3f) );
        putchar( 0x80 | ((ch>>6)  & 0x3f) );
        putchar( (ch & 0x3f) | 0x80 );
      }
    }
  }
  else
  {
    printf( "null" );
  }
}

void RogueString_print_utf8( RogueByte* utf8, int count )
{
  --utf8;
  while (--count >= 0)
  {
    putchar( *(++utf8) );
  }
}

RogueCharacter RogueString_character_at( RogueString* THIS, int index )
{
  if (THIS->is_ascii) return (RogueCharacter) THIS->utf8[ index ];

  RogueInt32 offset = RogueString_set_cursor( THIS, index );
  RogueByte* utf8 = THIS->utf8;

  RogueCharacter ch = utf8[ offset ];
  if (ch & 0x80)
  {
    if (ch & 0x20)
    {
      if (ch & 0x10)
      {
        return ((ch&7)<<18)
            | ((utf8[offset+1] & 0x3F) << 12)
            | ((utf8[offset+2] & 0x3F) << 6)
            | (utf8[offset+3] & 0x3F);
      }
      else
      {
        return ((ch&15)<<12)
            | ((utf8[offset+1] & 0x3F) << 6)
            | (utf8[offset+2] & 0x3F);
      }
    }
    else
    {
      return ((ch&31)<<6)
          | (utf8[offset+1] & 0x3F);
    }
  }
  else
  {
    return ch;
  }
}

RogueInt32 RogueString_set_cursor( RogueString* THIS, int index )
{
  // Sets this string's cursor_offset and cursor_index and returns cursor_offset.
  if (THIS->is_ascii)
  {
    return THIS->cursor_offset = THIS->cursor_index = index;
  }

  RogueByte* utf8 = THIS->utf8;

  RogueInt32 c_offset;
  RogueInt32 c_index;
  if (index == 0)
  {
    THIS->cursor_index = 0;
    return THIS->cursor_offset = 0;
  }
  else if (index >= THIS->character_count - 1)
  {
    c_offset = THIS->byte_count;
    c_index = THIS->character_count;
  }
  else
  {
    c_offset  = THIS->cursor_offset;
    c_index = THIS->cursor_index;
  }

  while (c_index < index)
  {
    while ((utf8[++c_offset] & 0xC0) == 0x80) {}
    ++c_index;
  }

  while (c_index > index)
  {
    while ((utf8[--c_offset] & 0xC0) == 0x80) {}
    --c_index;
  }

  THIS->cursor_index = c_index;
  return THIS->cursor_offset = c_offset;
}

RogueString* RogueString_validate( RogueString* THIS )
{
  // Trims any invalid UTF-8, counts the number of characters, and sets the hash code
  THIS->is_ascii = 1;  // assumption

  int character_count = 0;
  int byte_count = THIS->byte_count;
  int i;
  RogueByte* utf8 = THIS->utf8;
  for (i=0; i<byte_count; ++character_count)
  {
    int b = utf8[ i ];
    if (b & 0x80)
    {
      THIS->is_ascii = 0;
      if ( !(b & 0x40) ) { break;}  // invalid UTF-8

      if (b & 0x20)
      {
        if (b & 0x10)
        {
          // %11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
          if (b & 0x08) { break;}
          if (i + 4 > byte_count || ((utf8[i+1] & 0xC0) != 0x80) || ((utf8[i+2] & 0xC0) != 0x80)
              || ((utf8[i+3] & 0xC0) != 0x80)) { break;}
          i += 4;
        }
        else
        {
          // %1110xxxx 10xxxxxx 10xxxxxx
          if (i + 3 > byte_count || ((utf8[i+1] & 0xC0) != 0x80) || ((utf8[i+2] & 0xC0) != 0x80)) { break;}
          i += 3;
        }
      }
      else
      {
        // %110x xxxx 10xx xxxx
        if (i + 2 > byte_count || ((utf8[i+1] & 0xC0) != 0x80)) { break; }
        i += 2;
      }
    }
    else
    {
      ++i;
    }
  }

  if (i != byte_count)
  {
    printf( "*** RogueString validation error - invalid UTF8 (%d/%d):\n", i, byte_count );
    printf( "%02x\n", utf8[0] );
    printf( "%s\n", utf8 );
    utf8[ i ] = 0;
    Rogue_print_stack_trace();
  }

  THIS->byte_count = i;
  THIS->character_count = character_count;

  int code = 0;
  int len = THIS->byte_count;
  RogueByte* src = THIS->utf8 - 1;
  while (--len >= 0)
  {
    code = ((code<<3) - code) + *(++src);
  }
  THIS->hash_code = code;
  return THIS;
}

//-----------------------------------------------------------------------------
//  RogueArray
//-----------------------------------------------------------------------------
RogueArray* RogueArray_set( RogueArray* THIS, RogueInt32 dest_i1, RogueArray* src_array, RogueInt32 src_i1, RogueInt32 copy_count )
{
  int element_size;
  int dest_i2, src_i2;

  if ( !src_array || dest_i1 >= THIS->count ) return THIS;
  if (THIS->is_reference_array ^ src_array->is_reference_array) return THIS;

  if (copy_count == -1) src_i2 = src_array->count - 1;
  else                  src_i2 = (src_i1 + copy_count) - 1;

  if (dest_i1 < 0)
  {
    src_i1 -= dest_i1;
    dest_i1 = 0;
  }

  if (src_i1 < 0) src_i1 = 0;
  if (src_i2 >= src_array->count) src_i2 = src_array->count - 1;
  if (src_i1 > src_i2) return THIS;

  copy_count = (src_i2 - src_i1) + 1;
  dest_i2 = dest_i1 + (copy_count - 1);
  if (dest_i2 >= THIS->count)
  {
    dest_i2 = (THIS->count - 1);
    copy_count = (dest_i2 - dest_i1) + 1;
  }
  if ( !copy_count ) return THIS;


#if defined(ROGUE_ARC)
  if (THIS != src_array || dest_i1 >= src_i1 + copy_count || (src_i1 + copy_count) <= dest_i1 || dest_i1 < src_i1)
  {
    // no overlap
    RogueObject** src  = src_array->as_objects + src_i1 - 1;
    RogueObject** dest = THIS->as_objects + dest_i1 - 1;
    while (--copy_count >= 0)
    {
      RogueObject* src_obj, dest_obj;
      if ((src_obj = *(++src))) ROGUE_INCREF(src_obj);
      if ((dest_obj = *(++dest)) && !(ROGUE_DECREF(dest_obj)))
      {
        // TODO: delete dest_obj
        *dest = src_obj;
      }
    }
  }
  else
  {
    // Copying earlier data to later data; copy in reverse order to
    // avoid accidental overwriting
    if (dest_i1 > src_i1)  // if they're equal then we don't need to copy anything!
    {
      RogueObject** src  = src_array->as_objects + src_i2 + 1;
      RogueObject** dest = THIS->as_objects + dest_i2 + 1;
      while (--copy_count >= 0)
      {
        RogueObject* src_obj, dest_obj;
        if ((src_obj = *(--src))) ROGUE_INCREF(src_obj);
        if ((dest_obj = *(--dest)) && !(ROGUE_DECREF(dest_obj)))
        {
          // TODO: delete dest_obj
          *dest = src_obj;
        }
      }
    }
  }
  return THIS;
#endif

  element_size = THIS->element_size;
  RogueByte* src = src_array->as_bytes + src_i1 * element_size;
  RogueByte* dest = THIS->as_bytes + (dest_i1 * element_size);
  int copy_bytes = copy_count * element_size;

  if (src == dest) return THIS;

  if (src >= dest + copy_bytes || (src + copy_bytes) <= dest)
  {
    // Copy region does not overlap
    memcpy( dest, src, copy_count * element_size );
  }
  else
  {
    // Copy region overlaps
    memmove( dest, src, copy_count * element_size );
  }

  return THIS;
}

//-----------------------------------------------------------------------------
//  RogueAllocationPage
//-----------------------------------------------------------------------------
RogueAllocationPage* RogueAllocationPage_create( RogueAllocationPage* next_page )
{
  RogueAllocationPage* result = (RogueAllocationPage*) ROGUE_NEW_BYTES(sizeof(RogueAllocationPage));
  result->next_page = next_page;
  result->cursor = result->data;
  result->remaining = ROGUEMM_PAGE_SIZE;
  return result;
}

RogueAllocationPage* RogueAllocationPage_delete( RogueAllocationPage* THIS )
{
  if (THIS) ROGUE_DEL_BYTES( THIS );
  return 0;
};

void* RogueAllocationPage_allocate( RogueAllocationPage* THIS, int size )
{
  // Round size up to multiple of 8.
  if (size > 0) size = (size + 7) & ~7;
  else          size = 8;

  if (size > THIS->remaining) return 0;

  //printf( "Allocating %d bytes from page.\n", size );
  void* result = THIS->cursor;
  THIS->cursor += size;
  THIS->remaining -= size;

  //printf( "%d / %d\n", ROGUEMM_PAGE_SIZE - remaining, ROGUEMM_PAGE_SIZE );
  return result;
}


//-----------------------------------------------------------------------------
//  RogueAllocator
//-----------------------------------------------------------------------------
RogueAllocator* RogueAllocator_create()
{
  RogueAllocator* result = (RogueAllocator*) ROGUE_NEW_BYTES( sizeof(RogueAllocator) );

  memset( result, 0, sizeof(RogueAllocator) );

  return result;
}

RogueAllocator* RogueAllocator_delete( RogueAllocator* THIS )
{
  while (THIS->pages)
  {
    RogueAllocationPage* next_page = THIS->pages->next_page;
    RogueAllocationPage_delete( THIS->pages );
    THIS->pages = next_page;
  }
  return 0;
}

void* RogueAllocator_allocate( RogueAllocator* THIS, int size )
{
#if ROGUE_GC_MODE_AUTO
  Rogue_collect_garbage();
#endif
  if (size > ROGUEMM_SMALL_ALLOCATION_SIZE_LIMIT)
  {
    Rogue_allocation_bytes_until_gc -= size;
    void * mem = ROGUE_NEW_BYTES(size);
#if ROGUE_GC_MODE_AUTO
    if (!mem)
    {
      // Try hard!
      Rogue_collect_garbage(true);
      mem = ROGUE_NEW_BYTES(size);
    }
#endif
    return mem;
  }

  size = (size > 0) ? (size + ROGUEMM_GRANULARITY_MASK) & ~ROGUEMM_GRANULARITY_MASK : ROGUEMM_GRANULARITY_SIZE;

  Rogue_allocation_bytes_until_gc -= size;

  int slot;
  ROGUE_DEF_LOCAL_REF(RogueObject*, obj, THIS->available_objects[(slot=(size>>ROGUEMM_GRANULARITY_BITS))]);

  if (obj)
  {
    //printf( "found free object\n");
    THIS->available_objects[slot] = obj->next_object;
    return obj;
  }

  // No free objects for requested size.

  // Try allocating a new object from the current page.
  if (THIS->pages )
  {
    obj = (RogueObject*) RogueAllocationPage_allocate( THIS->pages, size );
    if (obj) return obj;

    // Not enough room on allocation page.  Allocate any smaller blocks
    // we're able to and then move on to a new page.
    int s = slot - 1;
    while (s >= 1)
    {
      obj = (RogueObject*) RogueAllocationPage_allocate( THIS->pages, s << ROGUEMM_GRANULARITY_BITS );
      if (obj)
      {
        //printf( "free obj size %d\n", (s << ROGUEMM_GRANULARITY_BITS) );
        obj->next_object = THIS->available_objects[s];
        THIS->available_objects[s] = obj;
      }
      else
      {
        --s;
      }
    }
  }

  // New page; this will work for sure.
  THIS->pages = RogueAllocationPage_create( THIS->pages );
  return RogueAllocationPage_allocate( THIS->pages, size );
}

#if ROGUE_GC_MODE_BOEHM
void Rogue_Boehm_Finalizer( void* obj, void* data )
{
  RogueObject* o = (RogueObject*)obj;
  o->type->clean_up_fn(o);
}

RogueObject* RogueAllocator_allocate_object( RogueAllocator* THIS, RogueType* of_type, int size )
{
  // If we had more type information (e.g., whether the data contained
  // references), we could make better decisions here.
  // Also, it seems like we could probably use the small allocator too.
  RogueObject* obj = (RogueObject*)GC_MALLOC( size );
  if (!obj)
  {
    Rogue_collect_garbage( true );
    obj = (RogueObject*)GC_MALLOC( size );
  }
  ROGUE_GCDEBUG_STATEMENT( printf( "Allocating " ) );
  ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(of_type) );
  ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", (RogueObject*)obj ) );
  //ROGUE_GCDEBUG_STATEMENT( Rogue_print_stack_trace() );

  if (of_type->clean_up_fn)
  {
    GC_REGISTER_FINALIZER_IGNORE_SELF( obj, Rogue_Boehm_Finalizer, 0, 0, 0 );
  }

  memset( obj, 0, size );

  obj->type = of_type;
  obj->object_size = size;

  return obj;
}
#else
RogueObject* RogueAllocator_allocate_object( RogueAllocator* THIS, RogueType* of_type, int size )
{
  ROGUE_DEF_LOCAL_REF(RogueObject*, obj, (RogueObject*) RogueAllocator_allocate( THIS, size ));

  ROGUE_GCDEBUG_STATEMENT( printf( "Allocating " ) );
  ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(of_type) );
  ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", (RogueObject*)obj ) );
  //ROGUE_GCDEBUG_STATEMENT( Rogue_print_stack_trace() );

  memset( obj, 0, size );

  if (of_type->clean_up_fn)
  {
    obj->next_object = THIS->objects_requiring_cleanup;
    THIS->objects_requiring_cleanup = obj;
  }
  else
  {
    obj->next_object = THIS->objects;
    THIS->objects = obj;
  }
  obj->type = of_type;
  obj->object_size = size;

  return obj;
}
#endif

void* RogueAllocator_free( RogueAllocator* THIS, void* data, int size )
{
  if (data)
  {
    ROGUE_GCDEBUG_STATEMENT(memset(data,0,size));
    if (size > ROGUEMM_SMALL_ALLOCATION_SIZE_LIMIT)
    {
      ROGUE_DEL_BYTES( data );
    }
    else
    {
      // Return object to small allocation pool
      RogueObject* obj = (RogueObject*) data;
      int slot = (size + ROGUEMM_GRANULARITY_MASK) >> ROGUEMM_GRANULARITY_BITS;
      if (slot <= 0) slot = 1;
      obj->next_object = THIS->available_objects[slot];
      THIS->available_objects[slot] = obj;
    }
  }

  // Always returns null, allowing a pointer to be freed and assigned null in
  // a single step.
  return 0;
}


void RogueAllocator_free_objects( RogueAllocator* THIS )
{
  RogueObject* objects = THIS->objects;
  while (objects)
  {
    RogueObject* next_object = objects->next_object;
    RogueAllocator_free( THIS, objects, objects->object_size );
    objects = next_object;
  }

  THIS->objects = 0;
}

void RogueAllocator_collect_garbage( RogueAllocator* THIS )
{
  // Global program objects have already been traced through.

  // Trace through all as-yet unreferenced objects that are manually retained.
  RogueObject* cur = THIS->objects;
  while (cur)
  {
    if (cur->object_size >= 0 && cur->reference_count > 0)
    {
      cur->type->trace_fn( cur );
    }
    cur = cur->next_object;
  }

  cur = THIS->objects_requiring_cleanup;
  while (cur)
  {
    if (cur->object_size >= 0 && cur->reference_count > 0)
    {
      cur->type->trace_fn( cur );
    }
    cur = cur->next_object;
  }

  // For any unreferenced objects requiring clean-up, we'll:
  //   1.  Reference them and move them to a separate short-term list.
  //   2.  Finish the regular GC.
  //   3.  Call clean_up() on each of them, which may create new
  //       objects (which is why we have to wait until after the GC).
  //   4.  Move them to the list of regular objects.
  cur = THIS->objects_requiring_cleanup;
  RogueObject* unreferenced_clean_up_objects = 0;
  RogueObject* survivors = 0;  // local var for speed
  while (cur)
  {
    RogueObject* next_object = cur->next_object;
    if (cur->object_size < 0)
    {
      // Referenced.
      cur->object_size = ~cur->object_size;
      cur->next_object = survivors;
      survivors = cur;
    }
    else
    {
      // Unreferenced - go ahead and trace it since we'll call clean_up
      // on it.
      cur->type->trace_fn( cur );
      cur->next_object = unreferenced_clean_up_objects;
      unreferenced_clean_up_objects = cur;
    }
    cur = next_object;
  }
  THIS->objects_requiring_cleanup = survivors;

  // All objects are in a state where a non-negative size means that the object is
  // due to be deleted.
  Rogue_on_gc_trace_finished.call();

  // Reset or delete each general object
  cur = THIS->objects;
  THIS->objects = 0;
  survivors = 0;  // local var for speed

  while (cur)
  {
    RogueObject* next_object = cur->next_object;
    if (cur->object_size < 0)
    {
      cur->object_size = ~cur->object_size;
      cur->next_object = survivors;
      survivors = cur;
    }
    else
    {
      ROGUE_GCDEBUG_STATEMENT( printf( "Freeing " ) );
      ROGUE_GCDEBUG_STATEMENT( RogueType_print_name(cur->type) );
      ROGUE_GCDEBUG_STATEMENT( printf( " %p\n", cur ) );
      RogueAllocator_free( THIS, cur, cur->object_size );
    }
    cur = next_object;
  }

  THIS->objects = survivors;


  // Call clean_up() on unreferenced objects requiring cleanup
  // and move them to the general objects list so they'll be deleted
  // the next time they're unreferenced.  Calling clean_up() may
  // create additional objects so THIS->objects may change during a
  // clean_up() call.
  cur = unreferenced_clean_up_objects;
  while (cur)
  {
    RogueObject* next_object = cur->next_object;

    cur->type->clean_up_fn( cur );

    cur->object_size = ~cur->object_size;
    cur->next_object = THIS->objects;
    THIS->objects = cur;

    cur = next_object;
  }
}

void Rogue_print_stack_trace ( bool leading_newline )
{
  RogueDebugTrace* current = Rogue_call_stack;
  if (current && leading_newline) printf( "\n" );
  while (current)
  {
    printf( "%s\n", current->to_c_string() );
    current = current->previous_trace;
  }
  printf("\n");
}

void Rogue_segfault_handler( int signal, siginfo_t *si, void *arg )
{
    if (si->si_addr < (void*)4096)
    {
      // Probably a null pointer dereference.
      printf( "Null reference error (accessing memory at %p)\n",
              si->si_addr );
    }
    else
    {
      if (si->si_code == SEGV_MAPERR)
        printf( "Access to unmapped memory at " );
      else if (si->si_code == SEGV_ACCERR)
        printf( "Access to forbidden memory at " );
      else
        printf( "Unknown segfault accessing " );
      printf("%p\n", si->si_addr);
    }

    Rogue_print_stack_trace( true );

    exit(1);
}

void Rogue_update_weak_references_during_gc()
{
  RogueWeakReference* cur = Rogue_weak_references;
  while (cur)
  {
    if (cur->value && cur->value->object_size >= 0)
    {
      // The value held by this weak reference is about to be deleted by the
      // GC system; null out the value.
      cur->value = 0;
    }
    cur = cur->next_weak_reference;
  }
}


void Rogue_configure_types()
{
  int i;
  int* type_info = Rogue_type_info_table;

  // Install seg fault handler
  struct sigaction sa;

  memset( &sa, 0, sizeof(sa) );
  sigemptyset( &sa.sa_mask );
  sa.sa_sigaction = Rogue_segfault_handler;
  sa.sa_flags     = SA_SIGINFO;

  sigaction( SIGSEGV, &sa, NULL );

  // Initialize allocators
  memset( Rogue_allocators, 0, sizeof(RogueAllocator)*Rogue_allocator_count );

  int global_property_pointer_cursor = 0;
  int property_offset_cursor = 0;

  // Initialize types
  for (i=0; i<Rogue_type_count; ++i)
  {
    int j;
    RogueType* type = &Rogue_types[i];

    memset( type, 0, sizeof(RogueType) );

    type->index = i;
    type->name_index = Rogue_type_name_index_table[i];
    type->object_size = Rogue_object_size_table[i];
    type->attributes = Rogue_attributes_table[i];
    type->allocator = &Rogue_allocators[ *(type_info++) ];
    type->methods = Rogue_dynamic_method_table + *(type_info++);
    type->base_type_count = *(type_info++);
    if (type->base_type_count)
    {
#if ROGUE_GC_MODE_BOEHM
      type->base_types = new (NoGC) RogueType*[ type->base_type_count ];
#else
      type->base_types = new RogueType*[ type->base_type_count ];
#endif
      for (j=0; j<type->base_type_count; ++j)
      {
        type->base_types[j] = &Rogue_types[ *(type_info++) ];
      }
    }

    type->global_property_count = *(type_info++);
    type->global_property_name_indices = type_info;
    type_info += type->global_property_count;
    type->global_property_type_indices = type_info;
    type_info += type->global_property_count;

    type->property_count = *(type_info++);
    type->property_name_indices = type_info;
    type_info += type->property_count;
    type->property_type_indices = type_info;
    type_info += type->property_count;

    if (((type->attributes & ROGUE_ATTRIBUTE_TYPE_MASK) == ROGUE_ATTRIBUTE_IS_CLASS)
      || ((type->attributes & ROGUE_ATTRIBUTE_TYPE_MASK) == ROGUE_ATTRIBUTE_IS_COMPOUND))
    {
      type->global_property_pointers = Rogue_global_property_pointers + global_property_pointer_cursor;
      global_property_pointer_cursor += type->global_property_count;
      type->property_offsets = Rogue_property_offsets + property_offset_cursor;
      property_offset_cursor += type->property_count;
    }

    type->trace_fn = Rogue_trace_fn_table[i];
    type->init_object_fn = Rogue_init_object_fn_table[i];
    type->init_fn        = Rogue_init_fn_table[i];
    type->clean_up_fn    = Rogue_clean_up_fn_table[i];
    type->to_string_fn   = Rogue_to_string_fn_table[i];
  }

  Rogue_on_gc_trace_finished.add( Rogue_update_weak_references_during_gc );
}

#if ROGUE_GC_MODE_BOEHM
static GC_ToggleRefStatus Rogue_Boehm_ToggleRefStatus( void * o )
{
  RogueObject* obj = (RogueObject*)o;
  if (obj->reference_count > 0) return GC_TOGGLE_REF_STRONG;
  return GC_TOGGLE_REF_DROP;
}

static void Rogue_Boehm_on_collection_event( GC_EventType event )
{
  if (event == GC_EVENT_START)
  {
    Rogue_on_gc_begin.call();
  }
  else if (event == GC_EVENT_END)
  {
    Rogue_on_gc_end.call();
  }
}

void Rogue_configure_gc()
{
  // Initialize Boehm collector
  //GC_set_finalize_on_demand(0);
  GC_set_toggleref_func(Rogue_Boehm_ToggleRefStatus);
  GC_set_on_collection_event(Rogue_Boehm_on_collection_event);
  //GC_set_all_interior_pointers(0);
  GC_INIT();
}
#else
void Rogue_configure_gc()
{
}
#endif

#if ROGUE_GC_MODE_BOEHM
bool Rogue_collect_garbage( bool forced )
{
  if (forced)
  {
    GC_gcollect();
    return true;
  }

  return GC_collect_a_little();
}
#else
bool Rogue_collect_garbage( bool forced )
{
  int i;

  if (Rogue_allocation_bytes_until_gc > 0 && !forced && !Rogue_gc_requested) return false;
  Rogue_gc_requested = false;

  Rogue_on_gc_begin.call();

//printf( "GC %d\n", Rogue_allocation_bytes_until_gc );
  Rogue_allocation_bytes_until_gc = Rogue_gc_threshold;

  Rogue_trace();

  for (i=0; i<Rogue_allocator_count; ++i)
  {
    RogueAllocator_collect_garbage( &Rogue_allocators[i] );
  }

  Rogue_on_gc_end.call();

  return true;
}
#endif

void Rogue_quit()
{
  int i;

  if ( !Rogue_configured ) return;
  Rogue_configured = 0;

  RogueGlobal__call_exit_functions( (RogueClassGlobal*) ROGUE_SINGLETON(Global) );

  // Give a few GC's to allow objects requiring clean-up to do so.
  Rogue_collect_garbage( true );
  Rogue_collect_garbage( true );
  Rogue_collect_garbage( true );

  for (i=0; i<Rogue_allocator_count; ++i)
  {
    RogueAllocator_free_objects( &Rogue_allocators[i] );
  }

  for (i=0; i<Rogue_type_count; ++i)
  {
    RogueType_retire( &Rogue_types[i] );
  }
}

#if ROGUE_GC_MODE_BOEHM

void Rogue_Boehm_IncRef (RogueObject* o)
{
  ++o->reference_count;
  if (o->reference_count == 1)
  {
    GC_toggleref_add(o, 1);
  }
}
void Rogue_Boehm_DecRef (RogueObject* o)
{
  --o->reference_count;
  if (o->reference_count < 0)
  {
    o->reference_count = 0;
  }
}
#endif


//-----------------------------------------------------------------------------
//  Exception handling
//-----------------------------------------------------------------------------
void Rogue_terminate_handler()
{
  printf( "Uncaught exception.\n" );
  exit(1);
}
typedef void(*ROGUEM0)(RogueObject*);
typedef RogueObject*(*ROGUEM1)(RogueObject*);
typedef RogueInt32(*ROGUEM2)(RogueObject*);
typedef RogueLogical(*ROGUEM3)(RogueObject*,RogueObject*);
typedef RogueString*(*ROGUEM4)(RogueObject*);
typedef RogueClassGlobal*(*ROGUEM5)(RogueClassGlobal*);
typedef RogueString*(*ROGUEM6)(RogueClassGlobal*);
typedef RogueStringBuilder*(*ROGUEM7)(RogueStringBuilder*);
typedef RogueInt32(*ROGUEM8)(RogueStringBuilder*);
typedef RogueString*(*ROGUEM9)(RogueStringBuilder*);
typedef RogueByte_List*(*ROGUEM10)(RogueByte_List*);
typedef RogueString*(*ROGUEM11)(RogueByte_List*);
typedef RogueClassGenericList*(*ROGUEM12)(RogueClassGenericList*);
typedef RogueString*(*ROGUEM13)(RogueClassGenericList*);
typedef RogueString*(*ROGUEM14)(RogueArray*);
typedef RogueFunction___List*(*ROGUEM15)(RogueFunction___List*);
typedef RogueString*(*ROGUEM16)(RogueFunction___List*);
typedef RogueClassFunction__*(*ROGUEM17)(RogueClassFunction__*);
typedef RogueString*(*ROGUEM18)(RogueClassFunction__*);
typedef void(*ROGUEM19)(RogueClassFunction__*);
typedef RogueException*(*ROGUEM20)(RogueException*);
typedef RogueString*(*ROGUEM21)(RogueException*);
typedef RogueException*(*ROGUEM22)(RogueException*,RogueString*);
typedef RogueInt32(*ROGUEM23)(RogueString*);
typedef RogueString*(*ROGUEM24)(RogueString*);
typedef RogueClassStackTrace*(*ROGUEM25)(RogueClassStackTrace*);
typedef RogueString*(*ROGUEM26)(RogueClassStackTrace*);
typedef RogueString_List*(*ROGUEM27)(RogueString_List*);
typedef RogueString*(*ROGUEM28)(RogueString_List*);
typedef RogueClassValue*(*ROGUEM29)(RogueClassValue*);
typedef RogueLogical(*ROGUEM30)(RogueClassValue*,RogueObject*);
typedef RogueString*(*ROGUEM31)(RogueClassValue*);
typedef RogueLogical(*ROGUEM32)(RogueClassValue*);
typedef RogueLogical(*ROGUEM33)(RogueClassValue*,RogueClassValue*);
typedef RogueInt32(*ROGUEM34)(RogueClassValue*);
typedef RogueReal64(*ROGUEM35)(RogueClassValue*);
typedef RogueTypeInfo*(*ROGUEM36)(RogueTypeInfo*);
typedef RogueString*(*ROGUEM37)(RogueTypeInfo*);
typedef RoguePropertyInfo_List*(*ROGUEM38)(RoguePropertyInfo_List*);
typedef RogueString*(*ROGUEM39)(RoguePropertyInfo_List*);
typedef RogueClassPropertyInfo*(*ROGUEM40)(RogueClassPropertyInfo*);
typedef RogueString*(*ROGUEM41)(RogueClassPropertyInfo*);
typedef RogueClassValueTable*(*ROGUEM42)(RogueClassValueTable*);
typedef RogueString*(*ROGUEM43)(RogueClassValueTable*);
typedef RogueClassValue*(*ROGUEM44)(RogueClassValueTable*,RogueString*);
typedef RogueClassValueTable*(*ROGUEM45)(RogueClassValueTable*,RogueString*,RogueClassValue*);
typedef RogueLogical(*ROGUEM46)(RogueClassValueTable*);
typedef RogueClassTable_String_Value_*(*ROGUEM47)(RogueClassTable_String_Value_*);
typedef RogueString*(*ROGUEM48)(RogueClassTable_String_Value_*);
typedef RogueClassTableEntry_String_Value_*(*ROGUEM49)(RogueClassTableEntry_String_Value_*);
typedef RogueString*(*ROGUEM50)(RogueClassTableEntry_String_Value_*);
typedef RogueCharacter_List*(*ROGUEM51)(RogueCharacter_List*);
typedef RogueString*(*ROGUEM52)(RogueCharacter_List*);
typedef RogueClassStringTable_String_*(*ROGUEM53)(RogueClassStringTable_String_*);
typedef RogueClassTable_String_String_*(*ROGUEM54)(RogueClassTable_String_String_*);
typedef RogueString*(*ROGUEM55)(RogueClassTable_String_String_*);
typedef RogueString*(*ROGUEM56)(RogueClassStringTable_String_*);
typedef RogueString*(*ROGUEM57)(RogueClassTable_String_String_*,RogueString*);
typedef RogueClassTableEntry_String_String_*(*ROGUEM58)(RogueClassTableEntry_String_String_*);
typedef RogueString*(*ROGUEM59)(RogueClassTableEntry_String_String_*);
typedef RogueClassStringReader*(*ROGUEM60)(RogueClassStringReader*);
typedef RogueString*(*ROGUEM61)(RogueClassStringReader*);
typedef RogueClassListReader_String_*(*ROGUEM62)(RogueClassListReader_String_*);
typedef RogueString*(*ROGUEM63)(RogueClassListReader_String_*);
typedef RogueClassPrimitiveWorkBuffer*(*ROGUEM64)(RogueClassPrimitiveWorkBuffer*);
typedef RogueString*(*ROGUEM65)(RogueClassPrimitiveWorkBuffer*);
typedef RogueClassMath*(*ROGUEM66)(RogueClassMath*);
typedef RogueString*(*ROGUEM67)(RogueClassMath*);
typedef RogueClassRuntime*(*ROGUEM68)(RogueClassRuntime*);
typedef RogueString*(*ROGUEM69)(RogueClassRuntime*);
typedef RogueClassTable_String_TypeInfo_*(*ROGUEM70)(RogueClassTable_String_TypeInfo_*);
typedef RogueString*(*ROGUEM71)(RogueClassTable_String_TypeInfo_*);
typedef RogueClassTableEntry_String_TypeInfo_*(*ROGUEM72)(RogueClassTableEntry_String_TypeInfo_*);
typedef RogueString*(*ROGUEM73)(RogueClassTableEntry_String_TypeInfo_*);
typedef RogueClassConsole*(*ROGUEM74)(RogueClassConsole*);
typedef RogueString*(*ROGUEM75)(RogueClassConsole*);
typedef RogueClassConsoleIOHandler*(*ROGUEM76)(RogueClassConsoleIOHandler*);
typedef RogueString*(*ROGUEM77)(RogueClassConsoleIOHandler*);
typedef RogueLogical(*ROGUEM78)(RogueClassConsoleIOHandler*);
typedef RogueByte(*ROGUEM79)(RogueClassConsoleIOHandler*);
typedef void(*ROGUEM80)(RogueClassConsoleIOHandler*,RogueArray*,RogueInt32);
typedef RogueClassFunction_161*(*ROGUEM81)(RogueClassFunction_161*);
typedef RogueString*(*ROGUEM82)(RogueClassFunction_161*);
typedef void(*ROGUEM83)(RogueClassFunction_161*);
typedef RogueClassRogueC*(*ROGUEM84)(RogueClassRogueC*);
typedef RogueString*(*ROGUEM85)(RogueClassRogueC*);
typedef RogueClassSet_String_*(*ROGUEM86)(RogueClassSet_String_*);
typedef RogueString*(*ROGUEM87)(RogueClassSet_String_*);
typedef RogueClassTable_String_Logical_*(*ROGUEM88)(RogueClassTable_String_Logical_*);
typedef RogueString*(*ROGUEM89)(RogueClassTable_String_Logical_*);
typedef RogueClassTableEntry_String_Logical_*(*ROGUEM90)(RogueClassTableEntry_String_Logical_*);
typedef RogueString*(*ROGUEM91)(RogueClassTableEntry_String_Logical_*);
typedef RogueParser_List*(*ROGUEM92)(RogueParser_List*);
typedef RogueString*(*ROGUEM93)(RogueParser_List*);
typedef RogueClassParser*(*ROGUEM94)(RogueClassParser*);
typedef RogueString*(*ROGUEM95)(RogueClassParser*);
typedef RogueClassTokenReader*(*ROGUEM96)(RogueClassTokenReader*);
typedef RogueString*(*ROGUEM97)(RogueClassTokenReader*);
typedef RogueToken_List*(*ROGUEM98)(RogueToken_List*);
typedef RogueString*(*ROGUEM99)(RogueToken_List*);
typedef RogueClassToken*(*ROGUEM100)(RogueClassToken*);
typedef RogueString*(*ROGUEM101)(RogueClassToken*);
typedef RogueCharacter(*ROGUEM102)(RogueClassToken*);
typedef RogueInt32(*ROGUEM103)(RogueClassToken*);
typedef RogueInt64(*ROGUEM104)(RogueClassToken*);
typedef RogueReal64(*ROGUEM105)(RogueClassToken*);
typedef RogueClassType*(*ROGUEM106)(RogueClassToken*);
typedef RogueClassTokenType*(*ROGUEM107)(RogueClassTokenType*);
typedef RogueString*(*ROGUEM108)(RogueClassTokenType*);
typedef RogueClassToken*(*ROGUEM109)(RogueClassTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueClassToken*(*ROGUEM110)(RogueClassTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueClassToken*(*ROGUEM111)(RogueClassTokenType*,RogueClassToken*,RogueString*);
typedef RogueLogical(*ROGUEM112)(RogueClassTokenType*);
typedef RogueClassTable_String_TokenType_*(*ROGUEM113)(RogueClassTable_String_TokenType_*);
typedef RogueString*(*ROGUEM114)(RogueClassTable_String_TokenType_*);
typedef RogueClassTableEntry_String_TokenType_*(*ROGUEM115)(RogueClassTableEntry_String_TokenType_*);
typedef RogueString*(*ROGUEM116)(RogueClassTableEntry_String_TokenType_*);
typedef RogueClassType*(*ROGUEM117)(RogueClassType*);
typedef RogueString*(*ROGUEM118)(RogueClassType*);
typedef RogueType_List*(*ROGUEM119)(RogueType_List*);
typedef RogueString*(*ROGUEM120)(RogueType_List*);
typedef RogueClassAttributes*(*ROGUEM121)(RogueClassAttributes*);
typedef RogueString*(*ROGUEM122)(RogueClassAttributes*);
typedef RogueClassTemplate*(*ROGUEM123)(RogueClassTemplate*);
typedef RogueString*(*ROGUEM124)(RogueClassTemplate*);
typedef RogueTypeParameter_List*(*ROGUEM125)(RogueTypeParameter_List*);
typedef RogueString*(*ROGUEM126)(RogueTypeParameter_List*);
typedef RogueClassTypeParameter*(*ROGUEM127)(RogueClassTypeParameter*);
typedef RogueString*(*ROGUEM128)(RogueClassTypeParameter*);
typedef RogueClassTable_Int32_Template_*(*ROGUEM129)(RogueClassTable_Int32_Template_*);
typedef RogueString*(*ROGUEM130)(RogueClassTable_Int32_Template_*);
typedef RogueClassTableEntry_Int32_Template_*(*ROGUEM131)(RogueClassTableEntry_Int32_Template_*);
typedef RogueString*(*ROGUEM132)(RogueClassTableEntry_Int32_Template_*);
typedef RogueTypeSpecializer_List*(*ROGUEM133)(RogueTypeSpecializer_List*);
typedef RogueString*(*ROGUEM134)(RogueTypeSpecializer_List*);
typedef RogueClassTypeSpecializer*(*ROGUEM135)(RogueClassTypeSpecializer*);
typedef RogueString*(*ROGUEM136)(RogueClassTypeSpecializer*);
typedef RogueDefinition_List*(*ROGUEM137)(RogueDefinition_List*);
typedef RogueString*(*ROGUEM138)(RogueDefinition_List*);
typedef RogueClassDefinition*(*ROGUEM139)(RogueClassDefinition*);
typedef RogueString*(*ROGUEM140)(RogueClassDefinition*);
typedef RogueClassCmd*(*ROGUEM141)(RogueClassCmd*);
typedef RogueString*(*ROGUEM142)(RogueClassCmd*);
typedef void(*ROGUEM143)(RogueClassCmd*,RogueClassCmdStatementList*);
typedef RogueClassCmd*(*ROGUEM144)(RogueClassCmd*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM145)(RogueClassCmd*,RogueClassType*,RogueClassScope*,RogueLogical,RogueLogical);
typedef RogueClassCmd*(*ROGUEM146)(RogueClassCmd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM147)(RogueClassCmd*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM148)(RogueClassCmd*,RogueClassVisitor*);
typedef void(*ROGUEM149)(RogueClassCmd*,RogueClassScope*);
typedef RogueLogical(*ROGUEM150)(RogueClassCmd*);
typedef RogueClassType*(*ROGUEM151)(RogueClassCmd*,RogueClassScope*);
typedef void(*ROGUEM152)(RogueClassCmd*);
typedef RogueClassType*(*ROGUEM153)(RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM154)(RogueClassCmd*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM155)(RogueClassCmd*,RogueClassScope*,RogueInt32);
typedef RogueClassCmd*(*ROGUEM156)(RogueClassCmd*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef void(*ROGUEM157)(RogueClassCmd*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassTable_String_Definition_*(*ROGUEM158)(RogueClassTable_String_Definition_*);
typedef RogueString*(*ROGUEM159)(RogueClassTable_String_Definition_*);
typedef RogueClassTableEntry_String_Definition_*(*ROGUEM160)(RogueClassTableEntry_String_Definition_*);
typedef RogueString*(*ROGUEM161)(RogueClassTableEntry_String_Definition_*);
typedef RogueProperty_List*(*ROGUEM162)(RogueProperty_List*);
typedef RogueString*(*ROGUEM163)(RogueProperty_List*);
typedef RogueClassProperty*(*ROGUEM164)(RogueClassProperty*);
typedef RogueString*(*ROGUEM165)(RogueClassProperty*);
typedef RogueClassTable_String_Property_*(*ROGUEM166)(RogueClassTable_String_Property_*);
typedef RogueString*(*ROGUEM167)(RogueClassTable_String_Property_*);
typedef RogueClassTableEntry_String_Property_*(*ROGUEM168)(RogueClassTableEntry_String_Property_*);
typedef RogueString*(*ROGUEM169)(RogueClassTableEntry_String_Property_*);
typedef RogueMethod_List*(*ROGUEM170)(RogueMethod_List*);
typedef RogueString*(*ROGUEM171)(RogueMethod_List*);
typedef RogueClassMethod*(*ROGUEM172)(RogueClassMethod*);
typedef RogueString*(*ROGUEM173)(RogueClassMethod*);
typedef RogueLocal_List*(*ROGUEM174)(RogueLocal_List*);
typedef RogueString*(*ROGUEM175)(RogueLocal_List*);
typedef RogueClassLocal*(*ROGUEM176)(RogueClassLocal*);
typedef RogueString*(*ROGUEM177)(RogueClassLocal*);
typedef RogueClassCmdStatementList*(*ROGUEM178)(RogueClassCmdStatementList*);
typedef RogueString*(*ROGUEM179)(RogueCmd_List*);
typedef RogueString*(*ROGUEM180)(RogueClassCmdStatementList*);
typedef RogueClassCmdStatementList*(*ROGUEM181)(RogueClassCmdStatementList*,RogueInt32);
typedef RogueCmd_List*(*ROGUEM182)(RogueCmd_List*);
typedef RogueCmd_List*(*ROGUEM183)(RogueCmd_List*,RogueInt32);
typedef RogueCmdLabel_List*(*ROGUEM184)(RogueCmdLabel_List*);
typedef RogueString*(*ROGUEM185)(RogueCmdLabel_List*);
typedef RogueClassCmdLabel*(*ROGUEM186)(RogueClassCmdLabel*);
typedef RogueString*(*ROGUEM187)(RogueClassCmdLabel*);
typedef RogueClassCmdLabel*(*ROGUEM188)(RogueClassCmdLabel*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM189)(RogueClassCmdLabel*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM190)(RogueClassCmdLabel*);
typedef RogueClassCmd*(*ROGUEM191)(RogueClassCmdLabel*,RogueClassScope*);
typedef void(*ROGUEM192)(RogueClassCmdLabel*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassTable_String_CmdLabel_*(*ROGUEM193)(RogueClassTable_String_CmdLabel_*);
typedef RogueString*(*ROGUEM194)(RogueClassTable_String_CmdLabel_*);
typedef RogueClassTableEntry_String_CmdLabel_*(*ROGUEM195)(RogueClassTableEntry_String_CmdLabel_*);
typedef RogueString*(*ROGUEM196)(RogueClassTableEntry_String_CmdLabel_*);
typedef RogueClassMethodTemplate*(*ROGUEM197)(RogueClassMethodTemplate*);
typedef RogueString*(*ROGUEM198)(RogueClassMethodTemplate*);
typedef RogueMethodTemplate_List*(*ROGUEM199)(RogueMethodTemplate_List*);
typedef RogueString*(*ROGUEM200)(RogueMethodTemplate_List*);
typedef RogueClassTable_String_Method_List_*(*ROGUEM201)(RogueClassTable_String_Method_List_*);
typedef RogueString*(*ROGUEM202)(RogueClassTable_String_Method_List_*);
typedef RogueClassTableEntry_String_Method_List_*(*ROGUEM203)(RogueClassTableEntry_String_Method_List_*);
typedef RogueString*(*ROGUEM204)(RogueClassTableEntry_String_Method_List_*);
typedef RogueClassTable_String_Method_*(*ROGUEM205)(RogueClassTable_String_Method_*);
typedef RogueString*(*ROGUEM206)(RogueClassTable_String_Method_*);
typedef RogueClassTableEntry_String_Method_*(*ROGUEM207)(RogueClassTableEntry_String_Method_*);
typedef RogueString*(*ROGUEM208)(RogueClassTableEntry_String_Method_*);
typedef RogueClassMethodTemplates*(*ROGUEM209)(RogueClassMethodTemplates*);
typedef RogueString*(*ROGUEM210)(RogueClassMethodTemplates*);
typedef RogueClassTable_String_ParseReader_*(*ROGUEM211)(RogueClassTable_String_ParseReader_*);
typedef RogueString*(*ROGUEM212)(RogueClassTable_String_ParseReader_*);
typedef RogueClassTableEntry_String_ParseReader_*(*ROGUEM213)(RogueClassTableEntry_String_ParseReader_*);
typedef RogueString*(*ROGUEM214)(RogueClassTableEntry_String_ParseReader_*);
typedef RogueClassParseReader*(*ROGUEM215)(RogueClassParseReader*);
typedef RogueString*(*ROGUEM216)(RogueClassParseReader*);
typedef RogueClassStopwatch*(*ROGUEM217)(RogueClassStopwatch*);
typedef RogueString*(*ROGUEM218)(RogueClassStopwatch*);
typedef RogueClassStringTable_Stopwatch_*(*ROGUEM219)(RogueClassStringTable_Stopwatch_*);
typedef RogueClassTable_String_Stopwatch_*(*ROGUEM220)(RogueClassTable_String_Stopwatch_*);
typedef RogueString*(*ROGUEM221)(RogueClassTable_String_Stopwatch_*);
typedef RogueString*(*ROGUEM222)(RogueClassStringTable_Stopwatch_*);
typedef RogueClassTableEntry_String_Stopwatch_*(*ROGUEM223)(RogueClassTableEntry_String_Stopwatch_*);
typedef RogueString*(*ROGUEM224)(RogueClassTableEntry_String_Stopwatch_*);
typedef RoguePlugin_List*(*ROGUEM225)(RoguePlugin_List*);
typedef RogueString*(*ROGUEM226)(RoguePlugin_List*);
typedef RogueClassPlugin*(*ROGUEM227)(RogueClassPlugin*);
typedef RogueString*(*ROGUEM228)(RogueClassPlugin*);
typedef RogueClassFunction__RETURNSLogical*(*ROGUEM229)(RogueClassFunction__RETURNSLogical*);
typedef RogueString*(*ROGUEM230)(RogueClassFunction__RETURNSLogical*);
typedef RogueLogical(*ROGUEM231)(RogueClassFunction__RETURNSLogical*);
typedef RogueClassFunction_Object_*(*ROGUEM232)(RogueClassFunction_Object_*);
typedef RogueString*(*ROGUEM233)(RogueClassFunction_Object_*);
typedef void(*ROGUEM234)(RogueClassFunction_Object_*,RogueObject*);
typedef RogueClassProgram*(*ROGUEM235)(RogueClassProgram*);
typedef RogueString*(*ROGUEM236)(RogueClassProgram*);
typedef RogueTemplate_List*(*ROGUEM237)(RogueTemplate_List*);
typedef RogueString*(*ROGUEM238)(RogueTemplate_List*);
typedef RogueClassTable_String_Template_*(*ROGUEM239)(RogueClassTable_String_Template_*);
typedef RogueString*(*ROGUEM240)(RogueClassTable_String_Template_*);
typedef RogueClassTableEntry_String_Template_*(*ROGUEM241)(RogueClassTableEntry_String_Template_*);
typedef RogueString*(*ROGUEM242)(RogueClassTableEntry_String_Template_*);
typedef RogueClassTable_String_Augment_List_*(*ROGUEM243)(RogueClassTable_String_Augment_List_*);
typedef RogueString*(*ROGUEM244)(RogueClassTable_String_Augment_List_*);
typedef RogueClassTableEntry_String_Augment_List_*(*ROGUEM245)(RogueClassTableEntry_String_Augment_List_*);
typedef RogueString*(*ROGUEM246)(RogueClassTableEntry_String_Augment_List_*);
typedef RogueAugment_List*(*ROGUEM247)(RogueAugment_List*);
typedef RogueString*(*ROGUEM248)(RogueAugment_List*);
typedef RogueClassAugment*(*ROGUEM249)(RogueClassAugment*);
typedef RogueString*(*ROGUEM250)(RogueClassAugment*);
typedef RogueClassTable_String_Type_*(*ROGUEM251)(RogueClassTable_String_Type_*);
typedef RogueString*(*ROGUEM252)(RogueClassTable_String_Type_*);
typedef RogueClassTableEntry_String_Type_*(*ROGUEM253)(RogueClassTableEntry_String_Type_*);
typedef RogueString*(*ROGUEM254)(RogueClassTableEntry_String_Type_*);
typedef RogueClassTable_String_Int32_*(*ROGUEM255)(RogueClassTable_String_Int32_*);
typedef RogueString*(*ROGUEM256)(RogueClassTable_String_Int32_*);
typedef RogueClassTableEntry_String_Int32_*(*ROGUEM257)(RogueClassTableEntry_String_Int32_*);
typedef RogueString*(*ROGUEM258)(RogueClassTableEntry_String_Int32_*);
typedef RogueClassTable_String_String_List_*(*ROGUEM259)(RogueClassTable_String_String_List_*);
typedef RogueString*(*ROGUEM260)(RogueClassTable_String_String_List_*);
typedef RogueClassTableEntry_String_String_List_*(*ROGUEM261)(RogueClassTableEntry_String_String_List_*);
typedef RogueString*(*ROGUEM262)(RogueClassTableEntry_String_String_List_*);
typedef RogueClassTable_Type_CyClass_*(*ROGUEM263)(RogueClassTable_Type_CyClass_*);
typedef RogueString*(*ROGUEM264)(RogueClassTable_Type_CyClass_*);
typedef RogueClassTableEntry_Type_CyClass_*(*ROGUEM265)(RogueClassTableEntry_Type_CyClass_*);
typedef RogueString*(*ROGUEM266)(RogueClassTableEntry_Type_CyClass_*);
typedef RogueClassCyClass*(*ROGUEM267)(RogueClassCyClass*);
typedef RogueString*(*ROGUEM268)(RogueClassCyClass*);
typedef RogueClassTable_String_CyMethod_List_*(*ROGUEM269)(RogueClassTable_String_CyMethod_List_*);
typedef RogueString*(*ROGUEM270)(RogueClassTable_String_CyMethod_List_*);
typedef RogueClassTableEntry_String_CyMethod_List_*(*ROGUEM271)(RogueClassTableEntry_String_CyMethod_List_*);
typedef RogueString*(*ROGUEM272)(RogueClassTableEntry_String_CyMethod_List_*);
typedef RogueCyMethod_List*(*ROGUEM273)(RogueCyMethod_List*);
typedef RogueString*(*ROGUEM274)(RogueCyMethod_List*);
typedef RogueClassCyMethod*(*ROGUEM275)(RogueClassCyMethod*);
typedef RogueInt32(*ROGUEM276)(RogueClassCyMethod*);
typedef RogueString*(*ROGUEM277)(RogueClassCyMethod*);
typedef RogueClassTable_String_CyProperty_*(*ROGUEM278)(RogueClassTable_String_CyProperty_*);
typedef RogueString*(*ROGUEM279)(RogueClassTable_String_CyProperty_*);
typedef RogueClassTableEntry_String_CyProperty_*(*ROGUEM280)(RogueClassTableEntry_String_CyProperty_*);
typedef RogueString*(*ROGUEM281)(RogueClassTableEntry_String_CyProperty_*);
typedef RogueClassCyProperty*(*ROGUEM282)(RogueClassCyProperty*);
typedef RogueString*(*ROGUEM283)(RogueClassCyProperty*);
typedef RogueClassTable_Type_Type_*(*ROGUEM284)(RogueClassTable_Type_Type_*);
typedef RogueString*(*ROGUEM285)(RogueClassTable_Type_Type_*);
typedef RogueClassTableEntry_Type_Type_*(*ROGUEM286)(RogueClassTableEntry_Type_Type_*);
typedef RogueString*(*ROGUEM287)(RogueClassTableEntry_Type_Type_*);
typedef RogueClassError*(*ROGUEM288)(RogueClassError*);
typedef RogueString*(*ROGUEM289)(RogueClassError*);
typedef RogueClassRogueError*(*ROGUEM290)(RogueClassRogueError*);
typedef RogueString*(*ROGUEM291)(RogueClassRogueError*);
typedef RogueClassPreprocessor*(*ROGUEM292)(RogueClassPreprocessor*);
typedef RogueString*(*ROGUEM293)(RogueClassPreprocessor*);
typedef RogueClassTable_String_Token_List_*(*ROGUEM294)(RogueClassTable_String_Token_List_*);
typedef RogueString*(*ROGUEM295)(RogueClassTable_String_Token_List_*);
typedef RogueClassTableEntry_String_Token_List_*(*ROGUEM296)(RogueClassTableEntry_String_Token_List_*);
typedef RogueString*(*ROGUEM297)(RogueClassTableEntry_String_Token_List_*);
typedef RogueClassPreprocessorTokenReader*(*ROGUEM298)(RogueClassPreprocessorTokenReader*);
typedef RogueString*(*ROGUEM299)(RogueClassPreprocessorTokenReader*);
typedef RogueClassTokenizer*(*ROGUEM300)(RogueClassTokenizer*);
typedef RogueString*(*ROGUEM301)(RogueClassTokenizer*);
typedef RogueClassLiteralCharacterToken*(*ROGUEM302)(RogueClassLiteralCharacterToken*);
typedef RogueString*(*ROGUEM303)(RogueClassLiteralCharacterToken*);
typedef RogueCharacter(*ROGUEM304)(RogueClassLiteralCharacterToken*);
typedef RogueClassLiteralInt64Token*(*ROGUEM305)(RogueClassLiteralInt64Token*);
typedef RogueString*(*ROGUEM306)(RogueClassLiteralInt64Token*);
typedef RogueInt32(*ROGUEM307)(RogueClassLiteralInt64Token*);
typedef RogueInt64(*ROGUEM308)(RogueClassLiteralInt64Token*);
typedef RogueReal64(*ROGUEM309)(RogueClassLiteralInt64Token*);
typedef RogueClassLiteralInt32Token*(*ROGUEM310)(RogueClassLiteralInt32Token*);
typedef RogueString*(*ROGUEM311)(RogueClassLiteralInt32Token*);
typedef RogueInt32(*ROGUEM312)(RogueClassLiteralInt32Token*);
typedef RogueReal64(*ROGUEM313)(RogueClassLiteralInt32Token*);
typedef RogueClassLiteralReal64Token*(*ROGUEM314)(RogueClassLiteralReal64Token*);
typedef RogueString*(*ROGUEM315)(RogueClassLiteralReal64Token*);
typedef RogueInt32(*ROGUEM316)(RogueClassLiteralReal64Token*);
typedef RogueReal64(*ROGUEM317)(RogueClassLiteralReal64Token*);
typedef RogueClassStringDataToken*(*ROGUEM318)(RogueClassStringDataToken*);
typedef RogueString*(*ROGUEM319)(RogueClassStringDataToken*);
typedef RogueClassListRewriter_Token_*(*ROGUEM320)(RogueClassListRewriter_Token_*);
typedef RogueString*(*ROGUEM321)(RogueClassListRewriter_Token_*);
typedef RogueClassProgram_cy_create_delegates__*(*ROGUEM322)(RogueClassProgram_cy_create_delegates__*);
typedef RogueString*(*ROGUEM323)(RogueClassProgram_cy_create_delegates__*);
typedef RogueLogical(*ROGUEM324)(RogueClassProgram_cy_create_delegates__*);
typedef RogueClassProgram_cy_on_header_end_Object_*(*ROGUEM325)(RogueClassProgram_cy_on_header_end_Object_*);
typedef RogueString*(*ROGUEM326)(RogueClassProgram_cy_on_header_end_Object_*);
typedef void(*ROGUEM327)(RogueClassProgram_cy_on_header_end_Object_*,RogueObject*);
typedef RogueClassProgram_cy_on_code_end_Object_*(*ROGUEM328)(RogueClassProgram_cy_on_code_end_Object_*);
typedef RogueString*(*ROGUEM329)(RogueClassProgram_cy_on_code_end_Object_*);
typedef void(*ROGUEM330)(RogueClassProgram_cy_on_code_end_Object_*,RogueObject*);
typedef RogueClassCmdAccess*(*ROGUEM331)(RogueClassCmdAccess*);
typedef RogueString*(*ROGUEM332)(RogueClassCmdAccess*);
typedef RogueClassCmd*(*ROGUEM333)(RogueClassCmdAccess*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM334)(RogueClassCmdAccess*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM335)(RogueClassCmdAccess*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM336)(RogueClassCmdAccess*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM337)(RogueClassCmdAccess*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM338)(RogueClassCmdAccess*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef RogueClassType*(*ROGUEM339)(RogueClassCmdAccess*);
typedef void(*ROGUEM340)(RogueClassCmdAccess*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdArgs*(*ROGUEM341)(RogueClassCmdArgs*);
typedef RogueString*(*ROGUEM342)(RogueClassCmdArgs*);
typedef RogueClassCmdArgs*(*ROGUEM343)(RogueClassCmdArgs*,RogueInt32);
typedef RogueCmdNamedArg_List*(*ROGUEM344)(RogueCmdNamedArg_List*);
typedef RogueString*(*ROGUEM345)(RogueCmdNamedArg_List*);
typedef RogueClassCmdNamedArg*(*ROGUEM346)(RogueClassCmdNamedArg*);
typedef RogueString*(*ROGUEM347)(RogueClassCmdNamedArg*);
typedef RogueClassCmdNamedArg*(*ROGUEM348)(RogueClassCmdNamedArg*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM349)(RogueClassCmdNamedArg*,RogueClassVisitor*);
typedef RogueClassFunction_Type_RETURNSLogical*(*ROGUEM350)(RogueClassFunction_Type_RETURNSLogical*);
typedef RogueString*(*ROGUEM351)(RogueClassFunction_Type_RETURNSLogical*);
typedef RogueLogical(*ROGUEM352)(RogueClassFunction_Type_RETURNSLogical*,RogueClassType*);
typedef RogueClassCmdDefaultValue*(*ROGUEM353)(RogueClassCmdDefaultValue*);
typedef RogueString*(*ROGUEM354)(RogueClassCmdDefaultValue*);
typedef RogueClassCmd*(*ROGUEM355)(RogueClassCmdDefaultValue*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM356)(RogueClassCmdDefaultValue*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM357)(RogueClassCmdLiteral*,RogueClassScope*);
typedef RogueLogical(*ROGUEM358)(RogueClassCmdLiteral*);
typedef RogueClassCmd*(*ROGUEM359)(RogueClassCmdDefaultValue*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM360)(RogueClassCmdDefaultValue*);
typedef RogueClassCmdLiteral*(*ROGUEM361)(RogueClassCmdLiteral*);
typedef RogueString*(*ROGUEM362)(RogueClassCmdLiteral*);
typedef RogueClassCmd*(*ROGUEM363)(RogueClassCmdLiteral*,RogueClassVisitor*);
typedef RogueClassCmdReturn*(*ROGUEM364)(RogueClassCmdReturn*);
typedef RogueString*(*ROGUEM365)(RogueClassCmdReturn*);
typedef RogueClassCmd*(*ROGUEM366)(RogueClassCmdReturn*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM367)(RogueClassCmdReturn*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM368)(RogueClassCmdReturn*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM369)(RogueClassCmdReturn*);
typedef void(*ROGUEM370)(RogueClassCmdReturn*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdStatement*(*ROGUEM371)(RogueClassCmdStatement*);
typedef RogueString*(*ROGUEM372)(RogueClassCmdStatement*);
typedef RogueClassCmd*(*ROGUEM373)(RogueClassCmdStatement*,RogueClassVisitor*);
typedef RogueClassScope*(*ROGUEM374)(RogueClassScope*);
typedef RogueString*(*ROGUEM375)(RogueClassScope*);
typedef RogueCmdControlStructure_List*(*ROGUEM376)(RogueCmdControlStructure_List*);
typedef RogueString*(*ROGUEM377)(RogueCmdControlStructure_List*);
typedef RogueClassCmdControlStructure*(*ROGUEM378)(RogueClassCmdControlStructure*);
typedef RogueString*(*ROGUEM379)(RogueClassCmdControlStructure*);
typedef RogueClassCmd*(*ROGUEM380)(RogueClassCmdControlStructure*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM381)(RogueClassCmdControlStructure*);
typedef RogueClassCmd*(*ROGUEM382)(RogueClassCmdControlStructure*,RogueClassCmdControlStructure*);
typedef RogueClassCmdTaskControlSection*(*ROGUEM383)(RogueClassCmdTaskControlSection*);
typedef RogueString*(*ROGUEM384)(RogueClassCmdTaskControlSection*);
typedef RogueClassFunction_431*(*ROGUEM385)(RogueClassFunction_431*);
typedef RogueString*(*ROGUEM386)(RogueClassFunction_431*);
typedef RogueLogical(*ROGUEM387)(RogueClassFunction_431*,RogueClassType*);
typedef RogueClassFunction_432*(*ROGUEM388)(RogueClassFunction_432*);
typedef RogueString*(*ROGUEM389)(RogueClassFunction_432*);
typedef RogueLogical(*ROGUEM390)(RogueClassFunction_432*,RogueClassType*);
typedef RogueClassCPPWriter*(*ROGUEM391)(RogueClassCPPWriter*);
typedef RogueString*(*ROGUEM392)(RogueClassCPPWriter*);
typedef RogueInt32_List*(*ROGUEM393)(RogueInt32_List*);
typedef RogueString*(*ROGUEM394)(RogueInt32_List*);
typedef RogueClassTableValueReader_Type_CyClass_*(*ROGUEM395)(RogueClassTableValueReader_Type_CyClass_*);
typedef RogueString*(*ROGUEM396)(RogueClassTableValueReader_Type_CyClass_*);
typedef RogueCyClass_List*(*ROGUEM397)(RogueCyClass_List*);
typedef RogueString*(*ROGUEM398)(RogueCyClass_List*);
typedef RogueClassTableValueReader_String_CyProperty_*(*ROGUEM399)(RogueClassTableValueReader_String_CyProperty_*);
typedef RogueString*(*ROGUEM400)(RogueClassTableValueReader_String_CyProperty_*);
typedef RogueClassTableValueReader_String_CyMethod_List_*(*ROGUEM401)(RogueClassTableValueReader_String_CyMethod_List_*);
typedef RogueString*(*ROGUEM402)(RogueClassTableValueReader_String_CyMethod_List_*);
typedef RogueCyMethod_List_List*(*ROGUEM403)(RogueCyMethod_List_List*);
typedef RogueString*(*ROGUEM404)(RogueCyMethod_List_List*);
typedef RogueClassRequirementError*(*ROGUEM405)(RogueClassRequirementError*);
typedef RogueString*(*ROGUEM406)(RogueClassRequirementError*);
typedef RogueClassRequirementError*(*ROGUEM407)(RogueClassRequirementError*,RogueString*);
typedef RogueClassSet_Type_*(*ROGUEM408)(RogueClassSet_Type_*);
typedef RogueString*(*ROGUEM409)(RogueClassSet_Type_*);
typedef RogueClassTable_Type_Logical_*(*ROGUEM410)(RogueClassTable_Type_Logical_*);
typedef RogueString*(*ROGUEM411)(RogueClassTable_Type_Logical_*);
typedef RogueClassTableEntry_Type_Logical_*(*ROGUEM412)(RogueClassTableEntry_Type_Logical_*);
typedef RogueString*(*ROGUEM413)(RogueClassTableEntry_Type_Logical_*);
typedef RogueClassSystem*(*ROGUEM414)(RogueClassSystem*);
typedef RogueString*(*ROGUEM415)(RogueClassSystem*);
typedef RogueWeakReference*(*ROGUEM416)(RogueWeakReference*);
typedef RogueString*(*ROGUEM417)(RogueWeakReference*);
typedef RogueClassReal64Value*(*ROGUEM418)(RogueClassReal64Value*);
typedef RogueString*(*ROGUEM419)(RogueClassReal64Value*);
typedef RogueLogical(*ROGUEM420)(RogueClassReal64Value*);
typedef RogueLogical(*ROGUEM421)(RogueClassReal64Value*,RogueClassValue*);
typedef RogueInt32(*ROGUEM422)(RogueClassReal64Value*);
typedef RogueReal64(*ROGUEM423)(RogueClassReal64Value*);
typedef RogueClassNullValue*(*ROGUEM424)(RogueClassNullValue*);
typedef RogueString*(*ROGUEM425)(RogueClassNullValue*);
typedef RogueLogical(*ROGUEM426)(RogueClassNullValue*);
typedef RogueLogical(*ROGUEM427)(RogueClassNullValue*,RogueClassValue*);
typedef RogueInt32(*ROGUEM428)(RogueClassNullValue*);
typedef RogueClassObjectValue*(*ROGUEM429)(RogueClassObjectValue*);
typedef RogueString*(*ROGUEM430)(RogueClassObjectValue*);
typedef RogueClassStringValue*(*ROGUEM431)(RogueClassStringValue*);
typedef RogueString*(*ROGUEM432)(RogueClassStringValue*);
typedef RogueLogical(*ROGUEM433)(RogueClassStringValue*);
typedef RogueLogical(*ROGUEM434)(RogueClassStringValue*,RogueClassValue*);
typedef RogueInt32(*ROGUEM435)(RogueClassStringValue*);
typedef RogueReal64(*ROGUEM436)(RogueClassStringValue*);
typedef RogueClassUndefinedValue*(*ROGUEM437)(RogueClassUndefinedValue*);
typedef RogueString*(*ROGUEM438)(RogueClassUndefinedValue*);
typedef RogueClassFile*(*ROGUEM439)(RogueClassFile*);
typedef RogueString*(*ROGUEM440)(RogueClassFile*);
typedef RogueClassFunction_1094*(*ROGUEM441)(RogueClassFunction_1094*);
typedef RogueString*(*ROGUEM442)(RogueClassFunction_1094*);
typedef void(*ROGUEM443)(RogueClassFunction_1094*);
typedef RogueClassBlockingConsoleIOHandler*(*ROGUEM444)(RogueClassBlockingConsoleIOHandler*);
typedef RogueString*(*ROGUEM445)(RogueClassBlockingConsoleIOHandler*);
typedef RogueLogical(*ROGUEM446)(RogueClassBlockingConsoleIOHandler*);
typedef RogueByte(*ROGUEM447)(RogueClassBlockingConsoleIOHandler*);
typedef void(*ROGUEM448)(RogueClassBlockingConsoleIOHandler*,RogueArray*,RogueInt32);
typedef RogueClassCmdMakeRequisite*(*ROGUEM449)(RogueClassCmdMakeRequisite*);
typedef RogueString*(*ROGUEM450)(RogueClassCmdMakeRequisite*);
typedef RogueClassCmdMakeRequisite*(*ROGUEM451)(RogueClassCmdMakeRequisite*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM452)(RogueClassCmdMakeRequisite*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM453)(RogueClassCmdMakeRequisite*);
typedef RogueClassCmd*(*ROGUEM454)(RogueClassCmdMakeRequisite*,RogueClassScope*);
typedef void(*ROGUEM455)(RogueClassCmdMakeRequisite*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassLineReader*(*ROGUEM456)(RogueClassLineReader*);
typedef RogueString*(*ROGUEM457)(RogueClassLineReader*);
typedef RogueClassFunction_1125*(*ROGUEM458)(RogueClassFunction_1125*);
typedef RogueString*(*ROGUEM459)(RogueClassFunction_1125*);
typedef RogueLogical(*ROGUEM460)(RogueClassFunction_1125*);
typedef RogueClassEOLToken*(*ROGUEM461)(RogueClassEOLToken*);
typedef RogueString*(*ROGUEM462)(RogueClassEOLToken*);
typedef RogueClassCmdLiteralLogical*(*ROGUEM463)(RogueClassCmdLiteralLogical*);
typedef RogueString*(*ROGUEM464)(RogueClassCmdLiteralLogical*);
typedef RogueClassCmd*(*ROGUEM465)(RogueClassCmdLiteralLogical*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM466)(RogueClassCmdLiteralLogical*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM467)(RogueClassCmdLiteralLogical*,RogueClassScope*);
typedef RogueLogical(*ROGUEM468)(RogueClassCmdLiteralLogical*);
typedef RogueClassType*(*ROGUEM469)(RogueClassCmdLiteralLogical*);
typedef void(*ROGUEM470)(RogueClassCmdLiteralLogical*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralInt32*(*ROGUEM471)(RogueClassCmdLiteralInt32*);
typedef RogueString*(*ROGUEM472)(RogueClassCmdLiteralInt32*);
typedef RogueClassCmd*(*ROGUEM473)(RogueClassCmdLiteralInt32*,RogueClassType*,RogueClassScope*,RogueLogical,RogueLogical);
typedef RogueClassCmd*(*ROGUEM474)(RogueClassCmdLiteralInt32*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM475)(RogueClassCmdLiteralInt32*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM476)(RogueClassCmdLiteralInt32*,RogueClassScope*);
typedef RogueLogical(*ROGUEM477)(RogueClassCmdLiteralInt32*);
typedef RogueClassType*(*ROGUEM478)(RogueClassCmdLiteralInt32*);
typedef void(*ROGUEM479)(RogueClassCmdLiteralInt32*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCloneArgs*(*ROGUEM480)(RogueClassCloneArgs*);
typedef RogueString*(*ROGUEM481)(RogueClassCloneArgs*);
typedef RogueClassCmdLabel*(*ROGUEM482)(RogueClassCloneArgs*,RogueClassCmdLabel*);
typedef RogueClassCmdAdd*(*ROGUEM483)(RogueClassCmdAdd*);
typedef RogueString*(*ROGUEM484)(RogueClassCmdBinary*);
typedef RogueString*(*ROGUEM485)(RogueClassCmdAdd*);
typedef RogueClassCmd*(*ROGUEM486)(RogueClassCmdAdd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM487)(RogueClassCmdAdd*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM488)(RogueClassCmdAdd*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM489)(RogueClassCmdBinary*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM490)(RogueClassCmdBinary*);
typedef void(*ROGUEM491)(RogueClassCmdBinary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueLogical(*ROGUEM492)(RogueClassCmdBinary*);
typedef RogueClassCmd*(*ROGUEM493)(RogueClassCmdBinary*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM494)(RogueClassCmdBinary*,RogueClassScope*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM495)(RogueClassCmdAdd*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmdBinary*(*ROGUEM496)(RogueClassCmdBinary*);
typedef RogueClassCmd*(*ROGUEM497)(RogueClassCmdBinary*,RogueClassVisitor*);
typedef RogueClassCmdNativeHeader*(*ROGUEM498)(RogueClassCmdNativeHeader*);
typedef RogueString*(*ROGUEM499)(RogueClassCmdNativeHeader*);
typedef RogueClassCmdNativeHeader*(*ROGUEM500)(RogueClassCmdNativeHeader*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM501)(RogueClassCmdNativeHeader*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM502)(RogueClassCmdNativeSource*);
typedef RogueClassCmd*(*ROGUEM503)(RogueClassCmdNativeHeader*,RogueClassScope*);
typedef RogueClassCmdNativeSource*(*ROGUEM504)(RogueClassCmdNativeSource*);
typedef RogueString*(*ROGUEM505)(RogueClassCmdNativeSource*);
typedef RogueClassCmd*(*ROGUEM506)(RogueClassCmdNativeSource*,RogueClassVisitor*);
typedef RogueClassCmdNativeCode*(*ROGUEM507)(RogueClassCmdNativeCode*);
typedef RogueString*(*ROGUEM508)(RogueClassCmdNativeCode*);
typedef RogueClassCmdNativeCode*(*ROGUEM509)(RogueClassCmdNativeCode*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM510)(RogueClassCmdNativeCode*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM511)(RogueClassCmdNativeCode*,RogueClassScope*);
typedef RogueClassCmdIncludeNative*(*ROGUEM512)(RogueClassCmdIncludeNative*);
typedef RogueString*(*ROGUEM513)(RogueClassCmdIncludeNative*);
typedef RogueClassCmdIncludeNative*(*ROGUEM514)(RogueClassCmdIncludeNative*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM515)(RogueClassCmdIncludeNative*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM516)(RogueClassCmdIncludeNative*,RogueClassScope*);
typedef RogueClassCmdIf*(*ROGUEM517)(RogueClassCmdIf*);
typedef RogueString*(*ROGUEM518)(RogueClassCmdIf*);
typedef RogueClassCmd*(*ROGUEM519)(RogueClassCmdIf*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM520)(RogueClassCmdIf*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM521)(RogueClassCmdIf*,RogueClassScope*);
typedef void(*ROGUEM522)(RogueClassCmdIf*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWhich*(*ROGUEM523)(RogueClassCmdWhich*);
typedef RogueString*(*ROGUEM524)(RogueClassCmdWhich*);
typedef RogueClassCmdWhich*(*ROGUEM525)(RogueClassCmdWhich*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM526)(RogueClassCmdWhich*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM527)(RogueClassCmdWhich*,RogueClassScope*);
typedef RogueCmdWhichCase_List*(*ROGUEM528)(RogueCmdWhichCase_List*);
typedef RogueString*(*ROGUEM529)(RogueCmdWhichCase_List*);
typedef RogueClassCmdWhichCase*(*ROGUEM530)(RogueClassCmdWhichCase*);
typedef RogueString*(*ROGUEM531)(RogueClassCmdWhichCase*);
typedef RogueClassCmdWhichCase*(*ROGUEM532)(RogueClassCmdWhichCase*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM533)(RogueClassCmdWhichCase*,RogueClassVisitor*);
typedef RogueClassCmdBlock*(*ROGUEM534)(RogueClassCmdBlock*);
typedef RogueString*(*ROGUEM535)(RogueClassCmdBlock*);
typedef RogueClassCmd*(*ROGUEM536)(RogueClassCmdBlock*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM537)(RogueClassCmdBlock*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM538)(RogueClassCmdBlock*);
typedef RogueClassCmdBlock*(*ROGUEM539)(RogueClassCmdBlock*,RogueClassScope*);
typedef void(*ROGUEM540)(RogueClassCmdBlock*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdContingent*(*ROGUEM541)(RogueClassCmdContingent*);
typedef RogueString*(*ROGUEM542)(RogueClassCmdContingent*);
typedef RogueClassCmd*(*ROGUEM543)(RogueClassCmdContingent*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM544)(RogueClassCmdContingent*,RogueClassVisitor*);
typedef RogueClassCmdContingent*(*ROGUEM545)(RogueClassCmdContingent*,RogueClassScope*);
typedef void(*ROGUEM546)(RogueClassCmdContingent*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmd*(*ROGUEM547)(RogueClassCmdContingent*,RogueClassCmdControlStructure*);
typedef RogueClassCmdGenericLoop*(*ROGUEM548)(RogueClassCmdGenericLoop*);
typedef RogueString*(*ROGUEM549)(RogueClassCmdGenericLoop*);
typedef RogueClassCmd*(*ROGUEM550)(RogueClassCmdGenericLoop*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM551)(RogueClassCmdGenericLoop*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM552)(RogueClassCmdGenericLoop*,RogueClassScope*);
typedef void(*ROGUEM553)(RogueClassCmdGenericLoop*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdTry*(*ROGUEM554)(RogueClassCmdTry*);
typedef RogueString*(*ROGUEM555)(RogueClassCmdTry*);
typedef RogueClassCmdTry*(*ROGUEM556)(RogueClassCmdTry*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM557)(RogueClassCmdTry*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM558)(RogueClassCmdTry*,RogueClassScope*);
typedef void(*ROGUEM559)(RogueClassCmdTry*,RogueClassCPPWriter*,RogueLogical);
typedef RogueCmdCatch_List*(*ROGUEM560)(RogueCmdCatch_List*);
typedef RogueString*(*ROGUEM561)(RogueCmdCatch_List*);
typedef RogueClassCmdCatch*(*ROGUEM562)(RogueClassCmdCatch*);
typedef RogueString*(*ROGUEM563)(RogueClassCmdCatch*);
typedef RogueClassCmdCatch*(*ROGUEM564)(RogueClassCmdCatch*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM565)(RogueClassCmdCatch*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM566)(RogueClassCmdCatch*,RogueClassScope*);
typedef void(*ROGUEM567)(RogueClassCmdCatch*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAwait*(*ROGUEM568)(RogueClassCmdAwait*);
typedef RogueString*(*ROGUEM569)(RogueClassCmdAwait*);
typedef RogueClassCmd*(*ROGUEM570)(RogueClassCmdAwait*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM571)(RogueClassCmdAwait*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM572)(RogueClassCmdAwait*,RogueClassScope*);
typedef RogueClassCmdYield*(*ROGUEM573)(RogueClassCmdYield*);
typedef RogueString*(*ROGUEM574)(RogueClassCmdYield*);
typedef RogueClassCmd*(*ROGUEM575)(RogueClassCmdYield*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM576)(RogueClassCmdYield*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM577)(RogueClassCmdYield*,RogueClassScope*);
typedef RogueClassCmdThrow*(*ROGUEM578)(RogueClassCmdThrow*);
typedef RogueString*(*ROGUEM579)(RogueClassCmdThrow*);
typedef RogueClassCmdThrow*(*ROGUEM580)(RogueClassCmdThrow*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM581)(RogueClassCmdThrow*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM582)(RogueClassCmdThrow*,RogueClassScope*);
typedef void(*ROGUEM583)(RogueClassCmdThrow*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralString*(*ROGUEM584)(RogueClassCmdLiteralString*);
typedef RogueString*(*ROGUEM585)(RogueClassCmdLiteralString*);
typedef RogueClassCmd*(*ROGUEM586)(RogueClassCmdLiteralString*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM587)(RogueClassCmdLiteralString*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM588)(RogueClassCmdLiteralString*,RogueClassScope*);
typedef RogueLogical(*ROGUEM589)(RogueClassCmdLiteralString*);
typedef RogueClassType*(*ROGUEM590)(RogueClassCmdLiteralString*);
typedef void(*ROGUEM591)(RogueClassCmdLiteralString*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdFormattedString*(*ROGUEM592)(RogueClassCmdFormattedString*);
typedef RogueString*(*ROGUEM593)(RogueClassCmdFormattedString*);
typedef RogueClassCmd*(*ROGUEM594)(RogueClassCmdFormattedString*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM595)(RogueClassCmdFormattedString*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM596)(RogueClassCmdFormattedString*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM597)(RogueClassCmdFormattedString*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM598)(RogueClassCmdFormattedString*);
typedef RogueClassCmdTrace*(*ROGUEM599)(RogueClassCmdTrace*);
typedef RogueString*(*ROGUEM600)(RogueClassCmdTrace*);
typedef RogueClassCmdTrace*(*ROGUEM601)(RogueClassCmdTrace*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM602)(RogueClassCmdTrace*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM603)(RogueClassCmdTrace*,RogueClassScope*);
typedef RogueClassCmdLocalDeclaration*(*ROGUEM604)(RogueClassCmdLocalDeclaration*);
typedef RogueString*(*ROGUEM605)(RogueClassCmdLocalDeclaration*);
typedef RogueClassCmd*(*ROGUEM606)(RogueClassCmdLocalDeclaration*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM607)(RogueClassCmdLocalDeclaration*,RogueClassVisitor*);
typedef void(*ROGUEM608)(RogueClassCmdLocalDeclaration*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM609)(RogueClassCmdLocalDeclaration*,RogueClassScope*);
typedef void(*ROGUEM610)(RogueClassCmdLocalDeclaration*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAssert*(*ROGUEM611)(RogueClassCmdAssert*);
typedef RogueString*(*ROGUEM612)(RogueClassCmdAssert*);
typedef RogueClassCmdAssert*(*ROGUEM613)(RogueClassCmdAssert*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM614)(RogueClassCmdAssert*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM615)(RogueClassCmdAssert*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM616)(RogueClassCmdAssert*);
typedef void(*ROGUEM617)(RogueClassCmdAssert*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdEscape*(*ROGUEM618)(RogueClassCmdEscape*);
typedef RogueString*(*ROGUEM619)(RogueClassCmdEscape*);
typedef RogueClassCmd*(*ROGUEM620)(RogueClassCmdEscape*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM621)(RogueClassCmdEscape*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM622)(RogueClassCmdEscape*,RogueClassScope*);
typedef void(*ROGUEM623)(RogueClassCmdEscape*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNextIteration*(*ROGUEM624)(RogueClassCmdNextIteration*);
typedef RogueString*(*ROGUEM625)(RogueClassCmdNextIteration*);
typedef RogueClassCmd*(*ROGUEM626)(RogueClassCmdNextIteration*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM627)(RogueClassCmdNextIteration*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM628)(RogueClassCmdNextIteration*,RogueClassScope*);
typedef void(*ROGUEM629)(RogueClassCmdNextIteration*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNecessary*(*ROGUEM630)(RogueClassCmdNecessary*);
typedef RogueString*(*ROGUEM631)(RogueClassCmdNecessary*);
typedef RogueClassCmd*(*ROGUEM632)(RogueClassCmdNecessary*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM633)(RogueClassCmdNecessary*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM634)(RogueClassCmdNecessary*,RogueClassScope*);
typedef void(*ROGUEM635)(RogueClassCmdNecessary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdSufficient*(*ROGUEM636)(RogueClassCmdSufficient*);
typedef RogueString*(*ROGUEM637)(RogueClassCmdSufficient*);
typedef RogueClassCmd*(*ROGUEM638)(RogueClassCmdSufficient*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM639)(RogueClassCmdSufficient*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM640)(RogueClassCmdSufficient*,RogueClassScope*);
typedef void(*ROGUEM641)(RogueClassCmdSufficient*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAdjust*(*ROGUEM642)(RogueClassCmdAdjust*);
typedef RogueString*(*ROGUEM643)(RogueClassCmdAdjust*);
typedef RogueClassCmd*(*ROGUEM644)(RogueClassCmdAdjust*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM645)(RogueClassCmdAdjust*,RogueClassScope*);
typedef RogueClassCmdAssign*(*ROGUEM646)(RogueClassCmdAssign*);
typedef RogueString*(*ROGUEM647)(RogueClassCmdAssign*);
typedef RogueClassCmd*(*ROGUEM648)(RogueClassCmdAssign*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM649)(RogueClassCmdAssign*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM650)(RogueClassCmdAssign*,RogueClassScope*);
typedef RogueClassCmdModifyAndAssign*(*ROGUEM651)(RogueClassCmdModifyAndAssign*);
typedef RogueString*(*ROGUEM652)(RogueClassCmdModifyAndAssign*);
typedef RogueClassCmd*(*ROGUEM653)(RogueClassCmdModifyAndAssign*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM654)(RogueClassCmdModifyAndAssign*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM655)(RogueClassCmdModifyAndAssign*,RogueClassScope*);
typedef RogueClassCmdTryExpression*(*ROGUEM656)(RogueClassCmdTryExpression*);
typedef RogueString*(*ROGUEM657)(RogueClassCmdTryExpression*);
typedef RogueClassCmd*(*ROGUEM658)(RogueClassCmdTryExpression*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM659)(RogueClassCmdTryExpression*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM660)(RogueClassCmdTryExpression*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM661)(RogueClassCmdTryExpression*,RogueClassScope*);
typedef RogueClassCmdReadLocal*(*ROGUEM662)(RogueClassCmdReadLocal*);
typedef RogueString*(*ROGUEM663)(RogueClassCmdReadLocal*);
typedef RogueClassCmd*(*ROGUEM664)(RogueClassCmdReadLocal*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM665)(RogueClassCmdReadLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM666)(RogueClassCmdReadLocal*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM667)(RogueClassCmdReadLocal*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM668)(RogueClassCmdReadLocal*);
typedef void(*ROGUEM669)(RogueClassCmdReadLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAdjustLocal*(*ROGUEM670)(RogueClassCmdAdjustLocal*);
typedef RogueString*(*ROGUEM671)(RogueClassCmdAdjustLocal*);
typedef RogueClassCmd*(*ROGUEM672)(RogueClassCmdAdjustLocal*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM673)(RogueClassCmdAdjustLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM674)(RogueClassCmdAdjustLocal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM675)(RogueClassCmdAdjustLocal*);
typedef void(*ROGUEM676)(RogueClassCmdAdjustLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCompareLE*(*ROGUEM677)(RogueClassCmdCompareLE*);
typedef RogueString*(*ROGUEM678)(RogueClassCmdCompareLE*);
typedef RogueClassCmd*(*ROGUEM679)(RogueClassCmdCompareLE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM680)(RogueClassCmdCompareLE*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM681)(RogueClassCmdCompareLE*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM682)(RogueClassCmdComparison*);
typedef RogueLogical(*ROGUEM683)(RogueClassCmdComparison*);
typedef RogueClassCmd*(*ROGUEM684)(RogueClassCmdComparison*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM685)(RogueClassCmdCompareLE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdComparison*(*ROGUEM686)(RogueClassCmdComparison*);
typedef RogueString*(*ROGUEM687)(RogueClassCmdComparison*);
typedef RogueClassCmd*(*ROGUEM688)(RogueClassCmdComparison*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM689)(RogueClassCmdComparison*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdRange*(*ROGUEM690)(RogueClassCmdRange*);
typedef RogueString*(*ROGUEM691)(RogueClassCmdRange*);
typedef RogueClassCmd*(*ROGUEM692)(RogueClassCmdRange*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM693)(RogueClassCmdRange*,RogueClassScope*);
typedef RogueInt32(*ROGUEM694)(RogueClassCmdRange*);
typedef RogueClassCmdModifyAndAssignLocal*(*ROGUEM695)(RogueClassCmdModifyAndAssignLocal*);
typedef RogueString*(*ROGUEM696)(RogueClassCmdModifyAndAssignLocal*);
typedef RogueClassCmd*(*ROGUEM697)(RogueClassCmdModifyAndAssignLocal*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM698)(RogueClassCmdModifyAndAssignLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM699)(RogueClassCmdModifyAndAssignLocal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM700)(RogueClassCmdModifyAndAssignLocal*);
typedef void(*ROGUEM701)(RogueClassCmdModifyAndAssignLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdResolvedModifyAndAssign*(*ROGUEM702)(RogueClassCmdResolvedModifyAndAssign*);
typedef RogueString*(*ROGUEM703)(RogueClassCmdResolvedModifyAndAssign*);
typedef RogueClassCmd*(*ROGUEM704)(RogueClassCmdResolvedModifyAndAssign*,RogueClassVisitor*);
typedef RogueClassCmdRangeUpTo*(*ROGUEM705)(RogueClassCmdRangeUpTo*);
typedef RogueString*(*ROGUEM706)(RogueClassCmdRangeUpTo*);
typedef RogueClassCmd*(*ROGUEM707)(RogueClassCmdRangeUpTo*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM708)(RogueClassCmdRangeUpTo*,RogueClassVisitor*);
typedef RogueClassCmdRangeUpToLessThan*(*ROGUEM709)(RogueClassCmdRangeUpToLessThan*);
typedef RogueString*(*ROGUEM710)(RogueClassCmdRangeUpToLessThan*);
typedef RogueClassCmd*(*ROGUEM711)(RogueClassCmdRangeUpToLessThan*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM712)(RogueClassCmdRangeUpToLessThan*,RogueClassVisitor*);
typedef RogueClassCmdCompareLT*(*ROGUEM713)(RogueClassCmdCompareLT*);
typedef RogueString*(*ROGUEM714)(RogueClassCmdCompareLT*);
typedef RogueClassCmd*(*ROGUEM715)(RogueClassCmdCompareLT*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM716)(RogueClassCmdCompareLT*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM717)(RogueClassCmdCompareLT*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM718)(RogueClassCmdCompareLT*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdCompareGE*(*ROGUEM719)(RogueClassCmdCompareGE*);
typedef RogueString*(*ROGUEM720)(RogueClassCmdCompareGE*);
typedef RogueClassCmd*(*ROGUEM721)(RogueClassCmdCompareGE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM722)(RogueClassCmdCompareGE*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM723)(RogueClassCmdCompareGE*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM724)(RogueClassCmdCompareGE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdForEach*(*ROGUEM725)(RogueClassCmdForEach*);
typedef RogueString*(*ROGUEM726)(RogueClassCmdForEach*);
typedef RogueClassCmd*(*ROGUEM727)(RogueClassCmdForEach*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM728)(RogueClassCmdForEach*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM729)(RogueClassCmdForEach*,RogueClassScope*);
typedef RogueClassCmdRangeDownTo*(*ROGUEM730)(RogueClassCmdRangeDownTo*);
typedef RogueString*(*ROGUEM731)(RogueClassCmdRangeDownTo*);
typedef RogueClassCmd*(*ROGUEM732)(RogueClassCmdRangeDownTo*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM733)(RogueClassCmdRangeDownTo*,RogueClassVisitor*);
typedef RogueInt32(*ROGUEM734)(RogueClassCmdRangeDownTo*);
typedef RogueClassCmdLogicalXor*(*ROGUEM735)(RogueClassCmdLogicalXor*);
typedef RogueString*(*ROGUEM736)(RogueClassCmdLogicalXor*);
typedef RogueClassCmd*(*ROGUEM737)(RogueClassCmdLogicalXor*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM738)(RogueClassCmdLogicalXor*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM739)(RogueClassCmdBinaryLogical*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM740)(RogueClassCmdBinaryLogical*);
typedef RogueClassCmd*(*ROGUEM741)(RogueClassCmdBinaryLogical*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueLogical(*ROGUEM742)(RogueClassCmdLogicalXor*,RogueLogical,RogueLogical);
typedef RogueClassCmdBinaryLogical*(*ROGUEM743)(RogueClassCmdBinaryLogical*);
typedef RogueString*(*ROGUEM744)(RogueClassCmdBinaryLogical*);
typedef RogueClassCmd*(*ROGUEM745)(RogueClassCmdBinaryLogical*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM746)(RogueClassCmdBinaryLogical*,RogueLogical,RogueLogical);
typedef RogueClassCmdLogicalOr*(*ROGUEM747)(RogueClassCmdLogicalOr*);
typedef RogueString*(*ROGUEM748)(RogueClassCmdLogicalOr*);
typedef RogueClassCmd*(*ROGUEM749)(RogueClassCmdLogicalOr*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM750)(RogueClassCmdLogicalOr*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM751)(RogueClassCmdLogicalOr*,RogueLogical,RogueLogical);
typedef RogueClassCmdLogicalAnd*(*ROGUEM752)(RogueClassCmdLogicalAnd*);
typedef RogueString*(*ROGUEM753)(RogueClassCmdLogicalAnd*);
typedef RogueClassCmd*(*ROGUEM754)(RogueClassCmdLogicalAnd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM755)(RogueClassCmdLogicalAnd*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM756)(RogueClassCmdLogicalAnd*,RogueLogical,RogueLogical);
typedef RogueClassCmdCompareEQ*(*ROGUEM757)(RogueClassCmdCompareEQ*);
typedef RogueString*(*ROGUEM758)(RogueClassCmdCompareEQ*);
typedef RogueClassCmd*(*ROGUEM759)(RogueClassCmdCompareEQ*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM760)(RogueClassCmdCompareEQ*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM761)(RogueClassCmdCompareEQ*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM762)(RogueClassCmdCompareEQ*);
typedef RogueClassCmd*(*ROGUEM763)(RogueClassCmdCompareEQ*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdCompareIsNot*(*ROGUEM764)(RogueClassCmdCompareIsNot*);
typedef RogueString*(*ROGUEM765)(RogueClassCmdCompareIsNot*);
typedef RogueClassCmd*(*ROGUEM766)(RogueClassCmdCompareIsNot*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM767)(RogueClassCmdCompareIsNot*,RogueClassVisitor*);
typedef void(*ROGUEM768)(RogueClassCmdCompareIsNot*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmd*(*ROGUEM769)(RogueClassCmdCompareIsNot*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmdCompareIs*(*ROGUEM770)(RogueClassCmdCompareIs*);
typedef RogueString*(*ROGUEM771)(RogueClassCmdCompareIs*);
typedef RogueClassCmd*(*ROGUEM772)(RogueClassCmdCompareIs*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM773)(RogueClassCmdCompareIs*,RogueClassVisitor*);
typedef void(*ROGUEM774)(RogueClassCmdCompareIs*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmd*(*ROGUEM775)(RogueClassCmdCompareIs*,RogueClassScope*,RogueClassType*,RogueClassType*);
typedef RogueClassCmdCompareNE*(*ROGUEM776)(RogueClassCmdCompareNE*);
typedef RogueString*(*ROGUEM777)(RogueClassCmdCompareNE*);
typedef RogueClassCmd*(*ROGUEM778)(RogueClassCmdCompareNE*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM779)(RogueClassCmdCompareNE*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM780)(RogueClassCmdCompareNE*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM781)(RogueClassCmdCompareNE*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdCompareGT*(*ROGUEM782)(RogueClassCmdCompareGT*);
typedef RogueString*(*ROGUEM783)(RogueClassCmdCompareGT*);
typedef RogueClassCmd*(*ROGUEM784)(RogueClassCmdCompareGT*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM785)(RogueClassCmdCompareGT*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM786)(RogueClassCmdCompareGT*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM787)(RogueClassCmdCompareGT*,RogueClassScope*,RogueClassType*,RogueClassType*,RogueLogical);
typedef RogueClassCmdInstanceOf*(*ROGUEM788)(RogueClassCmdInstanceOf*);
typedef RogueString*(*ROGUEM789)(RogueClassCmdInstanceOf*);
typedef RogueClassCmd*(*ROGUEM790)(RogueClassCmdInstanceOf*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM791)(RogueClassCmdInstanceOf*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM792)(RogueClassCmdInstanceOf*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM793)(RogueClassCmdInstanceOf*);
typedef void(*ROGUEM794)(RogueClassCmdInstanceOf*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdTypeOperator*(*ROGUEM795)(RogueClassCmdTypeOperator*);
typedef RogueString*(*ROGUEM796)(RogueClassCmdTypeOperator*);
typedef RogueClassCmd*(*ROGUEM797)(RogueClassCmdTypeOperator*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM798)(RogueClassCmdTypeOperator*);
typedef RogueClassCmdLogicalNot*(*ROGUEM799)(RogueClassCmdLogicalNot*);
typedef RogueString*(*ROGUEM800)(RogueClassCmdUnary*);
typedef RogueString*(*ROGUEM801)(RogueClassCmdLogicalNot*);
typedef RogueClassCmd*(*ROGUEM802)(RogueClassCmdLogicalNot*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM803)(RogueClassCmdLogicalNot*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM804)(RogueClassCmdLogicalNot*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM805)(RogueClassCmdLogicalNot*);
typedef void(*ROGUEM806)(RogueClassCmdUnary*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdUnary*(*ROGUEM807)(RogueClassCmdUnary*);
typedef RogueClassCmd*(*ROGUEM808)(RogueClassCmdUnary*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM809)(RogueClassCmdUnary*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM810)(RogueClassCmdUnary*);
typedef RogueClassCmdBitwiseXor*(*ROGUEM811)(RogueClassCmdBitwiseXor*);
typedef RogueString*(*ROGUEM812)(RogueClassCmdBitwiseXor*);
typedef RogueClassCmd*(*ROGUEM813)(RogueClassCmdBitwiseXor*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM814)(RogueClassCmdBitwiseXor*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM815)(RogueClassCmdBitwiseXor*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM816)(RogueClassCmdBitwiseOp*,RogueClassScope*,RogueClassType*);
typedef RogueClassCmdBitwiseOp*(*ROGUEM817)(RogueClassCmdBitwiseOp*);
typedef RogueString*(*ROGUEM818)(RogueClassCmdBitwiseOp*);
typedef RogueClassCmd*(*ROGUEM819)(RogueClassCmdBitwiseOp*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseOr*(*ROGUEM820)(RogueClassCmdBitwiseOr*);
typedef RogueString*(*ROGUEM821)(RogueClassCmdBitwiseOr*);
typedef RogueClassCmd*(*ROGUEM822)(RogueClassCmdBitwiseOr*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM823)(RogueClassCmdBitwiseOr*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM824)(RogueClassCmdBitwiseOr*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseAnd*(*ROGUEM825)(RogueClassCmdBitwiseAnd*);
typedef RogueString*(*ROGUEM826)(RogueClassCmdBitwiseAnd*);
typedef RogueClassCmd*(*ROGUEM827)(RogueClassCmdBitwiseAnd*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM828)(RogueClassCmdBitwiseAnd*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM829)(RogueClassCmdBitwiseAnd*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseShiftLeft*(*ROGUEM830)(RogueClassCmdBitwiseShiftLeft*);
typedef RogueString*(*ROGUEM831)(RogueClassCmdBitwiseShiftLeft*);
typedef RogueClassCmd*(*ROGUEM832)(RogueClassCmdBitwiseShiftLeft*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM833)(RogueClassCmdBitwiseShiftLeft*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM834)(RogueClassCmdBitwiseShiftLeft*,RogueClassVisitor*);
typedef RogueClassCmdBitwiseShiftRight*(*ROGUEM835)(RogueClassCmdBitwiseShiftRight*);
typedef RogueString*(*ROGUEM836)(RogueClassCmdBitwiseShiftRight*);
typedef RogueClassCmd*(*ROGUEM837)(RogueClassCmdBitwiseShiftRight*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM838)(RogueClassCmdBitwiseShiftRight*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM839)(RogueClassCmdBitwiseShiftRight*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM840)(RogueClassCmdBitwiseShiftRight*,RogueClassScope*);
typedef RogueClassCmdBitwiseShiftRightX*(*ROGUEM841)(RogueClassCmdBitwiseShiftRightX*);
typedef RogueString*(*ROGUEM842)(RogueClassCmdBitwiseShiftRightX*);
typedef RogueClassCmd*(*ROGUEM843)(RogueClassCmdBitwiseShiftRightX*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM844)(RogueClassCmdBitwiseShiftRightX*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM845)(RogueClassCmdBitwiseShiftRightX*,RogueClassVisitor*);
typedef RogueClassCmdSubtract*(*ROGUEM846)(RogueClassCmdSubtract*);
typedef RogueString*(*ROGUEM847)(RogueClassCmdSubtract*);
typedef RogueClassCmd*(*ROGUEM848)(RogueClassCmdSubtract*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM849)(RogueClassCmdSubtract*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM850)(RogueClassCmdSubtract*,RogueClassVisitor*);
typedef RogueClassCmdMultiply*(*ROGUEM851)(RogueClassCmdMultiply*);
typedef RogueString*(*ROGUEM852)(RogueClassCmdMultiply*);
typedef RogueClassCmd*(*ROGUEM853)(RogueClassCmdMultiply*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM854)(RogueClassCmdMultiply*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM855)(RogueClassCmdMultiply*,RogueClassVisitor*);
typedef RogueClassCmdDivide*(*ROGUEM856)(RogueClassCmdDivide*);
typedef RogueString*(*ROGUEM857)(RogueClassCmdDivide*);
typedef RogueClassCmd*(*ROGUEM858)(RogueClassCmdDivide*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM859)(RogueClassCmdDivide*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM860)(RogueClassCmdDivide*,RogueClassVisitor*);
typedef RogueClassCmdMod*(*ROGUEM861)(RogueClassCmdMod*);
typedef RogueString*(*ROGUEM862)(RogueClassCmdMod*);
typedef RogueClassCmd*(*ROGUEM863)(RogueClassCmdMod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM864)(RogueClassCmdMod*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM865)(RogueClassCmdMod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM866)(RogueClassCmdMod*,RogueClassScope*);
typedef RogueClassCmdPower*(*ROGUEM867)(RogueClassCmdPower*);
typedef RogueString*(*ROGUEM868)(RogueClassCmdPower*);
typedef RogueClassCmd*(*ROGUEM869)(RogueClassCmdPower*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM870)(RogueClassCmdPower*,RogueClassType*);
typedef RogueClassCmd*(*ROGUEM871)(RogueClassCmdPower*,RogueClassVisitor*);
typedef void(*ROGUEM872)(RogueClassCmdPower*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdNegate*(*ROGUEM873)(RogueClassCmdNegate*);
typedef RogueString*(*ROGUEM874)(RogueClassCmdNegate*);
typedef RogueClassCmd*(*ROGUEM875)(RogueClassCmdNegate*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM876)(RogueClassCmdNegate*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM877)(RogueClassCmdNegate*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM878)(RogueClassCmdNegate*,RogueClassScope*);
typedef RogueClassCmdBitwiseNot*(*ROGUEM879)(RogueClassCmdBitwiseNot*);
typedef RogueString*(*ROGUEM880)(RogueClassCmdBitwiseNot*);
typedef RogueClassCmd*(*ROGUEM881)(RogueClassCmdBitwiseNot*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM882)(RogueClassCmdBitwiseNot*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM883)(RogueClassCmdBitwiseNot*);
typedef RogueClassCmd*(*ROGUEM884)(RogueClassCmdBitwiseNot*,RogueClassScope*);
typedef RogueClassCmdLogicalize*(*ROGUEM885)(RogueClassCmdLogicalize*);
typedef RogueString*(*ROGUEM886)(RogueClassCmdLogicalize*);
typedef RogueClassCmd*(*ROGUEM887)(RogueClassCmdLogicalize*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM888)(RogueClassCmdLogicalize*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM889)(RogueClassCmdLogicalize*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM890)(RogueClassCmdLogicalize*);
typedef RogueClassCmdIsReference*(*ROGUEM891)(RogueClassCmdIsReference*);
typedef RogueString*(*ROGUEM892)(RogueClassCmdIsReference*);
typedef RogueClassCmd*(*ROGUEM893)(RogueClassCmdIsReference*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM894)(RogueClassCmdIsReference*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM895)(RogueClassCmdIsReference*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM896)(RogueClassCmdIsReference*);
typedef RogueClassCmdElementAccess*(*ROGUEM897)(RogueClassCmdElementAccess*);
typedef RogueString*(*ROGUEM898)(RogueClassCmdElementAccess*);
typedef RogueClassCmd*(*ROGUEM899)(RogueClassCmdElementAccess*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM900)(RogueClassCmdElementAccess*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM901)(RogueClassCmdElementAccess*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM902)(RogueClassCmdElementAccess*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM903)(RogueClassCmdElementAccess*,RogueClassScope*,RogueInt32);
typedef RogueClassCmd*(*ROGUEM904)(RogueClassCmdElementAccess*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef RogueClassCmdConvertToType*(*ROGUEM905)(RogueClassCmdConvertToType*);
typedef RogueString*(*ROGUEM906)(RogueClassCmdConvertToType*);
typedef RogueClassCmd*(*ROGUEM907)(RogueClassCmdConvertToType*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM908)(RogueClassCmdConvertToType*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM909)(RogueClassCmdConvertToType*,RogueClassScope*);
typedef RogueClassCmdCreateCallback*(*ROGUEM910)(RogueClassCmdCreateCallback*);
typedef RogueString*(*ROGUEM911)(RogueClassCmdCreateCallback*);
typedef RogueClassCmdCreateCallback*(*ROGUEM912)(RogueClassCmdCreateCallback*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM913)(RogueClassCmdCreateCallback*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM914)(RogueClassCmdCreateCallback*,RogueClassScope*);
typedef RogueClassCmdAs*(*ROGUEM915)(RogueClassCmdAs*);
typedef RogueString*(*ROGUEM916)(RogueClassCmdAs*);
typedef RogueClassCmd*(*ROGUEM917)(RogueClassCmdAs*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM918)(RogueClassCmdAs*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM919)(RogueClassCmdAs*,RogueClassScope*);
typedef void(*ROGUEM920)(RogueClassCmdAs*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassFnParam*(*ROGUEM921)(RogueClassFnParam*);
typedef RogueString*(*ROGUEM922)(RogueClassFnParam*);
typedef RogueFnParam_List*(*ROGUEM923)(RogueFnParam_List*);
typedef RogueString*(*ROGUEM924)(RogueFnParam_List*);
typedef RogueClassCmdCreateFunction*(*ROGUEM925)(RogueClassCmdCreateFunction*);
typedef RogueString*(*ROGUEM926)(RogueClassCmdCreateFunction*);
typedef RogueClassCmdCreateFunction*(*ROGUEM927)(RogueClassCmdCreateFunction*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM928)(RogueClassCmdCreateFunction*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM929)(RogueClassCmdCreateFunction*);
typedef RogueClassType*(*ROGUEM930)(RogueClassCmdCreateFunction*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM931)(RogueClassCmdCreateFunction*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM932)(RogueClassCmdCreateFunction*);
typedef RogueFnArg_List*(*ROGUEM933)(RogueFnArg_List*);
typedef RogueString*(*ROGUEM934)(RogueFnArg_List*);
typedef RogueClassFnArg*(*ROGUEM935)(RogueClassFnArg*);
typedef RogueString*(*ROGUEM936)(RogueClassFnArg*);
typedef RogueClassCmdLiteralNull*(*ROGUEM937)(RogueClassCmdLiteralNull*);
typedef RogueString*(*ROGUEM938)(RogueClassCmdLiteralNull*);
typedef RogueClassCmd*(*ROGUEM939)(RogueClassCmdLiteralNull*,RogueClassType*,RogueClassScope*,RogueLogical,RogueLogical);
typedef RogueClassCmd*(*ROGUEM940)(RogueClassCmdLiteralNull*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM941)(RogueClassCmdLiteralNull*,RogueClassVisitor*);
typedef RogueClassCmdLiteralNull*(*ROGUEM942)(RogueClassCmdLiteralNull*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM943)(RogueClassCmdLiteralNull*);
typedef void(*ROGUEM944)(RogueClassCmdLiteralNull*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralReal64*(*ROGUEM945)(RogueClassCmdLiteralReal64*);
typedef RogueString*(*ROGUEM946)(RogueClassCmdLiteralReal64*);
typedef RogueClassCmd*(*ROGUEM947)(RogueClassCmdLiteralReal64*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM948)(RogueClassCmdLiteralReal64*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM949)(RogueClassCmdLiteralReal64*,RogueClassScope*);
typedef RogueLogical(*ROGUEM950)(RogueClassCmdLiteralReal64*);
typedef RogueClassType*(*ROGUEM951)(RogueClassCmdLiteralReal64*);
typedef void(*ROGUEM952)(RogueClassCmdLiteralReal64*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralInt64*(*ROGUEM953)(RogueClassCmdLiteralInt64*);
typedef RogueString*(*ROGUEM954)(RogueClassCmdLiteralInt64*);
typedef RogueClassCmd*(*ROGUEM955)(RogueClassCmdLiteralInt64*,RogueClassType*,RogueClassScope*,RogueLogical,RogueLogical);
typedef RogueClassCmd*(*ROGUEM956)(RogueClassCmdLiteralInt64*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM957)(RogueClassCmdLiteralInt64*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM958)(RogueClassCmdLiteralInt64*,RogueClassScope*);
typedef RogueLogical(*ROGUEM959)(RogueClassCmdLiteralInt64*);
typedef RogueClassType*(*ROGUEM960)(RogueClassCmdLiteralInt64*);
typedef void(*ROGUEM961)(RogueClassCmdLiteralInt64*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralCharacter*(*ROGUEM962)(RogueClassCmdLiteralCharacter*);
typedef RogueString*(*ROGUEM963)(RogueClassCmdLiteralCharacter*);
typedef RogueClassCmd*(*ROGUEM964)(RogueClassCmdLiteralCharacter*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM965)(RogueClassCmdLiteralCharacter*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM966)(RogueClassCmdLiteralCharacter*,RogueClassScope*);
typedef RogueLogical(*ROGUEM967)(RogueClassCmdLiteralCharacter*);
typedef RogueClassType*(*ROGUEM968)(RogueClassCmdLiteralCharacter*);
typedef void(*ROGUEM969)(RogueClassCmdLiteralCharacter*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdLiteralThis*(*ROGUEM970)(RogueClassCmdLiteralThis*);
typedef RogueString*(*ROGUEM971)(RogueClassCmdLiteralThis*);
typedef RogueClassCmd*(*ROGUEM972)(RogueClassCmdLiteralThis*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM973)(RogueClassCmdLiteralThis*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM974)(RogueClassCmdThisContext*,RogueClassScope*);
typedef void(*ROGUEM975)(RogueClassCmdLiteralThis*);
typedef RogueClassCmd*(*ROGUEM976)(RogueClassCmdLiteralThis*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM977)(RogueClassCmdThisContext*);
typedef void(*ROGUEM978)(RogueClassCmdThisContext*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdThisContext*(*ROGUEM979)(RogueClassCmdThisContext*);
typedef RogueString*(*ROGUEM980)(RogueClassCmdThisContext*);
typedef RogueClassCmd*(*ROGUEM981)(RogueClassCmdThisContext*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM982)(RogueClassCmdThisContext*,RogueClassVisitor*);
typedef void(*ROGUEM983)(RogueClassCmdThisContext*);
typedef RogueClassCmd*(*ROGUEM984)(RogueClassCmdThisContext*,RogueClassScope*);
typedef RogueClassCmdCreateList*(*ROGUEM985)(RogueClassCmdCreateList*);
typedef RogueString*(*ROGUEM986)(RogueClassCmdCreateList*);
typedef RogueClassCmd*(*ROGUEM987)(RogueClassCmdCreateList*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM988)(RogueClassCmdCreateList*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM989)(RogueClassCmdCreateList*,RogueClassScope*);
typedef RogueClassCmdCallPriorMethod*(*ROGUEM990)(RogueClassCmdCallPriorMethod*);
typedef RogueString*(*ROGUEM991)(RogueClassCmdCallPriorMethod*);
typedef RogueClassCmd*(*ROGUEM992)(RogueClassCmdCallPriorMethod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM993)(RogueClassCmdCallPriorMethod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM994)(RogueClassCmdCallPriorMethod*,RogueClassScope*);
typedef RogueClassCmdInlineNative*(*ROGUEM995)(RogueClassCmdInlineNative*);
typedef RogueString*(*ROGUEM996)(RogueClassCmdInlineNative*);
typedef RogueClassCmdInlineNative*(*ROGUEM997)(RogueClassCmdInlineNative*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM998)(RogueClassCmdInlineNative*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM999)(RogueClassCmdInlineNative*);
typedef RogueClassCmd*(*ROGUEM1000)(RogueClassCmdInlineNative*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1001)(RogueClassCmdInlineNative*,RogueClassScope*,RogueClassCmd*);
typedef RogueClassCmd*(*ROGUEM1002)(RogueClassCmdInlineNative*,RogueClassScope*,RogueInt32);
typedef RogueClassCmd*(*ROGUEM1003)(RogueClassCmdInlineNative*,RogueClassScope*,RogueClassTokenType*,RogueClassCmd*);
typedef RogueClassType*(*ROGUEM1004)(RogueClassCmdInlineNative*);
typedef void(*ROGUEM1005)(RogueClassCmdInlineNative*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdSelect*(*ROGUEM1006)(RogueClassCmdSelect*);
typedef RogueString*(*ROGUEM1007)(RogueClassCmdSelect*);
typedef RogueClassCmdSelect*(*ROGUEM1008)(RogueClassCmdSelect*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1009)(RogueClassCmdSelect*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1010)(RogueClassCmdSelect*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1011)(RogueClassCmdSelect*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1012)(RogueClassCmdSelect*);
typedef void(*ROGUEM1013)(RogueClassCmdSelect*,RogueClassCPPWriter*,RogueLogical);
typedef RogueCmdSelectCase_List*(*ROGUEM1014)(RogueCmdSelectCase_List*);
typedef RogueString*(*ROGUEM1015)(RogueCmdSelectCase_List*);
typedef RogueClassCmdSelectCase*(*ROGUEM1016)(RogueClassCmdSelectCase*);
typedef RogueString*(*ROGUEM1017)(RogueClassCmdSelectCase*);
typedef RogueClassCmdSelectCase*(*ROGUEM1018)(RogueClassCmdSelectCase*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1019)(RogueClassCmdSelectCase*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1020)(RogueClassCmdSelectCase*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1021)(RogueClassCmdSelectCase*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1022)(RogueClassCmdSelectCase*);
typedef RogueClassCmdImplicitIDAccess*(*ROGUEM1023)(RogueClassCmdImplicitIDAccess*);
typedef RogueString*(*ROGUEM1024)(RogueClassCmdImplicitIDAccess*);
typedef RogueClassCmd*(*ROGUEM1025)(RogueClassCmdImplicitIDAccess*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1026)(RogueClassCmdImplicitIDAccess*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1027)(RogueClassCmdImplicitIDAccess*,RogueClassScope*);
typedef RogueClassCmdImplicitAccess*(*ROGUEM1028)(RogueClassCmdImplicitAccess*);
typedef RogueString*(*ROGUEM1029)(RogueClassCmdImplicitAccess*);
typedef RogueClassCmd*(*ROGUEM1030)(RogueClassCmdImplicitAccess*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1031)(RogueClassCmdImplicitAccess*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1032)(RogueClassCmdImplicitAccess*,RogueClassScope*);
typedef RogueClassCmdRequire*(*ROGUEM1033)(RogueClassCmdRequire*);
typedef RogueString*(*ROGUEM1034)(RogueClassCmdRequire*);
typedef RogueClassCmdRequire*(*ROGUEM1035)(RogueClassCmdRequire*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1036)(RogueClassCmdRequire*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1037)(RogueClassCmdRequire*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1038)(RogueClassCmdRequire*);
typedef void(*ROGUEM1039)(RogueClassCmdRequire*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdEnsure*(*ROGUEM1040)(RogueClassCmdEnsure*);
typedef RogueString*(*ROGUEM1041)(RogueClassCmdEnsure*);
typedef RogueClassCmd*(*ROGUEM1042)(RogueClassCmdEnsure*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1043)(RogueClassCmdEnsure*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1044)(RogueClassCmdEnsure*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1045)(RogueClassCmdEnsure*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1046)(RogueClassCmdEnsure*);
typedef RogueClassCmdTypedLiteralList*(*ROGUEM1047)(RogueClassCmdTypedLiteralList*);
typedef RogueString*(*ROGUEM1048)(RogueClassCmdTypedLiteralList*);
typedef RogueClassCmdTypedLiteralList*(*ROGUEM1049)(RogueClassCmdTypedLiteralList*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1050)(RogueClassCmdTypedLiteralList*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1051)(RogueClassCmdTypedLiteralList*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1052)(RogueClassCmdTypedLiteralList*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1053)(RogueClassCmdTypedLiteralList*);
typedef RogueClassCmdCreateCompound*(*ROGUEM1054)(RogueClassCmdCreateCompound*);
typedef RogueString*(*ROGUEM1055)(RogueClassCmdCreateCompound*);
typedef RogueClassCmd*(*ROGUEM1056)(RogueClassCmdCreateCompound*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1057)(RogueClassCmdCreateCompound*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1058)(RogueClassCmdCreateCompound*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1059)(RogueClassCmdCreateCompound*);
typedef void(*ROGUEM1060)(RogueClassCmdCreateCompound*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassVisitor*(*ROGUEM1061)(RogueClassVisitor*);
typedef RogueString*(*ROGUEM1062)(RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1063)(RogueClassVisitor*,RogueClassCmdAccess*);
typedef RogueClassCmd*(*ROGUEM1064)(RogueClassVisitor*,RogueClassCmdThisContext*);
typedef RogueClassCmd*(*ROGUEM1065)(RogueClassVisitor*,RogueClassCmdReadLocal*);
typedef RogueClassCmd*(*ROGUEM1066)(RogueClassVisitor*,RogueClassCmdImplicitAccess*);
typedef RogueClassCmd*(*ROGUEM1067)(RogueClassVisitor*,RogueClassCmdImplicitIDAccess*);
typedef void(*ROGUEM1068)(RogueClassVisitor*,RogueClassType*);
typedef void(*ROGUEM1069)(RogueClassVisitor*,RogueClassMethod*);
typedef void(*ROGUEM1070)(RogueClassVisitor*,RogueClassCmdLiteralString*);
typedef void(*ROGUEM1071)(RogueClassVisitor*,RogueClassCmdThisContext*);
typedef void(*ROGUEM1072)(RogueClassVisitor*,RogueClassCmdCallDynamicMethod*);
typedef RogueClassCmdSwitch*(*ROGUEM1073)(RogueClassCmdSwitch*);
typedef RogueString*(*ROGUEM1074)(RogueClassCmdSwitch*);
typedef RogueClassCmdSwitch*(*ROGUEM1075)(RogueClassCmdSwitch*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1076)(RogueClassCmdSwitch*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1077)(RogueClassCmdSwitch*,RogueClassScope*);
typedef void(*ROGUEM1078)(RogueClassCmdSwitch*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCreateObject*(*ROGUEM1079)(RogueClassCmdCreateObject*);
typedef RogueString*(*ROGUEM1080)(RogueClassCmdCreateObject*);
typedef RogueClassCmd*(*ROGUEM1081)(RogueClassCmdCreateObject*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1082)(RogueClassCmdCreateObject*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1083)(RogueClassCmdCreateObject*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1084)(RogueClassCmdCreateObject*);
typedef void(*ROGUEM1085)(RogueClassCmdCreateObject*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadSingleton*(*ROGUEM1086)(RogueClassCmdReadSingleton*);
typedef RogueString*(*ROGUEM1087)(RogueClassCmdReadSingleton*);
typedef RogueClassCmd*(*ROGUEM1088)(RogueClassCmdReadSingleton*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1089)(RogueClassCmdReadSingleton*,RogueClassVisitor*);
typedef void(*ROGUEM1090)(RogueClassCmdReadSingleton*);
typedef RogueClassCmd*(*ROGUEM1091)(RogueClassCmdReadSingleton*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1092)(RogueClassCmdReadSingleton*);
typedef void(*ROGUEM1093)(RogueClassCmdReadSingleton*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteSingleton*(*ROGUEM1094)(RogueClassCmdWriteSingleton*);
typedef RogueString*(*ROGUEM1095)(RogueClassCmdWriteSingleton*);
typedef RogueClassCmd*(*ROGUEM1096)(RogueClassCmdWriteSingleton*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1097)(RogueClassCmdWriteSingleton*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1098)(RogueClassCmdWriteSingleton*,RogueClassScope*);
typedef void(*ROGUEM1099)(RogueClassCmdWriteSingleton*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteLocal*(*ROGUEM1100)(RogueClassCmdWriteLocal*);
typedef RogueString*(*ROGUEM1101)(RogueClassCmdWriteLocal*);
typedef RogueClassCmd*(*ROGUEM1102)(RogueClassCmdWriteLocal*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1103)(RogueClassCmdWriteLocal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1104)(RogueClassCmdWriteLocal*,RogueClassScope*);
typedef void(*ROGUEM1105)(RogueClassCmdWriteLocal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadGlobal*(*ROGUEM1106)(RogueClassCmdReadGlobal*);
typedef RogueString*(*ROGUEM1107)(RogueClassCmdReadGlobal*);
typedef RogueClassCmd*(*ROGUEM1108)(RogueClassCmdReadGlobal*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1109)(RogueClassCmdReadGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1110)(RogueClassCmdReadGlobal*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1111)(RogueClassCmdReadGlobal*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM1112)(RogueClassCmdReadGlobal*);
typedef void(*ROGUEM1113)(RogueClassCmdReadGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteGlobal*(*ROGUEM1114)(RogueClassCmdWriteGlobal*);
typedef RogueString*(*ROGUEM1115)(RogueClassCmdWriteGlobal*);
typedef RogueClassCmd*(*ROGUEM1116)(RogueClassCmdWriteGlobal*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1117)(RogueClassCmdWriteGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1118)(RogueClassCmdWriteGlobal*,RogueClassScope*);
typedef void(*ROGUEM1119)(RogueClassCmdWriteGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadProperty*(*ROGUEM1120)(RogueClassCmdReadProperty*);
typedef RogueString*(*ROGUEM1121)(RogueClassCmdReadProperty*);
typedef RogueClassCmd*(*ROGUEM1122)(RogueClassCmdReadProperty*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1123)(RogueClassCmdReadProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1124)(RogueClassCmdReadProperty*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1125)(RogueClassCmdReadProperty*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM1126)(RogueClassCmdReadProperty*);
typedef void(*ROGUEM1127)(RogueClassCmdReadProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteProperty*(*ROGUEM1128)(RogueClassCmdWriteProperty*);
typedef RogueString*(*ROGUEM1129)(RogueClassCmdWriteProperty*);
typedef RogueClassCmd*(*ROGUEM1130)(RogueClassCmdWriteProperty*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1131)(RogueClassCmdWriteProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1132)(RogueClassCmdWriteProperty*,RogueClassScope*);
typedef void(*ROGUEM1133)(RogueClassCmdWriteProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCall*(*ROGUEM1134)(RogueClassCmdCall*);
typedef RogueString*(*ROGUEM1135)(RogueClassCmdCall*);
typedef RogueClassCmd*(*ROGUEM1136)(RogueClassCmdCall*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1137)(RogueClassCmdCall*);
typedef RogueClassCmd*(*ROGUEM1138)(RogueClassCmdCall*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1139)(RogueClassCmdCall*,RogueClassScope*,RogueInt32);
typedef RogueClassCmdCallDynamicMethod*(*ROGUEM1140)(RogueClassCmdCallDynamicMethod*);
typedef RogueString*(*ROGUEM1141)(RogueClassCmdCallDynamicMethod*);
typedef RogueClassCmd*(*ROGUEM1142)(RogueClassCmdCallMethod*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1143)(RogueClassCmdCallDynamicMethod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1144)(RogueClassCmdCallDynamicMethod*,RogueClassVisitor*);
typedef void(*ROGUEM1145)(RogueClassCmdCallDynamicMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallMethod*(*ROGUEM1146)(RogueClassCmdCallMethod*);
typedef RogueString*(*ROGUEM1147)(RogueClassCmdCallMethod*);
typedef RogueClassCmd*(*ROGUEM1148)(RogueClassCmdCallMethod*,RogueClassVisitor*);
typedef RogueClassCmdAdjustProperty*(*ROGUEM1149)(RogueClassCmdAdjustProperty*);
typedef RogueString*(*ROGUEM1150)(RogueClassCmdAdjustProperty*);
typedef RogueClassCmd*(*ROGUEM1151)(RogueClassCmdAdjustProperty*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1152)(RogueClassCmdAdjustProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1153)(RogueClassCmdAdjustProperty*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1154)(RogueClassCmdAdjustProperty*);
typedef void(*ROGUEM1155)(RogueClassCmdAdjustProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdAdjustGlobal*(*ROGUEM1156)(RogueClassCmdAdjustGlobal*);
typedef RogueString*(*ROGUEM1157)(RogueClassCmdAdjustGlobal*);
typedef RogueClassCmd*(*ROGUEM1158)(RogueClassCmdAdjustGlobal*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1159)(RogueClassCmdAdjustGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1160)(RogueClassCmdAdjustGlobal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1161)(RogueClassCmdAdjustGlobal*);
typedef void(*ROGUEM1162)(RogueClassCmdAdjustGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdModifyAndAssignGlobal*(*ROGUEM1163)(RogueClassCmdModifyAndAssignGlobal*);
typedef RogueString*(*ROGUEM1164)(RogueClassCmdModifyAndAssignGlobal*);
typedef RogueClassCmd*(*ROGUEM1165)(RogueClassCmdModifyAndAssignGlobal*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1166)(RogueClassCmdModifyAndAssignGlobal*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1167)(RogueClassCmdModifyAndAssignGlobal*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1168)(RogueClassCmdModifyAndAssignGlobal*);
typedef void(*ROGUEM1169)(RogueClassCmdModifyAndAssignGlobal*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdModifyAndAssignProperty*(*ROGUEM1170)(RogueClassCmdModifyAndAssignProperty*);
typedef RogueString*(*ROGUEM1171)(RogueClassCmdModifyAndAssignProperty*);
typedef RogueClassCmd*(*ROGUEM1172)(RogueClassCmdModifyAndAssignProperty*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1173)(RogueClassCmdModifyAndAssignProperty*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1174)(RogueClassCmdModifyAndAssignProperty*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1175)(RogueClassCmdModifyAndAssignProperty*);
typedef void(*ROGUEM1176)(RogueClassCmdModifyAndAssignProperty*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCreateArray*(*ROGUEM1177)(RogueClassCmdCreateArray*);
typedef RogueString*(*ROGUEM1178)(RogueClassCmdCreateArray*);
typedef RogueClassCmd*(*ROGUEM1179)(RogueClassCmdCreateArray*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1180)(RogueClassCmdCreateArray*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1181)(RogueClassCmdCreateArray*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1182)(RogueClassCmdCreateArray*);
typedef void(*ROGUEM1183)(RogueClassCmdCreateArray*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadArrayElement*(*ROGUEM1184)(RogueClassCmdReadArrayElement*);
typedef RogueString*(*ROGUEM1185)(RogueClassCmdReadArrayElement*);
typedef RogueClassCmd*(*ROGUEM1186)(RogueClassCmdReadArrayElement*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1187)(RogueClassCmdReadArrayElement*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1188)(RogueClassCmdReadArrayElement*,RogueClassScope*);
typedef RogueClassCmd*(*ROGUEM1189)(RogueClassCmdReadArrayElement*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM1190)(RogueClassCmdReadArrayElement*);
typedef void(*ROGUEM1191)(RogueClassCmdReadArrayElement*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdReadArrayCount*(*ROGUEM1192)(RogueClassCmdReadArrayCount*);
typedef RogueString*(*ROGUEM1193)(RogueClassCmdReadArrayCount*);
typedef RogueClassCmd*(*ROGUEM1194)(RogueClassCmdReadArrayCount*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1195)(RogueClassCmdReadArrayCount*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1196)(RogueClassCmdReadArrayCount*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1197)(RogueClassCmdReadArrayCount*);
typedef void(*ROGUEM1198)(RogueClassCmdReadArrayCount*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdWriteArrayElement*(*ROGUEM1199)(RogueClassCmdWriteArrayElement*);
typedef RogueString*(*ROGUEM1200)(RogueClassCmdWriteArrayElement*);
typedef RogueClassCmd*(*ROGUEM1201)(RogueClassCmdWriteArrayElement*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1202)(RogueClassCmdWriteArrayElement*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1203)(RogueClassCmdWriteArrayElement*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1204)(RogueClassCmdWriteArrayElement*);
typedef void(*ROGUEM1205)(RogueClassCmdWriteArrayElement*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdTaskControl*(*ROGUEM1206)(RogueClassCmdTaskControl*);
typedef RogueString*(*ROGUEM1207)(RogueClassCmdTaskControl*);
typedef RogueClassCmd*(*ROGUEM1208)(RogueClassCmdTaskControl*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM1209)(RogueClassCmdTaskControl*);
typedef RogueClassCmd*(*ROGUEM1210)(RogueClassCmdTaskControl*,RogueClassScope*);
typedef void(*ROGUEM1211)(RogueClassCmdTaskControl*,RogueClassCPPWriter*,RogueLogical);
typedef RogueCmdTaskControlSection_List*(*ROGUEM1212)(RogueCmdTaskControlSection_List*);
typedef RogueString*(*ROGUEM1213)(RogueCmdTaskControlSection_List*);
typedef RogueClassCmdNoAction*(*ROGUEM1214)(RogueClassCmdNoAction*);
typedef RogueString*(*ROGUEM1215)(RogueClassCmdNoAction*);
typedef void(*ROGUEM1216)(RogueClassCmdNoAction*,RogueClassCmdStatementList*);
typedef RogueClassCmdNoAction*(*ROGUEM1217)(RogueClassCmdNoAction*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1218)(RogueClassCmdNoAction*,RogueClassVisitor*);
typedef RogueLogical(*ROGUEM1219)(RogueClassCmdNoAction*);
typedef RogueClassCmd*(*ROGUEM1220)(RogueClassCmdNoAction*,RogueClassScope*);
typedef RogueClassType*(*ROGUEM1221)(RogueClassCmdNoAction*);
typedef void(*ROGUEM1222)(RogueClassCmdNoAction*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassListRewriter_Type_*(*ROGUEM1223)(RogueClassListRewriter_Type_*);
typedef RogueString*(*ROGUEM1224)(RogueClassListRewriter_Type_*);
typedef RogueClassUpdateThisTypeVisitor*(*ROGUEM1225)(RogueClassUpdateThisTypeVisitor*);
typedef RogueString*(*ROGUEM1226)(RogueClassUpdateThisTypeVisitor*);
typedef void(*ROGUEM1227)(RogueClassUpdateThisTypeVisitor*,RogueClassCmdThisContext*);
typedef RogueClassTable_String_TypeSpecializer_*(*ROGUEM1228)(RogueClassTable_String_TypeSpecializer_*);
typedef RogueString*(*ROGUEM1229)(RogueClassTable_String_TypeSpecializer_*);
typedef RogueClassTableEntry_String_TypeSpecializer_*(*ROGUEM1230)(RogueClassTableEntry_String_TypeSpecializer_*);
typedef RogueString*(*ROGUEM1231)(RogueClassTableEntry_String_TypeSpecializer_*);
typedef RogueClassCmdCastToType*(*ROGUEM1232)(RogueClassCmdCastToType*);
typedef RogueString*(*ROGUEM1233)(RogueClassCmdCastToType*);
typedef RogueClassCmd*(*ROGUEM1234)(RogueClassCmdCastToType*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1235)(RogueClassCmdCastToType*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1236)(RogueClassCmdCastToType*,RogueClassScope*);
typedef void(*ROGUEM1237)(RogueClassCmdCastToType*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassTraceUsedCodeVisitor*(*ROGUEM1238)(RogueClassTraceUsedCodeVisitor*);
typedef RogueString*(*ROGUEM1239)(RogueClassTraceUsedCodeVisitor*);
typedef void(*ROGUEM1240)(RogueClassTraceUsedCodeVisitor*,RogueClassType*);
typedef void(*ROGUEM1241)(RogueClassTraceUsedCodeVisitor*,RogueClassMethod*);
typedef void(*ROGUEM1242)(RogueClassTraceUsedCodeVisitor*,RogueClassCmdLiteralString*);
typedef void(*ROGUEM1243)(RogueClassTraceUsedCodeVisitor*,RogueClassCmdCallDynamicMethod*);
typedef RogueClassCloneMethodArgs*(*ROGUEM1244)(RogueClassCloneMethodArgs*);
typedef RogueString*(*ROGUEM1245)(RogueClassCloneMethodArgs*);
typedef RogueClassCmdLabel*(*ROGUEM1246)(RogueClassCloneMethodArgs*,RogueClassCmdLabel*);
typedef RogueClassTaskArgs*(*ROGUEM1247)(RogueClassTaskArgs*);
typedef RogueString*(*ROGUEM1248)(RogueClassTaskArgs*);
typedef RogueToken_List_List*(*ROGUEM1249)(RogueToken_List_List*);
typedef RogueString*(*ROGUEM1250)(RogueToken_List_List*);
typedef RogueClassDirectiveTokenType*(*ROGUEM1251)(RogueClassDirectiveTokenType*);
typedef RogueString*(*ROGUEM1252)(RogueClassDirectiveTokenType*);
typedef RogueClassToken*(*ROGUEM1253)(RogueClassDirectiveTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1254)(RogueClassDirectiveTokenType*);
typedef RogueClassStructuralDirectiveTokenType*(*ROGUEM1255)(RogueClassStructuralDirectiveTokenType*);
typedef RogueString*(*ROGUEM1256)(RogueClassStructuralDirectiveTokenType*);
typedef RogueClassToken*(*ROGUEM1257)(RogueClassStructuralDirectiveTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1258)(RogueClassStructuralDirectiveTokenType*);
typedef RogueClassEOLTokenType*(*ROGUEM1259)(RogueClassEOLTokenType*);
typedef RogueString*(*ROGUEM1260)(RogueClassEOLTokenType*);
typedef RogueClassToken*(*ROGUEM1261)(RogueClassEOLTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueClassToken*(*ROGUEM1262)(RogueClassEOLTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueLogical(*ROGUEM1263)(RogueClassEOLTokenType*);
typedef RogueClassStructureTokenType*(*ROGUEM1264)(RogueClassStructureTokenType*);
typedef RogueString*(*ROGUEM1265)(RogueClassStructureTokenType*);
typedef RogueClassToken*(*ROGUEM1266)(RogueClassStructureTokenType*,RogueString*,RogueInt32,RogueInt32);
typedef RogueLogical(*ROGUEM1267)(RogueClassStructureTokenType*);
typedef RogueClassNativeCodeTokenType*(*ROGUEM1268)(RogueClassNativeCodeTokenType*);
typedef RogueString*(*ROGUEM1269)(RogueClassNativeCodeTokenType*);
typedef RogueClassToken*(*ROGUEM1270)(RogueClassNativeCodeTokenType*,RogueString*,RogueInt32,RogueInt32,RogueString*);
typedef RogueClassToken*(*ROGUEM1271)(RogueClassNativeCodeTokenType*,RogueClassToken*,RogueString*);
typedef RogueClassModifyAndAssignTokenType*(*ROGUEM1272)(RogueClassModifyAndAssignTokenType*);
typedef RogueString*(*ROGUEM1273)(RogueClassModifyAndAssignTokenType*);
typedef RogueLogical(*ROGUEM1274)(RogueClassModifyAndAssignTokenType*);
typedef RogueClassFunction_CmdNamedArg_RETURNSLogical*(*ROGUEM1275)(RogueClassFunction_CmdNamedArg_RETURNSLogical*);
typedef RogueString*(*ROGUEM1276)(RogueClassFunction_CmdNamedArg_RETURNSLogical*);
typedef RogueLogical(*ROGUEM1277)(RogueClassFunction_CmdNamedArg_RETURNSLogical*,RogueClassCmdNamedArg*);
typedef RogueClassMacroArgs*(*ROGUEM1278)(RogueClassMacroArgs*);
typedef RogueString*(*ROGUEM1279)(RogueClassMacroArgs*);
typedef RogueClassTable_String_Cmd_*(*ROGUEM1280)(RogueClassTable_String_Cmd_*);
typedef RogueString*(*ROGUEM1281)(RogueClassTable_String_Cmd_*);
typedef RogueClassTableEntry_String_Cmd_*(*ROGUEM1282)(RogueClassTableEntry_String_Cmd_*);
typedef RogueString*(*ROGUEM1283)(RogueClassTableEntry_String_Cmd_*);
typedef RogueClassListRewriter_CmdNamedArg_*(*ROGUEM1284)(RogueClassListRewriter_CmdNamedArg_*);
typedef RogueString*(*ROGUEM1285)(RogueClassListRewriter_CmdNamedArg_*);
typedef RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*(*ROGUEM1286)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*);
typedef RogueString*(*ROGUEM1287)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*);
typedef RogueLogical(*ROGUEM1288)(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*,RogueClassCmdNamedArg*,RogueClassCmdNamedArg*);
typedef RogueClassQuicksort_CmdNamedArg_*(*ROGUEM1289)(RogueClassQuicksort_CmdNamedArg_*);
typedef RogueString*(*ROGUEM1290)(RogueClassQuicksort_CmdNamedArg_*);
typedef RogueClassCmdCallInlineNativeRoutine*(*ROGUEM1291)(RogueClassCmdCallInlineNativeRoutine*);
typedef RogueString*(*ROGUEM1292)(RogueClassCmdCallInlineNative*);
typedef RogueString*(*ROGUEM1293)(RogueClassCmdCallInlineNativeRoutine*);
typedef RogueClassCmd*(*ROGUEM1294)(RogueClassCmdCallInlineNativeRoutine*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1295)(RogueClassCmdCallInlineNativeRoutine*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1296)(RogueClassCmdCallInlineNative*,RogueClassScope*,RogueInt32);
typedef RogueClassType*(*ROGUEM1297)(RogueClassCmdCallInlineNativeRoutine*);
typedef void(*ROGUEM1298)(RogueClassCmdCallInlineNative*,RogueClassCPPWriter*,RogueLogical);
typedef void(*ROGUEM1299)(RogueClassCmdCallInlineNative*,RogueClassCPPWriter*);
typedef RogueClassCmdCallInlineNative*(*ROGUEM1300)(RogueClassCmdCallInlineNative*);
typedef RogueClassCmd*(*ROGUEM1301)(RogueClassCmdCallInlineNative*,RogueClassVisitor*);
typedef RogueClassCmdCallNativeRoutine*(*ROGUEM1302)(RogueClassCmdCallNativeRoutine*);
typedef RogueString*(*ROGUEM1303)(RogueClassCmdCallNativeRoutine*);
typedef RogueClassCmd*(*ROGUEM1304)(RogueClassCmdCallNativeRoutine*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1305)(RogueClassCmdCallNativeRoutine*,RogueClassVisitor*);
typedef void(*ROGUEM1306)(RogueClassCmdCallNativeRoutine*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallRoutine*(*ROGUEM1307)(RogueClassCmdCallRoutine*);
typedef RogueString*(*ROGUEM1308)(RogueClassCmdCallRoutine*);
typedef RogueClassCmd*(*ROGUEM1309)(RogueClassCmdCallRoutine*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1310)(RogueClassCmdCallRoutine*,RogueClassVisitor*);
typedef void(*ROGUEM1311)(RogueClassCmdCallRoutine*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallInlineNativeMethod*(*ROGUEM1312)(RogueClassCmdCallInlineNativeMethod*);
typedef RogueString*(*ROGUEM1313)(RogueClassCmdCallInlineNativeMethod*);
typedef RogueClassCmd*(*ROGUEM1314)(RogueClassCmdCallInlineNativeMethod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1315)(RogueClassCmdCallInlineNativeMethod*,RogueClassVisitor*);
typedef RogueClassType*(*ROGUEM1316)(RogueClassCmdCallInlineNativeMethod*);
typedef void(*ROGUEM1317)(RogueClassCmdCallInlineNativeMethod*,RogueClassCPPWriter*);
typedef RogueClassCmdCallNativeMethod*(*ROGUEM1318)(RogueClassCmdCallNativeMethod*);
typedef RogueString*(*ROGUEM1319)(RogueClassCmdCallNativeMethod*);
typedef RogueClassCmd*(*ROGUEM1320)(RogueClassCmdCallNativeMethod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1321)(RogueClassCmdCallNativeMethod*,RogueClassVisitor*);
typedef void(*ROGUEM1322)(RogueClassCmdCallNativeMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCmdCallAspectMethod*(*ROGUEM1323)(RogueClassCmdCallAspectMethod*);
typedef RogueString*(*ROGUEM1324)(RogueClassCmdCallAspectMethod*);
typedef RogueClassCmd*(*ROGUEM1325)(RogueClassCmdCallAspectMethod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1326)(RogueClassCmdCallAspectMethod*,RogueClassVisitor*);
typedef void(*ROGUEM1327)(RogueClassCmdCallAspectMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassCandidateMethods*(*ROGUEM1328)(RogueClassCandidateMethods*);
typedef RogueString*(*ROGUEM1329)(RogueClassCandidateMethods*);
typedef RogueClassFunction_2953*(*ROGUEM1330)(RogueClassFunction_2953*);
typedef RogueString*(*ROGUEM1331)(RogueClassFunction_2953*);
typedef RogueLogical(*ROGUEM1332)(RogueClassFunction_2953*,RogueClassCmdNamedArg*);
typedef RogueClassFunction_2954*(*ROGUEM1333)(RogueClassFunction_2954*);
typedef RogueString*(*ROGUEM1334)(RogueClassFunction_2954*);
typedef RogueLogical(*ROGUEM1335)(RogueClassFunction_2954*,RogueClassCmdNamedArg*,RogueClassCmdNamedArg*);
typedef RogueClassIOError*(*ROGUEM1336)(RogueClassIOError*);
typedef RogueString*(*ROGUEM1337)(RogueClassIOError*);
typedef RogueClassFileReader*(*ROGUEM1338)(RogueClassFileReader*);
typedef RogueString*(*ROGUEM1339)(RogueClassFileReader*);
typedef RogueClassFileWriter*(*ROGUEM1340)(RogueClassFileWriter*);
typedef RogueString*(*ROGUEM1341)(RogueClassFileWriter*);
typedef RogueClassUTF8Reader*(*ROGUEM1342)(RogueClassUTF8Reader*);
typedef RogueString*(*ROGUEM1343)(RogueClassUTF8Reader*);
typedef RogueClassQueryToGenericFunctionConversionVisitor*(*ROGUEM1344)(RogueClassQueryToGenericFunctionConversionVisitor*);
typedef RogueString*(*ROGUEM1345)(RogueClassQueryToGenericFunctionConversionVisitor*);
typedef RogueClassCmd*(*ROGUEM1346)(RogueClassQueryToGenericFunctionConversionVisitor*,RogueClassCmdAccess*);
typedef RogueClassCmd*(*ROGUEM1347)(RogueClassQueryToGenericFunctionConversionVisitor*,RogueClassCmdThisContext*);
typedef RogueClassCmd*(*ROGUEM1348)(RogueClassQueryToGenericFunctionConversionVisitor*,RogueClassCmdReadLocal*);
typedef RogueClassCmd*(*ROGUEM1349)(RogueClassQueryToGenericFunctionConversionVisitor*,RogueClassCmdImplicitAccess*);
typedef RogueClassCmd*(*ROGUEM1350)(RogueClassQueryToGenericFunctionConversionVisitor*,RogueClassCmdImplicitIDAccess*);
typedef RogueClassListReader_CmdSelectCase_*(*ROGUEM1351)(RogueClassListReader_CmdSelectCase_*);
typedef RogueString*(*ROGUEM1352)(RogueClassListReader_CmdSelectCase_*);
typedef RogueClassCmdCallStaticMethod*(*ROGUEM1353)(RogueClassCmdCallStaticMethod*);
typedef RogueString*(*ROGUEM1354)(RogueClassCmdCallStaticMethod*);
typedef RogueClassCmd*(*ROGUEM1355)(RogueClassCmdCallStaticMethod*,RogueClassCloneArgs*);
typedef RogueClassCmd*(*ROGUEM1356)(RogueClassCmdCallStaticMethod*,RogueClassVisitor*);
typedef RogueClassCmd*(*ROGUEM1357)(RogueClassCmdCallStaticMethod*,RogueClassScope*);
typedef void(*ROGUEM1358)(RogueClassCmdCallStaticMethod*,RogueClassCPPWriter*,RogueLogical);
typedef RogueClassNativeCodeToken*(*ROGUEM1359)(RogueClassNativeCodeToken*);
typedef RogueString*(*ROGUEM1360)(RogueClassNativeCodeToken*);
typedef RogueClassContainsImplicitAccessVisitor*(*ROGUEM1361)(RogueClassContainsImplicitAccessVisitor*);
typedef RogueString*(*ROGUEM1362)(RogueClassContainsImplicitAccessVisitor*);
typedef RogueClassCmd*(*ROGUEM1363)(RogueClassContainsImplicitAccessVisitor*,RogueClassCmdImplicitAccess*);
typedef RogueClassCmd*(*ROGUEM1364)(RogueClassContainsImplicitAccessVisitor*,RogueClassCmdImplicitIDAccess*);

RogueObject* Rogue_call_ROGUEM1( int i, RogueObject* THIS )
{
  return ((ROGUEM1)(THIS->type->methods[i]))( THIS );
}

RogueInt32 Rogue_call_ROGUEM2( int i, RogueObject* THIS )
{
  return ((ROGUEM2)(THIS->type->methods[i]))( THIS );
}

RogueLogical Rogue_call_ROGUEM3( int i, RogueObject* THIS, RogueObject* p0 )
{
  return ((ROGUEM3)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* Rogue_call_ROGUEM4( int i, RogueObject* THIS )
{
  return ((ROGUEM4)(THIS->type->methods[i]))( THIS );
}

void Rogue_call_ROGUEM19( int i, RogueClassFunction__* THIS )
{
  ((ROGUEM19)(THIS->type->methods[i]))( THIS );
}

RogueString* Rogue_call_ROGUEM21( int i, RogueException* THIS )
{
  return ((ROGUEM21)(THIS->type->methods[i]))( THIS );
}

RogueException* Rogue_call_ROGUEM22( int i, RogueException* THIS, RogueString* p0 )
{
  return ((ROGUEM22)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical Rogue_call_ROGUEM32( int i, RogueClassValue* THIS )
{
  return ((ROGUEM32)(THIS->type->methods[i]))( THIS );
}

RogueLogical Rogue_call_ROGUEM33( int i, RogueClassValue* THIS, RogueClassValue* p0 )
{
  return ((ROGUEM33)(THIS->type->methods[i]))( THIS, p0 );
}

RogueInt32 Rogue_call_ROGUEM34( int i, RogueClassValue* THIS )
{
  return ((ROGUEM34)(THIS->type->methods[i]))( THIS );
}

RogueReal64 Rogue_call_ROGUEM35( int i, RogueClassValue* THIS )
{
  return ((ROGUEM35)(THIS->type->methods[i]))( THIS );
}

RogueString* Rogue_call_ROGUEM57( int i, RogueClassTable_String_String_* THIS, RogueString* p0 )
{
  return ((ROGUEM57)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical Rogue_call_ROGUEM78( int i, RogueClassConsoleIOHandler* THIS )
{
  return ((ROGUEM78)(THIS->type->methods[i]))( THIS );
}

RogueByte Rogue_call_ROGUEM79( int i, RogueClassConsoleIOHandler* THIS )
{
  return ((ROGUEM79)(THIS->type->methods[i]))( THIS );
}

void Rogue_call_ROGUEM80( int i, RogueClassConsoleIOHandler* THIS, RogueArray* p0, RogueInt32 p1 )
{
  ((ROGUEM80)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueString* Rogue_call_ROGUEM101( int i, RogueClassToken* THIS )
{
  return ((ROGUEM101)(THIS->type->methods[i]))( THIS );
}

RogueCharacter Rogue_call_ROGUEM102( int i, RogueClassToken* THIS )
{
  return ((ROGUEM102)(THIS->type->methods[i]))( THIS );
}

RogueInt32 Rogue_call_ROGUEM103( int i, RogueClassToken* THIS )
{
  return ((ROGUEM103)(THIS->type->methods[i]))( THIS );
}

RogueInt64 Rogue_call_ROGUEM104( int i, RogueClassToken* THIS )
{
  return ((ROGUEM104)(THIS->type->methods[i]))( THIS );
}

RogueReal64 Rogue_call_ROGUEM105( int i, RogueClassToken* THIS )
{
  return ((ROGUEM105)(THIS->type->methods[i]))( THIS );
}

RogueClassType* Rogue_call_ROGUEM106( int i, RogueClassToken* THIS )
{
  return ((ROGUEM106)(THIS->type->methods[i]))( THIS );
}

RogueClassToken* Rogue_call_ROGUEM109( int i, RogueClassTokenType* THIS, RogueString* p0, RogueInt32 p1, RogueInt32 p2 )
{
  return ((ROGUEM109)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

RogueClassToken* Rogue_call_ROGUEM110( int i, RogueClassTokenType* THIS, RogueString* p0, RogueInt32 p1, RogueInt32 p2, RogueString* p3 )
{
  return ((ROGUEM110)(THIS->type->methods[i]))( THIS, p0, p1, p2, p3 );
}

RogueClassToken* Rogue_call_ROGUEM111( int i, RogueClassTokenType* THIS, RogueClassToken* p0, RogueString* p1 )
{
  return ((ROGUEM111)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueLogical Rogue_call_ROGUEM112( int i, RogueClassTokenType* THIS )
{
  return ((ROGUEM112)(THIS->type->methods[i]))( THIS );
}

RogueString* Rogue_call_ROGUEM142( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM142)(THIS->type->methods[i]))( THIS );
}

void Rogue_call_ROGUEM143( int i, RogueClassCmd* THIS, RogueClassCmdStatementList* p0 )
{
  ((ROGUEM143)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM144( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM144)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM145( int i, RogueClassCmd* THIS, RogueClassType* p0, RogueClassScope* p1, RogueLogical p2, RogueLogical p3 )
{
  return ((ROGUEM145)(THIS->type->methods[i]))( THIS, p0, p1, p2, p3 );
}

RogueClassCmd* Rogue_call_ROGUEM146( int i, RogueClassCmd* THIS, RogueClassCloneArgs* p0 )
{
  return ((ROGUEM146)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM147( int i, RogueClassCmd* THIS, RogueClassType* p0 )
{
  return ((ROGUEM147)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM148( int i, RogueClassCmd* THIS, RogueClassVisitor* p0 )
{
  return ((ROGUEM148)(THIS->type->methods[i]))( THIS, p0 );
}

void Rogue_call_ROGUEM149( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  ((ROGUEM149)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical Rogue_call_ROGUEM150( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM150)(THIS->type->methods[i]))( THIS );
}

RogueClassType* Rogue_call_ROGUEM151( int i, RogueClassCmd* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM151)(THIS->type->methods[i]))( THIS, p0 );
}

void Rogue_call_ROGUEM152( int i, RogueClassCmd* THIS )
{
  ((ROGUEM152)(THIS->type->methods[i]))( THIS );
}

RogueClassType* Rogue_call_ROGUEM153( int i, RogueClassCmd* THIS )
{
  return ((ROGUEM153)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* Rogue_call_ROGUEM154( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueClassCmd* p1 )
{
  return ((ROGUEM154)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassCmd* Rogue_call_ROGUEM155( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueInt32 p1 )
{
  return ((ROGUEM155)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassCmd* Rogue_call_ROGUEM156( int i, RogueClassCmd* THIS, RogueClassScope* p0, RogueClassTokenType* p1, RogueClassCmd* p2 )
{
  return ((ROGUEM156)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

void Rogue_call_ROGUEM157( int i, RogueClassCmd* THIS, RogueClassCPPWriter* p0, RogueLogical p1 )
{
  ((ROGUEM157)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueCmd_List* Rogue_call_ROGUEM183( int i, RogueCmd_List* THIS, RogueInt32 p0 )
{
  return ((ROGUEM183)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical Rogue_call_ROGUEM231( int i, RogueClassFunction__RETURNSLogical* THIS )
{
  return ((ROGUEM231)(THIS->type->methods[i]))( THIS );
}

void Rogue_call_ROGUEM234( int i, RogueClassFunction_Object_* THIS, RogueObject* p0 )
{
  ((ROGUEM234)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical Rogue_call_ROGUEM352( int i, RogueClassFunction_Type_RETURNSLogical* THIS, RogueClassType* p0 )
{
  return ((ROGUEM352)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM382( int i, RogueClassCmdControlStructure* THIS, RogueClassCmdControlStructure* p0 )
{
  return ((ROGUEM382)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmdLabel* Rogue_call_ROGUEM482( int i, RogueClassCloneArgs* THIS, RogueClassCmdLabel* p0 )
{
  return ((ROGUEM482)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* Rogue_call_ROGUEM484( int i, RogueClassCmdBinary* THIS )
{
  return ((ROGUEM484)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* Rogue_call_ROGUEM489( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM489)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical Rogue_call_ROGUEM492( int i, RogueClassCmdBinary* THIS )
{
  return ((ROGUEM492)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* Rogue_call_ROGUEM493( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0, RogueClassType* p1, RogueClassType* p2 )
{
  return ((ROGUEM493)(THIS->type->methods[i]))( THIS, p0, p1, p2 );
}

RogueClassCmd* Rogue_call_ROGUEM494( int i, RogueClassCmdBinary* THIS, RogueClassScope* p0, RogueClassType* p1 )
{
  return ((ROGUEM494)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueClassCmd* Rogue_call_ROGUEM689( int i, RogueClassCmdComparison* THIS, RogueClassScope* p0, RogueClassType* p1, RogueClassType* p2, RogueLogical p3 )
{
  return ((ROGUEM689)(THIS->type->methods[i]))( THIS, p0, p1, p2, p3 );
}

RogueInt32 Rogue_call_ROGUEM694( int i, RogueClassCmdRange* THIS )
{
  return ((ROGUEM694)(THIS->type->methods[i]))( THIS );
}

RogueString* Rogue_call_ROGUEM744( int i, RogueClassCmdBinaryLogical* THIS )
{
  return ((ROGUEM744)(THIS->type->methods[i]))( THIS );
}

RogueLogical Rogue_call_ROGUEM746( int i, RogueClassCmdBinaryLogical* THIS, RogueLogical p0, RogueLogical p1 )
{
  return ((ROGUEM746)(THIS->type->methods[i]))( THIS, p0, p1 );
}

RogueString* Rogue_call_ROGUEM800( int i, RogueClassCmdUnary* THIS )
{
  return ((ROGUEM800)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* Rogue_call_ROGUEM809( int i, RogueClassCmdUnary* THIS, RogueClassScope* p0 )
{
  return ((ROGUEM809)(THIS->type->methods[i]))( THIS, p0 );
}

RogueString* Rogue_call_ROGUEM1062( int i, RogueClassVisitor* THIS )
{
  return ((ROGUEM1062)(THIS->type->methods[i]))( THIS );
}

RogueClassCmd* Rogue_call_ROGUEM1063( int i, RogueClassVisitor* THIS, RogueClassCmdAccess* p0 )
{
  return ((ROGUEM1063)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM1064( int i, RogueClassVisitor* THIS, RogueClassCmdThisContext* p0 )
{
  return ((ROGUEM1064)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM1065( int i, RogueClassVisitor* THIS, RogueClassCmdReadLocal* p0 )
{
  return ((ROGUEM1065)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM1066( int i, RogueClassVisitor* THIS, RogueClassCmdImplicitAccess* p0 )
{
  return ((ROGUEM1066)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassCmd* Rogue_call_ROGUEM1067( int i, RogueClassVisitor* THIS, RogueClassCmdImplicitIDAccess* p0 )
{
  return ((ROGUEM1067)(THIS->type->methods[i]))( THIS, p0 );
}

void Rogue_call_ROGUEM1068( int i, RogueClassVisitor* THIS, RogueClassType* p0 )
{
  ((ROGUEM1068)(THIS->type->methods[i]))( THIS, p0 );
}

void Rogue_call_ROGUEM1069( int i, RogueClassVisitor* THIS, RogueClassMethod* p0 )
{
  ((ROGUEM1069)(THIS->type->methods[i]))( THIS, p0 );
}

void Rogue_call_ROGUEM1070( int i, RogueClassVisitor* THIS, RogueClassCmdLiteralString* p0 )
{
  ((ROGUEM1070)(THIS->type->methods[i]))( THIS, p0 );
}

void Rogue_call_ROGUEM1071( int i, RogueClassVisitor* THIS, RogueClassCmdThisContext* p0 )
{
  ((ROGUEM1071)(THIS->type->methods[i]))( THIS, p0 );
}

void Rogue_call_ROGUEM1072( int i, RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* p0 )
{
  ((ROGUEM1072)(THIS->type->methods[i]))( THIS, p0 );
}

RogueClassType* Rogue_call_ROGUEM1137( int i, RogueClassCmdCall* THIS )
{
  return ((ROGUEM1137)(THIS->type->methods[i]))( THIS );
}

RogueLogical Rogue_call_ROGUEM1277( int i, RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* p0 )
{
  return ((ROGUEM1277)(THIS->type->methods[i]))( THIS, p0 );
}

RogueLogical Rogue_call_ROGUEM1288( int i, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* p0, RogueClassCmdNamedArg* p1 )
{
  return ((ROGUEM1288)(THIS->type->methods[i]))( THIS, p0, p1 );
}

void Rogue_call_ROGUEM1299( int i, RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* p0 )
{
  ((ROGUEM1299)(THIS->type->methods[i]))( THIS, p0 );
}


// GLOBAL PROPERTIES
RogueByte_List* RogueStringBuilder_work_bytes = 0;
RogueClassTable_String_TypeInfo_* RogueRuntime_type_info_lookup = 0;
RogueClassTable_String_String_* RogueToken_filepath_to_filename = 0;
RogueClassTable_String_TokenType_* RogueTokenType_lookup = 0;
RogueClassTokenType* RogueTokenType_directive_define = 0;
RogueClassTokenType* RogueTokenType_directive_include = 0;
RogueClassTokenType* RogueTokenType_directive_if = 0;
RogueClassTokenType* RogueTokenType_directive_elseIf = 0;
RogueClassTokenType* RogueTokenType_directive_else = 0;
RogueClassTokenType* RogueTokenType_directive_endIf = 0;
RogueClassTokenType* RogueTokenType_directive_module = 0;
RogueClassTokenType* RogueTokenType_directive_essential = 0;
RogueClassTokenType* RogueTokenType_directive_using = 0;
RogueClassTokenType* RogueTokenType_placeholder_id = 0;
RogueClassTokenType* RogueTokenType_begin_augment_tokens = 0;
RogueClassTokenType* RogueTokenType_keyword_augment = 0;
RogueClassTokenType* RogueTokenType_keyword_case = 0;
RogueClassTokenType* RogueTokenType_keyword_catch = 0;
RogueClassTokenType* RogueTokenType_keyword_class = 0;
RogueClassTokenType* RogueTokenType_keyword_DEFINITIONS = 0;
RogueClassTokenType* RogueTokenType_keyword_DEPENDENCIES = 0;
RogueClassTokenType* RogueTokenType_keyword_else = 0;
RogueClassTokenType* RogueTokenType_keyword_elseIf = 0;
RogueClassTokenType* RogueTokenType_keyword_endAugment = 0;
RogueClassTokenType* RogueTokenType_keyword_endBlock = 0;
RogueClassTokenType* RogueTokenType_keyword_endClass = 0;
RogueClassTokenType* RogueTokenType_keyword_endContingent = 0;
RogueClassTokenType* RogueTokenType_keyword_endForEach = 0;
RogueClassTokenType* RogueTokenType_keyword_endFunction = 0;
RogueClassTokenType* RogueTokenType_keyword_endIf = 0;
RogueClassTokenType* RogueTokenType_keyword_endInstance = 0;
RogueClassTokenType* RogueTokenType_keyword_endLoop = 0;
RogueClassTokenType* RogueTokenType_keyword_endRoutine = 0;
RogueClassTokenType* RogueTokenType_keyword_endTry = 0;
RogueClassTokenType* RogueTokenType_keyword_endUnitTest = 0;
RogueClassTokenType* RogueTokenType_keyword_endWhich = 0;
RogueClassTokenType* RogueTokenType_keyword_endWhile = 0;
RogueClassTokenType* RogueTokenType_keyword_ENUMERATE = 0;
RogueClassTokenType* RogueTokenType_keyword_GLOBAL = 0;
RogueClassTokenType* RogueTokenType_keyword_includeNativeCode = 0;
RogueClassTokenType* RogueTokenType_keyword_includeNativeHeader = 0;
RogueClassTokenType* RogueTokenType_keyword_instance = 0;
RogueClassTokenType* RogueTokenType_keyword_method = 0;
RogueClassTokenType* RogueTokenType_keyword_METHODS = 0;
RogueClassTokenType* RogueTokenType_keyword_nativeCode = 0;
RogueClassTokenType* RogueTokenType_keyword_nativeHeader = 0;
RogueClassTokenType* RogueTokenType_keyword_others = 0;
RogueClassTokenType* RogueTokenType_keyword_PROPERTIES = 0;
RogueClassTokenType* RogueTokenType_keyword_routine = 0;
RogueClassTokenType* RogueTokenType_keyword_satisfied = 0;
RogueClassTokenType* RogueTokenType_keyword_unsatisfied = 0;
RogueClassTokenType* RogueTokenType_keyword_with = 0;
RogueClassTokenType* RogueTokenType_symbol_close_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_close_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_close_comment = 0;
RogueClassTokenType* RogueTokenType_symbol_close_paren = 0;
RogueClassTokenType* RogueTokenType_symbol_close_specialize = 0;
RogueClassTokenType* RogueTokenType_eol = 0;
RogueClassTokenType* RogueTokenType_eoi = 0;
RogueClassTokenType* RogueTokenType_keyword_assert = 0;
RogueClassTokenType* RogueTokenType_keyword_await = 0;
RogueClassTokenType* RogueTokenType_keyword_block = 0;
RogueClassTokenType* RogueTokenType_keyword_contingent = 0;
RogueClassTokenType* RogueTokenType_keyword_ensure = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeBlock = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeContingent = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeForEach = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeIf = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeLoop = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeTry = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeWhich = 0;
RogueClassTokenType* RogueTokenType_keyword_escapeWhile = 0;
RogueClassTokenType* RogueTokenType_keyword_forEach = 0;
RogueClassTokenType* RogueTokenType_keyword_function = 0;
RogueClassTokenType* RogueTokenType_keyword_global = 0;
RogueClassTokenType* RogueTokenType_keyword_if = 0;
RogueClassTokenType* RogueTokenType_keyword_in = 0;
RogueClassTokenType* RogueTokenType_keyword_infinity = 0;
RogueClassTokenType* RogueTokenType_keyword_is = 0;
RogueClassTokenType* RogueTokenType_keyword_isReference = 0;
RogueClassTokenType* RogueTokenType_keyword_local = 0;
RogueClassTokenType* RogueTokenType_keyword_loop = 0;
RogueClassTokenType* RogueTokenType_keyword_NaN = 0;
RogueClassTokenType* RogueTokenType_keyword_native = 0;
RogueClassTokenType* RogueTokenType_keyword_necessary = 0;
RogueClassTokenType* RogueTokenType_keyword_noAction = 0;
RogueClassTokenType* RogueTokenType_keyword_null = 0;
RogueClassTokenType* RogueTokenType_keyword_of = 0;
RogueClassTokenType* RogueTokenType_keyword_require = 0;
RogueClassTokenType* RogueTokenType_keyword_return = 0;
RogueClassTokenType* RogueTokenType_keyword_select = 0;
RogueClassTokenType* RogueTokenType_keyword_nextIteration = 0;
RogueClassTokenType* RogueTokenType_keyword_step = 0;
RogueClassTokenType* RogueTokenType_keyword_sufficient = 0;
RogueClassTokenType* RogueTokenType_keyword_throw = 0;
RogueClassTokenType* RogueTokenType_keyword_trace = 0;
RogueClassTokenType* RogueTokenType_keyword_trace_args_only = 0;
RogueClassTokenType* RogueTokenType_keyword_try = 0;
RogueClassTokenType* RogueTokenType_keyword_unitTest = 0;
RogueClassTokenType* RogueTokenType_keyword_which = 0;
RogueClassTokenType* RogueTokenType_keyword_while = 0;
RogueClassTokenType* RogueTokenType_keyword_yield = 0;
RogueClassTokenType* RogueTokenType_identifier = 0;
RogueClassTokenType* RogueTokenType_type_identifier = 0;
RogueClassTokenType* RogueTokenType_literal_character = 0;
RogueClassTokenType* RogueTokenType_literal_integer = 0;
RogueClassTokenType* RogueTokenType_literal_long = 0;
RogueClassTokenType* RogueTokenType_literal_real = 0;
RogueClassTokenType* RogueTokenType_literal_string = 0;
RogueClassTokenType* RogueTokenType_keyword_and = 0;
RogueClassTokenType* RogueTokenType_keyword_as = 0;
RogueClassTokenType* RogueTokenType_keyword_downTo = 0;
RogueClassTokenType* RogueTokenType_keyword_false = 0;
RogueClassTokenType* RogueTokenType_keyword_instanceOf = 0;
RogueClassTokenType* RogueTokenType_keyword_meta = 0;
RogueClassTokenType* RogueTokenType_keyword_not = 0;
RogueClassTokenType* RogueTokenType_keyword_or = 0;
RogueClassTokenType* RogueTokenType_keyword_pi = 0;
RogueClassTokenType* RogueTokenType_keyword_prior = 0;
RogueClassTokenType* RogueTokenType_keyword_this = 0;
RogueClassTokenType* RogueTokenType_keyword_true = 0;
RogueClassTokenType* RogueTokenType_keyword_xor = 0;
RogueClassTokenType* RogueTokenType_symbol_ampersand = 0;
RogueClassTokenType* RogueTokenType_symbol_ampersand_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_double_ampersand = 0;
RogueClassTokenType* RogueTokenType_symbol_arrow = 0;
RogueClassTokenType* RogueTokenType_symbol_at = 0;
RogueClassTokenType* RogueTokenType_symbol_at_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_at_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_backslash = 0;
RogueClassTokenType* RogueTokenType_symbol_caret = 0;
RogueClassTokenType* RogueTokenType_symbol_caret_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_colon = 0;
RogueClassTokenType* RogueTokenType_symbol_comma = 0;
RogueClassTokenType* RogueTokenType_symbol_compare = 0;
RogueClassTokenType* RogueTokenType_symbol_dot = 0;
RogueClassTokenType* RogueTokenType_symbol_dot_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_downToGreaterThan = 0;
RogueClassTokenType* RogueTokenType_symbol_empty_braces = 0;
RogueClassTokenType* RogueTokenType_symbol_empty_brackets = 0;
RogueClassTokenType* RogueTokenType_symbol_eq = 0;
RogueClassTokenType* RogueTokenType_symbol_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_exclamation_point = 0;
RogueClassTokenType* RogueTokenType_symbol_fat_arrow = 0;
RogueClassTokenType* RogueTokenType_symbol_ge = 0;
RogueClassTokenType* RogueTokenType_symbol_gt = 0;
RogueClassTokenType* RogueTokenType_symbol_le = 0;
RogueClassTokenType* RogueTokenType_symbol_lt = 0;
RogueClassTokenType* RogueTokenType_symbol_minus = 0;
RogueClassTokenType* RogueTokenType_symbol_minus_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_minus_minus = 0;
RogueClassTokenType* RogueTokenType_symbol_ne = 0;
RogueClassTokenType* RogueTokenType_symbol_open_brace = 0;
RogueClassTokenType* RogueTokenType_symbol_open_bracket = 0;
RogueClassTokenType* RogueTokenType_symbol_open_paren = 0;
RogueClassTokenType* RogueTokenType_symbol_open_specialize = 0;
RogueClassTokenType* RogueTokenType_symbol_percent = 0;
RogueClassTokenType* RogueTokenType_symbol_percent_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_plus = 0;
RogueClassTokenType* RogueTokenType_symbol_plus_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_plus_plus = 0;
RogueClassTokenType* RogueTokenType_symbol_question_mark = 0;
RogueClassTokenType* RogueTokenType_symbol_semicolon = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_left = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_right = 0;
RogueClassTokenType* RogueTokenType_symbol_shift_right_x = 0;
RogueClassTokenType* RogueTokenType_symbol_slash = 0;
RogueClassTokenType* RogueTokenType_symbol_slash_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_slash_slash = 0;
RogueClassTokenType* RogueTokenType_symbol_tilde = 0;
RogueClassTokenType* RogueTokenType_symbol_tilde_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_times = 0;
RogueClassTokenType* RogueTokenType_symbol_times_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_upTo = 0;
RogueClassTokenType* RogueTokenType_symbol_upToLessThan = 0;
RogueClassTokenType* RogueTokenType_symbol_vertical_bar = 0;
RogueClassTokenType* RogueTokenType_symbol_vertical_bar_equals = 0;
RogueClassTokenType* RogueTokenType_symbol_double_vertical_bar = 0;
RogueType_List* RogueType_configure_chain = 0;
RogueType_List* RogueType_organize_chain = 0;
RogueType_List* RogueType_resolve_chain = 0;
RogueClassCmdStatementList* RogueCmdStatementList_current = 0;
RogueClassStringTable_Stopwatch_* RogueStopwatch_stopwatches = 0;
RogueClassTable_String_String_* RogueCyClass_ctypes = 0;
RogueClassSet_String_* RogueCyClass_bad_names = 0;
RogueClassTable_String_Token_List_* RoguePreprocessor_definitions = 0;
RogueString_List* RogueSystem_command_line_arguments = 0;
RogueString* RogueSystem_executable_filepath = 0;
RogueClassSystemEnvironment RogueSystem_environment = RogueClassSystemEnvironment();
RogueClassStringValue* RogueStringValue_empty_string = 0;

void RogueGlobal_trace( void* obj );
void RogueStringBuilder_trace( void* obj );
void RogueByte_List_trace( void* obj );
void RogueFunction___List_trace( void* obj );
void RogueException_trace( void* obj );
void RogueStackTrace_trace( void* obj );
void RogueString_List_trace( void* obj );
void RogueTypeInfo_trace( void* obj );
void RoguePropertyInfo_List_trace( void* obj );
void RogueValueTable_trace( void* obj );
void RogueTable_String_Value__trace( void* obj );
void RogueTableEntry_String_Value__trace( void* obj );
void RogueCharacter_List_trace( void* obj );
void RogueStringTable_String__trace( void* obj );
void RogueTable_String_String__trace( void* obj );
void RogueTableEntry_String_String__trace( void* obj );
void RogueStringReader_trace( void* obj );
void RogueListReader_String__trace( void* obj );
void RoguePrimitiveWorkBuffer_trace( void* obj );
void RogueTable_String_TypeInfo__trace( void* obj );
void RogueTableEntry_String_TypeInfo__trace( void* obj );
void RogueConsole_trace( void* obj );
void RogueRogueC_trace( void* obj );
void RogueSet_String__trace( void* obj );
void RogueTable_String_Logical__trace( void* obj );
void RogueTableEntry_String_Logical__trace( void* obj );
void RogueParser_List_trace( void* obj );
void RogueParser_trace( void* obj );
void RogueTokenReader_trace( void* obj );
void RogueToken_List_trace( void* obj );
void RogueToken_trace( void* obj );
void RogueTokenType_trace( void* obj );
void RogueTable_String_TokenType__trace( void* obj );
void RogueTableEntry_String_TokenType__trace( void* obj );
void RogueType_trace( void* obj );
void RogueType_List_trace( void* obj );
void RogueAttributes_trace( void* obj );
void RogueTemplate_trace( void* obj );
void RogueTypeParameter_List_trace( void* obj );
void RogueTypeParameter_trace( void* obj );
void RogueTable_Int32_Template__trace( void* obj );
void RogueTableEntry_Int32_Template__trace( void* obj );
void RogueTypeSpecializer_List_trace( void* obj );
void RogueTypeSpecializer_trace( void* obj );
void RogueDefinition_List_trace( void* obj );
void RogueDefinition_trace( void* obj );
void RogueCmd_trace( void* obj );
void RogueTable_String_Definition__trace( void* obj );
void RogueTableEntry_String_Definition__trace( void* obj );
void RogueProperty_List_trace( void* obj );
void RogueProperty_trace( void* obj );
void RogueTable_String_Property__trace( void* obj );
void RogueTableEntry_String_Property__trace( void* obj );
void RogueMethod_List_trace( void* obj );
void RogueMethod_trace( void* obj );
void RogueLocal_List_trace( void* obj );
void RogueLocal_trace( void* obj );
void RogueCmdStatementList_trace( void* obj );
void RogueCmd_List_trace( void* obj );
void RogueCmdLabel_List_trace( void* obj );
void RogueCmdLabel_trace( void* obj );
void RogueTable_String_CmdLabel__trace( void* obj );
void RogueTableEntry_String_CmdLabel__trace( void* obj );
void RogueMethodTemplate_trace( void* obj );
void RogueMethodTemplate_List_trace( void* obj );
void RogueTable_String_Method_List__trace( void* obj );
void RogueTableEntry_String_Method_List__trace( void* obj );
void RogueTable_String_Method__trace( void* obj );
void RogueTableEntry_String_Method__trace( void* obj );
void RogueMethodTemplates_trace( void* obj );
void RogueTable_String_ParseReader__trace( void* obj );
void RogueTableEntry_String_ParseReader__trace( void* obj );
void RogueParseReader_trace( void* obj );
void RogueStringTable_Stopwatch__trace( void* obj );
void RogueTable_String_Stopwatch__trace( void* obj );
void RogueTableEntry_String_Stopwatch__trace( void* obj );
void RoguePlugin_List_trace( void* obj );
void RoguePlugin_trace( void* obj );
void RogueProgram_trace( void* obj );
void RogueTemplate_List_trace( void* obj );
void RogueTable_String_Template__trace( void* obj );
void RogueTableEntry_String_Template__trace( void* obj );
void RogueTable_String_Augment_List__trace( void* obj );
void RogueTableEntry_String_Augment_List__trace( void* obj );
void RogueAugment_List_trace( void* obj );
void RogueAugment_trace( void* obj );
void RogueTable_String_Type__trace( void* obj );
void RogueTableEntry_String_Type__trace( void* obj );
void RogueTable_String_Int32__trace( void* obj );
void RogueTableEntry_String_Int32__trace( void* obj );
void RogueTable_String_String_List__trace( void* obj );
void RogueTableEntry_String_String_List__trace( void* obj );
void RogueTable_Type_CyClass__trace( void* obj );
void RogueTableEntry_Type_CyClass__trace( void* obj );
void RogueCyClass_trace( void* obj );
void RogueTable_String_CyMethod_List__trace( void* obj );
void RogueTableEntry_String_CyMethod_List__trace( void* obj );
void RogueCyMethod_List_trace( void* obj );
void RogueCyMethod_trace( void* obj );
void RogueTable_String_CyProperty__trace( void* obj );
void RogueTableEntry_String_CyProperty__trace( void* obj );
void RogueCyProperty_trace( void* obj );
void RogueTable_Type_Type__trace( void* obj );
void RogueTableEntry_Type_Type__trace( void* obj );
void RogueError_trace( void* obj );
void RogueRogueError_trace( void* obj );
void RoguePreprocessor_trace( void* obj );
void RogueTable_String_Token_List__trace( void* obj );
void RogueTableEntry_String_Token_List__trace( void* obj );
void RoguePreprocessorTokenReader_trace( void* obj );
void RogueTokenizer_trace( void* obj );
void RogueLiteralCharacterToken_trace( void* obj );
void RogueLiteralInt64Token_trace( void* obj );
void RogueLiteralInt32Token_trace( void* obj );
void RogueLiteralReal64Token_trace( void* obj );
void RogueStringDataToken_trace( void* obj );
void RogueListRewriter_Token__trace( void* obj );
void RogueProgram_cy_create_delegates___trace( void* obj );
void RogueProgram_cy_on_header_end_Object__trace( void* obj );
void RogueProgram_cy_on_code_end_Object__trace( void* obj );
void RogueCmdAccess_trace( void* obj );
void RogueCmdArgs_trace( void* obj );
void RogueCmdNamedArg_List_trace( void* obj );
void RogueCmdNamedArg_trace( void* obj );
void RogueCmdDefaultValue_trace( void* obj );
void RogueCmdLiteral_trace( void* obj );
void RogueCmdReturn_trace( void* obj );
void RogueCmdStatement_trace( void* obj );
void RogueScope_trace( void* obj );
void RogueCmdControlStructure_List_trace( void* obj );
void RogueCmdControlStructure_trace( void* obj );
void RogueCmdTaskControlSection_trace( void* obj );
void RogueCPPWriter_trace( void* obj );
void RogueInt32_List_trace( void* obj );
void RogueTableValueReader_Type_CyClass__trace( void* obj );
void RogueCyClass_List_trace( void* obj );
void RogueTableValueReader_String_CyProperty__trace( void* obj );
void RogueTableValueReader_String_CyMethod_List__trace( void* obj );
void RogueCyMethod_List_List_trace( void* obj );
void RogueRequirementError_trace( void* obj );
void RogueSet_Type__trace( void* obj );
void RogueTable_Type_Logical__trace( void* obj );
void RogueTableEntry_Type_Logical__trace( void* obj );
void RogueWeakReference_trace( void* obj );
void RogueObjectValue_trace( void* obj );
void RogueStringValue_trace( void* obj );
void RogueFile_trace( void* obj );
void RogueFunction_1094_trace( void* obj );
void RogueCmdMakeRequisite_trace( void* obj );
void RogueLineReader_trace( void* obj );
void RogueEOLToken_trace( void* obj );
void RogueCmdLiteralLogical_trace( void* obj );
void RogueCmdLiteralInt32_trace( void* obj );
void RogueCmdAdd_trace( void* obj );
void RogueCmdBinary_trace( void* obj );
void RogueCmdNativeHeader_trace( void* obj );
void RogueCmdNativeSource_trace( void* obj );
void RogueCmdNativeCode_trace( void* obj );
void RogueCmdIncludeNative_trace( void* obj );
void RogueCmdIf_trace( void* obj );
void RogueCmdWhich_trace( void* obj );
void RogueCmdWhichCase_List_trace( void* obj );
void RogueCmdWhichCase_trace( void* obj );
void RogueCmdBlock_trace( void* obj );
void RogueCmdContingent_trace( void* obj );
void RogueCmdGenericLoop_trace( void* obj );
void RogueCmdTry_trace( void* obj );
void RogueCmdCatch_List_trace( void* obj );
void RogueCmdCatch_trace( void* obj );
void RogueCmdAwait_trace( void* obj );
void RogueCmdYield_trace( void* obj );
void RogueCmdThrow_trace( void* obj );
void RogueCmdLiteralString_trace( void* obj );
void RogueCmdFormattedString_trace( void* obj );
void RogueCmdTrace_trace( void* obj );
void RogueCmdLocalDeclaration_trace( void* obj );
void RogueCmdAssert_trace( void* obj );
void RogueCmdEscape_trace( void* obj );
void RogueCmdNextIteration_trace( void* obj );
void RogueCmdNecessary_trace( void* obj );
void RogueCmdSufficient_trace( void* obj );
void RogueCmdAdjust_trace( void* obj );
void RogueCmdAssign_trace( void* obj );
void RogueCmdModifyAndAssign_trace( void* obj );
void RogueCmdTryExpression_trace( void* obj );
void RogueCmdReadLocal_trace( void* obj );
void RogueCmdAdjustLocal_trace( void* obj );
void RogueCmdCompareLE_trace( void* obj );
void RogueCmdComparison_trace( void* obj );
void RogueCmdRange_trace( void* obj );
void RogueCmdModifyAndAssignLocal_trace( void* obj );
void RogueCmdResolvedModifyAndAssign_trace( void* obj );
void RogueCmdRangeUpTo_trace( void* obj );
void RogueCmdRangeUpToLessThan_trace( void* obj );
void RogueCmdCompareLT_trace( void* obj );
void RogueCmdCompareGE_trace( void* obj );
void RogueCmdForEach_trace( void* obj );
void RogueCmdRangeDownTo_trace( void* obj );
void RogueCmdLogicalXor_trace( void* obj );
void RogueCmdBinaryLogical_trace( void* obj );
void RogueCmdLogicalOr_trace( void* obj );
void RogueCmdLogicalAnd_trace( void* obj );
void RogueCmdCompareEQ_trace( void* obj );
void RogueCmdCompareIsNot_trace( void* obj );
void RogueCmdCompareIs_trace( void* obj );
void RogueCmdCompareNE_trace( void* obj );
void RogueCmdCompareGT_trace( void* obj );
void RogueCmdInstanceOf_trace( void* obj );
void RogueCmdTypeOperator_trace( void* obj );
void RogueCmdLogicalNot_trace( void* obj );
void RogueCmdUnary_trace( void* obj );
void RogueCmdBitwiseXor_trace( void* obj );
void RogueCmdBitwiseOp_trace( void* obj );
void RogueCmdBitwiseOr_trace( void* obj );
void RogueCmdBitwiseAnd_trace( void* obj );
void RogueCmdBitwiseShiftLeft_trace( void* obj );
void RogueCmdBitwiseShiftRight_trace( void* obj );
void RogueCmdBitwiseShiftRightX_trace( void* obj );
void RogueCmdSubtract_trace( void* obj );
void RogueCmdMultiply_trace( void* obj );
void RogueCmdDivide_trace( void* obj );
void RogueCmdMod_trace( void* obj );
void RogueCmdPower_trace( void* obj );
void RogueCmdNegate_trace( void* obj );
void RogueCmdBitwiseNot_trace( void* obj );
void RogueCmdLogicalize_trace( void* obj );
void RogueCmdIsReference_trace( void* obj );
void RogueCmdElementAccess_trace( void* obj );
void RogueCmdConvertToType_trace( void* obj );
void RogueCmdCreateCallback_trace( void* obj );
void RogueCmdAs_trace( void* obj );
void RogueFnParam_trace( void* obj );
void RogueFnParam_List_trace( void* obj );
void RogueCmdCreateFunction_trace( void* obj );
void RogueFnArg_List_trace( void* obj );
void RogueFnArg_trace( void* obj );
void RogueCmdLiteralNull_trace( void* obj );
void RogueCmdLiteralReal64_trace( void* obj );
void RogueCmdLiteralInt64_trace( void* obj );
void RogueCmdLiteralCharacter_trace( void* obj );
void RogueCmdLiteralThis_trace( void* obj );
void RogueCmdThisContext_trace( void* obj );
void RogueCmdCreateList_trace( void* obj );
void RogueCmdCallPriorMethod_trace( void* obj );
void RogueCmdInlineNative_trace( void* obj );
void RogueCmdSelect_trace( void* obj );
void RogueCmdSelectCase_List_trace( void* obj );
void RogueCmdSelectCase_trace( void* obj );
void RogueCmdImplicitIDAccess_trace( void* obj );
void RogueCmdImplicitAccess_trace( void* obj );
void RogueCmdRequire_trace( void* obj );
void RogueCmdEnsure_trace( void* obj );
void RogueCmdTypedLiteralList_trace( void* obj );
void RogueCmdCreateCompound_trace( void* obj );
void RogueCmdSwitch_trace( void* obj );
void RogueCmdCreateObject_trace( void* obj );
void RogueCmdReadSingleton_trace( void* obj );
void RogueCmdWriteSingleton_trace( void* obj );
void RogueCmdWriteLocal_trace( void* obj );
void RogueCmdReadGlobal_trace( void* obj );
void RogueCmdWriteGlobal_trace( void* obj );
void RogueCmdReadProperty_trace( void* obj );
void RogueCmdWriteProperty_trace( void* obj );
void RogueCmdCall_trace( void* obj );
void RogueCmdCallDynamicMethod_trace( void* obj );
void RogueCmdCallMethod_trace( void* obj );
void RogueCmdAdjustProperty_trace( void* obj );
void RogueCmdAdjustGlobal_trace( void* obj );
void RogueCmdModifyAndAssignGlobal_trace( void* obj );
void RogueCmdModifyAndAssignProperty_trace( void* obj );
void RogueCmdCreateArray_trace( void* obj );
void RogueCmdReadArrayElement_trace( void* obj );
void RogueCmdReadArrayCount_trace( void* obj );
void RogueCmdWriteArrayElement_trace( void* obj );
void RogueCmdTaskControl_trace( void* obj );
void RogueCmdTaskControlSection_List_trace( void* obj );
void RogueCmdNoAction_trace( void* obj );
void RogueListRewriter_Type__trace( void* obj );
void RogueUpdateThisTypeVisitor_trace( void* obj );
void RogueTable_String_TypeSpecializer__trace( void* obj );
void RogueTableEntry_String_TypeSpecializer__trace( void* obj );
void RogueCmdCastToType_trace( void* obj );
void RogueCloneMethodArgs_trace( void* obj );
void RogueTaskArgs_trace( void* obj );
void RogueToken_List_List_trace( void* obj );
void RogueDirectiveTokenType_trace( void* obj );
void RogueStructuralDirectiveTokenType_trace( void* obj );
void RogueEOLTokenType_trace( void* obj );
void RogueStructureTokenType_trace( void* obj );
void RogueNativeCodeTokenType_trace( void* obj );
void RogueModifyAndAssignTokenType_trace( void* obj );
void RogueMacroArgs_trace( void* obj );
void RogueTable_String_Cmd__trace( void* obj );
void RogueTableEntry_String_Cmd__trace( void* obj );
void RogueListRewriter_CmdNamedArg__trace( void* obj );
void RogueCmdCallInlineNativeRoutine_trace( void* obj );
void RogueCmdCallInlineNative_trace( void* obj );
void RogueCmdCallNativeRoutine_trace( void* obj );
void RogueCmdCallRoutine_trace( void* obj );
void RogueCmdCallInlineNativeMethod_trace( void* obj );
void RogueCmdCallNativeMethod_trace( void* obj );
void RogueCmdCallAspectMethod_trace( void* obj );
void RogueCandidateMethods_trace( void* obj );
void RogueIOError_trace( void* obj );
void RogueFileReader_trace( void* obj );
void RogueFileWriter_trace( void* obj );
void RogueUTF8Reader_trace( void* obj );
void RogueQueryToGenericFunctionConversionVisitor_trace( void* obj );
void RogueListReader_CmdSelectCase__trace( void* obj );
void RogueCmdCallStaticMethod_trace( void* obj );
void RogueNativeCodeToken_trace( void* obj );
void RogueOptionalString_trace( void* obj );
void RogueOptionalType_trace( void* obj );
void RogueOptionalMethod_trace( void* obj );
void RogueOptionalCmd_trace( void* obj );

void RogueGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassGlobal*)obj)->standard_output)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassGlobal*)obj)->global_output_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassGlobal*)obj)->exit_functions)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStringBuilder_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueStringBuilder*)obj)->utf8)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueByte_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueByte_List*)obj)->data)) RogueArray_trace( link );
}

void RogueFunction___List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFunction___List*)obj)->data)) RogueArray_trace( link );
}

void RogueException_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueException*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueException*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStackTrace_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStackTrace*)obj)->entries)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueString_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueString_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTypeInfo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeInfo*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueTypeInfo*)obj)->global_properties)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueTypeInfo*)obj)->properties)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePropertyInfo_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RoguePropertyInfo_List*)obj)->data)) RogueArray_trace( link );
}

void RogueValueTable_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassValueTable*)obj)->values)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Value__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Value_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Value_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Value_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Value_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Value__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Value_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Value_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Value_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Value_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Value_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCharacter_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCharacter_List*)obj)->data)) RogueArray_trace( link );
}

void RogueStringTable_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringTable_String_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassStringTable_String_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassStringTable_String_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassStringTable_String_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_String_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_String_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_String_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_String_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_String_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStringReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringReader*)obj)->string)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListReader_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListReader_String_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePrimitiveWorkBuffer_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPrimitiveWorkBuffer*)obj)->utf8)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_TypeInfo__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TypeInfo_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_TypeInfo_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TypeInfo_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TypeInfo_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TypeInfo__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeInfo_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueConsole_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassConsole*)obj)->output_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassConsole*)obj)->input_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassConsole*)obj)->io_handler)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueRogueC_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRogueC*)obj)->included_files)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->manually_included_files)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->prefix_path_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->prefix_path_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->compile_targets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->target_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->libraries_folder)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->source_files)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->first_filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->output_filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->supported_targets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->essential_declarations)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->essential_files)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->execute_args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->package_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->parsers)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->parsereaders_by_filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->stopwatch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueC*)obj)->plugins)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueSet_String__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassSet_String_*)obj)->_t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Logical__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Logical_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Logical_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Logical_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Logical_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Logical__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Logical_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Logical_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Logical_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Logical_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueParser_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueParser_List*)obj)->data)) RogueArray_trace( link );
}

void RogueParser_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassParser*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->local_declarations)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->property_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->string_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->cur_statement_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->used_modules)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassParser*)obj)->module_id_map)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTokenReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenReader*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueToken_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueToken_List*)obj)->data)) RogueArray_trace( link );
}

void RogueToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassToken*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenType*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_TokenType__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TokenType_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_TokenType_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TokenType_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TokenType_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TokenType__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TokenType_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->source_template)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->specializers)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->base_class)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->base_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->extended_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->aspect_base_class)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->_element_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->definition_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->definition_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->prev_enum_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->property_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->property_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_lookup_by_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->global_method_lookup_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_lookup_by_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_lookup_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->callback_parameter_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->_callback_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->method_templates)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->dependencies)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->cpp_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->cpp_class_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassType*)obj)->cpp_type_name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueType_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueType_List*)obj)->data)) RogueArray_trace( link );
}

void RogueAttributes_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassAttributes*)obj)->tags)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTemplate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTemplate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->type_parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->alternates_by_param_count)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->_routine_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTemplate*)obj)->routine_parameter_types)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTypeParameter_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeParameter_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTypeParameter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTypeParameter*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTypeParameter*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_Int32_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_Int32_Template_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_Int32_Template_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Int32_Template_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Int32_Template_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_Int32_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_Int32_Template_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Int32_Template_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Int32_Template_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Int32_Template_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTypeSpecializer_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTypeSpecializer_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTypeSpecializer_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTypeSpecializer*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTypeSpecializer*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueDefinition_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueDefinition_List*)obj)->data)) RogueArray_trace( link );
}

void RogueDefinition_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassDefinition*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassDefinition*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassDefinition*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Definition__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Definition_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Definition_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Definition_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Definition_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Definition__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Definition_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueProperty_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueProperty_List*)obj)->data)) RogueArray_trace( link );
}

void RogueProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->initial_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProperty*)obj)->cpp_name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Property__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Property_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Property_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Property_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Property_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Property__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Property_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethod_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueMethod_List*)obj)->data)) RogueArray_trace( link );
}

void RogueMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->attributes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->_task_result_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->locals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->aspect_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->incorporating_classes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->overridden_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->overriding_methods)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->native_code)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->label_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->label_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->cur_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->source_template)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->unspecialized_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->cpp_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethod*)obj)->cpp_typedef)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLocal_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueLocal_List*)obj)->data)) RogueArray_trace( link );
}

void RogueLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->original_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->initial_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->_cpp_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLocal*)obj)->_parameter_cpp_name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdStatementList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdStatementList*)obj)->data)) RogueArray_trace( link );
}

void RogueCmd_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmd_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdLabel_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdLabel_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdLabel_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLabel*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLabel*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLabel*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_CmdLabel__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_CmdLabel_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_CmdLabel_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_CmdLabel_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_CmdLabel_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_CmdLabel__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CmdLabel_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethodTemplate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->type_parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->template_tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->overridden_m)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplate*)obj)->overrides)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplate_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueMethodTemplate_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_Method_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Method_List_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Method_List_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Method_List_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Method_List_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Method_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_List_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Method__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Method_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Method_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Method_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Method_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Method__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Method_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMethodTemplates_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMethodTemplates*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMethodTemplates*)obj)->templates)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_ParseReader__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_ParseReader_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_ParseReader_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_ParseReader_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_ParseReader_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_ParseReader__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_ParseReader_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueParseReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassParseReader*)obj)->data)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStringTable_Stopwatch__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringTable_Stopwatch_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassStringTable_Stopwatch_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassStringTable_Stopwatch_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassStringTable_Stopwatch_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Stopwatch__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Stopwatch_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Stopwatch_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Stopwatch_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Stopwatch_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Stopwatch__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Stopwatch_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Stopwatch_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Stopwatch_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Stopwatch_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Stopwatch_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePlugin_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RoguePlugin_List*)obj)->data)) RogueArray_trace( link );
}

void RoguePlugin_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPlugin*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPlugin*)obj)->collect_supported_types_callback)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPlugin*)obj)->generate_additonal_types_callback)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPlugin*)obj)->start_header_file_callback)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPlugin*)obj)->finish_header_file_callback)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPlugin*)obj)->start_code_file_callback)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPlugin*)obj)->finish_code_file_callback)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueProgram_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProgram*)obj)->code_prefix)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->program_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->template_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->template_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->augment_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->m_on_launch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->m_run_tests)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->global_properties)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->native_header)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->native_code)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->methods_by_signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_null)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Real64)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Real32)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Int64)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Int32)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Character)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Byte)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Logical)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Object)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_String)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_NativeArray)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_GenericList)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Global)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Exception)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_WeakReference)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_Value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_StringBuilder)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->type_TypeInfo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->literal_string_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->literal_string_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->string_buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->ids_by_module)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->cy_delegates)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->cy_delegate_to_pydelegate)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassProgram*)obj)->cy_plugin)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTemplate_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueTemplate_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTable_String_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Template_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Template_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Template_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Template_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Template__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Template_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Augment_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Augment_List_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Augment_List_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Augment_List_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Augment_List_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Augment_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Augment_List_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueAugment_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueAugment_List*)obj)->data)) RogueArray_trace( link );
}

void RogueAugment_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassAugment*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassAugment*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassAugment*)obj)->base_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassAugment*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Type_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Type_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Type_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Type_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Type_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Int32__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Int32_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Int32_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Int32_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Int32_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Int32__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Int32_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Int32_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Int32_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Int32_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_String_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_String_List_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_String_List_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_String_List_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_String_List_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_String_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_String_List_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_Type_CyClass__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_Type_CyClass_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_Type_CyClass_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Type_CyClass_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Type_CyClass_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_Type_CyClass__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_Type_CyClass_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_CyClass_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_CyClass_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_CyClass_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_CyClass_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCyClass_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCyClass*)obj)->_pytype)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyClass*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyClass*)obj)->funcs)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyClass*)obj)->properties)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_CyMethod_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_CyMethod_List_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_CyMethod_List_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_CyMethod_List_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_CyMethod_List_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_CyMethod_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_CyMethod_List_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CyMethod_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CyMethod_List_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CyMethod_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CyMethod_List_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCyMethod_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCyMethod_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCyMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCyMethod*)obj)->cname)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->pyname)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->pyclass)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->cproto_return)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->return_converter)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->call_args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->cproto_params)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->py_params)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->defaults)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->py_types)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->prologue)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyMethod*)obj)->real_method)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_CyProperty__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_CyProperty_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_CyProperty_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_CyProperty_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_CyProperty_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_CyProperty__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_CyProperty_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CyProperty_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CyProperty_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CyProperty_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_CyProperty_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCyProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCyProperty*)obj)->pyname)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyProperty*)obj)->prop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyProperty*)obj)->_ctype)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyProperty*)obj)->cname)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyProperty*)obj)->read_c_code)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCyProperty*)obj)->write_c_code)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_Type_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_Type_Type_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_Type_Type_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Type_Type_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Type_Type_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_Type_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_Type_Type_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_Type_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_Type_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_Type_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_Type_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassError*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueRogueError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRogueError*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRogueError*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePreprocessor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPreprocessor*)obj)->parser)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessor*)obj)->cur_module)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Token_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Token_List_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Token_List_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Token_List_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Token_List_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Token_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Token_List_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RoguePreprocessorTokenReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassPreprocessorTokenReader*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassPreprocessorTokenReader*)obj)->queue)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTokenizer_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTokenizer*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->reader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTokenizer*)obj)->next_filepath)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLiteralCharacterToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralCharacterToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralCharacterToken*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLiteralInt64Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralInt64Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralInt64Token*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLiteralInt32Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralInt32Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralInt32Token*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLiteralReal64Token_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLiteralReal64Token*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLiteralReal64Token*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStringDataToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringDataToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassStringDataToken*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassStringDataToken*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListRewriter_Token__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListRewriter_Token_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueProgram_cy_create_delegates___trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProgram_cy_create_delegates__*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueProgram_cy_on_header_end_Object__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProgram_cy_on_header_end_Object_*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueProgram_cy_on_code_end_Object__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassProgram_cy_on_code_end_Object_*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAccess_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAccess*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAccess*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdArgs*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdNamedArg_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdNamedArg_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdNamedArg_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNamedArg*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNamedArg*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNamedArg*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdDefaultValue_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdDefaultValue*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDefaultValue*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteral_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteral*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReturn_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReturn*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReturn*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdStatement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdStatement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueScope_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassScope*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_body)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->this_statement)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->_implicit_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->local_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassScope*)obj)->control_stack)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdControlStructure_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdControlStructure_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdControlStructure_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdControlStructure*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdControlStructure*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControlSection_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTaskControlSection*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCPPWriter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCPPWriter*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCPPWriter*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCPPWriter*)obj)->trace_token)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCPPWriter*)obj)->temp_buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueInt32_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueInt32_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableValueReader_Type_CyClass__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableValueReader_Type_CyClass_*)obj)->table)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableValueReader_Type_CyClass_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCyClass_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCyClass_List*)obj)->data)) RogueArray_trace( link );
}

void RogueTableValueReader_String_CyProperty__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableValueReader_String_CyProperty_*)obj)->table)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableValueReader_String_CyProperty_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableValueReader_String_CyMethod_List__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableValueReader_String_CyMethod_List_*)obj)->table)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableValueReader_String_CyMethod_List_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCyMethod_List_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCyMethod_List_List*)obj)->data)) RogueArray_trace( link );
}

void RogueRequirementError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassRequirementError*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassRequirementError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueSet_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassSet_Type_*)obj)->_t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_Type_Logical__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_Type_Logical_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_Type_Logical_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Type_Logical_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_Type_Logical_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_Type_Logical__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_Type_Logical_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_Logical_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_Logical_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_Type_Logical_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueWeakReference_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueWeakReference*)obj)->next_weak_reference)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueObjectValue_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassObjectValue*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStringValue_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStringValue*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFile_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFile*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFunction_1094_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFunction_1094*)obj)->console)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdMakeRequisite_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMakeRequisite*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMakeRequisite*)obj)->pattern)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueLineReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassLineReader*)obj)->source)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLineReader*)obj)->next)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassLineReader*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueEOLToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassEOLToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassEOLToken*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassEOLToken*)obj)->comment)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralLogical_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralLogical*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralInt32_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralInt32*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBinary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBinary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinary*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinary*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNativeHeader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNativeHeader*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNativeHeader*)obj)->code)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNativeSource_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNativeSource*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNativeCode_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNativeCode*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNativeCode*)obj)->code)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdIncludeNative_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdIncludeNative*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIncludeNative*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIncludeNative*)obj)->_file_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdIf_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdIf*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIf*)obj)->else_statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWhich_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWhich*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhich*)obj)->case_others)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWhichCase_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdWhichCase_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdWhichCase_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWhichCase*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhichCase*)obj)->conditions)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWhichCase*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBlock_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBlock*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBlock*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdContingent_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdContingent*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->satisfied_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdContingent*)obj)->unsatisfied_section)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdGenericLoop_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdGenericLoop*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->control_statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdGenericLoop*)obj)->upkeep)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTry_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTry*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTry*)obj)->catches)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCatch_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdCatch_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdCatch_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCatch*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCatch*)obj)->error_var)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCatch*)obj)->_error_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCatch*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAwait_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAwait*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->statement_list)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAwait*)obj)->result_var)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdYield_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdYield*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdThrow_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdThrow*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdThrow*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralString_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralString*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLiteralString*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdFormattedString_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdFormattedString*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdFormattedString*)obj)->format)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdFormattedString*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTrace_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTrace*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTrace*)obj)->info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLocalDeclaration_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLocalDeclaration*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLocalDeclaration*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAssert_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAssert*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->error)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssert*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdEscape_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdEscape*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEscape*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNextIteration_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNextIteration*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNextIteration*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNecessary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNecessary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNecessary*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNecessary*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSufficient_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSufficient*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSufficient*)obj)->target_cmd)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSufficient*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjust_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjust*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjust*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssign*)obj)->target)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->target)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTryExpression_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTryExpression*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTryExpression*)obj)->try_expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTryExpression*)obj)->else_expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTryExpression*)obj)->result_var)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareLE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareLE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdComparison_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdComparison*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdComparison*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdComparison*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRange_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRange*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRange*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdResolvedModifyAndAssign_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdResolvedModifyAndAssign*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeUpTo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeUpTo*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpTo*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeUpToLessThan_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeUpToLessThan*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareLT_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareLT*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLT*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareLT*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareGE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareGE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdForEach_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdForEach*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->control_var_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->index_var_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->collection_var_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->collection)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdForEach*)obj)->step_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRangeDownTo_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRangeDownTo*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->first)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->last)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRangeDownTo*)obj)->step_size)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalXor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalXor*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalXor*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalXor*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBinaryLogical_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBinaryLogical*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinaryLogical*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBinaryLogical*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalOr_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalOr*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalOr*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalOr*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalAnd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalAnd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalAnd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalAnd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareEQ_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareEQ*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareEQ*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareEQ*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareIsNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareIsNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIsNot*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIsNot*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareIs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareIs*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIs*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareIs*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareNE_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareNE*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareNE*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareNE*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCompareGT_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCompareGT*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGT*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCompareGT*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdInstanceOf_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdInstanceOf*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInstanceOf*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInstanceOf*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTypeOperator_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTypeOperator*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypeOperator*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypeOperator*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalNot*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdUnary_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdUnary*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdUnary*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseXor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseXor*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseXor*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseXor*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseOp_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseOp*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOp*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOp*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseOr_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseOr*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOr*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseOr*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseAnd_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseAnd*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftLeft_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftLeft*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftRight_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRight*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseShiftRightX_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseShiftRightX*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSubtract_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSubtract*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSubtract*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSubtract*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdMultiply_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMultiply*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMultiply*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMultiply*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdDivide_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdDivide*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDivide*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdDivide*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdMod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdMod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMod*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdMod*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdPower_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdPower*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdPower*)obj)->left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdPower*)obj)->right)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdNegate_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNegate*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdNegate*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdBitwiseNot_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdBitwiseNot*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdBitwiseNot*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLogicalize_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLogicalize*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLogicalize*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdIsReference_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdIsReference*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdIsReference*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdElementAccess_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdElementAccess*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdElementAccess*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdElementAccess*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdConvertToType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdConvertToType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToType*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdConvertToType*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateCallback_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateCallback*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->signature)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCallback*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAs*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAs*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAs*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFnParam_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFnParam*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassFnParam*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFnParam_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFnParam_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdCreateFunction_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateFunction*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->parameters)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->_return_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->with_args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateFunction*)obj)->query_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFnArg_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueFnArg_List*)obj)->data)) RogueArray_trace( link );
}

void RogueFnArg_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFnArg*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassFnArg*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassFnArg*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralNull_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralNull*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralReal64_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralReal64*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralInt64_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralInt64*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralCharacter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralCharacter*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdLiteralThis_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdLiteralThis*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdLiteralThis*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdThisContext_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdThisContext*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdThisContext*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateList*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateList*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateList*)obj)->_list_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallPriorMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallPriorMethod*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdInlineNative_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdInlineNative*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->code)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->_result_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->modify_op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdInlineNative*)obj)->local_list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSelect_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSelect*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelect*)obj)->_value_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSelectCase_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdSelectCase_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdSelectCase_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSelectCase*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelectCase*)obj)->conditions)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelectCase*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSelectCase*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdImplicitIDAccess_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdImplicitIDAccess*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdImplicitIDAccess*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdImplicitAccess_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdImplicitAccess*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdImplicitAccess*)obj)->access)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdRequire_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdRequire*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->condition)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->error)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdRequire*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdEnsure_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdEnsure*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->named_args)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->cmd_read)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdEnsure*)obj)->cmd_write)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTypedLiteralList_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->list_type_name)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTypedLiteralList*)obj)->elements)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateCompound_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateCompound*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCompound*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateCompound*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdSwitch_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdSwitch*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->statements)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->escape_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->upkeep_label)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->task_escape_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->task_upkeep_section)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->cloned_command)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->expression)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->cases)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdSwitch*)obj)->case_others)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateObject_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateObject*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateObject*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadSingleton_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadSingleton*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadSingleton*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteSingleton_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteSingleton*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteSingleton*)obj)->_of_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteSingleton*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteLocal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteLocal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteLocal*)obj)->local_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteLocal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteGlobal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteProperty*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCall_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCall*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCall*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallDynamicMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallDynamicMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdAdjustGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdAdjustGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdAdjustGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignGlobal_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignGlobal*)obj)->global_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdModifyAndAssignProperty_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->op)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdModifyAndAssignProperty*)obj)->property_info)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCreateArray_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCreateArray*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateArray*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCreateArray*)obj)->count_cmd)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadArrayElement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadArrayElement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayElement*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdReadArrayCount_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdReadArrayCount*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayCount*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdReadArrayCount*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdWriteArrayElement_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->_array_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->index)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdWriteArrayElement*)obj)->new_value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControl_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdTaskControl*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTaskControl*)obj)->sections)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdTaskControl*)obj)->current_section)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdTaskControlSection_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueCmdTaskControlSection_List*)obj)->data)) RogueArray_trace( link );
}

void RogueCmdNoAction_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdNoAction*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListRewriter_Type__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListRewriter_Type_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueUpdateThisTypeVisitor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassUpdateThisTypeVisitor*)obj)->_this_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassUpdateThisTypeVisitor*)obj)->this_method)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_TypeSpecializer__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_TypeSpecializer_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_TypeSpecializer_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TypeSpecializer_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_TypeSpecializer_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_TypeSpecializer__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_TypeSpecializer_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCastToType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCastToType*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCastToType*)obj)->operand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCastToType*)obj)->_target_type)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCloneMethodArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCloneMethodArgs*)obj)->cloned_method)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTaskArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTaskArgs*)obj)->_task_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->task_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->_original_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->original_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->cmd_task_control)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->context_property)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTaskArgs*)obj)->ip_property)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueToken_List_List_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueToken_List_List*)obj)->data)) RogueArray_trace( link );
}

void RogueDirectiveTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassDirectiveTokenType*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStructuralDirectiveTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStructuralDirectiveTokenType*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueEOLTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassEOLTokenType*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueStructureTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassStructureTokenType*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueNativeCodeTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassNativeCodeTokenType*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueModifyAndAssignTokenType_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassModifyAndAssignTokenType*)obj)->name)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueMacroArgs_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassMacroArgs*)obj)->this_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMacroArgs*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassMacroArgs*)obj)->arg_lookup)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTable_String_Cmd__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTable_String_Cmd_*)obj)->bins)) RogueArray_trace( link );
  if ((link=((RogueClassTable_String_Cmd_*)obj)->first_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Cmd_*)obj)->last_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTable_String_Cmd_*)obj)->cur_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueTableEntry_String_Cmd__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->key)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->adjacent_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->next_entry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassTableEntry_String_Cmd_*)obj)->previous_entry)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListRewriter_CmdNamedArg__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListRewriter_CmdNamedArg_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNativeRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNative_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNative*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNative*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallNativeRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallRoutine_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallRoutine*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallRoutine*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallInlineNativeMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallInlineNativeMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallNativeMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallNativeMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallAspectMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallAspectMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCandidateMethods_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCandidateMethods*)obj)->type_context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->access)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->available)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCandidateMethods*)obj)->compatible)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueIOError_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassIOError*)obj)->message)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassIOError*)obj)->stack_trace)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFileReader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFileReader*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassFileReader*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueFileWriter_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassFileWriter*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassFileWriter*)obj)->buffer)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueUTF8Reader_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassUTF8Reader*)obj)->byte_reader)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueQueryToGenericFunctionConversionVisitor_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassQueryToGenericFunctionConversionVisitor*)obj)->cmd_create_fn)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueListReader_CmdSelectCase__trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassListReader_CmdSelectCase_*)obj)->list)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueCmdCallStaticMethod_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->t)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->context)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->method_info)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassCmdCallStaticMethod*)obj)->args)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueNativeCodeToken_trace( void* obj )
{
  void* link;
  if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;
  ((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;
  if ((link=((RogueClassNativeCodeToken*)obj)->_type)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassNativeCodeToken*)obj)->filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=((RogueClassNativeCodeToken*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueOptionalString_trace( void* obj )
{
  void* link;
  if ((link=((RogueOptionalString*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueOptionalType_trace( void* obj )
{
  void* link;
  if ((link=((RogueOptionalType*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueOptionalMethod_trace( void* obj )
{
  void* link;
  if ((link=((RogueOptionalMethod*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}

void RogueOptionalCmd_trace( void* obj )
{
  void* link;
  if ((link=((RogueOptionalCmd*)obj)->value)) ((RogueObject*)link)->type->trace_fn( link );
}


int Rogue_type_name_index_table[] =
{
  10,295,1542,1543,379,1039,382,377,1084,381,123,378,1042,958,1073,5,
  126,952,1041,1072,125,124,122,384,380,1057,1003,1085,306,1004,1086,914,
  1040,1087,1141,953,1088,915,954,1544,955,1545,1038,956,450,1001,1089,916,
  957,1546,1547,1005,1131,959,990,975,1090,917,1058,981,1006,1046,974,983,
  1007,1091,918,1092,966,1045,1074,973,961,1052,1008,1093,972,1094,919,1059,
  1009,1095,1060,1010,413,1096,1011,1097,920,1044,964,1077,1012,1098,921,1050,
  987,1051,912,1075,1366,1048,1099,1061,1157,1100,1013,1101,922,1014,1062,1102,
  1076,965,1103,924,992,1104,925,1015,1105,1016,1106,926,979,1017,1370,1018,
  1107,928,1047,976,985,986,1079,960,1043,1078,962,1108,929,963,1109,930,
  1063,1019,1110,967,1111,931,968,1112,908,969,1113,932,970,1114,933,913,
  994,1115,934,1055,995,1081,996,1116,935,998,971,1117,936,1133,1411,977,
  980,1118,937,982,978,1144,1145,1146,1147,1148,984,1371,1406,1407,1156,1365,
  1049,1160,1119,988,1415,1158,1423,1159,989,1064,1424,1020,1120,1413,1414,991,
  1053,1080,993,1548,1054,1083,997,1549,999,1550,1056,1082,1276,1000,1021,1121,
  938,1002,383,1551,1134,1135,1136,1137,1434,1022,1132,1142,1161,1023,1372,1149,
  1416,1417,1024,1454,939,1474,1162,1475,1476,1426,1427,1065,1176,1125,1428,1429,
  1430,1431,1066,1177,1126,1163,1164,1165,1418,1166,1167,1425,1168,1169,1170,1171,
  1172,1173,1174,1175,1178,1179,1180,1479,1455,1181,1491,1182,1488,1489,1480,1481,
  1432,1490,1494,1438,1495,1496,1482,1483,1484,1485,1486,1497,1183,1502,943,1509,
  1456,1510,1511,1512,1513,1514,1457,1458,1459,1460,1461,1503,1504,1505,1184,1185,
  1498,1186,1499,1025,1067,1124,1187,1068,1026,1127,1419,1420,1421,1422,1515,1188,
  1189,1190,1191,1192,1069,1193,1122,1194,1195,1196,1197,1198,1199,415,1433,1200,
  1201,1534,1535,1202,1203,1204,1205,1206,1526,1520,1536,1537,1492,1493,1207,1538,
  1208,1539,1209,1071,1128,1540,1027,1516,1028,1129,950,1500,1517,1435,1436,1070,
  1123,1150,1151,1152,1153,1154,1155,1029,1437,1037,1130,951,1030,1031,1032,1530,
  1521,1522,1523,1531,1524,1525,1033,1528,1529,1412,1034,1035,1036,1518,1532,1552,
  1527,1533,1541,1553,1554,1555,1556,1557,1558,1559,1560
};
RogueInitFn Rogue_init_object_fn_table[] =
{
  0,
  (RogueInitFn) RogueGlobal__init_object,
  0,
  0,
  (RogueInitFn) RogueStringBuilder__init_object,
  (RogueInitFn) RogueByte_List__init_object,
  (RogueInitFn) RogueGenericList__init_object,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueFunction___List__init_object,
  (RogueInitFn) RogueFunction____init_object,
  0,
  (RogueInitFn) RogueException__init_object,
  0,
  (RogueInitFn) RogueStackTrace__init_object,
  (RogueInitFn) RogueString_List__init_object,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueValue__init_object,
  (RogueInitFn) RogueTypeInfo__init_object,
  (RogueInitFn) RoguePropertyInfo_List__init_object,
  (RogueInitFn) RoguePropertyInfo__init_object,
  0,
  (RogueInitFn) RogueValueTable__init_object,
  (RogueInitFn) RogueTable_String_Value___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Value___init_object,
  (RogueInitFn) RogueCharacter_List__init_object,
  0,
  (RogueInitFn) RogueStringTable_String___init_object,
  (RogueInitFn) RogueTable_String_String___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_String___init_object,
  (RogueInitFn) RogueStringReader__init_object,
  0,
  (RogueInitFn) RogueListReader_String___init_object,
  0,
  (RogueInitFn) RoguePrimitiveWorkBuffer__init_object,
  (RogueInitFn) RogueMath__init_object,
  (RogueInitFn) RogueRuntime__init_object,
  (RogueInitFn) RogueTable_String_TypeInfo___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_TypeInfo___init_object,
  (RogueInitFn) RogueConsole__init_object,
  0,
  0,
  (RogueInitFn) RogueConsoleIOHandler__init_object,
  (RogueInitFn) RogueFunction_161__init_object,
  (RogueInitFn) RogueRogueC__init_object,
  (RogueInitFn) RogueSet_String___init_object,
  (RogueInitFn) RogueTable_String_Logical___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Logical___init_object,
  (RogueInitFn) RogueParser_List__init_object,
  (RogueInitFn) RogueParser__init_object,
  (RogueInitFn) RogueTokenReader__init_object,
  (RogueInitFn) RogueToken_List__init_object,
  (RogueInitFn) RogueToken__init_object,
  (RogueInitFn) RogueTokenType__init_object,
  (RogueInitFn) RogueTable_String_TokenType___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_TokenType___init_object,
  0,
  (RogueInitFn) RogueType__init_object,
  (RogueInitFn) RogueType_List__init_object,
  0,
  (RogueInitFn) RogueAttributes__init_object,
  (RogueInitFn) RogueTemplate__init_object,
  (RogueInitFn) RogueTypeParameter_List__init_object,
  (RogueInitFn) RogueTypeParameter__init_object,
  0,
  (RogueInitFn) RogueTable_Int32_Template___init_object,
  0,
  (RogueInitFn) RogueTableEntry_Int32_Template___init_object,
  (RogueInitFn) RogueTypeSpecializer_List__init_object,
  (RogueInitFn) RogueTypeSpecializer__init_object,
  0,
  (RogueInitFn) RogueDefinition_List__init_object,
  (RogueInitFn) RogueDefinition__init_object,
  (RogueInitFn) RogueCmd__init_object,
  0,
  (RogueInitFn) RogueTable_String_Definition___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Definition___init_object,
  (RogueInitFn) RogueProperty_List__init_object,
  (RogueInitFn) RogueProperty__init_object,
  0,
  (RogueInitFn) RogueTable_String_Property___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Property___init_object,
  (RogueInitFn) RogueMethod_List__init_object,
  (RogueInitFn) RogueMethod__init_object,
  (RogueInitFn) RogueLocal_List__init_object,
  (RogueInitFn) RogueLocal__init_object,
  0,
  (RogueInitFn) RogueCmdStatementList__init_object,
  (RogueInitFn) RogueCmd_List__init_object,
  0,
  (RogueInitFn) RogueCmdLabel_List__init_object,
  (RogueInitFn) RogueCmdLabel__init_object,
  0,
  (RogueInitFn) RogueTable_String_CmdLabel___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_CmdLabel___init_object,
  (RogueInitFn) RogueMethodTemplate__init_object,
  (RogueInitFn) RogueMethodTemplate_List__init_object,
  0,
  0,
  (RogueInitFn) RogueTable_String_Method_List___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Method_List___init_object,
  (RogueInitFn) RogueTable_String_Method___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Method___init_object,
  (RogueInitFn) RogueMethodTemplates__init_object,
  0,
  (RogueInitFn) RogueTable_String_ParseReader___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_ParseReader___init_object,
  (RogueInitFn) RogueParseReader__init_object,
  (RogueInitFn) RogueStopwatch__init_object,
  (RogueInitFn) RogueStringTable_Stopwatch___init_object,
  (RogueInitFn) RogueTable_String_Stopwatch___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Stopwatch___init_object,
  (RogueInitFn) RoguePlugin_List__init_object,
  (RogueInitFn) RoguePlugin__init_object,
  (RogueInitFn) RogueFunction__RETURNSLogical__init_object,
  (RogueInitFn) RogueFunction_Object___init_object,
  0,
  (RogueInitFn) RogueProgram__init_object,
  (RogueInitFn) RogueTemplate_List__init_object,
  0,
  (RogueInitFn) RogueTable_String_Template___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Template___init_object,
  (RogueInitFn) RogueTable_String_Augment_List___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Augment_List___init_object,
  (RogueInitFn) RogueAugment_List__init_object,
  (RogueInitFn) RogueAugment__init_object,
  0,
  (RogueInitFn) RogueTable_String_Type___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Type___init_object,
  (RogueInitFn) RogueTable_String_Int32___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Int32___init_object,
  (RogueInitFn) RogueTable_String_String_List___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_String_List___init_object,
  (RogueInitFn) RogueTable_Type_CyClass___init_object,
  0,
  (RogueInitFn) RogueTableEntry_Type_CyClass___init_object,
  (RogueInitFn) RogueCyClass__init_object,
  (RogueInitFn) RogueTable_String_CyMethod_List___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_CyMethod_List___init_object,
  (RogueInitFn) RogueCyMethod_List__init_object,
  (RogueInitFn) RogueCyMethod__init_object,
  0,
  (RogueInitFn) RogueTable_String_CyProperty___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_CyProperty___init_object,
  (RogueInitFn) RogueCyProperty__init_object,
  (RogueInitFn) RogueTable_Type_Type___init_object,
  0,
  (RogueInitFn) RogueTableEntry_Type_Type___init_object,
  (RogueInitFn) RogueError__init_object,
  (RogueInitFn) RogueRogueError__init_object,
  (RogueInitFn) RoguePreprocessor__init_object,
  (RogueInitFn) RogueTable_String_Token_List___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Token_List___init_object,
  (RogueInitFn) RoguePreprocessorTokenReader__init_object,
  (RogueInitFn) RogueTokenizer__init_object,
  (RogueInitFn) RogueLiteralCharacterToken__init_object,
  (RogueInitFn) RogueLiteralInt64Token__init_object,
  (RogueInitFn) RogueLiteralInt32Token__init_object,
  (RogueInitFn) RogueLiteralReal64Token__init_object,
  (RogueInitFn) RogueStringDataToken__init_object,
  (RogueInitFn) RogueListRewriter_Token___init_object,
  (RogueInitFn) RogueProgram_cy_create_delegates____init_object,
  (RogueInitFn) RogueProgram_cy_on_header_end_Object___init_object,
  (RogueInitFn) RogueProgram_cy_on_code_end_Object___init_object,
  (RogueInitFn) RogueCmdAccess__init_object,
  (RogueInitFn) RogueCmdArgs__init_object,
  (RogueInitFn) RogueCmdNamedArg_List__init_object,
  (RogueInitFn) RogueCmdNamedArg__init_object,
  0,
  (RogueInitFn) RogueFunction_Type_RETURNSLogical__init_object,
  (RogueInitFn) RogueCmdDefaultValue__init_object,
  (RogueInitFn) RogueCmdLiteral__init_object,
  (RogueInitFn) RogueCmdReturn__init_object,
  (RogueInitFn) RogueCmdStatement__init_object,
  (RogueInitFn) RogueScope__init_object,
  (RogueInitFn) RogueCmdControlStructure_List__init_object,
  (RogueInitFn) RogueCmdControlStructure__init_object,
  (RogueInitFn) RogueCmdTaskControlSection__init_object,
  0,
  (RogueInitFn) RogueFunction_431__init_object,
  (RogueInitFn) RogueFunction_432__init_object,
  (RogueInitFn) RogueCPPWriter__init_object,
  (RogueInitFn) RogueInt32_List__init_object,
  0,
  (RogueInitFn) RogueTableValueReader_Type_CyClass___init_object,
  0,
  (RogueInitFn) RogueCyClass_List__init_object,
  0,
  (RogueInitFn) RogueTableValueReader_String_CyProperty___init_object,
  0,
  (RogueInitFn) RogueTableValueReader_String_CyMethod_List___init_object,
  0,
  (RogueInitFn) RogueCyMethod_List_List__init_object,
  0,
  (RogueInitFn) RogueRequirementError__init_object,
  (RogueInitFn) RogueSet_Type___init_object,
  (RogueInitFn) RogueTable_Type_Logical___init_object,
  0,
  (RogueInitFn) RogueTableEntry_Type_Logical___init_object,
  (RogueInitFn) RogueSystem__init_object,
  (RogueInitFn) RogueWeakReference__init_object,
  0,
  (RogueInitFn) RogueReal64Value__init_object,
  (RogueInitFn) RogueNullValue__init_object,
  (RogueInitFn) RogueObjectValue__init_object,
  (RogueInitFn) RogueStringValue__init_object,
  (RogueInitFn) RogueUndefinedValue__init_object,
  (RogueInitFn) RogueFile__init_object,
  (RogueInitFn) RogueFunction_1094__init_object,
  (RogueInitFn) RogueBlockingConsoleIOHandler__init_object,
  (RogueInitFn) RogueCmdMakeRequisite__init_object,
  (RogueInitFn) RogueLineReader__init_object,
  (RogueInitFn) RogueFunction_1125__init_object,
  (RogueInitFn) RogueEOLToken__init_object,
  (RogueInitFn) RogueCmdLiteralLogical__init_object,
  (RogueInitFn) RogueCmdLiteralInt32__init_object,
  (RogueInitFn) RogueCloneArgs__init_object,
  (RogueInitFn) RogueCmdAdd__init_object,
  (RogueInitFn) RogueCmdBinary__init_object,
  (RogueInitFn) RogueCmdNativeHeader__init_object,
  (RogueInitFn) RogueCmdNativeSource__init_object,
  (RogueInitFn) RogueCmdNativeCode__init_object,
  (RogueInitFn) RogueCmdIncludeNative__init_object,
  (RogueInitFn) RogueCmdIf__init_object,
  (RogueInitFn) RogueCmdWhich__init_object,
  (RogueInitFn) RogueCmdWhichCase_List__init_object,
  (RogueInitFn) RogueCmdWhichCase__init_object,
  0,
  (RogueInitFn) RogueCmdBlock__init_object,
  (RogueInitFn) RogueCmdContingent__init_object,
  (RogueInitFn) RogueCmdGenericLoop__init_object,
  (RogueInitFn) RogueCmdTry__init_object,
  (RogueInitFn) RogueCmdCatch_List__init_object,
  (RogueInitFn) RogueCmdCatch__init_object,
  0,
  (RogueInitFn) RogueCmdAwait__init_object,
  (RogueInitFn) RogueCmdYield__init_object,
  (RogueInitFn) RogueCmdThrow__init_object,
  (RogueInitFn) RogueCmdLiteralString__init_object,
  (RogueInitFn) RogueCmdFormattedString__init_object,
  (RogueInitFn) RogueCmdTrace__init_object,
  (RogueInitFn) RogueCmdLocalDeclaration__init_object,
  (RogueInitFn) RogueCmdAssert__init_object,
  (RogueInitFn) RogueCmdEscape__init_object,
  (RogueInitFn) RogueCmdNextIteration__init_object,
  (RogueInitFn) RogueCmdNecessary__init_object,
  (RogueInitFn) RogueCmdSufficient__init_object,
  (RogueInitFn) RogueCmdAdjust__init_object,
  (RogueInitFn) RogueCmdAssign__init_object,
  (RogueInitFn) RogueCmdModifyAndAssign__init_object,
  (RogueInitFn) RogueCmdTryExpression__init_object,
  (RogueInitFn) RogueCmdReadLocal__init_object,
  (RogueInitFn) RogueCmdAdjustLocal__init_object,
  (RogueInitFn) RogueCmdCompareLE__init_object,
  (RogueInitFn) RogueCmdComparison__init_object,
  (RogueInitFn) RogueCmdRange__init_object,
  (RogueInitFn) RogueCmdModifyAndAssignLocal__init_object,
  (RogueInitFn) RogueCmdResolvedModifyAndAssign__init_object,
  (RogueInitFn) RogueCmdRangeUpTo__init_object,
  (RogueInitFn) RogueCmdRangeUpToLessThan__init_object,
  (RogueInitFn) RogueCmdCompareLT__init_object,
  (RogueInitFn) RogueCmdCompareGE__init_object,
  (RogueInitFn) RogueCmdForEach__init_object,
  (RogueInitFn) RogueCmdRangeDownTo__init_object,
  (RogueInitFn) RogueCmdLogicalXor__init_object,
  (RogueInitFn) RogueCmdBinaryLogical__init_object,
  (RogueInitFn) RogueCmdLogicalOr__init_object,
  (RogueInitFn) RogueCmdLogicalAnd__init_object,
  (RogueInitFn) RogueCmdCompareEQ__init_object,
  (RogueInitFn) RogueCmdCompareIsNot__init_object,
  (RogueInitFn) RogueCmdCompareIs__init_object,
  (RogueInitFn) RogueCmdCompareNE__init_object,
  (RogueInitFn) RogueCmdCompareGT__init_object,
  (RogueInitFn) RogueCmdInstanceOf__init_object,
  (RogueInitFn) RogueCmdTypeOperator__init_object,
  (RogueInitFn) RogueCmdLogicalNot__init_object,
  (RogueInitFn) RogueCmdUnary__init_object,
  (RogueInitFn) RogueCmdBitwiseXor__init_object,
  (RogueInitFn) RogueCmdBitwiseOp__init_object,
  (RogueInitFn) RogueCmdBitwiseOr__init_object,
  (RogueInitFn) RogueCmdBitwiseAnd__init_object,
  (RogueInitFn) RogueCmdBitwiseShiftLeft__init_object,
  (RogueInitFn) RogueCmdBitwiseShiftRight__init_object,
  (RogueInitFn) RogueCmdBitwiseShiftRightX__init_object,
  (RogueInitFn) RogueCmdSubtract__init_object,
  (RogueInitFn) RogueCmdMultiply__init_object,
  (RogueInitFn) RogueCmdDivide__init_object,
  (RogueInitFn) RogueCmdMod__init_object,
  (RogueInitFn) RogueCmdPower__init_object,
  (RogueInitFn) RogueCmdNegate__init_object,
  (RogueInitFn) RogueCmdBitwiseNot__init_object,
  (RogueInitFn) RogueCmdLogicalize__init_object,
  (RogueInitFn) RogueCmdIsReference__init_object,
  (RogueInitFn) RogueCmdElementAccess__init_object,
  (RogueInitFn) RogueCmdConvertToType__init_object,
  (RogueInitFn) RogueCmdCreateCallback__init_object,
  (RogueInitFn) RogueCmdAs__init_object,
  (RogueInitFn) RogueFnParam__init_object,
  (RogueInitFn) RogueFnParam_List__init_object,
  0,
  (RogueInitFn) RogueCmdCreateFunction__init_object,
  (RogueInitFn) RogueFnArg_List__init_object,
  (RogueInitFn) RogueFnArg__init_object,
  0,
  (RogueInitFn) RogueCmdLiteralNull__init_object,
  (RogueInitFn) RogueCmdLiteralReal64__init_object,
  (RogueInitFn) RogueCmdLiteralInt64__init_object,
  (RogueInitFn) RogueCmdLiteralCharacter__init_object,
  (RogueInitFn) RogueCmdLiteralThis__init_object,
  (RogueInitFn) RogueCmdThisContext__init_object,
  (RogueInitFn) RogueCmdCreateList__init_object,
  (RogueInitFn) RogueCmdCallPriorMethod__init_object,
  (RogueInitFn) RogueCmdInlineNative__init_object,
  (RogueInitFn) RogueCmdSelect__init_object,
  (RogueInitFn) RogueCmdSelectCase_List__init_object,
  (RogueInitFn) RogueCmdSelectCase__init_object,
  0,
  (RogueInitFn) RogueCmdImplicitIDAccess__init_object,
  (RogueInitFn) RogueCmdImplicitAccess__init_object,
  (RogueInitFn) RogueCmdRequire__init_object,
  (RogueInitFn) RogueCmdEnsure__init_object,
  (RogueInitFn) RogueCmdTypedLiteralList__init_object,
  (RogueInitFn) RogueCmdCreateCompound__init_object,
  (RogueInitFn) RogueVisitor__init_object,
  (RogueInitFn) RogueCmdSwitch__init_object,
  (RogueInitFn) RogueCmdCreateObject__init_object,
  (RogueInitFn) RogueCmdReadSingleton__init_object,
  (RogueInitFn) RogueCmdWriteSingleton__init_object,
  (RogueInitFn) RogueCmdWriteLocal__init_object,
  (RogueInitFn) RogueCmdReadGlobal__init_object,
  (RogueInitFn) RogueCmdWriteGlobal__init_object,
  (RogueInitFn) RogueCmdReadProperty__init_object,
  (RogueInitFn) RogueCmdWriteProperty__init_object,
  (RogueInitFn) RogueCmdCall__init_object,
  (RogueInitFn) RogueCmdCallDynamicMethod__init_object,
  (RogueInitFn) RogueCmdCallMethod__init_object,
  (RogueInitFn) RogueCmdAdjustProperty__init_object,
  (RogueInitFn) RogueCmdAdjustGlobal__init_object,
  (RogueInitFn) RogueCmdModifyAndAssignGlobal__init_object,
  (RogueInitFn) RogueCmdModifyAndAssignProperty__init_object,
  (RogueInitFn) RogueCmdCreateArray__init_object,
  (RogueInitFn) RogueCmdReadArrayElement__init_object,
  (RogueInitFn) RogueCmdReadArrayCount__init_object,
  (RogueInitFn) RogueCmdWriteArrayElement__init_object,
  (RogueInitFn) RogueCmdTaskControl__init_object,
  (RogueInitFn) RogueCmdTaskControlSection_List__init_object,
  0,
  (RogueInitFn) RogueCmdNoAction__init_object,
  (RogueInitFn) RogueListRewriter_Type___init_object,
  (RogueInitFn) RogueUpdateThisTypeVisitor__init_object,
  (RogueInitFn) RogueTable_String_TypeSpecializer___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_TypeSpecializer___init_object,
  (RogueInitFn) RogueCmdCastToType__init_object,
  (RogueInitFn) RogueTraceUsedCodeVisitor__init_object,
  (RogueInitFn) RogueCloneMethodArgs__init_object,
  (RogueInitFn) RogueTaskArgs__init_object,
  (RogueInitFn) RogueToken_List_List__init_object,
  0,
  (RogueInitFn) RogueDirectiveTokenType__init_object,
  (RogueInitFn) RogueStructuralDirectiveTokenType__init_object,
  (RogueInitFn) RogueEOLTokenType__init_object,
  (RogueInitFn) RogueStructureTokenType__init_object,
  (RogueInitFn) RogueNativeCodeTokenType__init_object,
  (RogueInitFn) RogueModifyAndAssignTokenType__init_object,
  (RogueInitFn) RogueFunction_CmdNamedArg_RETURNSLogical__init_object,
  (RogueInitFn) RogueMacroArgs__init_object,
  (RogueInitFn) RogueTable_String_Cmd___init_object,
  0,
  (RogueInitFn) RogueTableEntry_String_Cmd___init_object,
  (RogueInitFn) RogueListRewriter_CmdNamedArg___init_object,
  (RogueInitFn) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object,
  (RogueInitFn) RogueQuicksort_CmdNamedArg___init_object,
  (RogueInitFn) RogueCmdCallInlineNativeRoutine__init_object,
  (RogueInitFn) RogueCmdCallInlineNative__init_object,
  (RogueInitFn) RogueCmdCallNativeRoutine__init_object,
  (RogueInitFn) RogueCmdCallRoutine__init_object,
  (RogueInitFn) RogueCmdCallInlineNativeMethod__init_object,
  (RogueInitFn) RogueCmdCallNativeMethod__init_object,
  (RogueInitFn) RogueCmdCallAspectMethod__init_object,
  (RogueInitFn) RogueCandidateMethods__init_object,
  (RogueInitFn) RogueFunction_2953__init_object,
  (RogueInitFn) RogueFunction_2954__init_object,
  (RogueInitFn) RogueIOError__init_object,
  (RogueInitFn) RogueFileReader__init_object,
  (RogueInitFn) RogueFileWriter__init_object,
  (RogueInitFn) RogueUTF8Reader__init_object,
  (RogueInitFn) RogueQueryToGenericFunctionConversionVisitor__init_object,
  (RogueInitFn) RogueListReader_CmdSelectCase___init_object,
  0,
  (RogueInitFn) RogueCmdCallStaticMethod__init_object,
  (RogueInitFn) RogueNativeCodeToken__init_object,
  (RogueInitFn) RogueContainsImplicitAccessVisitor__init_object,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
};

RogueInitFn Rogue_init_fn_table[] =
{
  0,
  (RogueInitFn) RogueGlobal__init,
  0,
  0,
  (RogueInitFn) RogueStringBuilder__init,
  (RogueInitFn) RogueByte_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueFunction___List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueException__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueString_List__init,
  0,
  0,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RoguePropertyInfo_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueValueTable__init,
  (RogueInitFn) RogueTable_String_Value___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCharacter_List__init,
  0,
  (RogueInitFn) RogueTable_String_String___init,
  (RogueInitFn) RogueTable_String_String___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueStringBuilder__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_TypeInfo___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueConsole__init,
  0,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueSet_String___init,
  (RogueInitFn) RogueTable_String_Logical___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueParser_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueToken_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_TokenType___init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueType_List__init,
  0,
  (RogueInitFn) RogueAttributes__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTypeParameter_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_Int32_Template___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTypeSpecializer_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueDefinition_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Definition___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueProperty_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Property___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueMethod_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueLocal_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueCmdStatementList__init,
  (RogueInitFn) RogueCmd_List__init,
  0,
  (RogueInitFn) RogueCmdLabel_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_CmdLabel___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueMethodTemplate_List__init,
  0,
  0,
  (RogueInitFn) RogueTable_String_Method_List___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Method___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_ParseReader___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Stopwatch___init,
  (RogueInitFn) RogueTable_String_Stopwatch___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RoguePlugin_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTemplate_List__init,
  0,
  (RogueInitFn) RogueTable_String_Template___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Augment_List___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueAugment_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_Type___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Int32___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_String_List___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_Type_CyClass___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_CyMethod_List___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCyMethod_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueTable_String_CyProperty___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_Type_Type___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueException__init,
  (RogueInitFn) RogueException__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Token_List___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdArgs__init,
  (RogueInitFn) RogueCmdNamedArg_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdControlStructure_List__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueInt32_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueCyClass_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueCyMethod_List_List__init,
  0,
  (RogueInitFn) RogueException__init,
  (RogueInitFn) RogueSet_Type___init,
  (RogueInitFn) RogueTable_Type_Logical___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdWhichCase_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdCatch_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueFnParam_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueFnArg_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdSelectCase_List__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueCmdTaskControlSection_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_TypeSpecializer___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueToken_List_List__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueTable_String_Cmd___init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueException__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  (RogueInitFn) RogueObject__init,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
};

RogueCleanUpFn Rogue_clean_up_fn_table[] =
{
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueCleanUpFn) RogueWeakReference__clean_up,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (RogueCleanUpFn) RogueFileReader__clean_up,
  (RogueCleanUpFn) RogueFileWriter__clean_up,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
};

RogueToStringFn Rogue_to_string_fn_table[] =
{
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueStringBuilder__to_String,
  (RogueToStringFn) RogueByte_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  (RogueToStringFn) RogueFunction___List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueException__to_String,
  0,
  (RogueToStringFn) RogueStackTrace__to_String,
  (RogueToStringFn) RogueString_List__to_String,
  0,
  0,
  0,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTypeInfo__to_String,
  (RogueToStringFn) RoguePropertyInfo_List__to_String,
  (RogueToStringFn) RoguePropertyInfo__to_String,
  0,
  (RogueToStringFn) RogueValueTable__to_String,
  (RogueToStringFn) RogueTable_String_Value___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Value___to_String,
  (RogueToStringFn) RogueCharacter_List__to_String,
  0,
  (RogueToStringFn) RogueTable_String_String___to_String,
  (RogueToStringFn) RogueTable_String_String___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_String___to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueStringBuilder__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_TypeInfo___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_TypeInfo___to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueSet_String___to_String,
  (RogueToStringFn) RogueTable_String_Logical___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Logical___to_String,
  (RogueToStringFn) RogueParser_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueToken_List__to_String,
  (RogueToStringFn) RogueToken__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTable_String_TokenType___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_TokenType___to_String,
  0,
  (RogueToStringFn) RogueType__to_String,
  (RogueToStringFn) RogueType_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTypeParameter_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_Int32_Template___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_Int32_Template___to_String,
  (RogueToStringFn) RogueTypeSpecializer_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueDefinition_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_String_Definition___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Definition___to_String,
  (RogueToStringFn) RogueProperty_List__to_String,
  (RogueToStringFn) RogueProperty__to_String,
  0,
  (RogueToStringFn) RogueTable_String_Property___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Property___to_String,
  (RogueToStringFn) RogueMethod_List__to_String,
  (RogueToStringFn) RogueMethod__to_String,
  (RogueToStringFn) RogueLocal_List__to_String,
  (RogueToStringFn) RogueLocal__to_String,
  0,
  (RogueToStringFn) RogueCmd_List__to_String,
  (RogueToStringFn) RogueCmd_List__to_String,
  0,
  (RogueToStringFn) RogueCmdLabel_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_String_CmdLabel___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_CmdLabel___to_String,
  (RogueToStringFn) RogueMethodTemplate__to_String,
  (RogueToStringFn) RogueMethodTemplate_List__to_String,
  0,
  0,
  (RogueToStringFn) RogueTable_String_Method_List___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Method_List___to_String,
  (RogueToStringFn) RogueTable_String_Method___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Method___to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_String_ParseReader___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_ParseReader___to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueStopwatch__to_String,
  (RogueToStringFn) RogueTable_String_Stopwatch___to_String,
  (RogueToStringFn) RogueTable_String_Stopwatch___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Stopwatch___to_String,
  (RogueToStringFn) RoguePlugin_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTemplate_List__to_String,
  0,
  (RogueToStringFn) RogueTable_String_Template___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Template___to_String,
  (RogueToStringFn) RogueTable_String_Augment_List___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Augment_List___to_String,
  (RogueToStringFn) RogueAugment_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueTable_String_Type___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Type___to_String,
  (RogueToStringFn) RogueTable_String_Int32___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Int32___to_String,
  (RogueToStringFn) RogueTable_String_String_List___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_String_List___to_String,
  (RogueToStringFn) RogueTable_Type_CyClass___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_Type_CyClass___to_String,
  (RogueToStringFn) RogueCyClass__to_String,
  (RogueToStringFn) RogueTable_String_CyMethod_List___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_CyMethod_List___to_String,
  (RogueToStringFn) RogueCyMethod_List__to_String,
  (RogueToStringFn) RogueCyMethod__to_String,
  0,
  (RogueToStringFn) RogueTable_String_CyProperty___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_CyProperty___to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_Type_Type___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_Type_Type___to_String,
  (RogueToStringFn) RogueException__to_String,
  (RogueToStringFn) RogueRogueError__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_Token_List___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Token_List___to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueLiteralCharacterToken__to_String,
  (RogueToStringFn) RogueLiteralInt64Token__to_String,
  (RogueToStringFn) RogueLiteralInt32Token__to_String,
  (RogueToStringFn) RogueLiteralReal64Token__to_String,
  (RogueToStringFn) RogueStringDataToken__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdAccess__to_String,
  (RogueToStringFn) RogueCmd_List__to_String,
  (RogueToStringFn) RogueCmdNamedArg_List__to_String,
  (RogueToStringFn) RogueCmdNamedArg__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdReturn__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdControlStructure_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueInt32_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueCyClass_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueCyMethod_List_List__to_String,
  0,
  (RogueToStringFn) RogueException__to_String,
  (RogueToStringFn) RogueSet_Type___to_String,
  (RogueToStringFn) RogueTable_Type_Logical___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_Type_Logical___to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueReal64Value__to_String,
  (RogueToStringFn) RogueNullValue__to_String,
  (RogueToStringFn) RogueObjectValue__to_String,
  (RogueToStringFn) RogueStringValue__to_String,
  (RogueToStringFn) RogueUndefinedValue__to_String,
  (RogueToStringFn) RogueFile__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueEOLToken__to_String,
  (RogueToStringFn) RogueCmdLiteralLogical__to_String,
  (RogueToStringFn) RogueCmdLiteralInt32__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdWhichCase_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCatch_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdLiteralString__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdReadLocal__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdUnary__to_String,
  (RogueToStringFn) RogueCmdUnary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdBinary__to_String,
  (RogueToStringFn) RogueCmdUnary__to_String,
  (RogueToStringFn) RogueCmdUnary__to_String,
  (RogueToStringFn) RogueCmdUnary__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdElementAccess__to_String,
  (RogueToStringFn) RogueCmdConvertToType__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueFnParam_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueFnArg_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueCmdLiteralNull__to_String,
  (RogueToStringFn) RogueCmdLiteralReal64__to_String,
  (RogueToStringFn) RogueCmdLiteralInt64__to_String,
  (RogueToStringFn) RogueCmdLiteralCharacter__to_String,
  (RogueToStringFn) RogueCmdLiteralThis__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdSelectCase_List__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCreateObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallDynamicMethod__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdTaskControlSection_List__to_String,
  0,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_TypeSpecializer___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_TypeSpecializer___to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueToken_List_List__to_String,
  0,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueTokenType__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueTable_String_Cmd___to_String,
  0,
  (RogueToStringFn) RogueTableEntry_String_Cmd___to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCmdCallRoutine__to_String,
  (RogueToStringFn) RogueCmdCallInlineNative__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueCandidateMethods__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueException__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  (RogueToStringFn) RogueCmdCallStaticMethod__to_String,
  (RogueToStringFn) RogueNativeCodeToken__to_String,
  (RogueToStringFn) RogueObject__to_String,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
};

RogueTraceFn Rogue_trace_fn_table[] =
{
  RogueObject_trace,
  RogueGlobal_trace,
  0,
  0,
  RogueStringBuilder_trace,
  RogueByte_List_trace,
  RogueObject_trace,
  0,
  RogueObject_trace,
  RogueObject_trace,
  0,
  0,
  RogueFunction___List_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueException_trace,
  RogueObject_trace,
  RogueStackTrace_trace,
  RogueString_List_trace,
  RogueObject_trace,
  0,
  0,
  0,
  RogueObject_trace,
  RogueTypeInfo_trace,
  RoguePropertyInfo_List_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueValueTable_trace,
  RogueTable_String_Value__trace,
  RogueArray_trace,
  RogueTableEntry_String_Value__trace,
  RogueCharacter_List_trace,
  RogueObject_trace,
  RogueStringTable_String__trace,
  RogueTable_String_String__trace,
  RogueArray_trace,
  RogueTableEntry_String_String__trace,
  RogueStringReader_trace,
  0,
  RogueListReader_String__trace,
  0,
  RoguePrimitiveWorkBuffer_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueTable_String_TypeInfo__trace,
  RogueArray_trace,
  RogueTableEntry_String_TypeInfo__trace,
  RogueConsole_trace,
  0,
  0,
  RogueObject_trace,
  RogueObject_trace,
  RogueRogueC_trace,
  RogueSet_String__trace,
  RogueTable_String_Logical__trace,
  RogueArray_trace,
  RogueTableEntry_String_Logical__trace,
  RogueParser_List_trace,
  RogueParser_trace,
  RogueTokenReader_trace,
  RogueToken_List_trace,
  RogueToken_trace,
  RogueTokenType_trace,
  RogueTable_String_TokenType__trace,
  RogueArray_trace,
  RogueTableEntry_String_TokenType__trace,
  RogueArray_trace,
  RogueType_trace,
  RogueType_List_trace,
  RogueArray_trace,
  RogueAttributes_trace,
  RogueTemplate_trace,
  RogueTypeParameter_List_trace,
  RogueTypeParameter_trace,
  RogueArray_trace,
  RogueTable_Int32_Template__trace,
  RogueArray_trace,
  RogueTableEntry_Int32_Template__trace,
  RogueTypeSpecializer_List_trace,
  RogueTypeSpecializer_trace,
  RogueArray_trace,
  RogueDefinition_List_trace,
  RogueDefinition_trace,
  RogueCmd_trace,
  RogueArray_trace,
  RogueTable_String_Definition__trace,
  RogueArray_trace,
  RogueTableEntry_String_Definition__trace,
  RogueProperty_List_trace,
  RogueProperty_trace,
  RogueArray_trace,
  RogueTable_String_Property__trace,
  RogueArray_trace,
  RogueTableEntry_String_Property__trace,
  RogueMethod_List_trace,
  RogueMethod_trace,
  RogueLocal_List_trace,
  RogueLocal_trace,
  RogueArray_trace,
  RogueCmdStatementList_trace,
  RogueCmd_List_trace,
  RogueArray_trace,
  RogueCmdLabel_List_trace,
  RogueCmdLabel_trace,
  RogueArray_trace,
  RogueTable_String_CmdLabel__trace,
  RogueArray_trace,
  RogueTableEntry_String_CmdLabel__trace,
  RogueMethodTemplate_trace,
  RogueMethodTemplate_List_trace,
  RogueArray_trace,
  RogueArray_trace,
  RogueTable_String_Method_List__trace,
  RogueArray_trace,
  RogueTableEntry_String_Method_List__trace,
  RogueTable_String_Method__trace,
  RogueArray_trace,
  RogueTableEntry_String_Method__trace,
  RogueMethodTemplates_trace,
  RogueArray_trace,
  RogueTable_String_ParseReader__trace,
  RogueArray_trace,
  RogueTableEntry_String_ParseReader__trace,
  RogueParseReader_trace,
  RogueObject_trace,
  RogueStringTable_Stopwatch__trace,
  RogueTable_String_Stopwatch__trace,
  RogueArray_trace,
  RogueTableEntry_String_Stopwatch__trace,
  RoguePlugin_List_trace,
  RoguePlugin_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueArray_trace,
  RogueProgram_trace,
  RogueTemplate_List_trace,
  RogueArray_trace,
  RogueTable_String_Template__trace,
  RogueArray_trace,
  RogueTableEntry_String_Template__trace,
  RogueTable_String_Augment_List__trace,
  RogueArray_trace,
  RogueTableEntry_String_Augment_List__trace,
  RogueAugment_List_trace,
  RogueAugment_trace,
  RogueArray_trace,
  RogueTable_String_Type__trace,
  RogueArray_trace,
  RogueTableEntry_String_Type__trace,
  RogueTable_String_Int32__trace,
  RogueArray_trace,
  RogueTableEntry_String_Int32__trace,
  RogueTable_String_String_List__trace,
  RogueArray_trace,
  RogueTableEntry_String_String_List__trace,
  RogueTable_Type_CyClass__trace,
  RogueArray_trace,
  RogueTableEntry_Type_CyClass__trace,
  RogueCyClass_trace,
  RogueTable_String_CyMethod_List__trace,
  RogueArray_trace,
  RogueTableEntry_String_CyMethod_List__trace,
  RogueCyMethod_List_trace,
  RogueCyMethod_trace,
  RogueArray_trace,
  RogueTable_String_CyProperty__trace,
  RogueArray_trace,
  RogueTableEntry_String_CyProperty__trace,
  RogueCyProperty_trace,
  RogueTable_Type_Type__trace,
  RogueArray_trace,
  RogueTableEntry_Type_Type__trace,
  RogueError_trace,
  RogueRogueError_trace,
  RoguePreprocessor_trace,
  RogueTable_String_Token_List__trace,
  RogueArray_trace,
  RogueTableEntry_String_Token_List__trace,
  RoguePreprocessorTokenReader_trace,
  RogueTokenizer_trace,
  RogueLiteralCharacterToken_trace,
  RogueLiteralInt64Token_trace,
  RogueLiteralInt32Token_trace,
  RogueLiteralReal64Token_trace,
  RogueStringDataToken_trace,
  RogueListRewriter_Token__trace,
  RogueProgram_cy_create_delegates___trace,
  RogueProgram_cy_on_header_end_Object__trace,
  RogueProgram_cy_on_code_end_Object__trace,
  RogueCmdAccess_trace,
  RogueCmdArgs_trace,
  RogueCmdNamedArg_List_trace,
  RogueCmdNamedArg_trace,
  RogueArray_trace,
  RogueObject_trace,
  RogueCmdDefaultValue_trace,
  RogueCmdLiteral_trace,
  RogueCmdReturn_trace,
  RogueCmdStatement_trace,
  RogueScope_trace,
  RogueCmdControlStructure_List_trace,
  RogueCmdControlStructure_trace,
  RogueCmdTaskControlSection_trace,
  RogueArray_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueCPPWriter_trace,
  RogueInt32_List_trace,
  RogueObject_trace,
  RogueTableValueReader_Type_CyClass__trace,
  0,
  RogueCyClass_List_trace,
  RogueArray_trace,
  RogueTableValueReader_String_CyProperty__trace,
  0,
  RogueTableValueReader_String_CyMethod_List__trace,
  0,
  RogueCyMethod_List_List_trace,
  RogueArray_trace,
  RogueRequirementError_trace,
  RogueSet_Type__trace,
  RogueTable_Type_Logical__trace,
  RogueArray_trace,
  RogueTableEntry_Type_Logical__trace,
  RogueObject_trace,
  RogueWeakReference_trace,
  0,
  RogueObject_trace,
  RogueObject_trace,
  RogueObjectValue_trace,
  RogueStringValue_trace,
  RogueObject_trace,
  RogueFile_trace,
  RogueFunction_1094_trace,
  RogueObject_trace,
  RogueCmdMakeRequisite_trace,
  RogueLineReader_trace,
  RogueObject_trace,
  RogueEOLToken_trace,
  RogueCmdLiteralLogical_trace,
  RogueCmdLiteralInt32_trace,
  RogueObject_trace,
  RogueCmdAdd_trace,
  RogueCmdBinary_trace,
  RogueCmdNativeHeader_trace,
  RogueCmdNativeSource_trace,
  RogueCmdNativeCode_trace,
  RogueCmdIncludeNative_trace,
  RogueCmdIf_trace,
  RogueCmdWhich_trace,
  RogueCmdWhichCase_List_trace,
  RogueCmdWhichCase_trace,
  RogueArray_trace,
  RogueCmdBlock_trace,
  RogueCmdContingent_trace,
  RogueCmdGenericLoop_trace,
  RogueCmdTry_trace,
  RogueCmdCatch_List_trace,
  RogueCmdCatch_trace,
  RogueArray_trace,
  RogueCmdAwait_trace,
  RogueCmdYield_trace,
  RogueCmdThrow_trace,
  RogueCmdLiteralString_trace,
  RogueCmdFormattedString_trace,
  RogueCmdTrace_trace,
  RogueCmdLocalDeclaration_trace,
  RogueCmdAssert_trace,
  RogueCmdEscape_trace,
  RogueCmdNextIteration_trace,
  RogueCmdNecessary_trace,
  RogueCmdSufficient_trace,
  RogueCmdAdjust_trace,
  RogueCmdAssign_trace,
  RogueCmdModifyAndAssign_trace,
  RogueCmdTryExpression_trace,
  RogueCmdReadLocal_trace,
  RogueCmdAdjustLocal_trace,
  RogueCmdCompareLE_trace,
  RogueCmdComparison_trace,
  RogueCmdRange_trace,
  RogueCmdModifyAndAssignLocal_trace,
  RogueCmdResolvedModifyAndAssign_trace,
  RogueCmdRangeUpTo_trace,
  RogueCmdRangeUpToLessThan_trace,
  RogueCmdCompareLT_trace,
  RogueCmdCompareGE_trace,
  RogueCmdForEach_trace,
  RogueCmdRangeDownTo_trace,
  RogueCmdLogicalXor_trace,
  RogueCmdBinaryLogical_trace,
  RogueCmdLogicalOr_trace,
  RogueCmdLogicalAnd_trace,
  RogueCmdCompareEQ_trace,
  RogueCmdCompareIsNot_trace,
  RogueCmdCompareIs_trace,
  RogueCmdCompareNE_trace,
  RogueCmdCompareGT_trace,
  RogueCmdInstanceOf_trace,
  RogueCmdTypeOperator_trace,
  RogueCmdLogicalNot_trace,
  RogueCmdUnary_trace,
  RogueCmdBitwiseXor_trace,
  RogueCmdBitwiseOp_trace,
  RogueCmdBitwiseOr_trace,
  RogueCmdBitwiseAnd_trace,
  RogueCmdBitwiseShiftLeft_trace,
  RogueCmdBitwiseShiftRight_trace,
  RogueCmdBitwiseShiftRightX_trace,
  RogueCmdSubtract_trace,
  RogueCmdMultiply_trace,
  RogueCmdDivide_trace,
  RogueCmdMod_trace,
  RogueCmdPower_trace,
  RogueCmdNegate_trace,
  RogueCmdBitwiseNot_trace,
  RogueCmdLogicalize_trace,
  RogueCmdIsReference_trace,
  RogueCmdElementAccess_trace,
  RogueCmdConvertToType_trace,
  RogueCmdCreateCallback_trace,
  RogueCmdAs_trace,
  RogueFnParam_trace,
  RogueFnParam_List_trace,
  RogueArray_trace,
  RogueCmdCreateFunction_trace,
  RogueFnArg_List_trace,
  RogueFnArg_trace,
  RogueArray_trace,
  RogueCmdLiteralNull_trace,
  RogueCmdLiteralReal64_trace,
  RogueCmdLiteralInt64_trace,
  RogueCmdLiteralCharacter_trace,
  RogueCmdLiteralThis_trace,
  RogueCmdThisContext_trace,
  RogueCmdCreateList_trace,
  RogueCmdCallPriorMethod_trace,
  RogueCmdInlineNative_trace,
  RogueCmdSelect_trace,
  RogueCmdSelectCase_List_trace,
  RogueCmdSelectCase_trace,
  RogueArray_trace,
  RogueCmdImplicitIDAccess_trace,
  RogueCmdImplicitAccess_trace,
  RogueCmdRequire_trace,
  RogueCmdEnsure_trace,
  RogueCmdTypedLiteralList_trace,
  RogueCmdCreateCompound_trace,
  RogueObject_trace,
  RogueCmdSwitch_trace,
  RogueCmdCreateObject_trace,
  RogueCmdReadSingleton_trace,
  RogueCmdWriteSingleton_trace,
  RogueCmdWriteLocal_trace,
  RogueCmdReadGlobal_trace,
  RogueCmdWriteGlobal_trace,
  RogueCmdReadProperty_trace,
  RogueCmdWriteProperty_trace,
  RogueCmdCall_trace,
  RogueCmdCallDynamicMethod_trace,
  RogueCmdCallMethod_trace,
  RogueCmdAdjustProperty_trace,
  RogueCmdAdjustGlobal_trace,
  RogueCmdModifyAndAssignGlobal_trace,
  RogueCmdModifyAndAssignProperty_trace,
  RogueCmdCreateArray_trace,
  RogueCmdReadArrayElement_trace,
  RogueCmdReadArrayCount_trace,
  RogueCmdWriteArrayElement_trace,
  RogueCmdTaskControl_trace,
  RogueCmdTaskControlSection_List_trace,
  RogueArray_trace,
  RogueCmdNoAction_trace,
  RogueListRewriter_Type__trace,
  RogueUpdateThisTypeVisitor_trace,
  RogueTable_String_TypeSpecializer__trace,
  RogueArray_trace,
  RogueTableEntry_String_TypeSpecializer__trace,
  RogueCmdCastToType_trace,
  RogueObject_trace,
  RogueCloneMethodArgs_trace,
  RogueTaskArgs_trace,
  RogueToken_List_List_trace,
  RogueArray_trace,
  RogueDirectiveTokenType_trace,
  RogueStructuralDirectiveTokenType_trace,
  RogueEOLTokenType_trace,
  RogueStructureTokenType_trace,
  RogueNativeCodeTokenType_trace,
  RogueModifyAndAssignTokenType_trace,
  RogueObject_trace,
  RogueMacroArgs_trace,
  RogueTable_String_Cmd__trace,
  RogueArray_trace,
  RogueTableEntry_String_Cmd__trace,
  RogueListRewriter_CmdNamedArg__trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueCmdCallInlineNativeRoutine_trace,
  RogueCmdCallInlineNative_trace,
  RogueCmdCallNativeRoutine_trace,
  RogueCmdCallRoutine_trace,
  RogueCmdCallInlineNativeMethod_trace,
  RogueCmdCallNativeMethod_trace,
  RogueCmdCallAspectMethod_trace,
  RogueCandidateMethods_trace,
  RogueObject_trace,
  RogueObject_trace,
  RogueIOError_trace,
  RogueFileReader_trace,
  RogueFileWriter_trace,
  RogueUTF8Reader_trace,
  RogueQueryToGenericFunctionConversionVisitor_trace,
  RogueListReader_CmdSelectCase__trace,
  0,
  RogueCmdCallStaticMethod_trace,
  RogueNativeCodeToken_trace,
  RogueObject_trace,
  0,
  0,
  0,
  0,
  RogueOptionalString_trace,
  RogueOptionalType_trace,
  RogueOptionalMethod_trace,
  RogueOptionalCmd_trace
};

void Rogue_trace()
{
  void* link;
  int i;

  // Trace GLOBAL PROPERTIES
  if ((link=RogueStringBuilder_work_bytes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueRuntime_type_info_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueToken_filepath_to_filename)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_lookup)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_define)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_include)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_if)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_elseIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_else)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_endIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_module)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_essential)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_directive_using)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_placeholder_id)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_begin_augment_tokens)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_augment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_case)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_catch)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_class)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_DEFINITIONS)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_DEPENDENCIES)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_else)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_elseIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endAugment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endBlock)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endClass)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endContingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endForEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endFunction)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endInstance)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endLoop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endRoutine)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endTry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endUnitTest)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endWhich)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_endWhile)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_ENUMERATE)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_GLOBAL)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_includeNativeCode)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_includeNativeHeader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_instance)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_method)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_METHODS)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nativeCode)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nativeHeader)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_others)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_PROPERTIES)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_routine)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_satisfied)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_unsatisfied)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_with)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_comment)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_paren)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_close_specialize)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_eol)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_eoi)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_assert)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_await)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_block)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_contingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_ensure)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeBlock)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeContingent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeForEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeIf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeLoop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeTry)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeWhich)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_escapeWhile)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_forEach)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_function)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_global)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_if)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_in)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_infinity)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_is)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_isReference)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_local)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_loop)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_NaN)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_native)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_necessary)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_noAction)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_null)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_of)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_require)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_return)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_select)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_nextIteration)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_step)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_sufficient)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_throw)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_trace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_trace_args_only)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_try)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_unitTest)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_which)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_while)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_yield)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_identifier)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_type_identifier)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_character)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_integer)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_long)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_real)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_literal_string)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_and)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_as)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_downTo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_false)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_instanceOf)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_meta)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_not)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_or)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_pi)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_prior)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_this)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_true)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_keyword_xor)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ampersand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ampersand_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_double_ampersand)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_arrow)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_at_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_backslash)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_caret)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_caret_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_colon)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_comma)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_compare)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_dot)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_dot_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_downToGreaterThan)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_empty_braces)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_empty_brackets)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_eq)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_exclamation_point)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_fat_arrow)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ge)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_gt)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_le)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_lt)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_minus_minus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_ne)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_brace)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_bracket)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_paren)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_open_specialize)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_percent)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_percent_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_plus_plus)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_question_mark)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_semicolon)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_left)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_right)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_shift_right_x)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_slash)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_slash_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_slash_slash)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_tilde)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_tilde_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_times)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_times_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_upTo)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_upToLessThan)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_vertical_bar)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_vertical_bar_equals)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueTokenType_symbol_double_vertical_bar)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueType_configure_chain)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueType_organize_chain)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueType_resolve_chain)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueCmdStatementList_current)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueStopwatch_stopwatches)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueCyClass_ctypes)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueCyClass_bad_names)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RoguePreprocessor_definitions)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueSystem_command_line_arguments)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueSystem_executable_filepath)) ((RogueObject*)link)->type->trace_fn( link );
  if ((link=RogueStringValue_empty_string)) ((RogueObject*)link)->type->trace_fn( link );

  // Trace Class objects and singletons
  for (i=Rogue_type_count; --i>=0; )
  {
    RogueType* type = &Rogue_types[i];
    if (type->type_info) RogueTypeInfo_trace( type->type_info );
    if (type->_singleton) type->trace_fn( type->_singleton );
  }
}

void* Rogue_dynamic_method_table[] =
{
  (void*) (ROGUEM0) RogueObject__init_object, // Object
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__type_name,
  (void*) (ROGUEM5) RogueGlobal__init_object, // Global
  (void*) (ROGUEM5) RogueGlobal__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM6) RogueGlobal__type_name,
  0, // PrintWriter<<global_output_buffer>>
  0, // PrintWriter
  (void*) (ROGUEM7) RogueStringBuilder__init_object, // StringBuilder
  (void*) (ROGUEM7) RogueStringBuilder__init,
  0,
  (void*) (ROGUEM8) RogueStringBuilder__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM9) RogueStringBuilder__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM9) RogueStringBuilder__type_name,
  (void*) (ROGUEM10) RogueByte_List__init_object, // Byte[]
  (void*) (ROGUEM10) RogueByte_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM11) RogueByte_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM11) RogueByte_List__type_name,
  (void*) (ROGUEM12) RogueGenericList__init_object, // GenericList
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM13) RogueGenericList__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Byte>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Byte___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // NativeArray
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueNativeArray__type_name,
  (void*) (ROGUEM15) RogueFunction___List__init_object, // Function()[]
  (void*) (ROGUEM15) RogueFunction___List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM16) RogueFunction___List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM16) RogueFunction___List__type_name,
  (void*) (ROGUEM17) RogueFunction____init_object, // Function()
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM18) RogueFunction____type_name,
  (void*) (ROGUEM19) RogueFunction____call,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Function()>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Function_____type_name,
  (void*) (ROGUEM20) RogueException__init_object, // Exception
  (void*) (ROGUEM20) RogueException__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM21) RogueException__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM21) RogueException__type_name,
  (void*) (ROGUEM22) RogueException__init__String,
  (void*) (ROGUEM0) RogueObject__init_object, // String
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM23) RogueString__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM24) RogueString__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM24) RogueString__type_name,
  (void*) (ROGUEM25) RogueStackTrace__init_object, // StackTrace
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM26) RogueStackTrace__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM26) RogueStackTrace__type_name,
  (void*) (ROGUEM27) RogueString_List__init_object, // String[]
  (void*) (ROGUEM27) RogueString_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM28) RogueString_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM28) RogueString_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<String>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_String___type_name,
  (void*) (ROGUEM29) RogueValue__init_object, // Value
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM30) RogueValue__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM31) RogueValue__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_logical,
  (void*) (ROGUEM32) RogueValue__is_null,
  (void*) (ROGUEM32) RogueValue__is_non_null,
  (void*) (ROGUEM32) RogueValue__is_number,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_string,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM33) RogueValue__operatorEQUALSEQUALS__Value,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM34) RogueValue__to_Int32,
  (void*) (ROGUEM32) RogueValue__to_Logical,
  (void*) (ROGUEM35) RogueValue__to_Real64,
  (void*) (ROGUEM36) RogueTypeInfo__init_object, // TypeInfo
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM37) RogueTypeInfo__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM37) RogueTypeInfo__type_name,
  (void*) (ROGUEM38) RoguePropertyInfo_List__init_object, // PropertyInfo[]
  (void*) (ROGUEM38) RoguePropertyInfo_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM39) RoguePropertyInfo_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM39) RoguePropertyInfo_List__type_name,
  (void*) (ROGUEM40) RoguePropertyInfo__init_object, // PropertyInfo
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM41) RoguePropertyInfo__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM41) RoguePropertyInfo__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<PropertyInfo>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_PropertyInfo___type_name,
  (void*) (ROGUEM42) RogueValueTable__init_object, // ValueTable
  (void*) (ROGUEM42) RogueValueTable__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM30) RogueValue__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM43) RogueValueTable__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM43) RogueValueTable__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM44) RogueValueTable__get__String,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_logical,
  (void*) (ROGUEM32) RogueValue__is_null,
  (void*) (ROGUEM32) RogueValue__is_non_null,
  (void*) (ROGUEM32) RogueValue__is_number,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_string,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM33) RogueValue__operatorEQUALSEQUALS__Value,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM45) RogueValueTable__set__String_Value,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM34) RogueValue__to_Int32,
  (void*) (ROGUEM46) RogueValueTable__to_Logical,
  (void*) (ROGUEM35) RogueValue__to_Real64,
  (void*) (ROGUEM47) RogueTable_String_Value___init_object, // Table<<String,Value>>
  (void*) (ROGUEM47) RogueTable_String_Value___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM48) RogueTable_String_Value___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM48) RogueTable_String_Value___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Value>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Value____type_name,
  (void*) (ROGUEM49) RogueTableEntry_String_Value___init_object, // TableEntry<<String,Value>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM50) RogueTableEntry_String_Value___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM50) RogueTableEntry_String_Value___type_name,
  (void*) (ROGUEM51) RogueCharacter_List__init_object, // Character[]
  (void*) (ROGUEM51) RogueCharacter_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM52) RogueCharacter_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM52) RogueCharacter_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Character>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Character___type_name,
  (void*) (ROGUEM53) RogueStringTable_String___init_object, // StringTable<<String>>
  (void*) (ROGUEM54) RogueTable_String_String___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM55) RogueTable_String_String___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM56) RogueStringTable_String___type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM57) RogueTable_String_String___get__String,
  (void*) (ROGUEM54) RogueTable_String_String___init_object, // Table<<String,String>>
  (void*) (ROGUEM54) RogueTable_String_String___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM55) RogueTable_String_String___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM55) RogueTable_String_String___type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM57) RogueTable_String_String___get__String,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,String>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_String____type_name,
  (void*) (ROGUEM58) RogueTableEntry_String_String___init_object, // TableEntry<<String,String>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM59) RogueTableEntry_String_String___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM59) RogueTableEntry_String_String___type_name,
  (void*) (ROGUEM60) RogueStringReader__init_object, // StringReader
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM61) RogueStringReader__type_name,
  0, // Reader<<Character>>
  (void*) (ROGUEM62) RogueListReader_String___init_object, // ListReader<<String>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM63) RogueListReader_String___type_name,
  0, // Reader<<String>>
  (void*) (ROGUEM64) RoguePrimitiveWorkBuffer__init_object, // PrimitiveWorkBuffer
  (void*) (ROGUEM7) RogueStringBuilder__init,
  0,
  (void*) (ROGUEM8) RogueStringBuilder__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM9) RogueStringBuilder__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM65) RoguePrimitiveWorkBuffer__type_name,
  (void*) (ROGUEM66) RogueMath__init_object, // Math
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM67) RogueMath__type_name,
  (void*) (ROGUEM68) RogueRuntime__init_object, // Runtime
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM69) RogueRuntime__type_name,
  (void*) (ROGUEM70) RogueTable_String_TypeInfo___init_object, // Table<<String,TypeInfo>>
  (void*) (ROGUEM70) RogueTable_String_TypeInfo___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueTable_String_TypeInfo___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM71) RogueTable_String_TypeInfo___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,TypeInfo>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_TypeInfo____type_name,
  (void*) (ROGUEM72) RogueTableEntry_String_TypeInfo___init_object, // TableEntry<<String,TypeInfo>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM73) RogueTableEntry_String_TypeInfo___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM73) RogueTableEntry_String_TypeInfo___type_name,
  (void*) (ROGUEM74) RogueConsole__init_object, // Console
  (void*) (ROGUEM74) RogueConsole__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM75) RogueConsole__type_name,
  0, // Reader<<Byte>>
  0, // PrintWriter<<output_buffer>>
  (void*) (ROGUEM76) RogueConsoleIOHandler__init_object, // ConsoleIOHandler
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM77) RogueConsoleIOHandler__type_name,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM81) RogueFunction_161__init_object, // Function_161
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM82) RogueFunction_161__type_name,
  (void*) (ROGUEM83) RogueFunction_161__call,
  (void*) (ROGUEM84) RogueRogueC__init_object, // RogueC
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM85) RogueRogueC__type_name,
  (void*) (ROGUEM86) RogueSet_String___init_object, // Set<<String>>
  (void*) (ROGUEM86) RogueSet_String___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM87) RogueSet_String___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM87) RogueSet_String___type_name,
  (void*) (ROGUEM88) RogueTable_String_Logical___init_object, // Table<<String,Logical>>
  (void*) (ROGUEM88) RogueTable_String_Logical___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM89) RogueTable_String_Logical___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM89) RogueTable_String_Logical___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Logical>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Logical____type_name,
  (void*) (ROGUEM90) RogueTableEntry_String_Logical___init_object, // TableEntry<<String,Logical>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM91) RogueTableEntry_String_Logical___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM91) RogueTableEntry_String_Logical___type_name,
  (void*) (ROGUEM92) RogueParser_List__init_object, // Parser[]
  (void*) (ROGUEM92) RogueParser_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM93) RogueParser_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM93) RogueParser_List__type_name,
  (void*) (ROGUEM94) RogueParser__init_object, // Parser
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM95) RogueParser__type_name,
  (void*) (ROGUEM96) RogueTokenReader__init_object, // TokenReader
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM97) RogueTokenReader__type_name,
  (void*) (ROGUEM98) RogueToken_List__init_object, // Token[]
  (void*) (ROGUEM98) RogueToken_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM99) RogueToken_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM99) RogueToken_List__type_name,
  (void*) (ROGUEM100) RogueToken__init_object, // Token
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM101) RogueToken__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM101) RogueToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM101) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM102) RogueToken__to_Character,
  (void*) (ROGUEM103) RogueToken__to_Int32,
  (void*) (ROGUEM104) RogueToken__to_Int64,
  (void*) (ROGUEM105) RogueToken__to_Real64,
  (void*) (ROGUEM106) RogueToken__to_Type,
  (void*) (ROGUEM107) RogueTokenType__init_object, // TokenType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueTokenType__type_name,
  0,
  (void*) (ROGUEM109) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM110) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM111) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM112) RogueTokenType__is_directive,
  (void*) (ROGUEM112) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM112) RogueTokenType__is_structure,
  (void*) (ROGUEM113) RogueTable_String_TokenType___init_object, // Table<<String,TokenType>>
  (void*) (ROGUEM113) RogueTable_String_TokenType___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM114) RogueTable_String_TokenType___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM114) RogueTable_String_TokenType___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,TokenType>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_TokenType____type_name,
  (void*) (ROGUEM115) RogueTableEntry_String_TokenType___init_object, // TableEntry<<String,TokenType>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM116) RogueTableEntry_String_TokenType___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM116) RogueTableEntry_String_TokenType___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Token>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Token___type_name,
  (void*) (ROGUEM117) RogueType__init_object, // Type
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM118) RogueType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM118) RogueType__type_name,
  (void*) (ROGUEM119) RogueType_List__init_object, // Type[]
  (void*) (ROGUEM119) RogueType_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM120) RogueType_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM120) RogueType_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Type>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Type___type_name,
  (void*) (ROGUEM121) RogueAttributes__init_object, // Attributes
  (void*) (ROGUEM121) RogueAttributes__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM122) RogueAttributes__type_name,
  (void*) (ROGUEM123) RogueTemplate__init_object, // Template
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM124) RogueTemplate__type_name,
  (void*) (ROGUEM125) RogueTypeParameter_List__init_object, // TypeParameter[]
  (void*) (ROGUEM125) RogueTypeParameter_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM126) RogueTypeParameter_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM126) RogueTypeParameter_List__type_name,
  (void*) (ROGUEM127) RogueTypeParameter__init_object, // TypeParameter
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM128) RogueTypeParameter__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TypeParameter>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TypeParameter___type_name,
  (void*) (ROGUEM129) RogueTable_Int32_Template___init_object, // Table<<Int32,Template>>
  (void*) (ROGUEM129) RogueTable_Int32_Template___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM130) RogueTable_Int32_Template___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM130) RogueTable_Int32_Template___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<Int32,Template>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_Int32_Template____type_name,
  (void*) (ROGUEM131) RogueTableEntry_Int32_Template___init_object, // TableEntry<<Int32,Template>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM132) RogueTableEntry_Int32_Template___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM132) RogueTableEntry_Int32_Template___type_name,
  (void*) (ROGUEM133) RogueTypeSpecializer_List__init_object, // TypeSpecializer[]
  (void*) (ROGUEM133) RogueTypeSpecializer_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM134) RogueTypeSpecializer_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM134) RogueTypeSpecializer_List__type_name,
  (void*) (ROGUEM135) RogueTypeSpecializer__init_object, // TypeSpecializer
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM136) RogueTypeSpecializer__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TypeSpecializer>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TypeSpecializer___type_name,
  (void*) (ROGUEM137) RogueDefinition_List__init_object, // Definition[]
  (void*) (ROGUEM137) RogueDefinition_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueDefinition_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM138) RogueDefinition_List__type_name,
  (void*) (ROGUEM139) RogueDefinition__init_object, // Definition
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM140) RogueDefinition__type_name,
  (void*) (ROGUEM141) RogueCmd__init_object, // Cmd
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM142) RogueCmd__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM148) RogueCmd__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Definition>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Definition___type_name,
  (void*) (ROGUEM158) RogueTable_String_Definition___init_object, // Table<<String,Definition>>
  (void*) (ROGUEM158) RogueTable_String_Definition___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM159) RogueTable_String_Definition___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM159) RogueTable_String_Definition___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Definition>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Definition____type_name,
  (void*) (ROGUEM160) RogueTableEntry_String_Definition___init_object, // TableEntry<<String,Definition>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM161) RogueTableEntry_String_Definition___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM161) RogueTableEntry_String_Definition___type_name,
  (void*) (ROGUEM162) RogueProperty_List__init_object, // Property[]
  (void*) (ROGUEM162) RogueProperty_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM163) RogueProperty_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM163) RogueProperty_List__type_name,
  (void*) (ROGUEM164) RogueProperty__init_object, // Property
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM165) RogueProperty__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM165) RogueProperty__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Property>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Property___type_name,
  (void*) (ROGUEM166) RogueTable_String_Property___init_object, // Table<<String,Property>>
  (void*) (ROGUEM166) RogueTable_String_Property___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM167) RogueTable_String_Property___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM167) RogueTable_String_Property___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Property>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Property____type_name,
  (void*) (ROGUEM168) RogueTableEntry_String_Property___init_object, // TableEntry<<String,Property>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM169) RogueTableEntry_String_Property___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM169) RogueTableEntry_String_Property___type_name,
  (void*) (ROGUEM170) RogueMethod_List__init_object, // Method[]
  (void*) (ROGUEM170) RogueMethod_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM171) RogueMethod_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM171) RogueMethod_List__type_name,
  (void*) (ROGUEM172) RogueMethod__init_object, // Method
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM173) RogueMethod__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM173) RogueMethod__type_name,
  (void*) (ROGUEM174) RogueLocal_List__init_object, // Local[]
  (void*) (ROGUEM174) RogueLocal_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM175) RogueLocal_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM175) RogueLocal_List__type_name,
  (void*) (ROGUEM176) RogueLocal__init_object, // Local
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM177) RogueLocal__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM177) RogueLocal__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Local>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Local___type_name,
  (void*) (ROGUEM178) RogueCmdStatementList__init_object, // CmdStatementList
  (void*) (ROGUEM178) RogueCmdStatementList__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM179) RogueCmd_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM180) RogueCmdStatementList__type_name,
  (void*) (ROGUEM181) RogueCmdStatementList__init__Int32,
  (void*) (ROGUEM182) RogueCmd_List__init_object, // Cmd[]
  (void*) (ROGUEM182) RogueCmd_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM179) RogueCmd_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM179) RogueCmd_List__type_name,
  (void*) (ROGUEM183) RogueCmd_List__init__Int32,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Cmd>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Cmd___type_name,
  (void*) (ROGUEM184) RogueCmdLabel_List__init_object, // CmdLabel[]
  (void*) (ROGUEM184) RogueCmdLabel_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM185) RogueCmdLabel_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM185) RogueCmdLabel_List__type_name,
  (void*) (ROGUEM186) RogueCmdLabel__init_object, // CmdLabel
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM187) RogueCmdLabel__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM188) RogueCmdLabel__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM189) RogueCmdLabel__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM190) RogueCmdLabel__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM190) RogueCmdLabel__requires_semicolon,
  (void*) (ROGUEM191) RogueCmdLabel__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM192) RogueCmdLabel__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CmdLabel>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CmdLabel___type_name,
  (void*) (ROGUEM193) RogueTable_String_CmdLabel___init_object, // Table<<String,CmdLabel>>
  (void*) (ROGUEM193) RogueTable_String_CmdLabel___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM194) RogueTable_String_CmdLabel___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM194) RogueTable_String_CmdLabel___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,CmdLabel>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_CmdLabel____type_name,
  (void*) (ROGUEM195) RogueTableEntry_String_CmdLabel___init_object, // TableEntry<<String,CmdLabel>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM196) RogueTableEntry_String_CmdLabel___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM196) RogueTableEntry_String_CmdLabel___type_name,
  (void*) (ROGUEM197) RogueMethodTemplate__init_object, // MethodTemplate
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM198) RogueMethodTemplate__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM198) RogueMethodTemplate__type_name,
  (void*) (ROGUEM199) RogueMethodTemplate_List__init_object, // MethodTemplate[]
  (void*) (ROGUEM199) RogueMethodTemplate_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM200) RogueMethodTemplate_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM200) RogueMethodTemplate_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<MethodTemplate>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_MethodTemplate___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Method>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Method___type_name,
  (void*) (ROGUEM201) RogueTable_String_Method_List___init_object, // Table<<String,Method[]>>
  (void*) (ROGUEM201) RogueTable_String_Method_List___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM202) RogueTable_String_Method_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM202) RogueTable_String_Method_List___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Method[]>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Method_List____type_name,
  (void*) (ROGUEM203) RogueTableEntry_String_Method_List___init_object, // TableEntry<<String,Method[]>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM204) RogueTableEntry_String_Method_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM204) RogueTableEntry_String_Method_List___type_name,
  (void*) (ROGUEM205) RogueTable_String_Method___init_object, // Table<<String,Method>>
  (void*) (ROGUEM205) RogueTable_String_Method___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM206) RogueTable_String_Method___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM206) RogueTable_String_Method___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Method>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Method____type_name,
  (void*) (ROGUEM207) RogueTableEntry_String_Method___init_object, // TableEntry<<String,Method>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM208) RogueTableEntry_String_Method___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM208) RogueTableEntry_String_Method___type_name,
  (void*) (ROGUEM209) RogueMethodTemplates__init_object, // MethodTemplates
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM210) RogueMethodTemplates__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Parser>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Parser___type_name,
  (void*) (ROGUEM211) RogueTable_String_ParseReader___init_object, // Table<<String,ParseReader>>
  (void*) (ROGUEM211) RogueTable_String_ParseReader___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM212) RogueTable_String_ParseReader___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM212) RogueTable_String_ParseReader___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,ParseReader>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_ParseReader____type_name,
  (void*) (ROGUEM213) RogueTableEntry_String_ParseReader___init_object, // TableEntry<<String,ParseReader>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM214) RogueTableEntry_String_ParseReader___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM214) RogueTableEntry_String_ParseReader___type_name,
  (void*) (ROGUEM215) RogueParseReader__init_object, // ParseReader
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM216) RogueParseReader__type_name,
  (void*) (ROGUEM217) RogueStopwatch__init_object, // Stopwatch
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM218) RogueStopwatch__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM218) RogueStopwatch__type_name,
  (void*) (ROGUEM219) RogueStringTable_Stopwatch___init_object, // StringTable<<Stopwatch>>
  (void*) (ROGUEM220) RogueTable_String_Stopwatch___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM221) RogueTable_String_Stopwatch___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM222) RogueStringTable_Stopwatch___type_name,
  (void*) (ROGUEM220) RogueTable_String_Stopwatch___init_object, // Table<<String,Stopwatch>>
  (void*) (ROGUEM220) RogueTable_String_Stopwatch___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM221) RogueTable_String_Stopwatch___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM221) RogueTable_String_Stopwatch___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Stopwatch>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Stopwatch____type_name,
  (void*) (ROGUEM223) RogueTableEntry_String_Stopwatch___init_object, // TableEntry<<String,Stopwatch>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM224) RogueTableEntry_String_Stopwatch___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM224) RogueTableEntry_String_Stopwatch___type_name,
  (void*) (ROGUEM225) RoguePlugin_List__init_object, // Plugin[]
  (void*) (ROGUEM225) RoguePlugin_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM226) RoguePlugin_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM226) RoguePlugin_List__type_name,
  (void*) (ROGUEM227) RoguePlugin__init_object, // Plugin
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM228) RoguePlugin__type_name,
  (void*) (ROGUEM229) RogueFunction__RETURNSLogical__init_object, // Function()->Logical
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM230) RogueFunction__RETURNSLogical__type_name,
  (void*) (ROGUEM231) RogueFunction__RETURNSLogical__call,
  (void*) (ROGUEM232) RogueFunction_Object___init_object, // Function(Object)
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM233) RogueFunction_Object___type_name,
  (void*) (ROGUEM234) RogueFunction_Object___call__Object,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Plugin>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Plugin___type_name,
  (void*) (ROGUEM235) RogueProgram__init_object, // Program
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM236) RogueProgram__type_name,
  (void*) (ROGUEM237) RogueTemplate_List__init_object, // Template[]
  (void*) (ROGUEM237) RogueTemplate_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM238) RogueTemplate_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM238) RogueTemplate_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Template>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Template___type_name,
  (void*) (ROGUEM239) RogueTable_String_Template___init_object, // Table<<String,Template>>
  (void*) (ROGUEM239) RogueTable_String_Template___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM240) RogueTable_String_Template___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM240) RogueTable_String_Template___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Template>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Template____type_name,
  (void*) (ROGUEM241) RogueTableEntry_String_Template___init_object, // TableEntry<<String,Template>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM242) RogueTableEntry_String_Template___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM242) RogueTableEntry_String_Template___type_name,
  (void*) (ROGUEM243) RogueTable_String_Augment_List___init_object, // Table<<String,Augment[]>>
  (void*) (ROGUEM243) RogueTable_String_Augment_List___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM244) RogueTable_String_Augment_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM244) RogueTable_String_Augment_List___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Augment[]>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Augment_List____type_name,
  (void*) (ROGUEM245) RogueTableEntry_String_Augment_List___init_object, // TableEntry<<String,Augment[]>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM246) RogueTableEntry_String_Augment_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM246) RogueTableEntry_String_Augment_List___type_name,
  (void*) (ROGUEM247) RogueAugment_List__init_object, // Augment[]
  (void*) (ROGUEM247) RogueAugment_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM248) RogueAugment_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM248) RogueAugment_List__type_name,
  (void*) (ROGUEM249) RogueAugment__init_object, // Augment
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM250) RogueAugment__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Augment>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Augment___type_name,
  (void*) (ROGUEM251) RogueTable_String_Type___init_object, // Table<<String,Type>>
  (void*) (ROGUEM251) RogueTable_String_Type___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM252) RogueTable_String_Type___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM252) RogueTable_String_Type___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Type>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Type____type_name,
  (void*) (ROGUEM253) RogueTableEntry_String_Type___init_object, // TableEntry<<String,Type>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM254) RogueTableEntry_String_Type___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM254) RogueTableEntry_String_Type___type_name,
  (void*) (ROGUEM255) RogueTable_String_Int32___init_object, // Table<<String,Int32>>
  (void*) (ROGUEM255) RogueTable_String_Int32___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM256) RogueTable_String_Int32___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM256) RogueTable_String_Int32___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Int32>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Int32____type_name,
  (void*) (ROGUEM257) RogueTableEntry_String_Int32___init_object, // TableEntry<<String,Int32>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM258) RogueTableEntry_String_Int32___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM258) RogueTableEntry_String_Int32___type_name,
  (void*) (ROGUEM259) RogueTable_String_String_List___init_object, // Table<<String,String[]>>
  (void*) (ROGUEM259) RogueTable_String_String_List___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM260) RogueTable_String_String_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM260) RogueTable_String_String_List___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,String[]>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_String_List____type_name,
  (void*) (ROGUEM261) RogueTableEntry_String_String_List___init_object, // TableEntry<<String,String[]>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM262) RogueTableEntry_String_String_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM262) RogueTableEntry_String_String_List___type_name,
  (void*) (ROGUEM263) RogueTable_Type_CyClass___init_object, // Table<<Type,CyClass>>
  (void*) (ROGUEM263) RogueTable_Type_CyClass___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM264) RogueTable_Type_CyClass___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM264) RogueTable_Type_CyClass___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<Type,CyClass>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_Type_CyClass____type_name,
  (void*) (ROGUEM265) RogueTableEntry_Type_CyClass___init_object, // TableEntry<<Type,CyClass>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM266) RogueTableEntry_Type_CyClass___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM266) RogueTableEntry_Type_CyClass___type_name,
  (void*) (ROGUEM267) RogueCyClass__init_object, // CyClass
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM268) RogueCyClass__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM268) RogueCyClass__type_name,
  (void*) (ROGUEM269) RogueTable_String_CyMethod_List___init_object, // Table<<String,CyMethod[]>>
  (void*) (ROGUEM269) RogueTable_String_CyMethod_List___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM270) RogueTable_String_CyMethod_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM270) RogueTable_String_CyMethod_List___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,CyMethod[]>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_CyMethod_List____type_name,
  (void*) (ROGUEM271) RogueTableEntry_String_CyMethod_List___init_object, // TableEntry<<String,CyMethod[]>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM272) RogueTableEntry_String_CyMethod_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM272) RogueTableEntry_String_CyMethod_List___type_name,
  (void*) (ROGUEM273) RogueCyMethod_List__init_object, // CyMethod[]
  (void*) (ROGUEM273) RogueCyMethod_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM274) RogueCyMethod_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM274) RogueCyMethod_List__type_name,
  (void*) (ROGUEM275) RogueCyMethod__init_object, // CyMethod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM276) RogueCyMethod__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM277) RogueCyMethod__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM277) RogueCyMethod__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CyMethod>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CyMethod___type_name,
  (void*) (ROGUEM278) RogueTable_String_CyProperty___init_object, // Table<<String,CyProperty>>
  (void*) (ROGUEM278) RogueTable_String_CyProperty___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM279) RogueTable_String_CyProperty___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM279) RogueTable_String_CyProperty___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,CyProperty>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_CyProperty____type_name,
  (void*) (ROGUEM280) RogueTableEntry_String_CyProperty___init_object, // TableEntry<<String,CyProperty>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM281) RogueTableEntry_String_CyProperty___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM281) RogueTableEntry_String_CyProperty___type_name,
  (void*) (ROGUEM282) RogueCyProperty__init_object, // CyProperty
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM283) RogueCyProperty__type_name,
  (void*) (ROGUEM284) RogueTable_Type_Type___init_object, // Table<<Type,Type>>
  (void*) (ROGUEM284) RogueTable_Type_Type___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM285) RogueTable_Type_Type___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM285) RogueTable_Type_Type___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<Type,Type>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_Type_Type____type_name,
  (void*) (ROGUEM286) RogueTableEntry_Type_Type___init_object, // TableEntry<<Type,Type>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM287) RogueTableEntry_Type_Type___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM287) RogueTableEntry_Type_Type___type_name,
  (void*) (ROGUEM288) RogueError__init_object, // Error
  (void*) (ROGUEM20) RogueException__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM21) RogueException__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM289) RogueError__type_name,
  (void*) (ROGUEM22) RogueException__init__String,
  (void*) (ROGUEM290) RogueRogueError__init_object, // RogueError
  (void*) (ROGUEM20) RogueException__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM291) RogueRogueError__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM291) RogueRogueError__type_name,
  (void*) (ROGUEM22) RogueException__init__String,
  (void*) (ROGUEM292) RoguePreprocessor__init_object, // Preprocessor
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM293) RoguePreprocessor__type_name,
  (void*) (ROGUEM294) RogueTable_String_Token_List___init_object, // Table<<String,Token[]>>
  (void*) (ROGUEM294) RogueTable_String_Token_List___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM295) RogueTable_String_Token_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM295) RogueTable_String_Token_List___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Token[]>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Token_List____type_name,
  (void*) (ROGUEM296) RogueTableEntry_String_Token_List___init_object, // TableEntry<<String,Token[]>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM297) RogueTableEntry_String_Token_List___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM297) RogueTableEntry_String_Token_List___type_name,
  (void*) (ROGUEM298) RoguePreprocessorTokenReader__init_object, // PreprocessorTokenReader
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM299) RoguePreprocessorTokenReader__type_name,
  (void*) (ROGUEM300) RogueTokenizer__init_object, // Tokenizer
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM301) RogueTokenizer__type_name,
  (void*) (ROGUEM302) RogueLiteralCharacterToken__init_object, // LiteralCharacterToken
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM303) RogueLiteralCharacterToken__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM303) RogueLiteralCharacterToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM101) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM304) RogueLiteralCharacterToken__to_Character,
  (void*) (ROGUEM103) RogueToken__to_Int32,
  (void*) (ROGUEM104) RogueToken__to_Int64,
  (void*) (ROGUEM105) RogueToken__to_Real64,
  (void*) (ROGUEM106) RogueToken__to_Type,
  (void*) (ROGUEM305) RogueLiteralInt64Token__init_object, // LiteralInt64Token
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM306) RogueLiteralInt64Token__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM306) RogueLiteralInt64Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM101) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM102) RogueToken__to_Character,
  (void*) (ROGUEM307) RogueLiteralInt64Token__to_Int32,
  (void*) (ROGUEM308) RogueLiteralInt64Token__to_Int64,
  (void*) (ROGUEM309) RogueLiteralInt64Token__to_Real64,
  (void*) (ROGUEM106) RogueToken__to_Type,
  (void*) (ROGUEM310) RogueLiteralInt32Token__init_object, // LiteralInt32Token
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM311) RogueLiteralInt32Token__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM311) RogueLiteralInt32Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM101) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM102) RogueToken__to_Character,
  (void*) (ROGUEM312) RogueLiteralInt32Token__to_Int32,
  (void*) (ROGUEM104) RogueToken__to_Int64,
  (void*) (ROGUEM313) RogueLiteralInt32Token__to_Real64,
  (void*) (ROGUEM106) RogueToken__to_Type,
  (void*) (ROGUEM314) RogueLiteralReal64Token__init_object, // LiteralReal64Token
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM315) RogueLiteralReal64Token__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM315) RogueLiteralReal64Token__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM101) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM102) RogueToken__to_Character,
  (void*) (ROGUEM316) RogueLiteralReal64Token__to_Int32,
  (void*) (ROGUEM104) RogueToken__to_Int64,
  (void*) (ROGUEM317) RogueLiteralReal64Token__to_Real64,
  (void*) (ROGUEM106) RogueToken__to_Type,
  (void*) (ROGUEM318) RogueStringDataToken__init_object, // StringDataToken
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM319) RogueStringDataToken__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM319) RogueStringDataToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM319) RogueStringDataToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM102) RogueToken__to_Character,
  (void*) (ROGUEM103) RogueToken__to_Int32,
  (void*) (ROGUEM104) RogueToken__to_Int64,
  (void*) (ROGUEM105) RogueToken__to_Real64,
  (void*) (ROGUEM106) RogueToken__to_Type,
  (void*) (ROGUEM320) RogueListRewriter_Token___init_object, // ListRewriter<<Token>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM321) RogueListRewriter_Token___type_name,
  (void*) (ROGUEM322) RogueProgram_cy_create_delegates____init_object, // Program.cy_create_delegates()
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM323) RogueProgram_cy_create_delegates____type_name,
  (void*) (ROGUEM324) RogueProgram_cy_create_delegates____call,
  (void*) (ROGUEM325) RogueProgram_cy_on_header_end_Object___init_object, // Program.cy_on_header_end(Object)
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM326) RogueProgram_cy_on_header_end_Object___type_name,
  (void*) (ROGUEM327) RogueProgram_cy_on_header_end_Object___call__Object,
  (void*) (ROGUEM328) RogueProgram_cy_on_code_end_Object___init_object, // Program.cy_on_code_end(Object)
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM329) RogueProgram_cy_on_code_end_Object___type_name,
  (void*) (ROGUEM330) RogueProgram_cy_on_code_end_Object___call__Object,
  (void*) (ROGUEM331) RogueCmdAccess__init_object, // CmdAccess
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM332) RogueCmdAccess__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM332) RogueCmdAccess__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM333) RogueCmdAccess__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM334) RogueCmdAccess__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM335) RogueCmdAccess__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM336) RogueCmdAccess__resolve__Scope,
  (void*) (ROGUEM337) RogueCmdAccess__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM338) RogueCmdAccess__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM339) Rogue_CmdAccess__type,
  (void*) (ROGUEM340) RogueCmdAccess__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM341) RogueCmdArgs__init_object, // CmdArgs
  (void*) (ROGUEM341) RogueCmdArgs__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM179) RogueCmd_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM342) RogueCmdArgs__type_name,
  (void*) (ROGUEM343) RogueCmdArgs__init__Int32,
  0,
  0,
  0,
  (void*) (ROGUEM341) RogueCmdArgs__cloned,
  (void*) (ROGUEM344) RogueCmdNamedArg_List__init_object, // CmdNamedArg[]
  (void*) (ROGUEM344) RogueCmdNamedArg_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM345) RogueCmdNamedArg_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM345) RogueCmdNamedArg_List__type_name,
  (void*) (ROGUEM346) RogueCmdNamedArg__init_object, // CmdNamedArg
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM347) RogueCmdNamedArg__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM347) RogueCmdNamedArg__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM348) RogueCmdNamedArg__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM349) RogueCmdNamedArg__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CmdNamedArg>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CmdNamedArg___type_name,
  (void*) (ROGUEM350) RogueFunction_Type_RETURNSLogical__init_object, // Function(Type)->Logical
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM351) RogueFunction_Type_RETURNSLogical__type_name,
  (void*) (ROGUEM352) RogueFunction_Type_RETURNSLogical__call__Type,
  (void*) (ROGUEM353) RogueCmdDefaultValue__init_object, // CmdDefaultValue
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM354) RogueCmdDefaultValue__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM355) RogueCmdDefaultValue__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM356) RogueCmdDefaultValue__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM359) RogueCmdDefaultValue__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM360) Rogue_CmdDefaultValue__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM361) RogueCmdLiteral__init_object, // CmdLiteral
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM362) RogueCmdLiteral__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM363) RogueCmdLiteral__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM364) RogueCmdReturn__init_object, // CmdReturn
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM365) RogueCmdReturn__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM365) RogueCmdReturn__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM366) RogueCmdReturn__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM367) RogueCmdReturn__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM368) RogueCmdReturn__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM369) Rogue_CmdReturn__type,
  (void*) (ROGUEM370) RogueCmdReturn__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM371) RogueCmdStatement__init_object, // CmdStatement
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM372) RogueCmdStatement__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM373) RogueCmdStatement__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM374) RogueScope__init_object, // Scope
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM375) RogueScope__type_name,
  (void*) (ROGUEM376) RogueCmdControlStructure_List__init_object, // CmdControlStructure[]
  (void*) (ROGUEM376) RogueCmdControlStructure_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM377) RogueCmdControlStructure_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM377) RogueCmdControlStructure_List__type_name,
  (void*) (ROGUEM378) RogueCmdControlStructure__init_object, // CmdControlStructure
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM379) RogueCmdControlStructure__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM380) RogueCmdControlStructure__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM381) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM382) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM383) RogueCmdTaskControlSection__init_object, // CmdTaskControlSection
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM384) RogueCmdTaskControlSection__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CmdControlStructure>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CmdControlStructure___type_name,
  (void*) (ROGUEM385) RogueFunction_431__init_object, // Function_431
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM386) RogueFunction_431__type_name,
  (void*) (ROGUEM387) RogueFunction_431__call__Type,
  (void*) (ROGUEM388) RogueFunction_432__init_object, // Function_432
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM389) RogueFunction_432__type_name,
  (void*) (ROGUEM390) RogueFunction_432__call__Type,
  (void*) (ROGUEM391) RogueCPPWriter__init_object, // CPPWriter
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM392) RogueCPPWriter__type_name,
  (void*) (ROGUEM393) RogueInt32_List__init_object, // Int32[]
  (void*) (ROGUEM393) RogueInt32_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM394) RogueInt32_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM394) RogueInt32_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Int32>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Int32___type_name,
  (void*) (ROGUEM395) RogueTableValueReader_Type_CyClass___init_object, // TableValueReader<<Type,CyClass>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM396) RogueTableValueReader_Type_CyClass___type_name,
  0, // Reader<<CyClass>>
  (void*) (ROGUEM397) RogueCyClass_List__init_object, // CyClass[]
  (void*) (ROGUEM397) RogueCyClass_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM398) RogueCyClass_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM398) RogueCyClass_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CyClass>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CyClass___type_name,
  (void*) (ROGUEM399) RogueTableValueReader_String_CyProperty___init_object, // TableValueReader<<String,CyProperty>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM400) RogueTableValueReader_String_CyProperty___type_name,
  0, // Reader<<CyProperty>>
  (void*) (ROGUEM401) RogueTableValueReader_String_CyMethod_List___init_object, // TableValueReader<<String,CyMethod[]>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM402) RogueTableValueReader_String_CyMethod_List___type_name,
  0, // Reader<<CyMethod[]>>
  (void*) (ROGUEM403) RogueCyMethod_List_List__init_object, // CyMethod[][]
  (void*) (ROGUEM403) RogueCyMethod_List_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM404) RogueCyMethod_List_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM404) RogueCyMethod_List_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CyMethod[]>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CyMethod_List___type_name,
  (void*) (ROGUEM405) RogueRequirementError__init_object, // RequirementError
  (void*) (ROGUEM20) RogueException__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM21) RogueException__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM406) RogueRequirementError__type_name,
  (void*) (ROGUEM407) RogueRequirementError__init__String,
  (void*) (ROGUEM408) RogueSet_Type___init_object, // Set<<Type>>
  (void*) (ROGUEM408) RogueSet_Type___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM409) RogueSet_Type___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM409) RogueSet_Type___type_name,
  (void*) (ROGUEM410) RogueTable_Type_Logical___init_object, // Table<<Type,Logical>>
  (void*) (ROGUEM410) RogueTable_Type_Logical___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM411) RogueTable_Type_Logical___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM411) RogueTable_Type_Logical___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<Type,Logical>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_Type_Logical____type_name,
  (void*) (ROGUEM412) RogueTableEntry_Type_Logical___init_object, // TableEntry<<Type,Logical>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM413) RogueTableEntry_Type_Logical___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM413) RogueTableEntry_Type_Logical___type_name,
  (void*) (ROGUEM414) RogueSystem__init_object, // System
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM415) RogueSystem__type_name,
  (void*) (ROGUEM416) RogueWeakReference__init_object, // WeakReference
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM417) RogueWeakReference__type_name,
  0, // Writer<<Byte>>
  (void*) (ROGUEM418) RogueReal64Value__init_object, // Real64Value
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM30) RogueValue__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM419) RogueReal64Value__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM419) RogueReal64Value__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_logical,
  (void*) (ROGUEM32) RogueValue__is_null,
  (void*) (ROGUEM32) RogueValue__is_non_null,
  (void*) (ROGUEM420) RogueReal64Value__is_number,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_string,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM421) RogueReal64Value__operatorEQUALSEQUALS__Value,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM422) RogueReal64Value__to_Int32,
  (void*) (ROGUEM32) RogueValue__to_Logical,
  (void*) (ROGUEM423) RogueReal64Value__to_Real64,
  (void*) (ROGUEM424) RogueNullValue__init_object, // NullValue
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM30) RogueValue__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM425) RogueNullValue__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM425) RogueNullValue__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_logical,
  (void*) (ROGUEM426) RogueNullValue__is_null,
  (void*) (ROGUEM426) RogueNullValue__is_non_null,
  (void*) (ROGUEM32) RogueValue__is_number,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_string,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM427) RogueNullValue__operatorEQUALSEQUALS__Value,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM428) RogueNullValue__to_Int32,
  (void*) (ROGUEM32) RogueValue__to_Logical,
  (void*) (ROGUEM35) RogueValue__to_Real64,
  (void*) (ROGUEM429) RogueObjectValue__init_object, // ObjectValue
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM30) RogueValue__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM430) RogueObjectValue__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM430) RogueObjectValue__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_logical,
  (void*) (ROGUEM32) RogueValue__is_null,
  (void*) (ROGUEM32) RogueValue__is_non_null,
  (void*) (ROGUEM32) RogueValue__is_number,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_string,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM33) RogueValue__operatorEQUALSEQUALS__Value,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM34) RogueValue__to_Int32,
  (void*) (ROGUEM32) RogueValue__to_Logical,
  (void*) (ROGUEM35) RogueValue__to_Real64,
  (void*) (ROGUEM431) RogueStringValue__init_object, // StringValue
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM30) RogueValue__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM432) RogueStringValue__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM432) RogueStringValue__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_logical,
  (void*) (ROGUEM32) RogueValue__is_null,
  (void*) (ROGUEM32) RogueValue__is_non_null,
  (void*) (ROGUEM32) RogueValue__is_number,
  0,
  0,
  (void*) (ROGUEM433) RogueStringValue__is_string,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM434) RogueStringValue__operatorEQUALSEQUALS__Value,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM435) RogueStringValue__to_Int32,
  (void*) (ROGUEM433) RogueStringValue__to_Logical,
  (void*) (ROGUEM436) RogueStringValue__to_Real64,
  (void*) (ROGUEM437) RogueUndefinedValue__init_object, // UndefinedValue
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM30) RogueValue__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM438) RogueUndefinedValue__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM438) RogueUndefinedValue__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_logical,
  (void*) (ROGUEM426) RogueNullValue__is_null,
  (void*) (ROGUEM426) RogueNullValue__is_non_null,
  (void*) (ROGUEM32) RogueValue__is_number,
  0,
  0,
  (void*) (ROGUEM32) RogueValue__is_string,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM427) RogueNullValue__operatorEQUALSEQUALS__Value,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM428) RogueNullValue__to_Int32,
  (void*) (ROGUEM32) RogueValue__to_Logical,
  (void*) (ROGUEM35) RogueValue__to_Real64,
  (void*) (ROGUEM439) RogueFile__init_object, // File
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM440) RogueFile__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM440) RogueFile__type_name,
  (void*) (ROGUEM441) RogueFunction_1094__init_object, // Function_1094
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM442) RogueFunction_1094__type_name,
  (void*) (ROGUEM443) RogueFunction_1094__call,
  (void*) (ROGUEM444) RogueBlockingConsoleIOHandler__init_object, // BlockingConsoleIOHandler
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM445) RogueBlockingConsoleIOHandler__type_name,
  (void*) (ROGUEM446) RogueBlockingConsoleIOHandler__has_another,
  0,
  (void*) (ROGUEM447) RogueBlockingConsoleIOHandler__read,
  0,
  (void*) (ROGUEM448) RogueBlockingConsoleIOHandler__write__Array_Int32,
  (void*) (ROGUEM449) RogueCmdMakeRequisite__init_object, // CmdMakeRequisite
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM450) RogueCmdMakeRequisite__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM451) RogueCmdMakeRequisite__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM452) RogueCmdMakeRequisite__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM453) RogueCmdMakeRequisite__requires_semicolon,
  (void*) (ROGUEM454) RogueCmdMakeRequisite__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM455) RogueCmdMakeRequisite__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM456) RogueLineReader__init_object, // LineReader
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM457) RogueLineReader__type_name,
  (void*) (ROGUEM458) RogueFunction_1125__init_object, // Function_1125
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM459) RogueFunction_1125__type_name,
  (void*) (ROGUEM460) RogueFunction_1125__call,
  (void*) (ROGUEM461) RogueEOLToken__init_object, // EOLToken
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM462) RogueEOLToken__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM462) RogueEOLToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM101) RogueToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM102) RogueToken__to_Character,
  (void*) (ROGUEM103) RogueToken__to_Int32,
  (void*) (ROGUEM104) RogueToken__to_Int64,
  (void*) (ROGUEM105) RogueToken__to_Real64,
  (void*) (ROGUEM106) RogueToken__to_Type,
  (void*) (ROGUEM463) RogueCmdLiteralLogical__init_object, // CmdLiteralLogical
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM464) RogueCmdLiteralLogical__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM464) RogueCmdLiteralLogical__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM465) RogueCmdLiteralLogical__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM466) RogueCmdLiteralLogical__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM467) RogueCmdLiteralLogical__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM468) RogueCmdLiteralLogical__to_Logical,
  0,
  (void*) (ROGUEM469) Rogue_CmdLiteralLogical__type,
  (void*) (ROGUEM470) RogueCmdLiteralLogical__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM471) RogueCmdLiteralInt32__init_object, // CmdLiteralInt32
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM472) RogueCmdLiteralInt32__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM472) RogueCmdLiteralInt32__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM473) RogueCmdLiteralInt32__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM474) RogueCmdLiteralInt32__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM475) RogueCmdLiteralInt32__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM476) RogueCmdLiteralInt32__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM477) RogueCmdLiteralInt32__to_Logical,
  0,
  (void*) (ROGUEM478) Rogue_CmdLiteralInt32__type,
  (void*) (ROGUEM479) RogueCmdLiteralInt32__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM480) RogueCloneArgs__init_object, // CloneArgs
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM481) RogueCloneArgs__type_name,
  (void*) (ROGUEM482) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM483) RogueCmdAdd__init_object, // CmdAdd
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM485) RogueCmdAdd__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM486) RogueCmdAdd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM487) RogueCmdAdd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM488) RogueCmdAdd__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM485) RogueCmdAdd__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM495) RogueCmdAdd__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM485) RogueCmdAdd__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM496) RogueCmdBinary__init_object, // CmdBinary
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM497) RogueCmdBinary__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM484) RogueCmdBinary__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM498) RogueCmdNativeHeader__init_object, // CmdNativeHeader
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM499) RogueCmdNativeHeader__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM500) RogueCmdNativeHeader__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM501) RogueCmdNativeHeader__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM502) RogueCmdNativeSource__requires_semicolon,
  (void*) (ROGUEM503) RogueCmdNativeHeader__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM504) RogueCmdNativeSource__init_object, // CmdNativeSource
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM505) RogueCmdNativeSource__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM506) RogueCmdNativeSource__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM502) RogueCmdNativeSource__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM507) RogueCmdNativeCode__init_object, // CmdNativeCode
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM508) RogueCmdNativeCode__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM509) RogueCmdNativeCode__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM510) RogueCmdNativeCode__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM502) RogueCmdNativeSource__requires_semicolon,
  (void*) (ROGUEM511) RogueCmdNativeCode__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM512) RogueCmdIncludeNative__init_object, // CmdIncludeNative
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM513) RogueCmdIncludeNative__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM514) RogueCmdIncludeNative__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM515) RogueCmdIncludeNative__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM502) RogueCmdNativeSource__requires_semicolon,
  (void*) (ROGUEM516) RogueCmdIncludeNative__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM517) RogueCmdIf__init_object, // CmdIf
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM518) RogueCmdIf__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM519) RogueCmdIf__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM520) RogueCmdIf__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM381) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM521) RogueCmdIf__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM522) RogueCmdIf__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM382) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM523) RogueCmdWhich__init_object, // CmdWhich
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM524) RogueCmdWhich__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM525) RogueCmdWhich__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM526) RogueCmdWhich__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM381) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM527) RogueCmdWhich__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM382) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM528) RogueCmdWhichCase_List__init_object, // CmdWhichCase[]
  (void*) (ROGUEM528) RogueCmdWhichCase_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM529) RogueCmdWhichCase_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM529) RogueCmdWhichCase_List__type_name,
  (void*) (ROGUEM530) RogueCmdWhichCase__init_object, // CmdWhichCase
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM531) RogueCmdWhichCase__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM532) RogueCmdWhichCase__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM533) RogueCmdWhichCase__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CmdWhichCase>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CmdWhichCase___type_name,
  (void*) (ROGUEM534) RogueCmdBlock__init_object, // CmdBlock
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM535) RogueCmdBlock__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM536) RogueCmdBlock__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM537) RogueCmdBlock__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM538) RogueCmdBlock__requires_semicolon,
  (void*) (ROGUEM539) RogueCmdBlock__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM540) RogueCmdBlock__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM382) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM541) RogueCmdContingent__init_object, // CmdContingent
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM542) RogueCmdContingent__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM543) RogueCmdContingent__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM544) RogueCmdContingent__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM381) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM545) RogueCmdContingent__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM546) RogueCmdContingent__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM547) RogueCmdContingent__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM548) RogueCmdGenericLoop__init_object, // CmdGenericLoop
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM549) RogueCmdGenericLoop__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM550) RogueCmdGenericLoop__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM551) RogueCmdGenericLoop__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM381) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM552) RogueCmdGenericLoop__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM553) RogueCmdGenericLoop__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM382) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM554) RogueCmdTry__init_object, // CmdTry
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM555) RogueCmdTry__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM556) RogueCmdTry__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM557) RogueCmdTry__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM381) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM558) RogueCmdTry__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM559) RogueCmdTry__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM382) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM560) RogueCmdCatch_List__init_object, // CmdCatch[]
  (void*) (ROGUEM560) RogueCmdCatch_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM561) RogueCmdCatch_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM561) RogueCmdCatch_List__type_name,
  (void*) (ROGUEM562) RogueCmdCatch__init_object, // CmdCatch
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM563) RogueCmdCatch__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM564) RogueCmdCatch__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM565) RogueCmdCatch__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM566) RogueCmdCatch__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM567) RogueCmdCatch__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CmdCatch>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CmdCatch___type_name,
  (void*) (ROGUEM568) RogueCmdAwait__init_object, // CmdAwait
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM569) RogueCmdAwait__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM570) RogueCmdAwait__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM571) RogueCmdAwait__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM572) RogueCmdAwait__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM573) RogueCmdYield__init_object, // CmdYield
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM574) RogueCmdYield__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM575) RogueCmdYield__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM576) RogueCmdYield__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM577) RogueCmdYield__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM578) RogueCmdThrow__init_object, // CmdThrow
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM579) RogueCmdThrow__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM580) RogueCmdThrow__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM581) RogueCmdThrow__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM582) RogueCmdThrow__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM583) RogueCmdThrow__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM584) RogueCmdLiteralString__init_object, // CmdLiteralString
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM585) RogueCmdLiteralString__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM585) RogueCmdLiteralString__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM586) RogueCmdLiteralString__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM587) RogueCmdLiteralString__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM588) RogueCmdLiteralString__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM589) RogueCmdLiteralString__to_Logical,
  0,
  (void*) (ROGUEM590) Rogue_CmdLiteralString__type,
  (void*) (ROGUEM591) RogueCmdLiteralString__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM592) RogueCmdFormattedString__init_object, // CmdFormattedString
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM593) RogueCmdFormattedString__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM594) RogueCmdFormattedString__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM595) RogueCmdFormattedString__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM596) RogueCmdFormattedString__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM597) RogueCmdFormattedString__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM598) Rogue_CmdFormattedString__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM599) RogueCmdTrace__init_object, // CmdTrace
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM600) RogueCmdTrace__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM601) RogueCmdTrace__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM602) RogueCmdTrace__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM603) RogueCmdTrace__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM604) RogueCmdLocalDeclaration__init_object, // CmdLocalDeclaration
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM605) RogueCmdLocalDeclaration__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM606) RogueCmdLocalDeclaration__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM607) RogueCmdLocalDeclaration__dispatch__Visitor,
  (void*) (ROGUEM608) RogueCmdLocalDeclaration__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM609) RogueCmdLocalDeclaration__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM610) RogueCmdLocalDeclaration__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM611) RogueCmdAssert__init_object, // CmdAssert
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM612) RogueCmdAssert__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM613) RogueCmdAssert__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM614) RogueCmdAssert__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM615) RogueCmdAssert__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM616) Rogue_CmdAssert__type,
  (void*) (ROGUEM617) RogueCmdAssert__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM618) RogueCmdEscape__init_object, // CmdEscape
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM619) RogueCmdEscape__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM620) RogueCmdEscape__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM621) RogueCmdEscape__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM622) RogueCmdEscape__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM623) RogueCmdEscape__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM624) RogueCmdNextIteration__init_object, // CmdNextIteration
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM625) RogueCmdNextIteration__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM626) RogueCmdNextIteration__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM627) RogueCmdNextIteration__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM628) RogueCmdNextIteration__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM629) RogueCmdNextIteration__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM630) RogueCmdNecessary__init_object, // CmdNecessary
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM631) RogueCmdNecessary__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM632) RogueCmdNecessary__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM633) RogueCmdNecessary__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM634) RogueCmdNecessary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM635) RogueCmdNecessary__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM636) RogueCmdSufficient__init_object, // CmdSufficient
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM637) RogueCmdSufficient__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM638) RogueCmdSufficient__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM639) RogueCmdSufficient__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM640) RogueCmdSufficient__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM641) RogueCmdSufficient__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM642) RogueCmdAdjust__init_object, // CmdAdjust
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM643) RogueCmdAdjust__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM644) RogueCmdAdjust__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM645) RogueCmdAdjust__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM646) RogueCmdAssign__init_object, // CmdAssign
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM647) RogueCmdAssign__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM648) RogueCmdAssign__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM649) RogueCmdAssign__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM650) RogueCmdAssign__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM651) RogueCmdModifyAndAssign__init_object, // CmdModifyAndAssign
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM652) RogueCmdModifyAndAssign__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM653) RogueCmdModifyAndAssign__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM654) RogueCmdModifyAndAssign__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM655) RogueCmdModifyAndAssign__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM656) RogueCmdTryExpression__init_object, // CmdTryExpression
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM657) RogueCmdTryExpression__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM658) RogueCmdTryExpression__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM659) RogueCmdTryExpression__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM660) RogueCmdTryExpression__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM661) RogueCmdTryExpression__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM662) RogueCmdReadLocal__init_object, // CmdReadLocal
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM663) RogueCmdReadLocal__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM663) RogueCmdReadLocal__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM664) RogueCmdReadLocal__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM665) RogueCmdReadLocal__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM666) RogueCmdReadLocal__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM667) RogueCmdReadLocal__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM668) Rogue_CmdReadLocal__type,
  (void*) (ROGUEM669) RogueCmdReadLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM670) RogueCmdAdjustLocal__init_object, // CmdAdjustLocal
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM671) RogueCmdAdjustLocal__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM672) RogueCmdAdjustLocal__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM673) RogueCmdAdjustLocal__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM674) RogueCmdAdjustLocal__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM675) Rogue_CmdAdjustLocal__type,
  (void*) (ROGUEM676) RogueCmdAdjustLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM677) RogueCmdCompareLE__init_object, // CmdCompareLE
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM678) RogueCmdCompareLE__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM679) RogueCmdCompareLE__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM680) RogueCmdCompareLE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM681) RogueCmdCompareLE__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM683) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM684) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM678) RogueCmdCompareLE__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM685) RogueCmdCompareLE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM686) RogueCmdComparison__init_object, // CmdComparison
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM687) RogueCmdComparison__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM688) RogueCmdComparison__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM683) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM684) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM484) RogueCmdBinary__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM689) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM690) RogueCmdRange__init_object, // CmdRange
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM691) RogueCmdRange__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM692) RogueCmdRange__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM693) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM694) RogueCmdRange__default_step_size,
  (void*) (ROGUEM695) RogueCmdModifyAndAssignLocal__init_object, // CmdModifyAndAssignLocal
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM696) RogueCmdModifyAndAssignLocal__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM697) RogueCmdModifyAndAssignLocal__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM698) RogueCmdModifyAndAssignLocal__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM699) RogueCmdModifyAndAssignLocal__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM700) Rogue_CmdModifyAndAssignLocal__type,
  (void*) (ROGUEM701) RogueCmdModifyAndAssignLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM702) RogueCmdResolvedModifyAndAssign__init_object, // CmdResolvedModifyAndAssign
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM703) RogueCmdResolvedModifyAndAssign__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM704) RogueCmdResolvedModifyAndAssign__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM705) RogueCmdRangeUpTo__init_object, // CmdRangeUpTo
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM706) RogueCmdRangeUpTo__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM707) RogueCmdRangeUpTo__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM708) RogueCmdRangeUpTo__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM693) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM694) RogueCmdRange__default_step_size,
  (void*) (ROGUEM709) RogueCmdRangeUpToLessThan__init_object, // CmdRangeUpToLessThan
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM710) RogueCmdRangeUpToLessThan__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM711) RogueCmdRangeUpToLessThan__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM712) RogueCmdRangeUpToLessThan__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM693) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM694) RogueCmdRange__default_step_size,
  (void*) (ROGUEM713) RogueCmdCompareLT__init_object, // CmdCompareLT
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM714) RogueCmdCompareLT__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM715) RogueCmdCompareLT__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM716) RogueCmdCompareLT__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM717) RogueCmdCompareLT__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM683) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM684) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM714) RogueCmdCompareLT__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM718) RogueCmdCompareLT__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM719) RogueCmdCompareGE__init_object, // CmdCompareGE
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM720) RogueCmdCompareGE__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM721) RogueCmdCompareGE__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM722) RogueCmdCompareGE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM723) RogueCmdCompareGE__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM683) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM684) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM720) RogueCmdCompareGE__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM724) RogueCmdCompareGE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM725) RogueCmdForEach__init_object, // CmdForEach
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM726) RogueCmdForEach__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM727) RogueCmdForEach__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM728) RogueCmdForEach__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM381) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM729) RogueCmdForEach__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM382) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM730) RogueCmdRangeDownTo__init_object, // CmdRangeDownTo
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM731) RogueCmdRangeDownTo__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM732) RogueCmdRangeDownTo__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM733) RogueCmdRangeDownTo__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM693) RogueCmdRange__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM734) RogueCmdRangeDownTo__default_step_size,
  (void*) (ROGUEM735) RogueCmdLogicalXor__init_object, // CmdLogicalXor
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM736) RogueCmdLogicalXor__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM737) RogueCmdLogicalXor__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM738) RogueCmdLogicalXor__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM739) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM740) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM741) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM736) RogueCmdLogicalXor__symbol,
  (void*) (ROGUEM736) RogueCmdLogicalXor__cpp_symbol,
  (void*) (ROGUEM742) RogueCmdLogicalXor__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM743) RogueCmdBinaryLogical__init_object, // CmdBinaryLogical
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM744) RogueCmdBinaryLogical__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM745) RogueCmdBinaryLogical__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM739) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM740) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM741) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM484) RogueCmdBinary__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM746) RogueCmdBinaryLogical__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM747) RogueCmdLogicalOr__init_object, // CmdLogicalOr
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM748) RogueCmdLogicalOr__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM749) RogueCmdLogicalOr__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM750) RogueCmdLogicalOr__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM739) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM740) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM741) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM748) RogueCmdLogicalOr__symbol,
  (void*) (ROGUEM748) RogueCmdLogicalOr__cpp_symbol,
  (void*) (ROGUEM751) RogueCmdLogicalOr__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM752) RogueCmdLogicalAnd__init_object, // CmdLogicalAnd
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM753) RogueCmdLogicalAnd__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM754) RogueCmdLogicalAnd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM755) RogueCmdLogicalAnd__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM739) RogueCmdBinaryLogical__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM740) Rogue_CmdBinaryLogical__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM741) RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM753) RogueCmdLogicalAnd__symbol,
  (void*) (ROGUEM753) RogueCmdLogicalAnd__cpp_symbol,
  (void*) (ROGUEM756) RogueCmdLogicalAnd__combine_literal_operands__Logical_Logical,
  (void*) (ROGUEM757) RogueCmdCompareEQ__init_object, // CmdCompareEQ
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM758) RogueCmdCompareEQ__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM759) RogueCmdCompareEQ__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM760) RogueCmdCompareEQ__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM761) RogueCmdCompareEQ__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM762) RogueCmdCompareEQ__requires_parens,
  (void*) (ROGUEM684) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM758) RogueCmdCompareEQ__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM763) RogueCmdCompareEQ__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM764) RogueCmdCompareIsNot__init_object, // CmdCompareIsNot
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM765) RogueCmdCompareIsNot__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM766) RogueCmdCompareIsNot__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM767) RogueCmdCompareIsNot__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM768) RogueCmdCompareIsNot__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM683) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM769) RogueCmdCompareIsNot__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM765) RogueCmdCompareIsNot__symbol,
  (void*) (ROGUEM765) RogueCmdCompareIsNot__cpp_symbol,
  (void*) (ROGUEM689) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM770) RogueCmdCompareIs__init_object, // CmdCompareIs
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM771) RogueCmdCompareIs__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM772) RogueCmdCompareIs__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM773) RogueCmdCompareIs__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM774) RogueCmdCompareIs__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM683) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM775) RogueCmdCompareIs__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM771) RogueCmdCompareIs__symbol,
  (void*) (ROGUEM771) RogueCmdCompareIs__cpp_symbol,
  (void*) (ROGUEM689) RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM776) RogueCmdCompareNE__init_object, // CmdCompareNE
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM777) RogueCmdCompareNE__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM778) RogueCmdCompareNE__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM779) RogueCmdCompareNE__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM780) RogueCmdCompareNE__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM683) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM684) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM777) RogueCmdCompareNE__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM781) RogueCmdCompareNE__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM782) RogueCmdCompareGT__init_object, // CmdCompareGT
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM783) RogueCmdCompareGT__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM784) RogueCmdCompareGT__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM785) RogueCmdCompareGT__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM786) RogueCmdCompareGT__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM682) Rogue_CmdComparison__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM683) RogueCmdComparison__requires_parens,
  (void*) (ROGUEM684) RogueCmdComparison__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM783) RogueCmdCompareGT__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM787) RogueCmdCompareGT__resolve_for_reference__Scope_Type_Type_Logical,
  (void*) (ROGUEM788) RogueCmdInstanceOf__init_object, // CmdInstanceOf
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM789) RogueCmdInstanceOf__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM790) RogueCmdInstanceOf__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM791) RogueCmdInstanceOf__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM792) RogueCmdInstanceOf__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM793) Rogue_CmdInstanceOf__type,
  (void*) (ROGUEM794) RogueCmdInstanceOf__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM795) RogueCmdTypeOperator__init_object, // CmdTypeOperator
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM796) RogueCmdTypeOperator__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM797) RogueCmdTypeOperator__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM144) RogueCmd__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM798) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM799) RogueCmdLogicalNot__init_object, // CmdLogicalNot
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM801) RogueCmdLogicalNot__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM802) RogueCmdLogicalNot__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM803) RogueCmdLogicalNot__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM804) RogueCmdLogicalNot__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM805) Rogue_CmdLogicalNot__type,
  (void*) (ROGUEM806) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM801) RogueCmdLogicalNot__prefix_symbol,
  (void*) (ROGUEM800) RogueCmdUnary__fn_name,
  (void*) (ROGUEM804) RogueCmdLogicalNot__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM801) RogueCmdLogicalNot__cpp_prefix_symbol,
  (void*) (ROGUEM800) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM807) RogueCmdUnary__init_object, // CmdUnary
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM808) RogueCmdUnary__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM809) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM810) Rogue_CmdUnary__type,
  (void*) (ROGUEM806) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__prefix_symbol,
  (void*) (ROGUEM800) RogueCmdUnary__fn_name,
  (void*) (ROGUEM809) RogueCmdUnary__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM800) RogueCmdUnary__cpp_prefix_symbol,
  (void*) (ROGUEM800) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM811) RogueCmdBitwiseXor__init_object, // CmdBitwiseXor
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM812) RogueCmdBitwiseXor__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM813) RogueCmdBitwiseXor__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM814) RogueCmdBitwiseXor__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM815) RogueCmdBitwiseXor__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM812) RogueCmdBitwiseXor__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM816) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM812) RogueCmdBitwiseXor__symbol,
  (void*) (ROGUEM812) RogueCmdBitwiseXor__cpp_symbol,
  (void*) (ROGUEM817) RogueCmdBitwiseOp__init_object, // CmdBitwiseOp
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM818) RogueCmdBitwiseOp__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM819) RogueCmdBitwiseOp__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM816) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM484) RogueCmdBinary__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM820) RogueCmdBitwiseOr__init_object, // CmdBitwiseOr
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM821) RogueCmdBitwiseOr__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM822) RogueCmdBitwiseOr__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM823) RogueCmdBitwiseOr__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM824) RogueCmdBitwiseOr__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM821) RogueCmdBitwiseOr__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM816) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM821) RogueCmdBitwiseOr__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM825) RogueCmdBitwiseAnd__init_object, // CmdBitwiseAnd
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM826) RogueCmdBitwiseAnd__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM827) RogueCmdBitwiseAnd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM828) RogueCmdBitwiseAnd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM829) RogueCmdBitwiseAnd__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM826) RogueCmdBitwiseAnd__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM816) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM826) RogueCmdBitwiseAnd__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM830) RogueCmdBitwiseShiftLeft__init_object, // CmdBitwiseShiftLeft
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM831) RogueCmdBitwiseShiftLeft__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM832) RogueCmdBitwiseShiftLeft__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM833) RogueCmdBitwiseShiftLeft__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM834) RogueCmdBitwiseShiftLeft__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM831) RogueCmdBitwiseShiftLeft__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM816) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM831) RogueCmdBitwiseShiftLeft__symbol,
  (void*) (ROGUEM831) RogueCmdBitwiseShiftLeft__cpp_symbol,
  (void*) (ROGUEM835) RogueCmdBitwiseShiftRight__init_object, // CmdBitwiseShiftRight
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM836) RogueCmdBitwiseShiftRight__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM837) RogueCmdBitwiseShiftRight__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM838) RogueCmdBitwiseShiftRight__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM839) RogueCmdBitwiseShiftRight__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM840) RogueCmdBitwiseShiftRight__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM836) RogueCmdBitwiseShiftRight__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM816) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM836) RogueCmdBitwiseShiftRight__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM841) RogueCmdBitwiseShiftRightX__init_object, // CmdBitwiseShiftRightX
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM842) RogueCmdBitwiseShiftRightX__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM843) RogueCmdBitwiseShiftRightX__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM844) RogueCmdBitwiseShiftRightX__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM845) RogueCmdBitwiseShiftRightX__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM842) RogueCmdBitwiseShiftRightX__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM816) RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM842) RogueCmdBitwiseShiftRightX__symbol,
  (void*) (ROGUEM842) RogueCmdBitwiseShiftRightX__cpp_symbol,
  (void*) (ROGUEM846) RogueCmdSubtract__init_object, // CmdSubtract
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM847) RogueCmdSubtract__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM848) RogueCmdSubtract__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM849) RogueCmdSubtract__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM850) RogueCmdSubtract__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM847) RogueCmdSubtract__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM847) RogueCmdSubtract__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM851) RogueCmdMultiply__init_object, // CmdMultiply
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM852) RogueCmdMultiply__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM853) RogueCmdMultiply__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM854) RogueCmdMultiply__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM855) RogueCmdMultiply__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM852) RogueCmdMultiply__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM852) RogueCmdMultiply__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM856) RogueCmdDivide__init_object, // CmdDivide
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM857) RogueCmdDivide__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM858) RogueCmdDivide__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM859) RogueCmdDivide__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM860) RogueCmdDivide__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM857) RogueCmdDivide__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM857) RogueCmdDivide__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM861) RogueCmdMod__init_object, // CmdMod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM862) RogueCmdMod__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM863) RogueCmdMod__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM864) RogueCmdMod__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM865) RogueCmdMod__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM866) RogueCmdMod__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM491) RogueCmdBinary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM862) RogueCmdMod__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM862) RogueCmdMod__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM867) RogueCmdPower__init_object, // CmdPower
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM484) RogueCmdBinary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM868) RogueCmdPower__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM869) RogueCmdPower__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM870) RogueCmdPower__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM871) RogueCmdPower__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM489) RogueCmdBinary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM490) Rogue_CmdBinary__type,
  (void*) (ROGUEM872) RogueCmdPower__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM868) RogueCmdPower__fn_name,
  (void*) (ROGUEM492) RogueCmdBinary__requires_parens,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_for_types__Scope_Type_Type,
  (void*) (ROGUEM494) RogueCmdBinary__resolve_for_common_type__Scope_Type,
  (void*) (ROGUEM493) RogueCmdBinary__resolve_operator_method__Scope_Type_Type,
  (void*) (ROGUEM868) RogueCmdPower__symbol,
  (void*) (ROGUEM484) RogueCmdBinary__cpp_symbol,
  (void*) (ROGUEM873) RogueCmdNegate__init_object, // CmdNegate
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM874) RogueCmdNegate__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM875) RogueCmdNegate__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM876) RogueCmdNegate__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM877) RogueCmdNegate__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM809) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM810) Rogue_CmdUnary__type,
  (void*) (ROGUEM806) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM874) RogueCmdNegate__prefix_symbol,
  (void*) (ROGUEM874) RogueCmdNegate__fn_name,
  (void*) (ROGUEM878) RogueCmdNegate__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM874) RogueCmdNegate__suffix_symbol,
  (void*) (ROGUEM800) RogueCmdUnary__cpp_prefix_symbol,
  (void*) (ROGUEM800) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM879) RogueCmdBitwiseNot__init_object, // CmdBitwiseNot
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM880) RogueCmdBitwiseNot__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM881) RogueCmdBitwiseNot__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM882) RogueCmdBitwiseNot__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM809) RogueCmdUnary__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM883) Rogue_CmdBitwiseNot__type,
  (void*) (ROGUEM806) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM880) RogueCmdBitwiseNot__prefix_symbol,
  (void*) (ROGUEM880) RogueCmdBitwiseNot__fn_name,
  (void*) (ROGUEM884) RogueCmdBitwiseNot__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__suffix_symbol,
  (void*) (ROGUEM880) RogueCmdBitwiseNot__cpp_prefix_symbol,
  (void*) (ROGUEM800) RogueCmdUnary__cpp_suffix_symbol,
  (void*) (ROGUEM885) RogueCmdLogicalize__init_object, // CmdLogicalize
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM800) RogueCmdUnary__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM886) RogueCmdLogicalize__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM887) RogueCmdLogicalize__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM888) RogueCmdLogicalize__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM889) RogueCmdLogicalize__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM890) Rogue_CmdLogicalize__type,
  (void*) (ROGUEM806) RogueCmdUnary__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM886) RogueCmdLogicalize__prefix_symbol,
  (void*) (ROGUEM886) RogueCmdLogicalize__fn_name,
  (void*) (ROGUEM889) RogueCmdLogicalize__resolve_for_literal_operand__Scope,
  0,
  (void*) (ROGUEM886) RogueCmdLogicalize__suffix_symbol,
  (void*) (ROGUEM886) RogueCmdLogicalize__cpp_prefix_symbol,
  (void*) (ROGUEM886) RogueCmdLogicalize__cpp_suffix_symbol,
  (void*) (ROGUEM891) RogueCmdIsReference__init_object, // CmdIsReference
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM892) RogueCmdIsReference__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM893) RogueCmdIsReference__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM894) RogueCmdIsReference__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM895) RogueCmdIsReference__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM896) Rogue_CmdIsReference__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM897) RogueCmdElementAccess__init_object, // CmdElementAccess
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM898) RogueCmdElementAccess__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM898) RogueCmdElementAccess__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM899) RogueCmdElementAccess__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM900) RogueCmdElementAccess__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM901) RogueCmdElementAccess__resolve__Scope,
  (void*) (ROGUEM902) RogueCmdElementAccess__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM903) RogueCmdElementAccess__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM904) RogueCmdElementAccess__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM905) RogueCmdConvertToType__init_object, // CmdConvertToType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM906) RogueCmdConvertToType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM906) RogueCmdConvertToType__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM907) RogueCmdConvertToType__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM908) RogueCmdConvertToType__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM909) RogueCmdConvertToType__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM798) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM910) RogueCmdCreateCallback__init_object, // CmdCreateCallback
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM911) RogueCmdCreateCallback__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM912) RogueCmdCreateCallback__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM913) RogueCmdCreateCallback__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM914) RogueCmdCreateCallback__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM915) RogueCmdAs__init_object, // CmdAs
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM916) RogueCmdAs__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM917) RogueCmdAs__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM918) RogueCmdAs__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM919) RogueCmdAs__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM798) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM920) RogueCmdAs__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM921) RogueFnParam__init_object, // FnParam
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM922) RogueFnParam__type_name,
  (void*) (ROGUEM923) RogueFnParam_List__init_object, // FnParam[]
  (void*) (ROGUEM923) RogueFnParam_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM924) RogueFnParam_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM924) RogueFnParam_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<FnParam>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_FnParam___type_name,
  (void*) (ROGUEM925) RogueCmdCreateFunction__init_object, // CmdCreateFunction
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM926) RogueCmdCreateFunction__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM927) RogueCmdCreateFunction__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM928) RogueCmdCreateFunction__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM929) RogueCmdCreateFunction__is_generic_function,
  0,
  (void*) (ROGUEM930) RogueCmdCreateFunction__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM931) RogueCmdCreateFunction__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM932) Rogue_CmdCreateFunction__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM933) RogueFnArg_List__init_object, // FnArg[]
  (void*) (ROGUEM933) RogueFnArg_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM934) RogueFnArg_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM934) RogueFnArg_List__type_name,
  (void*) (ROGUEM935) RogueFnArg__init_object, // FnArg
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM936) RogueFnArg__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<FnArg>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_FnArg___type_name,
  (void*) (ROGUEM937) RogueCmdLiteralNull__init_object, // CmdLiteralNull
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM938) RogueCmdLiteralNull__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM938) RogueCmdLiteralNull__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM939) RogueCmdLiteralNull__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM940) RogueCmdLiteralNull__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM941) RogueCmdLiteralNull__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM942) RogueCmdLiteralNull__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM943) Rogue_CmdLiteralNull__type,
  (void*) (ROGUEM944) RogueCmdLiteralNull__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM945) RogueCmdLiteralReal64__init_object, // CmdLiteralReal64
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM946) RogueCmdLiteralReal64__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM946) RogueCmdLiteralReal64__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM947) RogueCmdLiteralReal64__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM948) RogueCmdLiteralReal64__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM949) RogueCmdLiteralReal64__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM950) RogueCmdLiteralReal64__to_Logical,
  0,
  (void*) (ROGUEM951) Rogue_CmdLiteralReal64__type,
  (void*) (ROGUEM952) RogueCmdLiteralReal64__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM953) RogueCmdLiteralInt64__init_object, // CmdLiteralInt64
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM954) RogueCmdLiteralInt64__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM954) RogueCmdLiteralInt64__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM955) RogueCmdLiteralInt64__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM956) RogueCmdLiteralInt64__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM957) RogueCmdLiteralInt64__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM958) RogueCmdLiteralInt64__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM959) RogueCmdLiteralInt64__to_Logical,
  0,
  (void*) (ROGUEM960) Rogue_CmdLiteralInt64__type,
  (void*) (ROGUEM961) RogueCmdLiteralInt64__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM962) RogueCmdLiteralCharacter__init_object, // CmdLiteralCharacter
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM963) RogueCmdLiteralCharacter__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM963) RogueCmdLiteralCharacter__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM964) RogueCmdLiteralCharacter__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM965) RogueCmdLiteralCharacter__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM357) RogueCmdLiteral__implicit_type__Scope,
  0,
  (void*) (ROGUEM358) RogueCmdLiteral__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM966) RogueCmdLiteralCharacter__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM967) RogueCmdLiteralCharacter__to_Logical,
  0,
  (void*) (ROGUEM968) Rogue_CmdLiteralCharacter__type,
  (void*) (ROGUEM969) RogueCmdLiteralCharacter__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM970) RogueCmdLiteralThis__init_object, // CmdLiteralThis
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM971) RogueCmdLiteralThis__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM971) RogueCmdLiteralThis__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM972) RogueCmdLiteralThis__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM973) RogueCmdLiteralThis__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM974) RogueCmdThisContext__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM975) RogueCmdLiteralThis__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM976) RogueCmdLiteralThis__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM977) Rogue_CmdThisContext__type,
  (void*) (ROGUEM978) RogueCmdThisContext__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM979) RogueCmdThisContext__init_object, // CmdThisContext
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM980) RogueCmdThisContext__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM981) RogueCmdThisContext__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM982) RogueCmdThisContext__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM974) RogueCmdThisContext__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM983) RogueCmdThisContext__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM984) RogueCmdThisContext__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM977) Rogue_CmdThisContext__type,
  (void*) (ROGUEM978) RogueCmdThisContext__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM985) RogueCmdCreateList__init_object, // CmdCreateList
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM986) RogueCmdCreateList__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM987) RogueCmdCreateList__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM988) RogueCmdCreateList__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM989) RogueCmdCreateList__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM990) RogueCmdCallPriorMethod__init_object, // CmdCallPriorMethod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM991) RogueCmdCallPriorMethod__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM992) RogueCmdCallPriorMethod__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM993) RogueCmdCallPriorMethod__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM994) RogueCmdCallPriorMethod__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM995) RogueCmdInlineNative__init_object, // CmdInlineNative
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM996) RogueCmdInlineNative__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM997) RogueCmdInlineNative__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM998) RogueCmdInlineNative__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM999) RogueCmdInlineNative__requires_semicolon,
  (void*) (ROGUEM1000) RogueCmdInlineNative__resolve__Scope,
  (void*) (ROGUEM1001) RogueCmdInlineNative__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1002) RogueCmdInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM1003) RogueCmdInlineNative__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1004) Rogue_CmdInlineNative__type,
  (void*) (ROGUEM1005) RogueCmdInlineNative__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1006) RogueCmdSelect__init_object, // CmdSelect
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1007) RogueCmdSelect__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1008) RogueCmdSelect__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1009) RogueCmdSelect__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM1010) RogueCmdSelect__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1011) RogueCmdSelect__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1012) Rogue_CmdSelect__type,
  (void*) (ROGUEM1013) RogueCmdSelect__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1014) RogueCmdSelectCase_List__init_object, // CmdSelectCase[]
  (void*) (ROGUEM1014) RogueCmdSelectCase_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1015) RogueCmdSelectCase_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1015) RogueCmdSelectCase_List__type_name,
  (void*) (ROGUEM1016) RogueCmdSelectCase__init_object, // CmdSelectCase
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1017) RogueCmdSelectCase__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1018) RogueCmdSelectCase__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1019) RogueCmdSelectCase__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM1020) RogueCmdSelectCase__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1021) RogueCmdSelectCase__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1022) Rogue_CmdSelectCase__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CmdSelectCase>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CmdSelectCase___type_name,
  (void*) (ROGUEM1023) RogueCmdImplicitIDAccess__init_object, // CmdImplicitIDAccess
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1024) RogueCmdImplicitIDAccess__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1025) RogueCmdImplicitIDAccess__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1026) RogueCmdImplicitIDAccess__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1027) RogueCmdImplicitIDAccess__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1028) RogueCmdImplicitAccess__init_object, // CmdImplicitAccess
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1029) RogueCmdImplicitAccess__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1030) RogueCmdImplicitAccess__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1031) RogueCmdImplicitAccess__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1032) RogueCmdImplicitAccess__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1033) RogueCmdRequire__init_object, // CmdRequire
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1034) RogueCmdRequire__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1035) RogueCmdRequire__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1036) RogueCmdRequire__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1037) RogueCmdRequire__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1038) Rogue_CmdRequire__type,
  (void*) (ROGUEM1039) RogueCmdRequire__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1040) RogueCmdEnsure__init_object, // CmdEnsure
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1041) RogueCmdEnsure__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1042) RogueCmdEnsure__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1043) RogueCmdEnsure__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM1044) RogueCmdEnsure__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1045) RogueCmdEnsure__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1046) Rogue_CmdEnsure__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1047) RogueCmdTypedLiteralList__init_object, // CmdTypedLiteralList
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1048) RogueCmdTypedLiteralList__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1049) RogueCmdTypedLiteralList__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1050) RogueCmdTypedLiteralList__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM1051) RogueCmdTypedLiteralList__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1052) RogueCmdTypedLiteralList__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1053) Rogue_CmdTypedLiteralList__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1054) RogueCmdCreateCompound__init_object, // CmdCreateCompound
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1055) RogueCmdCreateCompound__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1056) RogueCmdCreateCompound__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1057) RogueCmdCreateCompound__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1058) RogueCmdCreateCompound__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1059) Rogue_CmdCreateCompound__type,
  (void*) (ROGUEM1060) RogueCmdCreateCompound__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1061) RogueVisitor__init_object, // Visitor
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1062) RogueVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1063) RogueVisitor__visit__CmdAccess,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1064) RogueVisitor__visit__CmdThisContext,
  0,
  0,
  (void*) (ROGUEM1065) RogueVisitor__visit__CmdReadLocal,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1066) RogueVisitor__visit__CmdImplicitAccess,
  (void*) (ROGUEM1067) RogueVisitor__visit__CmdImplicitIDAccess,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1068) RogueVisitor__on_enter__Type,
  (void*) (ROGUEM1069) RogueVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1070) RogueVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1071) RogueVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1072) RogueVisitor__on_leave__CmdCallDynamicMethod,
  (void*) (ROGUEM1073) RogueCmdSwitch__init_object, // CmdSwitch
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1074) RogueCmdSwitch__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1075) RogueCmdSwitch__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1076) RogueCmdSwitch__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM381) RogueCmdControlStructure__requires_semicolon,
  (void*) (ROGUEM1077) RogueCmdSwitch__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM1078) RogueCmdSwitch__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM382) RogueCmdControlStructure__set_control_logic__CmdControlStructure,
  (void*) (ROGUEM1079) RogueCmdCreateObject__init_object, // CmdCreateObject
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1080) RogueCmdCreateObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1080) RogueCmdCreateObject__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1081) RogueCmdCreateObject__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1082) RogueCmdCreateObject__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1083) RogueCmdCreateObject__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1084) Rogue_CmdCreateObject__type,
  (void*) (ROGUEM1085) RogueCmdCreateObject__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1086) RogueCmdReadSingleton__init_object, // CmdReadSingleton
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1087) RogueCmdReadSingleton__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1088) RogueCmdReadSingleton__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1089) RogueCmdReadSingleton__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM1090) RogueCmdReadSingleton__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1091) RogueCmdReadSingleton__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1092) Rogue_CmdReadSingleton__type,
  (void*) (ROGUEM1093) RogueCmdReadSingleton__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1094) RogueCmdWriteSingleton__init_object, // CmdWriteSingleton
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1095) RogueCmdWriteSingleton__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1096) RogueCmdWriteSingleton__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1097) RogueCmdWriteSingleton__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1098) RogueCmdWriteSingleton__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM1099) RogueCmdWriteSingleton__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1100) RogueCmdWriteLocal__init_object, // CmdWriteLocal
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1101) RogueCmdWriteLocal__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1102) RogueCmdWriteLocal__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1103) RogueCmdWriteLocal__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1104) RogueCmdWriteLocal__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM1105) RogueCmdWriteLocal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1106) RogueCmdReadGlobal__init_object, // CmdReadGlobal
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1107) RogueCmdReadGlobal__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1108) RogueCmdReadGlobal__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1109) RogueCmdReadGlobal__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1110) RogueCmdReadGlobal__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1111) RogueCmdReadGlobal__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1112) Rogue_CmdReadGlobal__type,
  (void*) (ROGUEM1113) RogueCmdReadGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1114) RogueCmdWriteGlobal__init_object, // CmdWriteGlobal
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1115) RogueCmdWriteGlobal__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1116) RogueCmdWriteGlobal__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1117) RogueCmdWriteGlobal__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1118) RogueCmdWriteGlobal__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM1119) RogueCmdWriteGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1120) RogueCmdReadProperty__init_object, // CmdReadProperty
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1121) RogueCmdReadProperty__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1122) RogueCmdReadProperty__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1123) RogueCmdReadProperty__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1124) RogueCmdReadProperty__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1125) RogueCmdReadProperty__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1126) Rogue_CmdReadProperty__type,
  (void*) (ROGUEM1127) RogueCmdReadProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1128) RogueCmdWriteProperty__init_object, // CmdWriteProperty
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1129) RogueCmdWriteProperty__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1130) RogueCmdWriteProperty__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1131) RogueCmdWriteProperty__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1132) RogueCmdWriteProperty__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM1133) RogueCmdWriteProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1134) RogueCmdCall__init_object, // CmdCall
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1135) RogueCmdCall__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1136) RogueCmdCall__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1139) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1140) RogueCmdCallDynamicMethod__init_object, // CmdCallDynamicMethod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1141) RogueCmdCallDynamicMethod__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1141) RogueCmdCallDynamicMethod__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM1142) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1143) RogueCmdCallDynamicMethod__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1144) RogueCmdCallDynamicMethod__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1139) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM1145) RogueCmdCallDynamicMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1146) RogueCmdCallMethod__init_object, // CmdCallMethod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1147) RogueCmdCallMethod__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM1142) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1148) RogueCmdCallMethod__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1139) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM157) RogueCmd__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1149) RogueCmdAdjustProperty__init_object, // CmdAdjustProperty
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1150) RogueCmdAdjustProperty__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1151) RogueCmdAdjustProperty__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1152) RogueCmdAdjustProperty__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1153) RogueCmdAdjustProperty__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1154) Rogue_CmdAdjustProperty__type,
  (void*) (ROGUEM1155) RogueCmdAdjustProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1156) RogueCmdAdjustGlobal__init_object, // CmdAdjustGlobal
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1157) RogueCmdAdjustGlobal__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1158) RogueCmdAdjustGlobal__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1159) RogueCmdAdjustGlobal__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1160) RogueCmdAdjustGlobal__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1161) Rogue_CmdAdjustGlobal__type,
  (void*) (ROGUEM1162) RogueCmdAdjustGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1163) RogueCmdModifyAndAssignGlobal__init_object, // CmdModifyAndAssignGlobal
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1164) RogueCmdModifyAndAssignGlobal__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1165) RogueCmdModifyAndAssignGlobal__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1166) RogueCmdModifyAndAssignGlobal__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1167) RogueCmdModifyAndAssignGlobal__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1168) Rogue_CmdModifyAndAssignGlobal__type,
  (void*) (ROGUEM1169) RogueCmdModifyAndAssignGlobal__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1170) RogueCmdModifyAndAssignProperty__init_object, // CmdModifyAndAssignProperty
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1171) RogueCmdModifyAndAssignProperty__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1172) RogueCmdModifyAndAssignProperty__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1173) RogueCmdModifyAndAssignProperty__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1174) RogueCmdModifyAndAssignProperty__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1175) Rogue_CmdModifyAndAssignProperty__type,
  (void*) (ROGUEM1176) RogueCmdModifyAndAssignProperty__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1177) RogueCmdCreateArray__init_object, // CmdCreateArray
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1178) RogueCmdCreateArray__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1179) RogueCmdCreateArray__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1180) RogueCmdCreateArray__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1181) RogueCmdCreateArray__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1182) Rogue_CmdCreateArray__type,
  (void*) (ROGUEM1183) RogueCmdCreateArray__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1184) RogueCmdReadArrayElement__init_object, // CmdReadArrayElement
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1185) RogueCmdReadArrayElement__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1186) RogueCmdReadArrayElement__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1187) RogueCmdReadArrayElement__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1188) RogueCmdReadArrayElement__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1189) RogueCmdReadArrayElement__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1190) Rogue_CmdReadArrayElement__type,
  (void*) (ROGUEM1191) RogueCmdReadArrayElement__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1192) RogueCmdReadArrayCount__init_object, // CmdReadArrayCount
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1193) RogueCmdReadArrayCount__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1194) RogueCmdReadArrayCount__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1195) RogueCmdReadArrayCount__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1196) RogueCmdReadArrayCount__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1197) Rogue_CmdReadArrayCount__type,
  (void*) (ROGUEM1198) RogueCmdReadArrayCount__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1199) RogueCmdWriteArrayElement__init_object, // CmdWriteArrayElement
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1200) RogueCmdWriteArrayElement__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1201) RogueCmdWriteArrayElement__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1202) RogueCmdWriteArrayElement__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1203) RogueCmdWriteArrayElement__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1204) Rogue_CmdWriteArrayElement__type,
  (void*) (ROGUEM1205) RogueCmdWriteArrayElement__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1206) RogueCmdTaskControl__init_object, // CmdTaskControl
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1207) RogueCmdTaskControl__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1208) RogueCmdTaskControl__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM1209) RogueCmdTaskControl__requires_semicolon,
  (void*) (ROGUEM1210) RogueCmdTaskControl__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__type,
  (void*) (ROGUEM1211) RogueCmdTaskControl__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1212) RogueCmdTaskControlSection_List__init_object, // CmdTaskControlSection[]
  (void*) (ROGUEM1212) RogueCmdTaskControlSection_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1213) RogueCmdTaskControlSection_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1213) RogueCmdTaskControlSection_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<CmdTaskControlSection>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_CmdTaskControlSection___type_name,
  (void*) (ROGUEM1214) RogueCmdNoAction__init_object, // CmdNoAction
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1215) RogueCmdNoAction__type_name,
  (void*) (ROGUEM1216) RogueCmdNoAction__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1217) RogueCmdNoAction__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1218) RogueCmdNoAction__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM1219) RogueCmdNoAction__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM1219) RogueCmdNoAction__requires_semicolon,
  (void*) (ROGUEM1220) RogueCmdNoAction__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1221) Rogue_CmdNoAction__type,
  (void*) (ROGUEM1222) RogueCmdNoAction__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1223) RogueListRewriter_Type___init_object, // ListRewriter<<Type>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1224) RogueListRewriter_Type___type_name,
  (void*) (ROGUEM1225) RogueUpdateThisTypeVisitor__init_object, // UpdateThisTypeVisitor
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1226) RogueUpdateThisTypeVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1063) RogueVisitor__visit__CmdAccess,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1064) RogueVisitor__visit__CmdThisContext,
  0,
  0,
  (void*) (ROGUEM1065) RogueVisitor__visit__CmdReadLocal,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1066) RogueVisitor__visit__CmdImplicitAccess,
  (void*) (ROGUEM1067) RogueVisitor__visit__CmdImplicitIDAccess,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1068) RogueVisitor__on_enter__Type,
  (void*) (ROGUEM1069) RogueVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1070) RogueVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1227) RogueUpdateThisTypeVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1072) RogueVisitor__on_leave__CmdCallDynamicMethod,
  (void*) (ROGUEM1228) RogueTable_String_TypeSpecializer___init_object, // Table<<String,TypeSpecializer>>
  (void*) (ROGUEM1228) RogueTable_String_TypeSpecializer___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1229) RogueTable_String_TypeSpecializer___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1229) RogueTable_String_TypeSpecializer___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,TypeSpecializer>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_TypeSpecializer____type_name,
  (void*) (ROGUEM1230) RogueTableEntry_String_TypeSpecializer___init_object, // TableEntry<<String,TypeSpecializer>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1231) RogueTableEntry_String_TypeSpecializer___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1231) RogueTableEntry_String_TypeSpecializer___type_name,
  (void*) (ROGUEM1232) RogueCmdCastToType__init_object, // CmdCastToType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1233) RogueCmdCastToType__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1234) RogueCmdCastToType__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1235) RogueCmdCastToType__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM153) Rogue_Cmd__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1236) RogueCmdCastToType__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM155) RogueCmd__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM798) Rogue_CmdTypeOperator__type,
  (void*) (ROGUEM1237) RogueCmdCastToType__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1238) RogueTraceUsedCodeVisitor__init_object, // TraceUsedCodeVisitor
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1239) RogueTraceUsedCodeVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1063) RogueVisitor__visit__CmdAccess,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1064) RogueVisitor__visit__CmdThisContext,
  0,
  0,
  (void*) (ROGUEM1065) RogueVisitor__visit__CmdReadLocal,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1066) RogueVisitor__visit__CmdImplicitAccess,
  (void*) (ROGUEM1067) RogueVisitor__visit__CmdImplicitIDAccess,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1240) RogueTraceUsedCodeVisitor__on_enter__Type,
  (void*) (ROGUEM1241) RogueTraceUsedCodeVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1242) RogueTraceUsedCodeVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1071) RogueVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1243) RogueTraceUsedCodeVisitor__on_leave__CmdCallDynamicMethod,
  (void*) (ROGUEM1244) RogueCloneMethodArgs__init_object, // CloneMethodArgs
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1245) RogueCloneMethodArgs__type_name,
  (void*) (ROGUEM1246) RogueCloneMethodArgs__register_label__CmdLabel,
  (void*) (ROGUEM1247) RogueTaskArgs__init_object, // TaskArgs
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1248) RogueTaskArgs__type_name,
  (void*) (ROGUEM482) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM1249) RogueToken_List_List__init_object, // Token[][]
  (void*) (ROGUEM1249) RogueToken_List_List__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1250) RogueToken_List_List__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1250) RogueToken_List_List__type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<Token[]>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_Token_List___type_name,
  (void*) (ROGUEM1251) RogueDirectiveTokenType__init_object, // DirectiveTokenType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1252) RogueDirectiveTokenType__type_name,
  0,
  (void*) (ROGUEM1253) RogueDirectiveTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM110) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM111) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM1254) RogueDirectiveTokenType__is_directive,
  (void*) (ROGUEM112) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM112) RogueTokenType__is_structure,
  (void*) (ROGUEM1255) RogueStructuralDirectiveTokenType__init_object, // StructuralDirectiveTokenType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1256) RogueStructuralDirectiveTokenType__type_name,
  0,
  (void*) (ROGUEM1257) RogueStructuralDirectiveTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM110) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM111) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM1258) RogueStructuralDirectiveTokenType__is_directive,
  (void*) (ROGUEM112) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1258) RogueStructuralDirectiveTokenType__is_structure,
  (void*) (ROGUEM1259) RogueEOLTokenType__init_object, // EOLTokenType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1260) RogueEOLTokenType__type_name,
  0,
  (void*) (ROGUEM1261) RogueEOLTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1262) RogueEOLTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM111) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM112) RogueTokenType__is_directive,
  (void*) (ROGUEM112) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1263) RogueEOLTokenType__is_structure,
  (void*) (ROGUEM1264) RogueStructureTokenType__init_object, // StructureTokenType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1265) RogueStructureTokenType__type_name,
  0,
  (void*) (ROGUEM1266) RogueStructureTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM110) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM111) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM112) RogueTokenType__is_directive,
  (void*) (ROGUEM112) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM1267) RogueStructureTokenType__is_structure,
  (void*) (ROGUEM1268) RogueNativeCodeTokenType__init_object, // NativeCodeTokenType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1269) RogueNativeCodeTokenType__type_name,
  0,
  (void*) (ROGUEM109) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1270) RogueNativeCodeTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM1271) RogueNativeCodeTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM112) RogueTokenType__is_directive,
  (void*) (ROGUEM112) RogueTokenType__is_op_with_assign,
  (void*) (ROGUEM112) RogueTokenType__is_structure,
  (void*) (ROGUEM1272) RogueModifyAndAssignTokenType__init_object, // ModifyAndAssignTokenType
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM108) RogueTokenType__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1273) RogueModifyAndAssignTokenType__type_name,
  0,
  (void*) (ROGUEM109) RogueTokenType__create_token__String_Int32_Int32,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM110) RogueTokenType__create_token__String_Int32_Int32_String,
  0,
  (void*) (ROGUEM111) RogueTokenType__create_token__Token_String,
  0,
  (void*) (ROGUEM112) RogueTokenType__is_directive,
  (void*) (ROGUEM1274) RogueModifyAndAssignTokenType__is_op_with_assign,
  (void*) (ROGUEM112) RogueTokenType__is_structure,
  (void*) (ROGUEM1275) RogueFunction_CmdNamedArg_RETURNSLogical__init_object, // Function(CmdNamedArg)->Logical
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1276) RogueFunction_CmdNamedArg_RETURNSLogical__type_name,
  (void*) (ROGUEM1277) RogueFunction_CmdNamedArg_RETURNSLogical__call__CmdNamedArg,
  (void*) (ROGUEM1278) RogueMacroArgs__init_object, // MacroArgs
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1279) RogueMacroArgs__type_name,
  (void*) (ROGUEM482) RogueCloneArgs__register_label__CmdLabel,
  (void*) (ROGUEM1280) RogueTable_String_Cmd___init_object, // Table<<String,Cmd>>
  (void*) (ROGUEM1280) RogueTable_String_Cmd___init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1281) RogueTable_String_Cmd___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1281) RogueTable_String_Cmd___type_name,
  (void*) (ROGUEM0) RogueObject__init_object, // Array<<TableEntry<<String,Cmd>>>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM14) RogueArray_TableEntry_String_Cmd____type_name,
  (void*) (ROGUEM1282) RogueTableEntry_String_Cmd___init_object, // TableEntry<<String,Cmd>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1283) RogueTableEntry_String_Cmd___to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1283) RogueTableEntry_String_Cmd___type_name,
  (void*) (ROGUEM1284) RogueListRewriter_CmdNamedArg___init_object, // ListRewriter<<CmdNamedArg>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1285) RogueListRewriter_CmdNamedArg___type_name,
  (void*) (ROGUEM1286) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object, // Function(CmdNamedArg,CmdNamedArg)->Logical
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1287) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__type_name,
  (void*) (ROGUEM1288) RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__call__CmdNamedArg_CmdNamedArg,
  (void*) (ROGUEM1289) RogueQuicksort_CmdNamedArg___init_object, // Quicksort<<CmdNamedArg>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1290) RogueQuicksort_CmdNamedArg___type_name,
  (void*) (ROGUEM1291) RogueCmdCallInlineNativeRoutine__init_object, // CmdCallInlineNativeRoutine
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1292) RogueCmdCallInlineNative__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1293) RogueCmdCallInlineNativeRoutine__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1294) RogueCmdCallInlineNativeRoutine__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1295) RogueCmdCallInlineNativeRoutine__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1296) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1297) Rogue_CmdCallInlineNativeRoutine__type,
  (void*) (ROGUEM1298) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM1299) RogueCmdCallInlineNative__print_this__CPPWriter,
  (void*) (ROGUEM1300) RogueCmdCallInlineNative__init_object, // CmdCallInlineNative
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1292) RogueCmdCallInlineNative__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1292) RogueCmdCallInlineNative__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM146) RogueCmd__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1301) RogueCmdCallInlineNative__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1296) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM1298) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM1299) RogueCmdCallInlineNative__print_this__CPPWriter,
  (void*) (ROGUEM1302) RogueCmdCallNativeRoutine__init_object, // CmdCallNativeRoutine
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1303) RogueCmdCallNativeRoutine__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1304) RogueCmdCallNativeRoutine__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1305) RogueCmdCallNativeRoutine__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1139) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM1306) RogueCmdCallNativeRoutine__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1307) RogueCmdCallRoutine__init_object, // CmdCallRoutine
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1308) RogueCmdCallRoutine__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1308) RogueCmdCallRoutine__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1309) RogueCmdCallRoutine__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1310) RogueCmdCallRoutine__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1139) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM1311) RogueCmdCallRoutine__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1312) RogueCmdCallInlineNativeMethod__init_object, // CmdCallInlineNativeMethod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1292) RogueCmdCallInlineNative__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1313) RogueCmdCallInlineNativeMethod__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1314) RogueCmdCallInlineNativeMethod__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1315) RogueCmdCallInlineNativeMethod__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1296) RogueCmdCallInlineNative__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1316) Rogue_CmdCallInlineNativeMethod__type,
  (void*) (ROGUEM1298) RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical,
  0,
  (void*) (ROGUEM1317) RogueCmdCallInlineNativeMethod__print_this__CPPWriter,
  (void*) (ROGUEM1318) RogueCmdCallNativeMethod__init_object, // CmdCallNativeMethod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1319) RogueCmdCallNativeMethod__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1320) RogueCmdCallNativeMethod__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1321) RogueCmdCallNativeMethod__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1139) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM1322) RogueCmdCallNativeMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1323) RogueCmdCallAspectMethod__init_object, // CmdCallAspectMethod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1324) RogueCmdCallAspectMethod__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM144) RogueCmd__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1325) RogueCmdCallAspectMethod__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1326) RogueCmdCallAspectMethod__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1138) RogueCmdCall__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1139) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM1327) RogueCmdCallAspectMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1328) RogueCandidateMethods__init_object, // CandidateMethods
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1329) RogueCandidateMethods__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1329) RogueCandidateMethods__type_name,
  (void*) (ROGUEM1330) RogueFunction_2953__init_object, // Function_2953
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1331) RogueFunction_2953__type_name,
  (void*) (ROGUEM1332) RogueFunction_2953__call__CmdNamedArg,
  (void*) (ROGUEM1333) RogueFunction_2954__init_object, // Function_2954
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1334) RogueFunction_2954__type_name,
  (void*) (ROGUEM1335) RogueFunction_2954__call__CmdNamedArg_CmdNamedArg,
  (void*) (ROGUEM1336) RogueIOError__init_object, // IOError
  (void*) (ROGUEM20) RogueException__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM21) RogueException__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1337) RogueIOError__type_name,
  (void*) (ROGUEM22) RogueException__init__String,
  (void*) (ROGUEM1338) RogueFileReader__init_object, // FileReader
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1339) RogueFileReader__type_name,
  (void*) (ROGUEM1340) RogueFileWriter__init_object, // FileWriter
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1341) RogueFileWriter__type_name,
  (void*) (ROGUEM1342) RogueUTF8Reader__init_object, // UTF8Reader
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1343) RogueUTF8Reader__type_name,
  (void*) (ROGUEM1344) RogueQueryToGenericFunctionConversionVisitor__init_object, // QueryToGenericFunctionConversionVisitor
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1345) RogueQueryToGenericFunctionConversionVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1346) RogueQueryToGenericFunctionConversionVisitor__visit__CmdAccess,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1347) RogueQueryToGenericFunctionConversionVisitor__visit__CmdThisContext,
  0,
  0,
  (void*) (ROGUEM1348) RogueQueryToGenericFunctionConversionVisitor__visit__CmdReadLocal,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1349) RogueQueryToGenericFunctionConversionVisitor__visit__CmdImplicitAccess,
  (void*) (ROGUEM1350) RogueQueryToGenericFunctionConversionVisitor__visit__CmdImplicitIDAccess,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1068) RogueVisitor__on_enter__Type,
  (void*) (ROGUEM1069) RogueVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1070) RogueVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1071) RogueVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1072) RogueVisitor__on_leave__CmdCallDynamicMethod,
  (void*) (ROGUEM1351) RogueListReader_CmdSelectCase___init_object, // ListReader<<CmdSelectCase>>
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1352) RogueListReader_CmdSelectCase___type_name,
  0, // Reader<<CmdSelectCase>>
  (void*) (ROGUEM1353) RogueCmdCallStaticMethod__init_object, // CmdCallStaticMethod
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1354) RogueCmdCallStaticMethod__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1354) RogueCmdCallStaticMethod__type_name,
  (void*) (ROGUEM143) RogueCmd__add_to__CmdStatementList,
  (void*) (ROGUEM1142) RogueCmdCallMethod__call_prior__Scope,
  (void*) (ROGUEM145) RogueCmd__cast_to__Type_Scope_Logical_Logical,
  0,
  (void*) (ROGUEM1355) RogueCmdCallStaticMethod__cloned__CloneArgs,
  0,
  0,
  0,
  (void*) (ROGUEM147) RogueCmd__combine_literal_operands__Type,
  0,
  (void*) (ROGUEM1356) RogueCmdCallStaticMethod__dispatch__Visitor,
  (void*) (ROGUEM149) RogueCmd__exit_scope__Scope,
  0,
  0,
  (void*) (ROGUEM150) RogueCmd__generates_output,
  (void*) (ROGUEM150) RogueCmd__is_generic_function,
  0,
  (void*) (ROGUEM151) RogueCmd__implicit_type__Scope,
  0,
  (void*) (ROGUEM150) RogueCmd__is_literal,
  (void*) (ROGUEM152) RogueCmd__require_type_context,
  0,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__require_type,
  0,
  (void*) (ROGUEM150) RogueCmd__requires_semicolon,
  (void*) (ROGUEM1357) RogueCmdCallStaticMethod__resolve__Scope,
  (void*) (ROGUEM154) RogueCmd__resolve_assignment__Scope_Cmd,
  (void*) (ROGUEM1139) RogueCmdCall__resolve_adjust__Scope_Int32,
  (void*) (ROGUEM156) RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd,
  (void*) (ROGUEM150) RogueCmd__to_Logical,
  0,
  (void*) (ROGUEM1137) Rogue_CmdCall__type,
  (void*) (ROGUEM1358) RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical,
  (void*) (ROGUEM1359) RogueNativeCodeToken__init_object, // NativeCodeToken
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1360) RogueNativeCodeToken__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1360) RogueNativeCodeToken__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1360) RogueNativeCodeToken__quoted_name,
  0,
  0,
  (void*) (ROGUEM102) RogueToken__to_Character,
  (void*) (ROGUEM103) RogueToken__to_Int32,
  (void*) (ROGUEM104) RogueToken__to_Int64,
  (void*) (ROGUEM105) RogueToken__to_Real64,
  (void*) (ROGUEM106) RogueToken__to_Type,
  (void*) (ROGUEM1361) RogueContainsImplicitAccessVisitor__init_object, // ContainsImplicitAccessVisitor
  (void*) (ROGUEM1) RogueObject__init,
  0,
  (void*) (ROGUEM2) RogueObject__hash_code,
  0,
  0,
  (void*) (ROGUEM3) RogueObject__operatorEQUALSEQUALS__Object,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM4) RogueObject__to_String,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1362) RogueContainsImplicitAccessVisitor__type_name,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1063) RogueVisitor__visit__CmdAccess,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1064) RogueVisitor__visit__CmdThisContext,
  0,
  0,
  (void*) (ROGUEM1065) RogueVisitor__visit__CmdReadLocal,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1363) RogueContainsImplicitAccessVisitor__visit__CmdImplicitAccess,
  (void*) (ROGUEM1364) RogueContainsImplicitAccessVisitor__visit__CmdImplicitIDAccess,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1068) RogueVisitor__on_enter__Type,
  (void*) (ROGUEM1069) RogueVisitor__on_enter__Method,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1070) RogueVisitor__on_enter__CmdLiteralString,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1071) RogueVisitor__on_enter__CmdThisContext,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  (void*) (ROGUEM1072) RogueVisitor__on_leave__CmdCallDynamicMethod,

};

int Rogue_type_info_table[6210] =
{
  // allocator_index, dynamic_method_table_index, base_class_count, base_class_index[base_class_count], ...
  0,0,0,0,0,0,17,3,0,2,3,0,3,1561,1562,1563,3,4,12,0,34,1,3,0,
  0,0,35,0,0,0,0,36,1,0,1,1564,5,6,1565,459,1566,1567,1568,1569,5,10,10,10,10,
  11,0,53,2,6,0,0,2,1570,459,8,10,0,70,1,0,0,0,0,0,0,0,0,0,87,
  2,9,0,0,0,0,104,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,2,6,
  0,0,2,1570,459,14,10,0,138,1,0,0,0,0,156,2,9,0,0,0,0,173,1,0,0,
  2,1571,1572,16,17,0,191,1,0,0,0,0,208,1,0,0,3,1573,459,1574,18,10,11,0,225,
  2,6,0,0,2,1570,459,19,10,0,242,2,9,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,259,1,0,0,0,0,358,1,0,0,4,1575,1576,1577,1578,10,16,25,
  25,0,375,2,6,0,0,2,1570,459,27,10,0,392,1,0,0,3,1575,1579,1580,10,10,10,0,
  409,2,9,0,0,0,0,426,2,23,0,0,1,1581,29,0,525,1,0,0,7,459,1582,1583,1584,
  1585,1586,1587,10,10,10,30,31,31,31,0,542,2,9,0,0,0,0,559,1,0,0,6,1588,312,
  1589,1590,1591,1592,16,23,31,31,31,10,0,576,2,6,0,0,2,1570,459,33,10,0,593,2,9,
  0,0,0,0,610,2,35,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,36,37,37,37,0,
  641,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,36,37,37,37,0,672,2,9,0,0,
  0,0,689,1,0,0,6,1588,312,1589,1590,1591,1592,16,16,37,37,37,10,0,706,2,0,39,0,
  3,1593,459,458,10,10,16,0,723,0,0,1,1593,10,0,724,2,0,41,0,4,1593,1594,1595,1596,
  10,18,10,11,0,741,0,0,1,1593,10,0,742,2,4,0,0,6,1565,459,1566,1567,1568,1569,5,
  10,10,10,10,11,0,759,1,0,0,0,0,776,1,0,1,1597,45,0,0,793,1,0,0,7,
  459,1582,1583,1584,1585,1586,1587,10,10,10,46,47,47,47,0,810,2,9,0,0,0,0,827,1,0,
  0,6,1588,312,1589,1590,1591,1592,16,24,47,47,47,10,0,844,4,0,49,50,3,0,6,1593,1598,
  1599,1600,1601,1602,10,4,4,419,51,21,0,861,0,0,1,1593,10,0,862,1,3,0,0,0,863,
  1,0,0,0,0,885,2,13,0,0,0,0,903,1,0,0,30,1603,1604,1605,1606,1607,1608,1609,1610,
  1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,297,1625,1626,1627,1628,1629,1630,1631,18,54,18,
  55,55,18,16,18,11,16,16,18,18,11,11,54,11,11,11,16,16,11,11,11,58,121,125,10,
  10,130,0,920,1,0,0,1,1632,55,0,937,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,
  10,56,57,57,57,0,954,2,9,0,0,0,0,971,1,0,0,6,1588,312,1589,1590,1591,1592,16,
  11,57,57,57,10,0,988,2,6,0,0,2,1570,459,120,10,0,1005,1,0,0,13,1633,1634,1635,
  1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,60,16,68,96,97,89,4,100,11,18,34,11,11,0,1022,
  1,0,0,3,1646,1593,459,61,10,10,0,1039,2,6,0,0,2,1570,459,67,10,0,1056,1,0,
  1,1647,35,4,561,1634,1648,1649,63,16,10,10,0,1087,1,0,175,1650,1651,1652,1653,1654,1655,1656,1657,
  1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,
  1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,
  1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,
  1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,120,1749,1750,1751,1752,1753,1754,1755,1756,
  1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,
  1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,
  1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,64,63,63,63,63,63,63,63,
  63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
  63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
  63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
  63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
  63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
  63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
  63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,3,1576,1824,1825,16,11,11,0,
  1117,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,65,66,66,66,0,1134,2,9,0,0,
  0,0,1151,1,0,0,6,1588,312,1589,1590,1591,1592,16,63,66,66,66,10,0,1168,2,9,0,0,
  0,0,1185,1,0,3,1826,1827,1828,69,69,69,45,1829,1576,1830,1575,1831,1832,1833,1834,1835,1836,1837,1838,
  1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1638,1855,1856,1857,1858,1859,1860,1861,1862,
  1863,1864,1865,1866,1867,1868,1869,1870,62,16,71,10,72,79,11,11,11,11,11,11,68,69,69,68,11,
  11,11,68,11,11,82,86,84,10,89,92,89,92,95,113,116,95,113,116,10,11,69,68,119,100,
  16,16,16,0,1202,2,6,0,0,2,1570,459,70,10,0,1219,2,9,0,0,0,0,1236,1,0,
  0,2,1871,1872,10,18,0,1253,1,0,0,8,1829,1576,1646,1830,1873,1874,1875,1876,62,16,61,71,73,
  76,68,69,0,1270,2,6,0,0,2,1570,459,75,10,0,1287,1,0,0,2,1829,1576,62,16,0,
  1304,2,9,0,0,0,0,1321,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,77,78,78,
  78,0,1338,2,9,0,0,0,0,1355,1,0,0,6,1588,312,1589,1590,1591,1592,10,72,78,78,78,
  10,0,1372,2,6,0,0,2,1570,459,81,10,0,1389,1,0,0,3,1576,1575,1646,16,10,61,0,
  1406,2,9,0,0,0,0,1423,2,6,0,0,2,1570,459,85,10,0,1440,1,0,0,4,1829,1576,
  1877,1878,62,16,84,11,0,1457,1,0,0,1,1829,62,0,1508,2,9,0,0,0,0,1525,1,0,
  0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,87,88,88,88,0,1542,2,9,0,0,0,0,1559,
  1,0,0,6,1588,312,1589,1590,1591,1592,16,83,88,88,88,10,0,1576,2,6,0,0,2,1570,459,
  91,10,0,1593,1,0,0,7,1829,1879,1576,561,1830,1880,1868,62,68,16,68,10,84,16,0,1610,2,
  9,0,0,0,0,1627,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,93,94,94,94,0,
  1644,2,9,0,0,0,0,1661,1,0,0,6,1588,312,1589,1590,1591,1592,16,90,94,94,94,10,0,
  1678,2,6,0,0,2,1570,459,112,10,0,1695,1,0,0,29,1829,1879,1576,1881,1830,1882,1883,1884,1885,
  1886,1887,1888,1889,1890,1891,1892,1835,1837,1575,1847,1893,1894,1895,1896,1831,1897,1898,1868,1899,62,68,16,16,71,
  68,68,97,97,10,100,100,69,96,95,16,11,11,10,11,11,103,106,104,109,10,16,16,16,0,
  1712,2,6,0,0,2,1570,459,99,10,0,1729,1,0,0,9,1829,1576,1900,561,1575,1880,1901,1902,1903,
  62,16,16,68,10,84,11,16,16,0,1746,2,9,0,0,0,0,1763,3,101,6,0,1,1904,100,
  2,1570,459,102,10,0,1781,2,6,0,0,2,1570,459,102,10,0,1799,2,9,0,0,0,0,1816,
  2,6,0,0,2,1570,459,105,10,0,1833,2,84,0,0,4,1829,1576,1887,1905,62,16,100,11,0,
  1884,2,9,0,0,0,0,1901,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,107,108,108,
  108,0,1918,2,9,0,0,0,0,1935,1,0,0,6,1588,312,1589,1590,1591,1592,16,104,108,108,108,
  10,0,1952,1,0,0,9,1829,1879,1576,1906,1873,1907,1908,1909,1910,62,68,16,11,73,61,10,109,110,
  0,1969,2,6,0,0,2,1570,459,111,10,0,1986,2,9,0,0,0,0,2003,2,9,0,0,0,
  0,2020,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,114,115,115,115,0,2037,2,9,0,
  0,0,0,2054,1,0,0,6,1588,312,1589,1590,1591,1592,16,95,115,115,115,10,0,2071,1,0,0,
  7,459,1582,1583,1584,1585,1586,1587,10,10,10,117,118,118,118,0,2088,2,9,0,0,0,0,2105,1,
  0,0,6,1588,312,1589,1590,1591,1592,16,96,118,118,118,10,0,2122,1,0,0,2,1879,1911,68,110,
  0,2139,2,9,0,0,0,0,2156,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,122,123,
  123,123,0,2173,2,9,0,0,0,0,2190,1,0,0,6,1588,312,1589,1590,1591,1592,16,124,123,123,
  123,10,0,2207,2,0,39,0,6,1593,1570,459,1648,1649,1912,10,32,10,10,10,10,0,2224,1,0,
  1,1913,126,1,1914,20,0,2241,2,127,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,128,129,
  129,129,0,2258,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,128,129,129,129,0,2275,2,
  9,0,0,0,0,2292,1,0,0,6,1588,312,1589,1590,1591,1592,16,125,129,129,129,10,0,2309,2,
  6,0,0,2,1570,459,134,10,0,2326,1,0,0,7,1576,1915,1916,1917,1918,1919,1920,16,13,132,133,
  133,133,133,0,2343,1,0,0,0,0,2361,1,0,0,0,0,2379,2,9,0,0,0,0,2396,1,
  0,0,42,1921,1922,1923,1924,1925,1926,1927,1928,1577,1929,1892,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,
  1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1639,1953,1954,1955,1956,1957,1958,1959,16,16,10,136,138,
  141,96,96,89,18,18,113,69,147,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,
  68,68,150,18,4,153,10,11,156,170,10,131,0,2413,2,6,0,0,2,1570,459,137,10,0,2430,
  2,9,0,0,0,0,2447,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,139,140,140,140,
  0,2464,2,9,0,0,0,0,2481,1,0,0,6,1588,312,1589,1590,1591,1592,16,72,140,140,140,10,
  0,2498,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,142,143,143,143,0,2515,2,9,0,
  0,0,0,2532,1,0,0,6,1588,312,1589,1590,1591,1592,16,144,143,143,143,10,0,2549,2,6,0,
  0,2,1570,459,146,10,0,2566,1,0,0,4,1829,1576,1840,1646,62,16,69,61,0,2583,2,9,0,
  0,0,0,2600,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,148,149,149,149,0,2617,2,
  9,0,0,0,0,2634,1,0,0,6,1588,312,1589,1590,1591,1592,16,68,149,149,149,10,0,2651,1,
  0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,151,152,152,152,0,2668,2,9,0,0,0,0,
  2685,1,0,0,6,1588,312,1589,1590,1591,1592,16,10,152,152,152,10,0,2702,1,0,0,7,459,1582,
  1583,1584,1585,1586,1587,10,10,10,154,155,155,155,0,2719,2,9,0,0,0,0,2736,1,0,0,6,
  1588,312,1589,1590,1591,1592,16,18,155,155,155,10,0,2753,1,0,0,7,459,1582,1583,1584,1585,1586,1587,
  10,10,10,157,158,158,158,0,2770,2,9,0,0,0,0,2787,1,0,0,6,1588,312,1589,1590,1591,
  1592,68,159,158,158,158,10,0,2804,1,0,2,1960,1961,35,54,5,1962,561,1963,1964,1578,16,68,160,
  11,166,0,2821,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,161,162,162,162,0,2838,2,
  9,0,0,0,0,2855,1,0,0,6,1588,312,1589,1590,1591,1592,16,163,162,162,162,10,0,2872,2,
  6,0,0,2,1570,459,165,10,0,2889,1,0,0,16,1965,1966,1967,1968,1969,1970,1971,1972,1973,1964,1974,
  1975,1976,1977,1978,1979,16,16,16,16,16,18,18,18,11,11,11,11,18,18,18,96,0,2906,2,9,
  0,0,0,0,2923,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,167,168,168,168,0,2940,
  2,9,0,0,0,0,2957,1,0,0,6,1588,312,1589,1590,1591,1592,16,169,168,168,168,10,0,2974,
  1,0,0,9,1975,1966,432,1980,1981,1982,1965,1983,1984,11,16,68,11,90,16,16,16,16,0,2991,1,
  0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,171,172,172,172,0,3008,2,9,0,0,0,0,
  3025,1,0,0,6,1588,312,1589,1590,1591,1592,68,68,172,172,172,10,0,3042,2,15,0,0,2,1571,
  1572,16,17,0,3060,3,173,15,0,0,5,1571,1572,1634,1648,1649,16,17,16,10,10,0,3078,1,0,
  1,1985,176,4,1986,1633,1646,1987,59,179,61,16,0,3095,1,0,0,7,459,1582,1583,1584,1585,1586,1587,
  10,10,10,177,178,178,178,0,3112,2,9,0,0,0,0,3129,1,0,0,6,1588,312,1589,1590,1591,
  1592,16,61,178,178,178,10,0,3146,1,0,0,4,1646,1988,1593,459,61,61,10,10,0,3163,1,0,
  0,7,1634,1633,1646,1989,1990,1991,1992,16,124,61,4,16,10,10,0,3180,2,62,0,0,5,561,1634,
  1648,1649,312,63,16,10,10,22,0,3211,2,62,0,0,5,561,1634,1648,1649,312,63,16,10,10,21,
  0,3242,2,62,0,0,5,561,1634,1648,1649,312,63,16,10,10,10,0,3273,2,62,0,0,5,561,
  1634,1648,1649,312,63,16,10,10,20,0,3304,2,62,0,0,5,561,1634,1648,1649,312,63,16,10,10,
  16,0,3335,1,0,0,3,1594,1993,1994,61,10,10,0,3352,2,132,0,0,1,432,135,0,3370,2,
  133,0,0,1,432,135,0,3388,2,133,0,0,1,432,135,0,3406,2,84,0,0,5,1829,432,1576,
  1995,1996,62,84,16,191,192,0,3457,3,101,6,0,0,2,1570,459,102,10,0,3479,2,6,0,0,
  2,1570,459,194,10,0,3496,2,84,0,0,5,1829,1576,312,1997,1998,62,16,84,11,419,0,3547,2,
  9,0,0,0,0,3564,1,0,0,0,0,3582,3,197,84,0,0,2,1829,1999,62,68,0,3633,2,
  84,0,0,1,1829,62,0,3684,3,199,84,0,0,2,1829,312,62,84,0,3735,2,84,0,0,1,
  1829,62,0,3786,1,0,0,7,1635,1636,2000,2001,2002,2003,2004,68,96,100,84,68,97,201,0,3803,2,
  6,0,0,2,1570,459,204,10,0,3820,3,199,84,0,0,10,1829,1887,2005,2006,2007,2008,2009,2010,2011,
  2012,62,100,10,11,16,11,16,203,203,202,0,3873,1,0,0,2,435,1887,10,100,0,3890,2,9,
  0,0,0,0,3907,2,195,0,0,0,0,3925,2,195,0,0,0,0,3943,1,0,0,7,1634,1989,
  1566,2013,2014,2015,2016,16,4,10,11,10,62,4,0,3960,2,6,0,0,2,1570,459,209,10,0,3977,
  2,9,0,0,0,0,3994,2,0,211,0,3,1593,2017,1587,10,156,158,0,4011,0,0,1,1593,10,
  0,4012,2,6,0,0,2,1570,459,213,10,0,4029,2,9,0,0,0,0,4046,2,0,215,0,3,
  1593,2017,1587,10,166,168,0,4063,0,0,1,1593,10,0,4064,2,0,217,0,3,1593,2017,1587,10,160,
  162,0,4081,0,0,1,1593,10,0,4082,2,6,0,0,2,1570,459,219,10,0,4099,2,9,0,0,
  0,0,4116,3,173,15,0,0,2,1571,1572,16,17,0,4134,1,0,0,1,1632,222,0,4151,1,0,
  0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,223,224,224,224,0,4168,2,9,0,0,0,0,4185,
  1,0,0,6,1588,312,1589,1590,1591,1592,68,11,224,224,224,10,0,4202,1,0,3,2018,2019,2020,18,
  16,422,0,0,4219,1,0,0,2,2021,2022,226,21,0,4236,0,0,1,1593,10,0,4237,2,23,0,
  0,1,312,20,0,4336,2,23,0,0,0,0,4435,2,23,0,0,1,312,0,0,4534,2,23,0,
  1,2023,231,1,312,16,0,4633,3,229,23,0,0,0,0,4732,1,0,0,1,1634,16,0,4749,2,
  13,0,0,1,2024,48,0,4767,2,51,0,0,1,1600,419,0,4789,2,84,0,0,2,1829,2025,62,
  16,0,4840,2,0,41,0,5,1593,2026,2027,1989,2028,10,39,16,4,22,0,4857,2,132,0,0,0,
  0,4875,2,62,0,0,5,561,1634,1648,1649,2029,63,16,10,10,16,0,4906,3,197,84,0,0,2,
  1829,312,62,11,0,4957,3,197,84,0,0,2,1829,312,62,10,0,5008,1,0,0,0,0,5026,3,
  244,84,0,0,3,1829,2030,2031,62,84,84,0,5085,2,84,0,0,3,1829,2030,2031,62,84,84,0,
  5144,3,246,84,0,0,2,1829,294,62,16,0,5195,2,84,0,0,1,1829,62,0,5246,3,246,84,
  0,0,2,1829,294,62,16,0,5297,3,246,84,0,0,3,1829,1634,2032,62,16,16,0,5348,4,202,
  199,84,0,0,12,1829,1887,2005,2006,2007,2008,2009,2010,2011,2012,2033,2034,62,100,10,11,16,11,16,203,
  203,202,84,100,0,5401,4,202,199,84,0,0,13,1829,1887,2005,2006,2007,2008,2009,2010,2011,2012,1877,2035,
  2036,62,100,10,11,16,11,16,203,203,202,84,251,252,0,5454,2,6,0,0,2,1570,459,253,10,
  0,5471,2,84,0,0,3,1829,2037,1887,62,191,100,0,5522,2,9,0,0,0,0,5539,4,202,199,
  84,0,0,10,1829,1887,2005,2006,2007,2008,2009,2010,2011,2012,62,100,10,11,16,11,16,203,203,202,0,
  5592,4,202,199,84,0,0,16,1829,1887,2005,2006,2007,2008,2009,2010,2011,2012,2038,2039,2040,2041,2042,2043,62,
  100,10,11,16,11,16,203,203,202,100,100,16,16,203,203,0,5645,4,202,199,84,0,0,13,1829,
  1887,2005,2006,2007,2008,2009,2010,2011,2012,2044,2033,2045,62,100,10,11,16,11,16,203,203,202,100,84,100,
  0,5698,4,202,199,84,0,0,11,1829,1887,2005,2006,2007,2008,2009,2010,2011,2012,2046,62,100,10,11,16,
  11,16,203,203,202,258,0,5751,2,6,0,0,2,1570,459,260,10,0,5768,2,84,0,0,4,1829,
  2047,2048,1887,62,98,68,100,0,5819,2,9,0,0,0,0,5836,2,84,0,0,4,1829,1877,2049,2050,
  62,84,100,98,0,5887,2,84,0,0,1,1829,62,0,5938,2,84,0,0,2,1829,1877,62,84,0,
  5989,3,197,84,0,0,3,1829,312,1575,62,16,10,0,6040,2,84,0,0,3,1829,2051,1995,62,16,
  191,0,6091,2,84,0,0,2,1829,2052,62,84,0,6142,3,199,84,0,0,3,1829,2053,2054,62,98,
  11,0,6193,2,84,0,0,5,1829,2033,1571,2055,2053,62,84,84,84,98,0,6244,2,84,0,0,3,
  1829,2005,2056,62,10,202,0,6295,2,84,0,0,2,1829,2056,62,202,0,6346,2,84,0,0,3,1829,
  2056,2033,62,255,84,0,6397,2,84,0,0,3,1829,2056,2033,62,255,84,0,6448,2,84,0,0,3,
  1829,2057,2058,62,84,10,0,6499,2,84,0,0,3,1829,2059,2060,62,84,84,0,6550,2,84,0,0,
  4,1829,2059,2061,2060,62,84,63,84,0,6601,2,84,0,0,4,1829,2062,2063,2050,62,84,84,98,0,
  6652,2,84,0,0,2,1829,2053,62,98,0,6703,2,84,0,0,3,1829,2053,2058,62,98,10,0,6754,
  4,280,244,84,0,0,4,1829,2030,2031,1837,62,84,84,11,0,6814,3,244,84,0,0,4,1829,2030,
  2031,1837,62,84,84,11,0,6874,2,84,0,0,4,1829,2064,2065,2066,62,84,84,84,0,6927,3,283,
  84,0,0,4,1829,2061,2060,2053,62,63,84,98,0,6978,2,84,0,0,3,1829,2061,2060,62,63,84,
  0,7029,3,281,84,0,0,4,1829,2064,2065,2066,62,84,84,84,0,7082,3,281,84,0,0,4,1829,
  2064,2065,2066,62,84,84,84,0,7135,4,280,244,84,0,0,4,1829,2030,2031,1837,62,84,84,11,0,
  7195,4,280,244,84,0,0,4,1829,2030,2031,1837,62,84,84,11,0,7255,4,202,199,84,0,0,15,
  1829,1887,2005,2006,2007,2008,2009,2010,2011,2012,2067,2068,2069,2070,2071,62,100,10,11,16,11,16,203,203,202,
  16,16,16,84,84,0,7308,3,281,84,0,0,4,1829,2064,2065,2066,62,84,84,84,0,7361,4,291,
  244,84,0,0,3,1829,2030,2031,62,84,84,0,7421,3,244,84,0,0,3,1829,2030,2031,62,84,84,
  0,7481,4,291,244,84,0,0,3,1829,2030,2031,62,84,84,0,7541,4,291,244,84,0,0,3,1829,
  2030,2031,62,84,84,0,7601,4,280,244,84,0,0,4,1829,2030,2031,1837,62,84,84,11,0,7661,4,
  280,244,84,0,0,4,1829,2030,2031,1837,62,84,84,11,0,7721,4,280,244,84,0,0,4,1829,2030,
  2031,1837,62,84,84,11,0,7781,4,280,244,84,0,0,4,1829,2030,2031,1837,62,84,84,11,0,7841,
  4,280,244,84,0,0,4,1829,2030,2031,1837,62,84,84,11,0,7901,3,300,84,0,0,3,1829,2057,
  2072,62,84,68,0,7952,2,84,0,0,3,1829,2057,2072,62,84,68,0,8003,3,302,84,0,0,2,
  1829,2057,62,84,0,8062,2,84,0,0,2,1829,2057,62,84,0,8121,4,304,244,84,0,0,3,1829,
  2030,2031,62,84,84,0,8180,3,244,84,0,0,3,1829,2030,2031,62,84,84,0,8239,4,304,244,84,
  0,0,3,1829,2030,2031,62,84,84,0,8298,4,304,244,84,0,0,3,1829,2030,2031,62,84,84,0,
  8357,4,304,244,84,0,0,3,1829,2030,2031,62,84,84,0,8416,4,304,244,84,0,0,3,1829,2030,
  2031,62,84,84,0,8475,4,304,244,84,0,0,3,1829,2030,2031,62,84,84,0,8534,3,244,84,0,
  0,3,1829,2030,2031,62,84,84,0,8593,3,244,84,0,0,3,1829,2030,2031,62,84,84,0,8652,3,
  244,84,0,0,3,1829,2030,2031,62,84,84,0,8711,3,244,84,0,0,3,1829,2030,2031,62,84,84,
  0,8770,3,244,84,0,0,3,1829,2030,2031,62,84,84,0,8829,3,302,84,0,0,2,1829,2057,62,
  84,0,8888,3,302,84,0,0,2,1829,2057,62,84,0,8947,3,302,84,0,0,2,1829,2057,62,84,
  0,9006,2,84,0,0,2,1829,2057,62,84,0,9057,2,84,0,0,3,1829,432,1575,62,84,84,0,
  9108,3,300,84,0,0,3,1829,2057,2072,62,84,68,0,9159,2,84,0,0,5,1829,432,1576,1881,1882,
  62,84,16,16,68,0,9210,3,300,84,0,0,3,1829,2057,2072,62,84,68,0,9261,1,0,0,2,
  1576,561,16,68,0,9278,2,6,0,0,2,1570,459,325,10,0,9295,2,9,0,0,0,0,9312,2,
  84,0,0,7,1829,1884,1882,2073,1887,2074,2075,62,324,68,327,100,11,84,0,9363,2,6,0,0,2,
  1570,459,329,10,0,9380,1,0,0,3,1576,312,561,16,84,68,0,9397,2,9,0,0,0,0,9414,
  3,197,84,0,0,1,1829,62,0,9465,3,197,84,0,0,2,1829,312,62,20,0,9516,3,197,84,
  0,0,2,1829,312,62,21,0,9567,3,197,84,0,0,2,1829,312,62,22,0,9618,3,335,84,0,
  0,2,1829,1635,62,68,0,9669,2,84,0,0,2,1829,1635,62,68,0,9720,2,84,0,0,3,1829,
  1995,2076,62,191,68,0,9771,2,84,0,0,4,1829,1576,1995,1996,62,16,191,192,0,9822,2,84,0,
  0,8,1829,294,1636,2077,2078,2079,2060,2003,62,16,96,68,63,10,84,97,0,9873,2,84,0,0,5,
  1829,2053,1877,2035,2080,62,98,84,340,68,0,9924,2,6,0,0,2,1570,459,342,10,0,9941,2,84,
  0,0,5,1829,2037,312,2053,2081,62,101,84,98,11,0,9992,2,9,0,0,0,0,10009,2,84,0,
  0,2,1829,1576,62,16,0,10060,2,84,0,0,2,1829,2082,62,190,0,10111,2,84,0,0,5,1829,
  2033,1571,2055,2053,62,84,84,84,98,0,10162,2,84,0,0,7,1829,2057,1995,1996,2053,2083,2084,62,84,
  191,192,98,84,84,0,10213,2,84,0,0,3,1829,2085,2086,62,16,191,0,10264,2,84,0,0,3,
  1829,1999,1995,62,68,191,0,10315,1,0,0,0,0,10505,4,202,199,84,0,0,13,1829,1887,2005,2006,
  2007,2008,2009,2010,2011,2012,1877,2035,2036,62,100,10,11,16,11,16,203,203,202,84,251,252,0,10558,2,
  84,0,0,2,1829,1999,62,68,0,10609,2,84,0,0,2,1829,1999,62,68,0,10660,2,84,0,0,
  3,1829,1999,2060,62,68,84,0,10711,2,84,0,0,3,1829,2053,2060,62,98,84,0,10762,2,84,0,
  0,2,1829,2087,62,90,0,10813,2,84,0,0,3,1829,2087,2060,62,90,84,0,10864,2,84,0,0,
  3,1829,432,2088,62,84,90,0,10915,2,84,0,0,4,1829,432,2088,2060,62,84,90,84,0,10966,2,
  84,0,0,4,1829,432,2089,1995,62,84,96,191,0,11017,4,361,359,84,0,0,4,1829,432,2089,1995,
  62,84,96,191,0,11068,3,359,84,0,0,4,1829,432,2089,1995,62,84,96,191,0,11119,2,84,0,
  0,4,1829,432,2088,2058,62,84,90,10,0,11170,2,84,0,0,3,1829,2087,2058,62,90,10,0,11221,
  3,283,84,0,0,4,1829,2061,2060,2087,62,63,84,90,0,11272,3,283,84,0,0,5,1829,2061,2060,
  432,2088,62,63,84,84,90,0,11323,2,84,0,0,3,1829,2090,2091,62,68,84,0,11374,2,84,0,
  0,4,1829,432,2090,1575,62,84,68,84,0,11425,2,84,0,0,3,1829,432,2090,62,84,68,0,11476,
  2,84,0,0,5,1829,432,2090,1575,2060,62,84,68,84,84,0,11527,2,84,0,0,3,1829,2092,2093,
  62,371,203,0,11578,2,6,0,0,2,1570,459,372,10,0,11595,2,9,0,0,0,0,11612,2,84,
  0,0,1,1829,62,0,11663,1,0,0,3,1594,1993,1994,69,10,10,0,11680,2,349,0,0,2,1635,
  1636,68,96,0,11870,1,0,0,7,459,1582,1583,1584,1585,1586,1587,10,10,10,377,378,378,378,0,11887,
  2,9,0,0,0,0,11904,1,0,0,6,1588,312,1589,1590,1591,1592,16,80,378,378,378,10,0,11921,
  3,300,84,0,0,3,1829,2057,2072,62,84,68,0,11972,2,349,0,0,0,0,12162,2,242,0,0,
  1,2094,96,0,12180,2,242,0,0,7,2095,2096,2097,2098,2099,2100,2101,68,96,68,96,370,90,90,0,
  12198,2,6,0,0,2,1570,459,384,10,0,12215,2,9,0,0,0,0,12232,2,63,0,0,3,1576,
  1824,1825,16,11,11,0,12262,2,63,0,0,3,1576,1824,1825,16,11,11,0,12292,2,63,0,0,3,
  1576,1824,1825,16,11,11,0,12322,2,63,0,0,3,1576,1824,1825,16,11,11,0,12352,2,63,0,0,
  3,1576,1824,1825,16,11,11,0,12382,2,63,0,0,3,1576,1824,1825,16,11,11,0,12412,1,0,0,
  0,0,12430,2,242,0,0,3,2102,2089,2103,84,96,393,0,12448,1,0,0,7,459,1582,1583,1584,1585,
  1586,1587,10,10,10,394,395,395,395,0,12465,2,9,0,0,0,0,12482,1,0,0,6,1588,312,1589,
  1590,1591,1592,16,84,395,395,395,10,0,12499,1,0,0,3,1594,1993,1994,192,10,10,0,12516,1,0,
  0,0,0,12534,1,0,0,0,0,12551,4,400,359,84,0,0,5,1829,432,2089,1995,2079,62,84,96,
  191,10,0,12604,3,359,84,0,0,5,1829,432,2089,1995,2079,62,84,96,191,10,0,12657,3,359,84,
  0,0,4,1829,432,2089,1995,62,84,96,191,0,12708,3,359,84,0,0,4,1829,432,2089,1995,62,84,
  96,191,0,12759,4,400,359,84,0,0,5,1829,432,2089,1995,2079,62,84,96,191,10,0,12812,3,359,
  84,0,0,4,1829,432,2089,1995,62,84,96,191,0,12863,3,359,84,0,0,4,1829,432,2089,1995,62,
  84,96,191,0,12914,1,0,0,5,1879,2082,2104,2105,2106,68,190,95,95,11,0,12931,2,391,0,0,
  0,0,12949,2,397,0,0,0,0,12967,3,173,15,0,0,2,1571,1572,16,17,0,12985,2,0,49,
  0,6,1593,1634,459,2107,1989,2108,10,16,10,10,5,21,0,13002,2,0,227,0,5,1593,1634,2055,1989,
  2108,10,16,11,5,21,0,13019,2,0,39,0,3,1593,2109,2027,10,49,420,0,13036,2,349,0,0,
  1,2110,326,0,13226,2,0,415,0,4,1593,1594,1595,1596,10,340,10,11,0,13243,0,0,1,1593,10,
  0,13244,4,361,359,84,0,0,4,1829,432,2089,1995,62,84,96,191,0,13295,2,62,0,0,5,561,
  1634,1648,1649,312,63,16,10,10,16,0,13326,2,349,0,0,1,2111,11,0,0,0,0,2,312,509,
  10,11,0,0,0,0,2,312,509,22,11,0,0,0,0,2,312,509,7,11,0,0,0,0,0,
  0,0,0,0,2,312,509,16,11,0,0,0,0,2,312,509,68,11,0,0,0,0,2,312,509,
  96,11,0,0,0,0,2,312,509,84,11
};

void* Rogue_global_property_pointers[] =
{
  (void*) &RogueStringBuilder_work_bytes,
  (void*) &RogueRuntime_type_info_lookup,
  (void*) &RogueToken_filepath_to_filename,
  (void*) &RogueTokenType_lookup,
  (void*) &RogueTokenType_directive_define,
  (void*) &RogueTokenType_directive_include,
  (void*) &RogueTokenType_directive_if,
  (void*) &RogueTokenType_directive_elseIf,
  (void*) &RogueTokenType_directive_else,
  (void*) &RogueTokenType_directive_endIf,
  (void*) &RogueTokenType_directive_module,
  (void*) &RogueTokenType_directive_essential,
  (void*) &RogueTokenType_directive_using,
  (void*) &RogueTokenType_placeholder_id,
  (void*) &RogueTokenType_begin_augment_tokens,
  (void*) &RogueTokenType_keyword_augment,
  (void*) &RogueTokenType_keyword_case,
  (void*) &RogueTokenType_keyword_catch,
  (void*) &RogueTokenType_keyword_class,
  (void*) &RogueTokenType_keyword_DEFINITIONS,
  (void*) &RogueTokenType_keyword_DEPENDENCIES,
  (void*) &RogueTokenType_keyword_else,
  (void*) &RogueTokenType_keyword_elseIf,
  (void*) &RogueTokenType_keyword_endAugment,
  (void*) &RogueTokenType_keyword_endBlock,
  (void*) &RogueTokenType_keyword_endClass,
  (void*) &RogueTokenType_keyword_endContingent,
  (void*) &RogueTokenType_keyword_endForEach,
  (void*) &RogueTokenType_keyword_endFunction,
  (void*) &RogueTokenType_keyword_endIf,
  (void*) &RogueTokenType_keyword_endInstance,
  (void*) &RogueTokenType_keyword_endLoop,
  (void*) &RogueTokenType_keyword_endRoutine,
  (void*) &RogueTokenType_keyword_endTry,
  (void*) &RogueTokenType_keyword_endUnitTest,
  (void*) &RogueTokenType_keyword_endWhich,
  (void*) &RogueTokenType_keyword_endWhile,
  (void*) &RogueTokenType_keyword_ENUMERATE,
  (void*) &RogueTokenType_keyword_GLOBAL,
  (void*) &RogueTokenType_keyword_includeNativeCode,
  (void*) &RogueTokenType_keyword_includeNativeHeader,
  (void*) &RogueTokenType_keyword_instance,
  (void*) &RogueTokenType_keyword_method,
  (void*) &RogueTokenType_keyword_METHODS,
  (void*) &RogueTokenType_keyword_nativeCode,
  (void*) &RogueTokenType_keyword_nativeHeader,
  (void*) &RogueTokenType_keyword_others,
  (void*) &RogueTokenType_keyword_PROPERTIES,
  (void*) &RogueTokenType_keyword_routine,
  (void*) &RogueTokenType_keyword_satisfied,
  (void*) &RogueTokenType_keyword_unsatisfied,
  (void*) &RogueTokenType_keyword_with,
  (void*) &RogueTokenType_symbol_close_brace,
  (void*) &RogueTokenType_symbol_close_bracket,
  (void*) &RogueTokenType_symbol_close_comment,
  (void*) &RogueTokenType_symbol_close_paren,
  (void*) &RogueTokenType_symbol_close_specialize,
  (void*) &RogueTokenType_eol,
  (void*) &RogueTokenType_eoi,
  (void*) &RogueTokenType_keyword_assert,
  (void*) &RogueTokenType_keyword_await,
  (void*) &RogueTokenType_keyword_block,
  (void*) &RogueTokenType_keyword_contingent,
  (void*) &RogueTokenType_keyword_ensure,
  (void*) &RogueTokenType_keyword_escapeBlock,
  (void*) &RogueTokenType_keyword_escapeContingent,
  (void*) &RogueTokenType_keyword_escapeForEach,
  (void*) &RogueTokenType_keyword_escapeIf,
  (void*) &RogueTokenType_keyword_escapeLoop,
  (void*) &RogueTokenType_keyword_escapeTry,
  (void*) &RogueTokenType_keyword_escapeWhich,
  (void*) &RogueTokenType_keyword_escapeWhile,
  (void*) &RogueTokenType_keyword_forEach,
  (void*) &RogueTokenType_keyword_function,
  (void*) &RogueTokenType_keyword_global,
  (void*) &RogueTokenType_keyword_if,
  (void*) &RogueTokenType_keyword_in,
  (void*) &RogueTokenType_keyword_infinity,
  (void*) &RogueTokenType_keyword_is,
  (void*) &RogueTokenType_keyword_isReference,
  (void*) &RogueTokenType_keyword_local,
  (void*) &RogueTokenType_keyword_loop,
  (void*) &RogueTokenType_keyword_NaN,
  (void*) &RogueTokenType_keyword_native,
  (void*) &RogueTokenType_keyword_necessary,
  (void*) &RogueTokenType_keyword_noAction,
  (void*) &RogueTokenType_keyword_null,
  (void*) &RogueTokenType_keyword_of,
  (void*) &RogueTokenType_keyword_require,
  (void*) &RogueTokenType_keyword_return,
  (void*) &RogueTokenType_keyword_select,
  (void*) &RogueTokenType_keyword_nextIteration,
  (void*) &RogueTokenType_keyword_step,
  (void*) &RogueTokenType_keyword_sufficient,
  (void*) &RogueTokenType_keyword_throw,
  (void*) &RogueTokenType_keyword_trace,
  (void*) &RogueTokenType_keyword_trace_args_only,
  (void*) &RogueTokenType_keyword_try,
  (void*) &RogueTokenType_keyword_unitTest,
  (void*) &RogueTokenType_keyword_which,
  (void*) &RogueTokenType_keyword_while,
  (void*) &RogueTokenType_keyword_yield,
  (void*) &RogueTokenType_identifier,
  (void*) &RogueTokenType_type_identifier,
  (void*) &RogueTokenType_literal_character,
  (void*) &RogueTokenType_literal_integer,
  (void*) &RogueTokenType_literal_long,
  (void*) &RogueTokenType_literal_real,
  (void*) &RogueTokenType_literal_string,
  (void*) &RogueTokenType_keyword_and,
  (void*) &RogueTokenType_keyword_as,
  (void*) &RogueTokenType_keyword_downTo,
  (void*) &RogueTokenType_keyword_false,
  (void*) &RogueTokenType_keyword_instanceOf,
  (void*) &RogueTokenType_keyword_meta,
  (void*) &RogueTokenType_keyword_not,
  (void*) &RogueTokenType_keyword_or,
  (void*) &RogueTokenType_keyword_pi,
  (void*) &RogueTokenType_keyword_prior,
  (void*) &RogueTokenType_keyword_this,
  (void*) &RogueTokenType_keyword_true,
  (void*) &RogueTokenType_keyword_xor,
  (void*) &RogueTokenType_symbol_ampersand,
  (void*) &RogueTokenType_symbol_ampersand_equals,
  (void*) &RogueTokenType_symbol_double_ampersand,
  (void*) &RogueTokenType_symbol_arrow,
  (void*) &RogueTokenType_symbol_at,
  (void*) &RogueTokenType_symbol_at_brace,
  (void*) &RogueTokenType_symbol_at_bracket,
  (void*) &RogueTokenType_symbol_backslash,
  (void*) &RogueTokenType_symbol_caret,
  (void*) &RogueTokenType_symbol_caret_equals,
  (void*) &RogueTokenType_symbol_colon,
  (void*) &RogueTokenType_symbol_comma,
  (void*) &RogueTokenType_symbol_compare,
  (void*) &RogueTokenType_symbol_dot,
  (void*) &RogueTokenType_symbol_dot_equals,
  (void*) &RogueTokenType_symbol_downToGreaterThan,
  (void*) &RogueTokenType_symbol_empty_braces,
  (void*) &RogueTokenType_symbol_empty_brackets,
  (void*) &RogueTokenType_symbol_eq,
  (void*) &RogueTokenType_symbol_equals,
  (void*) &RogueTokenType_symbol_exclamation_point,
  (void*) &RogueTokenType_symbol_fat_arrow,
  (void*) &RogueTokenType_symbol_ge,
  (void*) &RogueTokenType_symbol_gt,
  (void*) &RogueTokenType_symbol_le,
  (void*) &RogueTokenType_symbol_lt,
  (void*) &RogueTokenType_symbol_minus,
  (void*) &RogueTokenType_symbol_minus_equals,
  (void*) &RogueTokenType_symbol_minus_minus,
  (void*) &RogueTokenType_symbol_ne,
  (void*) &RogueTokenType_symbol_open_brace,
  (void*) &RogueTokenType_symbol_open_bracket,
  (void*) &RogueTokenType_symbol_open_paren,
  (void*) &RogueTokenType_symbol_open_specialize,
  (void*) &RogueTokenType_symbol_percent,
  (void*) &RogueTokenType_symbol_percent_equals,
  (void*) &RogueTokenType_symbol_plus,
  (void*) &RogueTokenType_symbol_plus_equals,
  (void*) &RogueTokenType_symbol_plus_plus,
  (void*) &RogueTokenType_symbol_question_mark,
  (void*) &RogueTokenType_symbol_semicolon,
  (void*) &RogueTokenType_symbol_shift_left,
  (void*) &RogueTokenType_symbol_shift_right,
  (void*) &RogueTokenType_symbol_shift_right_x,
  (void*) &RogueTokenType_symbol_slash,
  (void*) &RogueTokenType_symbol_slash_equals,
  (void*) &RogueTokenType_symbol_slash_slash,
  (void*) &RogueTokenType_symbol_tilde,
  (void*) &RogueTokenType_symbol_tilde_equals,
  (void*) &RogueTokenType_symbol_times,
  (void*) &RogueTokenType_symbol_times_equals,
  (void*) &RogueTokenType_symbol_upTo,
  (void*) &RogueTokenType_symbol_upToLessThan,
  (void*) &RogueTokenType_symbol_vertical_bar,
  (void*) &RogueTokenType_symbol_vertical_bar_equals,
  (void*) &RogueTokenType_symbol_double_vertical_bar,
  (void*) &RogueType_configure_chain,
  (void*) &RogueType_organize_chain,
  (void*) &RogueType_resolve_chain,
  (void*) &RogueCmdStatementList_current,
  (void*) &RogueStopwatch_stopwatches,
  (void*) &RogueCyClass_ctypes,
  (void*) &RogueCyClass_bad_names,
  (void*) &RoguePreprocessor_definitions,
  (void*) &RogueSystem_command_line_arguments,
  (void*) &RogueSystem_executable_filepath,
  (void*) &RogueSystem_environment,
  (void*) &RogueStringValue_empty_string
};

int Rogue_property_offsets[] =
{
  (int)(intptr_t)&((RogueClassGlobal*)0)->standard_output,
  (int)(intptr_t)&((RogueClassGlobal*)0)->global_output_buffer,
  (int)(intptr_t)&((RogueClassGlobal*)0)->exit_functions,
  (int)(intptr_t)&((RogueStringBuilder*)0)->utf8,
  (int)(intptr_t)&((RogueStringBuilder*)0)->count,
  (int)(intptr_t)&((RogueStringBuilder*)0)->indent,
  (int)(intptr_t)&((RogueStringBuilder*)0)->cursor_offset,
  (int)(intptr_t)&((RogueStringBuilder*)0)->cursor_index,
  (int)(intptr_t)&((RogueStringBuilder*)0)->at_newline,
  (int)(intptr_t)&((RogueByte_List*)0)->data,
  (int)(intptr_t)&((RogueByte_List*)0)->count,
  (int)(intptr_t)&((RogueFunction___List*)0)->data,
  (int)(intptr_t)&((RogueFunction___List*)0)->count,
  (int)(intptr_t)&((RogueException*)0)->message,
  (int)(intptr_t)&((RogueException*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassStackTrace*)0)->entries,
  (int)(intptr_t)&((RogueClassStackTrace*)0)->count,
  (int)(intptr_t)&((RogueClassStackTrace*)0)->is_formatted,
  (int)(intptr_t)&((RogueString_List*)0)->data,
  (int)(intptr_t)&((RogueString_List*)0)->count,
  (int)(intptr_t)&((RogueTypeInfo*)0)->index,
  (int)(intptr_t)&((RogueTypeInfo*)0)->name,
  (int)(intptr_t)&((RogueTypeInfo*)0)->global_properties,
  (int)(intptr_t)&((RogueTypeInfo*)0)->properties,
  (int)(intptr_t)&((RoguePropertyInfo_List*)0)->data,
  (int)(intptr_t)&((RoguePropertyInfo_List*)0)->count,
  (int)(intptr_t)&((RogueClassPropertyInfo*)0)->index,
  (int)(intptr_t)&((RogueClassPropertyInfo*)0)->property_name_index,
  (int)(intptr_t)&((RogueClassPropertyInfo*)0)->property_type_index,
  (int)(intptr_t)&((RogueClassValueTable*)0)->values,
  (int)(intptr_t)&((RogueClassTable_String_Value_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Value_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Value_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Value_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Value_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Value_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Value_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Value_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Value_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Value_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Value_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Value_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Value_*)0)->hash,
  (int)(intptr_t)&((RogueCharacter_List*)0)->data,
  (int)(intptr_t)&((RogueCharacter_List*)0)->count,
  (int)(intptr_t)&((RogueClassStringTable_String_*)0)->count,
  (int)(intptr_t)&((RogueClassStringTable_String_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassStringTable_String_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassStringTable_String_*)0)->bins,
  (int)(intptr_t)&((RogueClassStringTable_String_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassStringTable_String_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassStringTable_String_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_String_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_*)0)->hash,
  (int)(intptr_t)&((RogueClassStringReader*)0)->position,
  (int)(intptr_t)&((RogueClassStringReader*)0)->count,
  (int)(intptr_t)&((RogueClassStringReader*)0)->string,
  (int)(intptr_t)&((RogueClassListReader_String_*)0)->position,
  (int)(intptr_t)&((RogueClassListReader_String_*)0)->list,
  (int)(intptr_t)&((RogueClassListReader_String_*)0)->limit,
  (int)(intptr_t)&((RogueClassListReader_String_*)0)->is_limited,
  (int)(intptr_t)&((RogueClassPrimitiveWorkBuffer*)0)->utf8,
  (int)(intptr_t)&((RogueClassPrimitiveWorkBuffer*)0)->count,
  (int)(intptr_t)&((RogueClassPrimitiveWorkBuffer*)0)->indent,
  (int)(intptr_t)&((RogueClassPrimitiveWorkBuffer*)0)->cursor_offset,
  (int)(intptr_t)&((RogueClassPrimitiveWorkBuffer*)0)->cursor_index,
  (int)(intptr_t)&((RogueClassPrimitiveWorkBuffer*)0)->at_newline,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_TypeInfo_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeInfo_*)0)->hash,
  (int)(intptr_t)&((RogueClassConsole*)0)->position,
  (int)(intptr_t)&((RogueClassConsole*)0)->output_buffer,
  (int)(intptr_t)&((RogueClassConsole*)0)->input_buffer,
  (int)(intptr_t)&((RogueClassConsole*)0)->next_input_byte,
  (int)(intptr_t)&((RogueClassConsole*)0)->io_handler,
  0,
  (int)(intptr_t)&((RogueClassRogueC*)0)->included_files,
  (int)(intptr_t)&((RogueClassRogueC*)0)->manually_included_files,
  (int)(intptr_t)&((RogueClassRogueC*)0)->prefix_path_list,
  (int)(intptr_t)&((RogueClassRogueC*)0)->prefix_path_lookup,
  (int)(intptr_t)&((RogueClassRogueC*)0)->compile_targets,
  (int)(intptr_t)&((RogueClassRogueC*)0)->target_list,
  (int)(intptr_t)&((RogueClassRogueC*)0)->libraries_folder,
  (int)(intptr_t)&((RogueClassRogueC*)0)->source_files,
  (int)(intptr_t)&((RogueClassRogueC*)0)->generate_main,
  (int)(intptr_t)&((RogueClassRogueC*)0)->first_filepath,
  (int)(intptr_t)&((RogueClassRogueC*)0)->output_filepath,
  (int)(intptr_t)&((RogueClassRogueC*)0)->supported_targets,
  (int)(intptr_t)&((RogueClassRogueC*)0)->essential_declarations,
  (int)(intptr_t)&((RogueClassRogueC*)0)->all_essential,
  (int)(intptr_t)&((RogueClassRogueC*)0)->all_api,
  (int)(intptr_t)&((RogueClassRogueC*)0)->essential_files,
  (int)(intptr_t)&((RogueClassRogueC*)0)->manual_files_essential,
  (int)(intptr_t)&((RogueClassRogueC*)0)->all_methods_callable_dynamically,
  (int)(intptr_t)&((RogueClassRogueC*)0)->compile_output,
  (int)(intptr_t)&((RogueClassRogueC*)0)->execute_args,
  (int)(intptr_t)&((RogueClassRogueC*)0)->package_name,
  (int)(intptr_t)&((RogueClassRogueC*)0)->debug_mode,
  (int)(intptr_t)&((RogueClassRogueC*)0)->run_tests,
  (int)(intptr_t)&((RogueClassRogueC*)0)->print_version,
  (int)(intptr_t)&((RogueClassRogueC*)0)->parsers,
  (int)(intptr_t)&((RogueClassRogueC*)0)->parsereaders_by_filepath,
  (int)(intptr_t)&((RogueClassRogueC*)0)->stopwatch,
  (int)(intptr_t)&((RogueClassRogueC*)0)->gc_mode,
  (int)(intptr_t)&((RogueClassRogueC*)0)->gc_threshold,
  (int)(intptr_t)&((RogueClassRogueC*)0)->plugins,
  (int)(intptr_t)&((RogueClassSet_String_*)0)->_t,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Logical_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Logical_*)0)->hash,
  (int)(intptr_t)&((RogueParser_List*)0)->data,
  (int)(intptr_t)&((RogueParser_List*)0)->count,
  (int)(intptr_t)&((RogueClassParser*)0)->reader,
  (int)(intptr_t)&((RogueClassParser*)0)->filepath,
  (int)(intptr_t)&((RogueClassParser*)0)->_this_type,
  (int)(intptr_t)&((RogueClassParser*)0)->this_method,
  (int)(intptr_t)&((RogueClassParser*)0)->local_declarations,
  (int)(intptr_t)&((RogueClassParser*)0)->property_list,
  (int)(intptr_t)&((RogueClassParser*)0)->string_buffer,
  (int)(intptr_t)&((RogueClassParser*)0)->cur_statement_list,
  (int)(intptr_t)&((RogueClassParser*)0)->parsing_augment,
  (int)(intptr_t)&((RogueClassParser*)0)->used_modules,
  (int)(intptr_t)&((RogueClassParser*)0)->module_id_map,
  (int)(intptr_t)&((RogueClassParser*)0)->inserted_module_prefixes,
  (int)(intptr_t)&((RogueClassParser*)0)->implicit_access_used,
  (int)(intptr_t)&((RogueClassTokenReader*)0)->tokens,
  (int)(intptr_t)&((RogueClassTokenReader*)0)->position,
  (int)(intptr_t)&((RogueClassTokenReader*)0)->count,
  (int)(intptr_t)&((RogueToken_List*)0)->data,
  (int)(intptr_t)&((RogueToken_List*)0)->count,
  (int)(intptr_t)&((RogueClassToken*)0)->_type,
  (int)(intptr_t)&((RogueClassToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassToken*)0)->line,
  (int)(intptr_t)&((RogueClassToken*)0)->column,
  (int)(intptr_t)&((RogueClassTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_TokenType_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TokenType_*)0)->hash,
  (int)(intptr_t)&((RogueClassType*)0)->t,
  (int)(intptr_t)&((RogueClassType*)0)->name,
  (int)(intptr_t)&((RogueClassType*)0)->attributes,
  (int)(intptr_t)&((RogueClassType*)0)->index,
  (int)(intptr_t)&((RogueClassType*)0)->source_template,
  (int)(intptr_t)&((RogueClassType*)0)->specializers,
  (int)(intptr_t)&((RogueClassType*)0)->defined,
  (int)(intptr_t)&((RogueClassType*)0)->configured,
  (int)(intptr_t)&((RogueClassType*)0)->organized,
  (int)(intptr_t)&((RogueClassType*)0)->organizing,
  (int)(intptr_t)&((RogueClassType*)0)->resolved,
  (int)(intptr_t)&((RogueClassType*)0)->culled,
  (int)(intptr_t)&((RogueClassType*)0)->base_class,
  (int)(intptr_t)&((RogueClassType*)0)->base_types,
  (int)(intptr_t)&((RogueClassType*)0)->extended_types,
  (int)(intptr_t)&((RogueClassType*)0)->aspect_base_class,
  (int)(intptr_t)&((RogueClassType*)0)->is_array,
  (int)(intptr_t)&((RogueClassType*)0)->is_list,
  (int)(intptr_t)&((RogueClassType*)0)->is_optional,
  (int)(intptr_t)&((RogueClassType*)0)->_element_type,
  (int)(intptr_t)&((RogueClassType*)0)->is_used,
  (int)(intptr_t)&((RogueClassType*)0)->simplify_name,
  (int)(intptr_t)&((RogueClassType*)0)->definition_list,
  (int)(intptr_t)&((RogueClassType*)0)->definition_lookup,
  (int)(intptr_t)&((RogueClassType*)0)->prev_enum_cmd,
  (int)(intptr_t)&((RogueClassType*)0)->next_enum_offset,
  (int)(intptr_t)&((RogueClassType*)0)->global_list,
  (int)(intptr_t)&((RogueClassType*)0)->global_lookup,
  (int)(intptr_t)&((RogueClassType*)0)->property_list,
  (int)(intptr_t)&((RogueClassType*)0)->property_lookup,
  (int)(intptr_t)&((RogueClassType*)0)->global_method_list,
  (int)(intptr_t)&((RogueClassType*)0)->global_method_lookup_by_name,
  (int)(intptr_t)&((RogueClassType*)0)->global_method_lookup_by_signature,
  (int)(intptr_t)&((RogueClassType*)0)->method_list,
  (int)(intptr_t)&((RogueClassType*)0)->method_lookup_by_name,
  (int)(intptr_t)&((RogueClassType*)0)->method_lookup_by_signature,
  (int)(intptr_t)&((RogueClassType*)0)->dynamic_method_table_index,
  (int)(intptr_t)&((RogueClassType*)0)->is_function,
  (int)(intptr_t)&((RogueClassType*)0)->callback_parameter_types,
  (int)(intptr_t)&((RogueClassType*)0)->_callback_return_type,
  (int)(intptr_t)&((RogueClassType*)0)->method_templates,
  (int)(intptr_t)&((RogueClassType*)0)->dependencies,
  (int)(intptr_t)&((RogueClassType*)0)->cpp_name,
  (int)(intptr_t)&((RogueClassType*)0)->cpp_class_name,
  (int)(intptr_t)&((RogueClassType*)0)->cpp_type_name,
  (int)(intptr_t)&((RogueType_List*)0)->data,
  (int)(intptr_t)&((RogueType_List*)0)->count,
  (int)(intptr_t)&((RogueClassAttributes*)0)->flags,
  (int)(intptr_t)&((RogueClassAttributes*)0)->tags,
  (int)(intptr_t)&((RogueClassTemplate*)0)->t,
  (int)(intptr_t)&((RogueClassTemplate*)0)->name,
  (int)(intptr_t)&((RogueClassTemplate*)0)->tokens,
  (int)(intptr_t)&((RogueClassTemplate*)0)->attributes,
  (int)(intptr_t)&((RogueClassTemplate*)0)->type_parameters,
  (int)(intptr_t)&((RogueClassTemplate*)0)->alternates_by_param_count,
  (int)(intptr_t)&((RogueClassTemplate*)0)->_routine_return_type,
  (int)(intptr_t)&((RogueClassTemplate*)0)->routine_parameter_types,
  (int)(intptr_t)&((RogueTypeParameter_List*)0)->data,
  (int)(intptr_t)&((RogueTypeParameter_List*)0)->count,
  (int)(intptr_t)&((RogueClassTypeParameter*)0)->t,
  (int)(intptr_t)&((RogueClassTypeParameter*)0)->name,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_Int32_Template_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Int32_Template_*)0)->hash,
  (int)(intptr_t)&((RogueTypeSpecializer_List*)0)->data,
  (int)(intptr_t)&((RogueTypeSpecializer_List*)0)->count,
  (int)(intptr_t)&((RogueClassTypeSpecializer*)0)->name,
  (int)(intptr_t)&((RogueClassTypeSpecializer*)0)->index,
  (int)(intptr_t)&((RogueClassTypeSpecializer*)0)->tokens,
  (int)(intptr_t)&((RogueDefinition_List*)0)->data,
  (int)(intptr_t)&((RogueDefinition_List*)0)->count,
  (int)(intptr_t)&((RogueClassDefinition*)0)->t,
  (int)(intptr_t)&((RogueClassDefinition*)0)->name,
  (int)(intptr_t)&((RogueClassDefinition*)0)->expression,
  (int)(intptr_t)&((RogueClassDefinition*)0)->is_enumeration,
  (int)(intptr_t)&((RogueClassCmd*)0)->t,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Definition_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Definition_*)0)->hash,
  (int)(intptr_t)&((RogueProperty_List*)0)->data,
  (int)(intptr_t)&((RogueProperty_List*)0)->count,
  (int)(intptr_t)&((RogueClassProperty*)0)->t,
  (int)(intptr_t)&((RogueClassProperty*)0)->type_context,
  (int)(intptr_t)&((RogueClassProperty*)0)->name,
  (int)(intptr_t)&((RogueClassProperty*)0)->_type,
  (int)(intptr_t)&((RogueClassProperty*)0)->attributes,
  (int)(intptr_t)&((RogueClassProperty*)0)->initial_value,
  (int)(intptr_t)&((RogueClassProperty*)0)->cpp_name,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Property_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Property_*)0)->hash,
  (int)(intptr_t)&((RogueMethod_List*)0)->data,
  (int)(intptr_t)&((RogueMethod_List*)0)->count,
  (int)(intptr_t)&((RogueClassMethod*)0)->t,
  (int)(intptr_t)&((RogueClassMethod*)0)->type_context,
  (int)(intptr_t)&((RogueClassMethod*)0)->name,
  (int)(intptr_t)&((RogueClassMethod*)0)->signature,
  (int)(intptr_t)&((RogueClassMethod*)0)->attributes,
  (int)(intptr_t)&((RogueClassMethod*)0)->_return_type,
  (int)(intptr_t)&((RogueClassMethod*)0)->_task_result_type,
  (int)(intptr_t)&((RogueClassMethod*)0)->parameters,
  (int)(intptr_t)&((RogueClassMethod*)0)->locals,
  (int)(intptr_t)&((RogueClassMethod*)0)->min_args,
  (int)(intptr_t)&((RogueClassMethod*)0)->statements,
  (int)(intptr_t)&((RogueClassMethod*)0)->aspect_statements,
  (int)(intptr_t)&((RogueClassMethod*)0)->incorporating_classes,
  (int)(intptr_t)&((RogueClassMethod*)0)->overridden_method,
  (int)(intptr_t)&((RogueClassMethod*)0)->overriding_methods,
  (int)(intptr_t)&((RogueClassMethod*)0)->native_code,
  (int)(intptr_t)&((RogueClassMethod*)0)->organized,
  (int)(intptr_t)&((RogueClassMethod*)0)->resolved,
  (int)(intptr_t)&((RogueClassMethod*)0)->index,
  (int)(intptr_t)&((RogueClassMethod*)0)->is_used,
  (int)(intptr_t)&((RogueClassMethod*)0)->called_dynamically,
  (int)(intptr_t)&((RogueClassMethod*)0)->label_list,
  (int)(intptr_t)&((RogueClassMethod*)0)->label_lookup,
  (int)(intptr_t)&((RogueClassMethod*)0)->cur_label,
  (int)(intptr_t)&((RogueClassMethod*)0)->source_template,
  (int)(intptr_t)&((RogueClassMethod*)0)->specializer_count,
  (int)(intptr_t)&((RogueClassMethod*)0)->unspecialized_name,
  (int)(intptr_t)&((RogueClassMethod*)0)->cpp_name,
  (int)(intptr_t)&((RogueClassMethod*)0)->cpp_typedef,
  (int)(intptr_t)&((RogueLocal_List*)0)->data,
  (int)(intptr_t)&((RogueLocal_List*)0)->count,
  (int)(intptr_t)&((RogueClassLocal*)0)->t,
  (int)(intptr_t)&((RogueClassLocal*)0)->name,
  (int)(intptr_t)&((RogueClassLocal*)0)->original_name,
  (int)(intptr_t)&((RogueClassLocal*)0)->_type,
  (int)(intptr_t)&((RogueClassLocal*)0)->index,
  (int)(intptr_t)&((RogueClassLocal*)0)->initial_value,
  (int)(intptr_t)&((RogueClassLocal*)0)->is_modified,
  (int)(intptr_t)&((RogueClassLocal*)0)->_cpp_name,
  (int)(intptr_t)&((RogueClassLocal*)0)->_parameter_cpp_name,
  (int)(intptr_t)&((RogueClassCmdStatementList*)0)->data,
  (int)(intptr_t)&((RogueClassCmdStatementList*)0)->count,
  (int)(intptr_t)&((RogueCmd_List*)0)->data,
  (int)(intptr_t)&((RogueCmd_List*)0)->count,
  (int)(intptr_t)&((RogueCmdLabel_List*)0)->data,
  (int)(intptr_t)&((RogueCmdLabel_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdLabel*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLabel*)0)->name,
  (int)(intptr_t)&((RogueClassCmdLabel*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdLabel*)0)->is_referenced,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_CmdLabel_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CmdLabel_*)0)->hash,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->t,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->type_context,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->name,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->is_global,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->type_parameters,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->template_tokens,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->parameter_count,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->overridden_m,
  (int)(intptr_t)&((RogueClassMethodTemplate*)0)->overrides,
  (int)(intptr_t)&((RogueMethodTemplate_List*)0)->data,
  (int)(intptr_t)&((RogueMethodTemplate_List*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Method_List_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_List_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Method_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Method_*)0)->hash,
  (int)(intptr_t)&((RogueClassMethodTemplates*)0)->type_context,
  (int)(intptr_t)&((RogueClassMethodTemplates*)0)->templates,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_ParseReader_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_ParseReader_*)0)->hash,
  (int)(intptr_t)&((RogueClassParseReader*)0)->position,
  (int)(intptr_t)&((RogueClassParseReader*)0)->data,
  (int)(intptr_t)&((RogueClassParseReader*)0)->count,
  (int)(intptr_t)&((RogueClassParseReader*)0)->line,
  (int)(intptr_t)&((RogueClassParseReader*)0)->column,
  (int)(intptr_t)&((RogueClassParseReader*)0)->spaces_per_tab,
  (int)(intptr_t)&((RogueClassStopwatch*)0)->start_time,
  (int)(intptr_t)&((RogueClassStringTable_Stopwatch_*)0)->count,
  (int)(intptr_t)&((RogueClassStringTable_Stopwatch_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassStringTable_Stopwatch_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassStringTable_Stopwatch_*)0)->bins,
  (int)(intptr_t)&((RogueClassStringTable_Stopwatch_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassStringTable_Stopwatch_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassStringTable_Stopwatch_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTable_String_Stopwatch_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Stopwatch_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Stopwatch_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Stopwatch_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Stopwatch_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Stopwatch_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Stopwatch_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Stopwatch_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Stopwatch_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Stopwatch_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Stopwatch_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Stopwatch_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Stopwatch_*)0)->hash,
  (int)(intptr_t)&((RoguePlugin_List*)0)->data,
  (int)(intptr_t)&((RoguePlugin_List*)0)->count,
  (int)(intptr_t)&((RogueClassPlugin*)0)->name,
  (int)(intptr_t)&((RogueClassPlugin*)0)->collect_supported_types_callback,
  (int)(intptr_t)&((RogueClassPlugin*)0)->generate_additonal_types_callback,
  (int)(intptr_t)&((RogueClassPlugin*)0)->start_header_file_callback,
  (int)(intptr_t)&((RogueClassPlugin*)0)->finish_header_file_callback,
  (int)(intptr_t)&((RogueClassPlugin*)0)->start_code_file_callback,
  (int)(intptr_t)&((RogueClassPlugin*)0)->finish_code_file_callback,
  (int)(intptr_t)&((RogueClassProgram*)0)->code_prefix,
  (int)(intptr_t)&((RogueClassProgram*)0)->program_name,
  (int)(intptr_t)&((RogueClassProgram*)0)->unique_integer,
  (int)(intptr_t)&((RogueClassProgram*)0)->template_list,
  (int)(intptr_t)&((RogueClassProgram*)0)->template_lookup,
  (int)(intptr_t)&((RogueClassProgram*)0)->augment_lookup,
  (int)(intptr_t)&((RogueClassProgram*)0)->m_on_launch,
  (int)(intptr_t)&((RogueClassProgram*)0)->m_run_tests,
  (int)(intptr_t)&((RogueClassProgram*)0)->global_properties,
  (int)(intptr_t)&((RogueClassProgram*)0)->native_header,
  (int)(intptr_t)&((RogueClassProgram*)0)->native_code,
  (int)(intptr_t)&((RogueClassProgram*)0)->methods_by_signature,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_list,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_lookup,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_null,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Real64,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Real32,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Int64,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Int32,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Character,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Byte,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Logical,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Object,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_String,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_NativeArray,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_GenericList,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Global,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Exception,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_WeakReference,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_Value,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_StringBuilder,
  (int)(intptr_t)&((RogueClassProgram*)0)->type_TypeInfo,
  (int)(intptr_t)&((RogueClassProgram*)0)->literal_string_lookup,
  (int)(intptr_t)&((RogueClassProgram*)0)->literal_string_list,
  (int)(intptr_t)&((RogueClassProgram*)0)->string_buffer,
  (int)(intptr_t)&((RogueClassProgram*)0)->ids_by_module,
  (int)(intptr_t)&((RogueClassProgram*)0)->cy_delegate_construction_pass,
  (int)(intptr_t)&((RogueClassProgram*)0)->cy_first_code_file,
  (int)(intptr_t)&((RogueClassProgram*)0)->cy_delegates,
  (int)(intptr_t)&((RogueClassProgram*)0)->cy_delegate_to_pydelegate,
  (int)(intptr_t)&((RogueClassProgram*)0)->cy_overload_count,
  (int)(intptr_t)&((RogueClassProgram*)0)->cy_plugin,
  (int)(intptr_t)&((RogueTemplate_List*)0)->data,
  (int)(intptr_t)&((RogueTemplate_List*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Template_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Template_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Augment_List_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Augment_List_*)0)->hash,
  (int)(intptr_t)&((RogueAugment_List*)0)->data,
  (int)(intptr_t)&((RogueAugment_List*)0)->count,
  (int)(intptr_t)&((RogueClassAugment*)0)->t,
  (int)(intptr_t)&((RogueClassAugment*)0)->name,
  (int)(intptr_t)&((RogueClassAugment*)0)->base_types,
  (int)(intptr_t)&((RogueClassAugment*)0)->tokens,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Type_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Type_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Int32_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Int32_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_String_List_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_String_List_*)0)->hash,
  (int)(intptr_t)&((RogueClassTable_Type_CyClass_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_Type_CyClass_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_Type_CyClass_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_Type_CyClass_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_Type_CyClass_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_Type_CyClass_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_Type_CyClass_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_CyClass_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_Type_CyClass_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_Type_CyClass_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_CyClass_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_CyClass_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_CyClass_*)0)->hash,
  (int)(intptr_t)&((RogueClassCyClass*)0)->_pytype,
  (int)(intptr_t)&((RogueClassCyClass*)0)->_type,
  (int)(intptr_t)&((RogueClassCyClass*)0)->funcs,
  (int)(intptr_t)&((RogueClassCyClass*)0)->is_routine,
  (int)(intptr_t)&((RogueClassCyClass*)0)->properties,
  (int)(intptr_t)&((RogueClassTable_String_CyMethod_List_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_CyMethod_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_CyMethod_List_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_CyMethod_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_CyMethod_List_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_CyMethod_List_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_CyMethod_List_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyMethod_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyMethod_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyMethod_List_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyMethod_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyMethod_List_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyMethod_List_*)0)->hash,
  (int)(intptr_t)&((RogueCyMethod_List*)0)->data,
  (int)(intptr_t)&((RogueCyMethod_List*)0)->count,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->cname,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->pyname,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->pyclass,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->cproto_return,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->return_converter,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->call_args,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->cproto_params,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->py_params,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->is_initializer,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->is_routine,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->is_static_method,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->valid,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->defaults,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->py_types,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->prologue,
  (int)(intptr_t)&((RogueClassCyMethod*)0)->real_method,
  (int)(intptr_t)&((RogueClassTable_String_CyProperty_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_CyProperty_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_CyProperty_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_CyProperty_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_CyProperty_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_CyProperty_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_CyProperty_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyProperty_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyProperty_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyProperty_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyProperty_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyProperty_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_CyProperty_*)0)->hash,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->valid,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->pyname,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->is_static,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->prop,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->_ctype,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->cname,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->read_c_code,
  (int)(intptr_t)&((RogueClassCyProperty*)0)->write_c_code,
  (int)(intptr_t)&((RogueClassTable_Type_Type_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_Type_Type_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_Type_Type_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_Type_Type_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_Type_Type_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_Type_Type_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_Type_Type_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Type_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Type_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Type_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Type_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Type_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Type_*)0)->hash,
  (int)(intptr_t)&((RogueClassError*)0)->message,
  (int)(intptr_t)&((RogueClassError*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassRogueError*)0)->message,
  (int)(intptr_t)&((RogueClassRogueError*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassRogueError*)0)->filepath,
  (int)(intptr_t)&((RogueClassRogueError*)0)->line,
  (int)(intptr_t)&((RogueClassRogueError*)0)->column,
  (int)(intptr_t)&((RogueClassPreprocessor*)0)->parser,
  (int)(intptr_t)&((RogueClassPreprocessor*)0)->reader,
  (int)(intptr_t)&((RogueClassPreprocessor*)0)->tokens,
  (int)(intptr_t)&((RogueClassPreprocessor*)0)->cur_module,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Token_List_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Token_List_*)0)->hash,
  (int)(intptr_t)&((RogueClassPreprocessorTokenReader*)0)->tokens,
  (int)(intptr_t)&((RogueClassPreprocessorTokenReader*)0)->queue,
  (int)(intptr_t)&((RogueClassPreprocessorTokenReader*)0)->position,
  (int)(intptr_t)&((RogueClassPreprocessorTokenReader*)0)->count,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->filepath,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->reader,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->tokens,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->buffer,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->next_filepath,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->next_line,
  (int)(intptr_t)&((RogueClassTokenizer*)0)->next_column,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->_type,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->line,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->column,
  (int)(intptr_t)&((RogueClassLiteralCharacterToken*)0)->value,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->_type,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->filepath,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->line,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->column,
  (int)(intptr_t)&((RogueClassLiteralInt64Token*)0)->value,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->_type,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->filepath,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->line,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->column,
  (int)(intptr_t)&((RogueClassLiteralInt32Token*)0)->value,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->_type,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->filepath,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->line,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->column,
  (int)(intptr_t)&((RogueClassLiteralReal64Token*)0)->value,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->_type,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->line,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->column,
  (int)(intptr_t)&((RogueClassStringDataToken*)0)->value,
  (int)(intptr_t)&((RogueClassListRewriter_Token_*)0)->list,
  (int)(intptr_t)&((RogueClassListRewriter_Token_*)0)->read_index,
  (int)(intptr_t)&((RogueClassListRewriter_Token_*)0)->write_index,
  (int)(intptr_t)&((RogueClassProgram_cy_create_delegates__*)0)->context,
  (int)(intptr_t)&((RogueClassProgram_cy_on_header_end_Object_*)0)->context,
  (int)(intptr_t)&((RogueClassProgram_cy_on_code_end_Object_*)0)->context,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->context,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->name,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->args,
  (int)(intptr_t)&((RogueClassCmdAccess*)0)->named_args,
  (int)(intptr_t)&((RogueClassCmdArgs*)0)->data,
  (int)(intptr_t)&((RogueClassCmdArgs*)0)->count,
  (int)(intptr_t)&((RogueCmdNamedArg_List*)0)->data,
  (int)(intptr_t)&((RogueCmdNamedArg_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->name,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->value,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->is_negative,
  (int)(intptr_t)&((RogueClassCmdNamedArg*)0)->inferred_index,
  (int)(intptr_t)&((RogueClassCmdDefaultValue*)0)->t,
  (int)(intptr_t)&((RogueClassCmdDefaultValue*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdLiteral*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReturn*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReturn*)0)->value,
  (int)(intptr_t)&((RogueClassCmdStatement*)0)->t,
  (int)(intptr_t)&((RogueClassScope*)0)->_this_type,
  (int)(intptr_t)&((RogueClassScope*)0)->this_method,
  (int)(intptr_t)&((RogueClassScope*)0)->this_body,
  (int)(intptr_t)&((RogueClassScope*)0)->this_statement,
  (int)(intptr_t)&((RogueClassScope*)0)->_implicit_type,
  (int)(intptr_t)&((RogueClassScope*)0)->local_list,
  (int)(intptr_t)&((RogueClassScope*)0)->control_stack,
  (int)(intptr_t)&((RogueCmdControlStructure_List*)0)->data,
  (int)(intptr_t)&((RogueCmdControlStructure_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->t,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdControlStructure*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdTaskControlSection*)0)->ip,
  (int)(intptr_t)&((RogueClassCmdTaskControlSection*)0)->statements,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->filepath,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->buffer,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->indent,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->needs_indent,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->line_number,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->trace_token,
  (int)(intptr_t)&((RogueClassCPPWriter*)0)->temp_buffer,
  (int)(intptr_t)&((RogueInt32_List*)0)->data,
  (int)(intptr_t)&((RogueInt32_List*)0)->count,
  (int)(intptr_t)&((RogueClassTableValueReader_Type_CyClass_*)0)->position,
  (int)(intptr_t)&((RogueClassTableValueReader_Type_CyClass_*)0)->table,
  (int)(intptr_t)&((RogueClassTableValueReader_Type_CyClass_*)0)->cur_entry,
  (int)(intptr_t)&((RogueCyClass_List*)0)->data,
  (int)(intptr_t)&((RogueCyClass_List*)0)->count,
  (int)(intptr_t)&((RogueClassTableValueReader_String_CyProperty_*)0)->position,
  (int)(intptr_t)&((RogueClassTableValueReader_String_CyProperty_*)0)->table,
  (int)(intptr_t)&((RogueClassTableValueReader_String_CyProperty_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableValueReader_String_CyMethod_List_*)0)->position,
  (int)(intptr_t)&((RogueClassTableValueReader_String_CyMethod_List_*)0)->table,
  (int)(intptr_t)&((RogueClassTableValueReader_String_CyMethod_List_*)0)->cur_entry,
  (int)(intptr_t)&((RogueCyMethod_List_List*)0)->data,
  (int)(intptr_t)&((RogueCyMethod_List_List*)0)->count,
  (int)(intptr_t)&((RogueClassRequirementError*)0)->message,
  (int)(intptr_t)&((RogueClassRequirementError*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassSet_Type_*)0)->_t,
  (int)(intptr_t)&((RogueClassTable_Type_Logical_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_Type_Logical_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_Type_Logical_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_Type_Logical_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_Type_Logical_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_Type_Logical_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_Type_Logical_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Logical_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Logical_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Logical_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Logical_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Logical_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_Type_Logical_*)0)->hash,
  (int)(intptr_t)&((RogueWeakReference*)0)->next_weak_reference,
  0,
  (int)(intptr_t)&((RogueClassReal64Value*)0)->value,
  (int)(intptr_t)&((RogueClassObjectValue*)0)->value,
  (int)(intptr_t)&((RogueClassStringValue*)0)->value,
  (int)(intptr_t)&((RogueClassFile*)0)->filepath,
  (int)(intptr_t)&((RogueClassFunction_1094*)0)->console,
  (int)(intptr_t)&((RogueClassBlockingConsoleIOHandler*)0)->next_input_byte,
  (int)(intptr_t)&((RogueClassCmdMakeRequisite*)0)->t,
  (int)(intptr_t)&((RogueClassCmdMakeRequisite*)0)->pattern,
  (int)(intptr_t)&((RogueClassLineReader*)0)->position,
  (int)(intptr_t)&((RogueClassLineReader*)0)->source,
  (int)(intptr_t)&((RogueClassLineReader*)0)->next,
  (int)(intptr_t)&((RogueClassLineReader*)0)->buffer,
  (int)(intptr_t)&((RogueClassLineReader*)0)->prev,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->_type,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->line,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->column,
  (int)(intptr_t)&((RogueClassEOLToken*)0)->comment,
  (int)(intptr_t)&((RogueClassCmdLiteralLogical*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralLogical*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralInt32*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralInt32*)0)->value,
  (int)(intptr_t)&((RogueClassCmdAdd*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdd*)0)->left,
  (int)(intptr_t)&((RogueClassCmdAdd*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBinary*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBinary*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBinary*)0)->right,
  (int)(intptr_t)&((RogueClassCmdNativeHeader*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNativeHeader*)0)->code,
  (int)(intptr_t)&((RogueClassCmdNativeSource*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNativeCode*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNativeCode*)0)->code,
  (int)(intptr_t)&((RogueClassCmdIncludeNative*)0)->t,
  (int)(intptr_t)&((RogueClassCmdIncludeNative*)0)->filepath,
  (int)(intptr_t)&((RogueClassCmdIncludeNative*)0)->_file_type,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->t,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdIf*)0)->else_statements,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->cases,
  (int)(intptr_t)&((RogueClassCmdWhich*)0)->case_others,
  (int)(intptr_t)&((RogueCmdWhichCase_List*)0)->data,
  (int)(intptr_t)&((RogueCmdWhichCase_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdWhichCase*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWhichCase*)0)->conditions,
  (int)(intptr_t)&((RogueClassCmdWhichCase*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdBlock*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->t,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->satisfied_statements,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->unsatisfied_statements,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->satisfied_label,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->unsatisfied_label,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->satisfied_section,
  (int)(intptr_t)&((RogueClassCmdContingent*)0)->unsatisfied_section,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->t,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->control_statements,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdGenericLoop*)0)->upkeep,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdTry*)0)->catches,
  (int)(intptr_t)&((RogueCmdCatch_List*)0)->data,
  (int)(intptr_t)&((RogueCmdCatch_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdCatch*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCatch*)0)->error_var,
  (int)(intptr_t)&((RogueClassCmdCatch*)0)->_error_type,
  (int)(intptr_t)&((RogueClassCmdCatch*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdAwait*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAwait*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdAwait*)0)->statement_list,
  (int)(intptr_t)&((RogueClassCmdAwait*)0)->result_var,
  (int)(intptr_t)&((RogueClassCmdYield*)0)->t,
  (int)(intptr_t)&((RogueClassCmdThrow*)0)->t,
  (int)(intptr_t)&((RogueClassCmdThrow*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdLiteralString*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralString*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralString*)0)->index,
  (int)(intptr_t)&((RogueClassCmdFormattedString*)0)->t,
  (int)(intptr_t)&((RogueClassCmdFormattedString*)0)->format,
  (int)(intptr_t)&((RogueClassCmdFormattedString*)0)->args,
  (int)(intptr_t)&((RogueClassCmdTrace*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTrace*)0)->info,
  (int)(intptr_t)&((RogueClassCmdLocalDeclaration*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLocalDeclaration*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdLocalDeclaration*)0)->skip_initialization,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->message,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->error,
  (int)(intptr_t)&((RogueClassCmdAssert*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdEscape*)0)->t,
  (int)(intptr_t)&((RogueClassCmdEscape*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdEscape*)0)->target_cmd,
  (int)(intptr_t)&((RogueClassCmdNextIteration*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNextIteration*)0)->target_cmd,
  (int)(intptr_t)&((RogueClassCmdNecessary*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNecessary*)0)->target_cmd,
  (int)(intptr_t)&((RogueClassCmdNecessary*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdSufficient*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSufficient*)0)->target_cmd,
  (int)(intptr_t)&((RogueClassCmdSufficient*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdAdjust*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdjust*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdAdjust*)0)->delta,
  (int)(intptr_t)&((RogueClassCmdAssign*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAssign*)0)->target,
  (int)(intptr_t)&((RogueClassCmdAssign*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssign*)0)->t,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssign*)0)->target,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssign*)0)->op,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssign*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdTryExpression*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTryExpression*)0)->try_expression,
  (int)(intptr_t)&((RogueClassCmdTryExpression*)0)->else_expression,
  (int)(intptr_t)&((RogueClassCmdTryExpression*)0)->result_var,
  (int)(intptr_t)&((RogueClassCmdReadLocal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadLocal*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdAdjustLocal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdjustLocal*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdAdjustLocal*)0)->delta,
  (int)(intptr_t)&((RogueClassCmdCompareLE*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareLE*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareLE*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareLE*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdComparison*)0)->t,
  (int)(intptr_t)&((RogueClassCmdComparison*)0)->left,
  (int)(intptr_t)&((RogueClassCmdComparison*)0)->right,
  (int)(intptr_t)&((RogueClassCmdComparison*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdRange*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRange*)0)->first,
  (int)(intptr_t)&((RogueClassCmdRange*)0)->last,
  (int)(intptr_t)&((RogueClassCmdRange*)0)->step_size,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignLocal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignLocal*)0)->op,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignLocal*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignLocal*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdResolvedModifyAndAssign*)0)->t,
  (int)(intptr_t)&((RogueClassCmdResolvedModifyAndAssign*)0)->op,
  (int)(intptr_t)&((RogueClassCmdResolvedModifyAndAssign*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdRangeUpTo*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRangeUpTo*)0)->first,
  (int)(intptr_t)&((RogueClassCmdRangeUpTo*)0)->last,
  (int)(intptr_t)&((RogueClassCmdRangeUpTo*)0)->step_size,
  (int)(intptr_t)&((RogueClassCmdRangeUpToLessThan*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRangeUpToLessThan*)0)->first,
  (int)(intptr_t)&((RogueClassCmdRangeUpToLessThan*)0)->last,
  (int)(intptr_t)&((RogueClassCmdRangeUpToLessThan*)0)->step_size,
  (int)(intptr_t)&((RogueClassCmdCompareLT*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareLT*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareLT*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareLT*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareGE*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareGE*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareGE*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareGE*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->t,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->control_var_name,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->index_var_name,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->collection_var_name,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->collection,
  (int)(intptr_t)&((RogueClassCmdForEach*)0)->step_cmd,
  (int)(intptr_t)&((RogueClassCmdRangeDownTo*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRangeDownTo*)0)->first,
  (int)(intptr_t)&((RogueClassCmdRangeDownTo*)0)->last,
  (int)(intptr_t)&((RogueClassCmdRangeDownTo*)0)->step_size,
  (int)(intptr_t)&((RogueClassCmdLogicalXor*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalXor*)0)->left,
  (int)(intptr_t)&((RogueClassCmdLogicalXor*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBinaryLogical*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBinaryLogical*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBinaryLogical*)0)->right,
  (int)(intptr_t)&((RogueClassCmdLogicalOr*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalOr*)0)->left,
  (int)(intptr_t)&((RogueClassCmdLogicalOr*)0)->right,
  (int)(intptr_t)&((RogueClassCmdLogicalAnd*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalAnd*)0)->left,
  (int)(intptr_t)&((RogueClassCmdLogicalAnd*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareEQ*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareEQ*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareEQ*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareEQ*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareIsNot*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareIsNot*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareIsNot*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareIsNot*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareIs*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareIs*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareIs*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareIs*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareNE*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareNE*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareNE*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareNE*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdCompareGT*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCompareGT*)0)->left,
  (int)(intptr_t)&((RogueClassCmdCompareGT*)0)->right,
  (int)(intptr_t)&((RogueClassCmdCompareGT*)0)->resolved,
  (int)(intptr_t)&((RogueClassCmdInstanceOf*)0)->t,
  (int)(intptr_t)&((RogueClassCmdInstanceOf*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdInstanceOf*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCmdTypeOperator*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTypeOperator*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdTypeOperator*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCmdLogicalNot*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalNot*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdUnary*)0)->t,
  (int)(intptr_t)&((RogueClassCmdUnary*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdBitwiseXor*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseXor*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseXor*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseOp*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseOp*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseOp*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseOr*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseOr*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseOr*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseAnd*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseAnd*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseAnd*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftLeft*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftLeft*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftLeft*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRight*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRight*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRight*)0)->right,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRightX*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRightX*)0)->left,
  (int)(intptr_t)&((RogueClassCmdBitwiseShiftRightX*)0)->right,
  (int)(intptr_t)&((RogueClassCmdSubtract*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSubtract*)0)->left,
  (int)(intptr_t)&((RogueClassCmdSubtract*)0)->right,
  (int)(intptr_t)&((RogueClassCmdMultiply*)0)->t,
  (int)(intptr_t)&((RogueClassCmdMultiply*)0)->left,
  (int)(intptr_t)&((RogueClassCmdMultiply*)0)->right,
  (int)(intptr_t)&((RogueClassCmdDivide*)0)->t,
  (int)(intptr_t)&((RogueClassCmdDivide*)0)->left,
  (int)(intptr_t)&((RogueClassCmdDivide*)0)->right,
  (int)(intptr_t)&((RogueClassCmdMod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdMod*)0)->left,
  (int)(intptr_t)&((RogueClassCmdMod*)0)->right,
  (int)(intptr_t)&((RogueClassCmdPower*)0)->t,
  (int)(intptr_t)&((RogueClassCmdPower*)0)->left,
  (int)(intptr_t)&((RogueClassCmdPower*)0)->right,
  (int)(intptr_t)&((RogueClassCmdNegate*)0)->t,
  (int)(intptr_t)&((RogueClassCmdNegate*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdBitwiseNot*)0)->t,
  (int)(intptr_t)&((RogueClassCmdBitwiseNot*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdLogicalize*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLogicalize*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdIsReference*)0)->t,
  (int)(intptr_t)&((RogueClassCmdIsReference*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdElementAccess*)0)->t,
  (int)(intptr_t)&((RogueClassCmdElementAccess*)0)->context,
  (int)(intptr_t)&((RogueClassCmdElementAccess*)0)->index,
  (int)(intptr_t)&((RogueClassCmdConvertToType*)0)->t,
  (int)(intptr_t)&((RogueClassCmdConvertToType*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdConvertToType*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->name,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->signature,
  (int)(intptr_t)&((RogueClassCmdCreateCallback*)0)->_return_type,
  (int)(intptr_t)&((RogueClassCmdAs*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAs*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdAs*)0)->_target_type,
  (int)(intptr_t)&((RogueClassFnParam*)0)->name,
  (int)(intptr_t)&((RogueClassFnParam*)0)->_type,
  (int)(intptr_t)&((RogueFnParam_List*)0)->data,
  (int)(intptr_t)&((RogueFnParam_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->parameters,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->_return_type,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->with_args,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->is_generic,
  (int)(intptr_t)&((RogueClassCmdCreateFunction*)0)->query_cmd,
  (int)(intptr_t)&((RogueFnArg_List*)0)->data,
  (int)(intptr_t)&((RogueFnArg_List*)0)->count,
  (int)(intptr_t)&((RogueClassFnArg*)0)->name,
  (int)(intptr_t)&((RogueClassFnArg*)0)->value,
  (int)(intptr_t)&((RogueClassFnArg*)0)->_type,
  (int)(intptr_t)&((RogueClassCmdLiteralNull*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralReal64*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralReal64*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralInt64*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralInt64*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralCharacter*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralCharacter*)0)->value,
  (int)(intptr_t)&((RogueClassCmdLiteralThis*)0)->t,
  (int)(intptr_t)&((RogueClassCmdLiteralThis*)0)->_this_type,
  (int)(intptr_t)&((RogueClassCmdThisContext*)0)->t,
  (int)(intptr_t)&((RogueClassCmdThisContext*)0)->_this_type,
  (int)(intptr_t)&((RogueClassCmdCreateList*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateList*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCreateList*)0)->_list_type,
  (int)(intptr_t)&((RogueClassCmdCallPriorMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallPriorMethod*)0)->name,
  (int)(intptr_t)&((RogueClassCmdCallPriorMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallPriorMethod*)0)->named_args,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->t,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->code,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->this_method,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->_result_type,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->modify_op,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->adjust_delta,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdInlineNative*)0)->local_list,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->cases,
  (int)(intptr_t)&((RogueClassCmdSelect*)0)->_value_type,
  (int)(intptr_t)&((RogueCmdSelectCase_List*)0)->data,
  (int)(intptr_t)&((RogueCmdSelectCase_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdSelectCase*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSelectCase*)0)->conditions,
  (int)(intptr_t)&((RogueClassCmdSelectCase*)0)->value,
  (int)(intptr_t)&((RogueClassCmdSelectCase*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdSelectCase*)0)->condition_is_value,
  (int)(intptr_t)&((RogueClassCmdImplicitIDAccess*)0)->t,
  (int)(intptr_t)&((RogueClassCmdImplicitIDAccess*)0)->name,
  (int)(intptr_t)&((RogueClassCmdImplicitAccess*)0)->t,
  (int)(intptr_t)&((RogueClassCmdImplicitAccess*)0)->access,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->t,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->condition,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->message,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->error,
  (int)(intptr_t)&((RogueClassCmdRequire*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->t,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->args,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->named_args,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->cmd_read,
  (int)(intptr_t)&((RogueClassCmdEnsure*)0)->cmd_write,
  (int)(intptr_t)&((RogueClassCmdTypedLiteralList*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTypedLiteralList*)0)->list_type_name,
  (int)(intptr_t)&((RogueClassCmdTypedLiteralList*)0)->elements,
  (int)(intptr_t)&((RogueClassCmdCreateCompound*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateCompound*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdCreateCompound*)0)->args,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->t,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->statements,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->_control_type,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->contains_yield,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->escape_label,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->escape_label_used,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->upkeep_label,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->task_escape_section,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->task_upkeep_section,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->cloned_command,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->expression,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->cases,
  (int)(intptr_t)&((RogueClassCmdSwitch*)0)->case_others,
  (int)(intptr_t)&((RogueClassCmdCreateObject*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateObject*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdReadSingleton*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadSingleton*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdWriteSingleton*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteSingleton*)0)->_of_type,
  (int)(intptr_t)&((RogueClassCmdWriteSingleton*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdWriteLocal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteLocal*)0)->local_info,
  (int)(intptr_t)&((RogueClassCmdWriteLocal*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdReadGlobal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadGlobal*)0)->global_info,
  (int)(intptr_t)&((RogueClassCmdWriteGlobal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteGlobal*)0)->global_info,
  (int)(intptr_t)&((RogueClassCmdWriteGlobal*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdReadProperty*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCmdReadProperty*)0)->property_info,
  (int)(intptr_t)&((RogueClassCmdWriteProperty*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCmdWriteProperty*)0)->property_info,
  (int)(intptr_t)&((RogueClassCmdWriteProperty*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdCall*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCall*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCall*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCall*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallDynamicMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallDynamicMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallDynamicMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallDynamicMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdAdjustProperty*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdjustProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCmdAdjustProperty*)0)->property_info,
  (int)(intptr_t)&((RogueClassCmdAdjustProperty*)0)->delta,
  (int)(intptr_t)&((RogueClassCmdAdjustGlobal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdAdjustGlobal*)0)->global_info,
  (int)(intptr_t)&((RogueClassCmdAdjustGlobal*)0)->delta,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignGlobal*)0)->t,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignGlobal*)0)->op,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignGlobal*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignGlobal*)0)->global_info,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->t,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->op,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->context,
  (int)(intptr_t)&((RogueClassCmdModifyAndAssignProperty*)0)->property_info,
  (int)(intptr_t)&((RogueClassCmdCreateArray*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCreateArray*)0)->_array_type,
  (int)(intptr_t)&((RogueClassCmdCreateArray*)0)->count_cmd,
  (int)(intptr_t)&((RogueClassCmdReadArrayElement*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadArrayElement*)0)->context,
  (int)(intptr_t)&((RogueClassCmdReadArrayElement*)0)->_array_type,
  (int)(intptr_t)&((RogueClassCmdReadArrayElement*)0)->index,
  (int)(intptr_t)&((RogueClassCmdReadArrayCount*)0)->t,
  (int)(intptr_t)&((RogueClassCmdReadArrayCount*)0)->context,
  (int)(intptr_t)&((RogueClassCmdReadArrayCount*)0)->_array_type,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->t,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->context,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->_array_type,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->index,
  (int)(intptr_t)&((RogueClassCmdWriteArrayElement*)0)->new_value,
  (int)(intptr_t)&((RogueClassCmdTaskControl*)0)->t,
  (int)(intptr_t)&((RogueClassCmdTaskControl*)0)->sections,
  (int)(intptr_t)&((RogueClassCmdTaskControl*)0)->current_section,
  (int)(intptr_t)&((RogueCmdTaskControlSection_List*)0)->data,
  (int)(intptr_t)&((RogueCmdTaskControlSection_List*)0)->count,
  (int)(intptr_t)&((RogueClassCmdNoAction*)0)->t,
  (int)(intptr_t)&((RogueClassListRewriter_Type_*)0)->list,
  (int)(intptr_t)&((RogueClassListRewriter_Type_*)0)->read_index,
  (int)(intptr_t)&((RogueClassListRewriter_Type_*)0)->write_index,
  (int)(intptr_t)&((RogueClassUpdateThisTypeVisitor*)0)->_this_type,
  (int)(intptr_t)&((RogueClassUpdateThisTypeVisitor*)0)->this_method,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_TypeSpecializer_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_TypeSpecializer_*)0)->hash,
  (int)(intptr_t)&((RogueClassCmdCastToType*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCastToType*)0)->operand,
  (int)(intptr_t)&((RogueClassCmdCastToType*)0)->_target_type,
  (int)(intptr_t)&((RogueClassCloneMethodArgs*)0)->cloned_method,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->_task_type,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->task_method,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->_original_type,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->original_method,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->cmd_task_control,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->context_property,
  (int)(intptr_t)&((RogueClassTaskArgs*)0)->ip_property,
  (int)(intptr_t)&((RogueToken_List_List*)0)->data,
  (int)(intptr_t)&((RogueToken_List_List*)0)->count,
  (int)(intptr_t)&((RogueClassDirectiveTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassDirectiveTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassDirectiveTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassStructuralDirectiveTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassStructuralDirectiveTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassStructuralDirectiveTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassEOLTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassEOLTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassEOLTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassStructureTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassStructureTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassStructureTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassNativeCodeTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassNativeCodeTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassNativeCodeTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassModifyAndAssignTokenType*)0)->name,
  (int)(intptr_t)&((RogueClassModifyAndAssignTokenType*)0)->is_end_command,
  (int)(intptr_t)&((RogueClassModifyAndAssignTokenType*)0)->is_non_method,
  (int)(intptr_t)&((RogueClassMacroArgs*)0)->this_context,
  (int)(intptr_t)&((RogueClassMacroArgs*)0)->method_info,
  (int)(intptr_t)&((RogueClassMacroArgs*)0)->arg_lookup,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->count,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->bin_mask,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->cur_entry_index,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->bins,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->first_entry,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->last_entry,
  (int)(intptr_t)&((RogueClassTable_String_Cmd_*)0)->cur_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->key,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->value,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->adjacent_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->next_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->previous_entry,
  (int)(intptr_t)&((RogueClassTableEntry_String_Cmd_*)0)->hash,
  (int)(intptr_t)&((RogueClassListRewriter_CmdNamedArg_*)0)->list,
  (int)(intptr_t)&((RogueClassListRewriter_CmdNamedArg_*)0)->read_index,
  (int)(intptr_t)&((RogueClassListRewriter_CmdNamedArg_*)0)->write_index,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeRoutine*)0)->adjust_delta,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallInlineNative*)0)->adjust_delta,
  (int)(intptr_t)&((RogueClassCmdCallNativeRoutine*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallNativeRoutine*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallNativeRoutine*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallNativeRoutine*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallRoutine*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallRoutine*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallRoutine*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallRoutine*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallInlineNativeMethod*)0)->adjust_delta,
  (int)(intptr_t)&((RogueClassCmdCallNativeMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallNativeMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallNativeMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallNativeMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCmdCallAspectMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallAspectMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallAspectMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallAspectMethod*)0)->args,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->type_context,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->access,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->available,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->compatible,
  (int)(intptr_t)&((RogueClassCandidateMethods*)0)->error_on_fail,
  (int)(intptr_t)&((RogueClassIOError*)0)->message,
  (int)(intptr_t)&((RogueClassIOError*)0)->stack_trace,
  (int)(intptr_t)&((RogueClassFileReader*)0)->position,
  (int)(intptr_t)&((RogueClassFileReader*)0)->filepath,
  (int)(intptr_t)&((RogueClassFileReader*)0)->count,
  (int)(intptr_t)&((RogueClassFileReader*)0)->buffer_position,
  (int)(intptr_t)&((RogueClassFileReader*)0)->buffer,
  0,
  (int)(intptr_t)&((RogueClassFileWriter*)0)->position,
  (int)(intptr_t)&((RogueClassFileWriter*)0)->filepath,
  (int)(intptr_t)&((RogueClassFileWriter*)0)->error,
  (int)(intptr_t)&((RogueClassFileWriter*)0)->buffer,
  0,
  (int)(intptr_t)&((RogueClassUTF8Reader*)0)->position,
  (int)(intptr_t)&((RogueClassUTF8Reader*)0)->byte_reader,
  (int)(intptr_t)&((RogueClassUTF8Reader*)0)->next,
  (int)(intptr_t)&((RogueClassQueryToGenericFunctionConversionVisitor*)0)->cmd_create_fn,
  (int)(intptr_t)&((RogueClassListReader_CmdSelectCase_*)0)->position,
  (int)(intptr_t)&((RogueClassListReader_CmdSelectCase_*)0)->list,
  (int)(intptr_t)&((RogueClassListReader_CmdSelectCase_*)0)->limit,
  (int)(intptr_t)&((RogueClassListReader_CmdSelectCase_*)0)->is_limited,
  (int)(intptr_t)&((RogueClassCmdCallStaticMethod*)0)->t,
  (int)(intptr_t)&((RogueClassCmdCallStaticMethod*)0)->context,
  (int)(intptr_t)&((RogueClassCmdCallStaticMethod*)0)->method_info,
  (int)(intptr_t)&((RogueClassCmdCallStaticMethod*)0)->args,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->_type,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->filepath,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->line,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->column,
  (int)(intptr_t)&((RogueClassNativeCodeToken*)0)->value,
  (int)(intptr_t)&((RogueClassContainsImplicitAccessVisitor*)0)->contains_implicit_identifier_access,
  (int)(intptr_t)&((RogueOptionalInt32*)0)->value,
  (int)(intptr_t)&((RogueOptionalInt32*)0)->exists,
  (int)(intptr_t)&((RogueOptionalCharacter*)0)->value,
  (int)(intptr_t)&((RogueOptionalCharacter*)0)->exists,
  (int)(intptr_t)&((RogueOptionalByte*)0)->value,
  (int)(intptr_t)&((RogueOptionalByte*)0)->exists,
  (int)(intptr_t)&((RogueOptionalString*)0)->value,
  (int)(intptr_t)&((RogueOptionalString*)0)->exists,
  (int)(intptr_t)&((RogueOptionalType*)0)->value,
  (int)(intptr_t)&((RogueOptionalType*)0)->exists,
  (int)(intptr_t)&((RogueOptionalMethod*)0)->value,
  (int)(intptr_t)&((RogueOptionalMethod*)0)->exists,
  (int)(intptr_t)&((RogueOptionalCmd*)0)->value,
  (int)(intptr_t)&((RogueOptionalCmd*)0)->exists
};

int Rogue_object_size_table[427] =
{
  (int) sizeof(RogueObject),
  (int) sizeof(RogueClassGlobal),
  (int) sizeof(RogueClassPrintWriter_global_output_buffer_),
  (int) sizeof(RogueClassPrintWriter),
  (int) sizeof(RogueStringBuilder),
  (int) sizeof(RogueByte_List),
  (int) sizeof(RogueClassGenericList),
  (int) sizeof(RogueByte),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueInt32),
  (int) sizeof(RogueLogical),
  (int) sizeof(RogueFunction___List),
  (int) sizeof(RogueClassFunction__),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueException),
  (int) sizeof(RogueString),
  (int) sizeof(RogueClassStackTrace),
  (int) sizeof(RogueString_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueReal64),
  (int) sizeof(RogueInt64),
  (int) sizeof(RogueCharacter),
  (int) sizeof(RogueClassValue),
  (int) sizeof(RogueTypeInfo),
  (int) sizeof(RoguePropertyInfo_List),
  (int) sizeof(RogueClassPropertyInfo),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassValueTable),
  (int) sizeof(RogueClassTable_String_Value_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Value_),
  (int) sizeof(RogueCharacter_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassStringTable_String_),
  (int) sizeof(RogueClassTable_String_String_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_String_),
  (int) sizeof(RogueClassStringReader),
  (int) sizeof(RogueClassReader_Character_),
  (int) sizeof(RogueClassListReader_String_),
  (int) sizeof(RogueClassReader_String_),
  (int) sizeof(RogueClassPrimitiveWorkBuffer),
  (int) sizeof(RogueClassMath),
  (int) sizeof(RogueClassRuntime),
  (int) sizeof(RogueClassTable_String_TypeInfo_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_TypeInfo_),
  (int) sizeof(RogueClassConsole),
  (int) sizeof(RogueClassReader_Byte_),
  (int) sizeof(RogueClassPrintWriter_output_buffer_),
  (int) sizeof(RogueClassConsoleIOHandler),
  (int) sizeof(RogueClassFunction_161),
  (int) sizeof(RogueClassRogueC),
  (int) sizeof(RogueClassSet_String_),
  (int) sizeof(RogueClassTable_String_Logical_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Logical_),
  (int) sizeof(RogueParser_List),
  (int) sizeof(RogueClassParser),
  (int) sizeof(RogueClassTokenReader),
  (int) sizeof(RogueToken_List),
  (int) sizeof(RogueClassToken),
  (int) sizeof(RogueClassTokenType),
  (int) sizeof(RogueClassTable_String_TokenType_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_TokenType_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassType),
  (int) sizeof(RogueType_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassAttributes),
  (int) sizeof(RogueClassTemplate),
  (int) sizeof(RogueTypeParameter_List),
  (int) sizeof(RogueClassTypeParameter),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_Int32_Template_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_Int32_Template_),
  (int) sizeof(RogueTypeSpecializer_List),
  (int) sizeof(RogueClassTypeSpecializer),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueDefinition_List),
  (int) sizeof(RogueClassDefinition),
  (int) sizeof(RogueClassCmd),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Definition_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Definition_),
  (int) sizeof(RogueProperty_List),
  (int) sizeof(RogueClassProperty),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Property_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Property_),
  (int) sizeof(RogueMethod_List),
  (int) sizeof(RogueClassMethod),
  (int) sizeof(RogueLocal_List),
  (int) sizeof(RogueClassLocal),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdStatementList),
  (int) sizeof(RogueCmd_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueCmdLabel_List),
  (int) sizeof(RogueClassCmdLabel),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_CmdLabel_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_CmdLabel_),
  (int) sizeof(RogueClassMethodTemplate),
  (int) sizeof(RogueMethodTemplate_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Method_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Method_List_),
  (int) sizeof(RogueClassTable_String_Method_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Method_),
  (int) sizeof(RogueClassMethodTemplates),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_ParseReader_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_ParseReader_),
  (int) sizeof(RogueClassParseReader),
  (int) sizeof(RogueClassStopwatch),
  (int) sizeof(RogueClassStringTable_Stopwatch_),
  (int) sizeof(RogueClassTable_String_Stopwatch_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Stopwatch_),
  (int) sizeof(RoguePlugin_List),
  (int) sizeof(RogueClassPlugin),
  (int) sizeof(RogueClassFunction__RETURNSLogical),
  (int) sizeof(RogueClassFunction_Object_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassProgram),
  (int) sizeof(RogueTemplate_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Template_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Template_),
  (int) sizeof(RogueClassTable_String_Augment_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Augment_List_),
  (int) sizeof(RogueAugment_List),
  (int) sizeof(RogueClassAugment),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_Type_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Type_),
  (int) sizeof(RogueClassTable_String_Int32_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Int32_),
  (int) sizeof(RogueClassTable_String_String_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_String_List_),
  (int) sizeof(RogueClassTable_Type_CyClass_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_Type_CyClass_),
  (int) sizeof(RogueClassCyClass),
  (int) sizeof(RogueClassTable_String_CyMethod_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_CyMethod_List_),
  (int) sizeof(RogueCyMethod_List),
  (int) sizeof(RogueClassCyMethod),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTable_String_CyProperty_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_CyProperty_),
  (int) sizeof(RogueClassCyProperty),
  (int) sizeof(RogueClassTable_Type_Type_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_Type_Type_),
  (int) sizeof(RogueClassError),
  (int) sizeof(RogueClassRogueError),
  (int) sizeof(RogueClassPreprocessor),
  (int) sizeof(RogueClassTable_String_Token_List_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Token_List_),
  (int) sizeof(RogueClassPreprocessorTokenReader),
  (int) sizeof(RogueClassTokenizer),
  (int) sizeof(RogueClassLiteralCharacterToken),
  (int) sizeof(RogueClassLiteralInt64Token),
  (int) sizeof(RogueClassLiteralInt32Token),
  (int) sizeof(RogueClassLiteralReal64Token),
  (int) sizeof(RogueClassStringDataToken),
  (int) sizeof(RogueClassListRewriter_Token_),
  (int) sizeof(RogueClassProgram_cy_create_delegates__),
  (int) sizeof(RogueClassProgram_cy_on_header_end_Object_),
  (int) sizeof(RogueClassProgram_cy_on_code_end_Object_),
  (int) sizeof(RogueClassCmdAccess),
  (int) sizeof(RogueClassCmdArgs),
  (int) sizeof(RogueCmdNamedArg_List),
  (int) sizeof(RogueClassCmdNamedArg),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassFunction_Type_RETURNSLogical),
  (int) sizeof(RogueClassCmdDefaultValue),
  (int) sizeof(RogueClassCmdLiteral),
  (int) sizeof(RogueClassCmdReturn),
  (int) sizeof(RogueClassCmdStatement),
  (int) sizeof(RogueClassScope),
  (int) sizeof(RogueCmdControlStructure_List),
  (int) sizeof(RogueClassCmdControlStructure),
  (int) sizeof(RogueClassCmdTaskControlSection),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassFunction_431),
  (int) sizeof(RogueClassFunction_432),
  (int) sizeof(RogueClassCPPWriter),
  (int) sizeof(RogueInt32_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableValueReader_Type_CyClass_),
  (int) sizeof(RogueClassReader_CyClass_),
  (int) sizeof(RogueCyClass_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableValueReader_String_CyProperty_),
  (int) sizeof(RogueClassReader_CyProperty_),
  (int) sizeof(RogueClassTableValueReader_String_CyMethod_List_),
  (int) sizeof(RogueClassReader_CyMethod_List_),
  (int) sizeof(RogueCyMethod_List_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassRequirementError),
  (int) sizeof(RogueClassSet_Type_),
  (int) sizeof(RogueClassTable_Type_Logical_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_Type_Logical_),
  (int) sizeof(RogueClassSystem),
  (int) sizeof(RogueWeakReference),
  (int) sizeof(RogueClassWriter_Byte_),
  (int) sizeof(RogueClassReal64Value),
  (int) sizeof(RogueClassNullValue),
  (int) sizeof(RogueClassObjectValue),
  (int) sizeof(RogueClassStringValue),
  (int) sizeof(RogueClassUndefinedValue),
  (int) sizeof(RogueClassFile),
  (int) sizeof(RogueClassFunction_1094),
  (int) sizeof(RogueClassBlockingConsoleIOHandler),
  (int) sizeof(RogueClassCmdMakeRequisite),
  (int) sizeof(RogueClassLineReader),
  (int) sizeof(RogueClassFunction_1125),
  (int) sizeof(RogueClassEOLToken),
  (int) sizeof(RogueClassCmdLiteralLogical),
  (int) sizeof(RogueClassCmdLiteralInt32),
  (int) sizeof(RogueClassCloneArgs),
  (int) sizeof(RogueClassCmdAdd),
  (int) sizeof(RogueClassCmdBinary),
  (int) sizeof(RogueClassCmdNativeHeader),
  (int) sizeof(RogueClassCmdNativeSource),
  (int) sizeof(RogueClassCmdNativeCode),
  (int) sizeof(RogueClassCmdIncludeNative),
  (int) sizeof(RogueClassCmdIf),
  (int) sizeof(RogueClassCmdWhich),
  (int) sizeof(RogueCmdWhichCase_List),
  (int) sizeof(RogueClassCmdWhichCase),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdBlock),
  (int) sizeof(RogueClassCmdContingent),
  (int) sizeof(RogueClassCmdGenericLoop),
  (int) sizeof(RogueClassCmdTry),
  (int) sizeof(RogueCmdCatch_List),
  (int) sizeof(RogueClassCmdCatch),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdAwait),
  (int) sizeof(RogueClassCmdYield),
  (int) sizeof(RogueClassCmdThrow),
  (int) sizeof(RogueClassCmdLiteralString),
  (int) sizeof(RogueClassCmdFormattedString),
  (int) sizeof(RogueClassCmdTrace),
  (int) sizeof(RogueClassCmdLocalDeclaration),
  (int) sizeof(RogueClassCmdAssert),
  (int) sizeof(RogueClassCmdEscape),
  (int) sizeof(RogueClassCmdNextIteration),
  (int) sizeof(RogueClassCmdNecessary),
  (int) sizeof(RogueClassCmdSufficient),
  (int) sizeof(RogueClassCmdAdjust),
  (int) sizeof(RogueClassCmdAssign),
  (int) sizeof(RogueClassCmdModifyAndAssign),
  (int) sizeof(RogueClassCmdTryExpression),
  (int) sizeof(RogueClassCmdReadLocal),
  (int) sizeof(RogueClassCmdAdjustLocal),
  (int) sizeof(RogueClassCmdCompareLE),
  (int) sizeof(RogueClassCmdComparison),
  (int) sizeof(RogueClassCmdRange),
  (int) sizeof(RogueClassCmdModifyAndAssignLocal),
  (int) sizeof(RogueClassCmdResolvedModifyAndAssign),
  (int) sizeof(RogueClassCmdRangeUpTo),
  (int) sizeof(RogueClassCmdRangeUpToLessThan),
  (int) sizeof(RogueClassCmdCompareLT),
  (int) sizeof(RogueClassCmdCompareGE),
  (int) sizeof(RogueClassCmdForEach),
  (int) sizeof(RogueClassCmdRangeDownTo),
  (int) sizeof(RogueClassCmdLogicalXor),
  (int) sizeof(RogueClassCmdBinaryLogical),
  (int) sizeof(RogueClassCmdLogicalOr),
  (int) sizeof(RogueClassCmdLogicalAnd),
  (int) sizeof(RogueClassCmdCompareEQ),
  (int) sizeof(RogueClassCmdCompareIsNot),
  (int) sizeof(RogueClassCmdCompareIs),
  (int) sizeof(RogueClassCmdCompareNE),
  (int) sizeof(RogueClassCmdCompareGT),
  (int) sizeof(RogueClassCmdInstanceOf),
  (int) sizeof(RogueClassCmdTypeOperator),
  (int) sizeof(RogueClassCmdLogicalNot),
  (int) sizeof(RogueClassCmdUnary),
  (int) sizeof(RogueClassCmdBitwiseXor),
  (int) sizeof(RogueClassCmdBitwiseOp),
  (int) sizeof(RogueClassCmdBitwiseOr),
  (int) sizeof(RogueClassCmdBitwiseAnd),
  (int) sizeof(RogueClassCmdBitwiseShiftLeft),
  (int) sizeof(RogueClassCmdBitwiseShiftRight),
  (int) sizeof(RogueClassCmdBitwiseShiftRightX),
  (int) sizeof(RogueClassCmdSubtract),
  (int) sizeof(RogueClassCmdMultiply),
  (int) sizeof(RogueClassCmdDivide),
  (int) sizeof(RogueClassCmdMod),
  (int) sizeof(RogueClassCmdPower),
  (int) sizeof(RogueClassCmdNegate),
  (int) sizeof(RogueClassCmdBitwiseNot),
  (int) sizeof(RogueClassCmdLogicalize),
  (int) sizeof(RogueClassCmdIsReference),
  (int) sizeof(RogueClassCmdElementAccess),
  (int) sizeof(RogueClassCmdConvertToType),
  (int) sizeof(RogueClassCmdCreateCallback),
  (int) sizeof(RogueClassCmdAs),
  (int) sizeof(RogueClassFnParam),
  (int) sizeof(RogueFnParam_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdCreateFunction),
  (int) sizeof(RogueFnArg_List),
  (int) sizeof(RogueClassFnArg),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdLiteralNull),
  (int) sizeof(RogueClassCmdLiteralReal64),
  (int) sizeof(RogueClassCmdLiteralInt64),
  (int) sizeof(RogueClassCmdLiteralCharacter),
  (int) sizeof(RogueClassCmdLiteralThis),
  (int) sizeof(RogueClassCmdThisContext),
  (int) sizeof(RogueClassCmdCreateList),
  (int) sizeof(RogueClassCmdCallPriorMethod),
  (int) sizeof(RogueClassCmdInlineNative),
  (int) sizeof(RogueClassCmdSelect),
  (int) sizeof(RogueCmdSelectCase_List),
  (int) sizeof(RogueClassCmdSelectCase),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdImplicitIDAccess),
  (int) sizeof(RogueClassCmdImplicitAccess),
  (int) sizeof(RogueClassCmdRequire),
  (int) sizeof(RogueClassCmdEnsure),
  (int) sizeof(RogueClassCmdTypedLiteralList),
  (int) sizeof(RogueClassCmdCreateCompound),
  (int) sizeof(RogueClassVisitor),
  (int) sizeof(RogueClassCmdSwitch),
  (int) sizeof(RogueClassCmdCreateObject),
  (int) sizeof(RogueClassCmdReadSingleton),
  (int) sizeof(RogueClassCmdWriteSingleton),
  (int) sizeof(RogueClassCmdWriteLocal),
  (int) sizeof(RogueClassCmdReadGlobal),
  (int) sizeof(RogueClassCmdWriteGlobal),
  (int) sizeof(RogueClassCmdReadProperty),
  (int) sizeof(RogueClassCmdWriteProperty),
  (int) sizeof(RogueClassCmdCall),
  (int) sizeof(RogueClassCmdCallDynamicMethod),
  (int) sizeof(RogueClassCmdCallMethod),
  (int) sizeof(RogueClassCmdAdjustProperty),
  (int) sizeof(RogueClassCmdAdjustGlobal),
  (int) sizeof(RogueClassCmdModifyAndAssignGlobal),
  (int) sizeof(RogueClassCmdModifyAndAssignProperty),
  (int) sizeof(RogueClassCmdCreateArray),
  (int) sizeof(RogueClassCmdReadArrayElement),
  (int) sizeof(RogueClassCmdReadArrayCount),
  (int) sizeof(RogueClassCmdWriteArrayElement),
  (int) sizeof(RogueClassCmdTaskControl),
  (int) sizeof(RogueCmdTaskControlSection_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassCmdNoAction),
  (int) sizeof(RogueClassListRewriter_Type_),
  (int) sizeof(RogueClassUpdateThisTypeVisitor),
  (int) sizeof(RogueClassTable_String_TypeSpecializer_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_TypeSpecializer_),
  (int) sizeof(RogueClassCmdCastToType),
  (int) sizeof(RogueClassTraceUsedCodeVisitor),
  (int) sizeof(RogueClassCloneMethodArgs),
  (int) sizeof(RogueClassTaskArgs),
  (int) sizeof(RogueToken_List_List),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassDirectiveTokenType),
  (int) sizeof(RogueClassStructuralDirectiveTokenType),
  (int) sizeof(RogueClassEOLTokenType),
  (int) sizeof(RogueClassStructureTokenType),
  (int) sizeof(RogueClassNativeCodeTokenType),
  (int) sizeof(RogueClassModifyAndAssignTokenType),
  (int) sizeof(RogueClassFunction_CmdNamedArg_RETURNSLogical),
  (int) sizeof(RogueClassMacroArgs),
  (int) sizeof(RogueClassTable_String_Cmd_),
  (int) sizeof(RogueArray),
  (int) sizeof(RogueClassTableEntry_String_Cmd_),
  (int) sizeof(RogueClassListRewriter_CmdNamedArg_),
  (int) sizeof(RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical),
  (int) sizeof(RogueClassQuicksort_CmdNamedArg_),
  (int) sizeof(RogueClassCmdCallInlineNativeRoutine),
  (int) sizeof(RogueClassCmdCallInlineNative),
  (int) sizeof(RogueClassCmdCallNativeRoutine),
  (int) sizeof(RogueClassCmdCallRoutine),
  (int) sizeof(RogueClassCmdCallInlineNativeMethod),
  (int) sizeof(RogueClassCmdCallNativeMethod),
  (int) sizeof(RogueClassCmdCallAspectMethod),
  (int) sizeof(RogueClassCandidateMethods),
  (int) sizeof(RogueClassFunction_2953),
  (int) sizeof(RogueClassFunction_2954),
  (int) sizeof(RogueClassIOError),
  (int) sizeof(RogueClassFileReader),
  (int) sizeof(RogueClassFileWriter),
  (int) sizeof(RogueClassUTF8Reader),
  (int) sizeof(RogueClassQueryToGenericFunctionConversionVisitor),
  (int) sizeof(RogueClassListReader_CmdSelectCase_),
  (int) sizeof(RogueClassReader_CmdSelectCase_),
  (int) sizeof(RogueClassCmdCallStaticMethod),
  (int) sizeof(RogueClassNativeCodeToken),
  (int) sizeof(RogueClassContainsImplicitAccessVisitor),
  (int) sizeof(RogueOptionalInt32),
  (int) sizeof(RogueOptionalCharacter),
  (int) sizeof(RogueOptionalByte),
  (int) sizeof(RogueClassSystemEnvironment),
  (int) sizeof(RogueOptionalString),
  (int) sizeof(RogueOptionalType),
  (int) sizeof(RogueOptionalMethod),
  (int) sizeof(RogueOptionalCmd)
};

int Rogue_attributes_table[427] =
{
  32,
  9216,
  1,
  1,
  8192,
  0,
  0,
  2,
  32,
  32,
  2,
  2,
  0,
  0,
  32,
  8192,
  32,
  8192,
  8192,
  32,
  2,
  2,
  2,
  0,
  8192,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  8192,
  32,
  0,
  0,
  32,
  0,
  0,
  1,
  0,
  1,
  1024,
  0,
  8192,
  0,
  32,
  0,
  1024,
  1,
  1,
  131072,
  1024,
  1024,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  0,
  32,
  32,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  32,
  9216,
  0,
  32,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  1024,
  1024,
  0,
  0,
  32,
  0,
  1,
  0,
  32,
  0,
  1,
  0,
  1,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  8192,
  8192,
  1,
  0,
  1024,
  0,
  0,
  1024,
  0,
  0,
  0,
  0,
  0,
  1024,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  1024,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1024,
  1024,
  0,
  0,
  0,
  0,
  1024,
  0,
  1,
  0,
  0,
  1024,
  3,
  3,
  3,
  3,
  3,
  3,
  3,
  3
};

int Rogue_allocator_count = 1;
RogueAllocator Rogue_allocators[1];

int Rogue_type_count = 427;
RogueType Rogue_types[427];

RogueType* RogueTypeObject;
RogueType* RogueTypeGlobal;
RogueType* RogueTypePrintWriter_global_output_buffer_;
RogueType* RogueTypePrintWriter;
RogueType* RogueTypeStringBuilder;
RogueType* RogueTypeByte_List;
RogueType* RogueTypeGenericList;
RogueType* RogueTypeByte;
RogueType* RogueTypeArray;
RogueType* RogueTypeInt32;
RogueType* RogueTypeLogical;
RogueType* RogueTypeFunction___List;
RogueType* RogueTypeFunction__;
RogueType* RogueTypeException;
RogueType* RogueTypeString;
RogueType* RogueTypeStackTrace;
RogueType* RogueTypeString_List;
RogueType* RogueTypeReal64;
RogueType* RogueTypeInt64;
RogueType* RogueTypeCharacter;
RogueType* RogueTypeValue;
RogueType* RogueTypeTypeInfo;
RogueType* RogueTypePropertyInfo_List;
RogueType* RogueTypePropertyInfo;
RogueType* RogueTypeValueTable;
RogueType* RogueTypeTable_String_Value_;
RogueType* RogueTypeTableEntry_String_Value_;
RogueType* RogueTypeCharacter_List;
RogueType* RogueTypeStringTable_String_;
RogueType* RogueTypeTable_String_String_;
RogueType* RogueTypeTableEntry_String_String_;
RogueType* RogueTypeStringReader;
RogueType* RogueTypeReader_Character_;
RogueType* RogueTypeListReader_String_;
RogueType* RogueTypeReader_String_;
RogueType* RogueTypePrimitiveWorkBuffer;
RogueType* RogueTypeMath;
RogueType* RogueTypeRuntime;
RogueType* RogueTypeTable_String_TypeInfo_;
RogueType* RogueTypeTableEntry_String_TypeInfo_;
RogueType* RogueTypeConsole;
RogueType* RogueTypeReader_Byte_;
RogueType* RogueTypePrintWriter_output_buffer_;
RogueType* RogueTypeConsoleIOHandler;
RogueType* RogueTypeFunction_161;
RogueType* RogueTypeRogueC;
RogueType* RogueTypeSet_String_;
RogueType* RogueTypeTable_String_Logical_;
RogueType* RogueTypeTableEntry_String_Logical_;
RogueType* RogueTypeParser_List;
RogueType* RogueTypeParser;
RogueType* RogueTypeTokenReader;
RogueType* RogueTypeToken_List;
RogueType* RogueTypeToken;
RogueType* RogueTypeTokenType;
RogueType* RogueTypeTable_String_TokenType_;
RogueType* RogueTypeTableEntry_String_TokenType_;
RogueType* RogueTypeType;
RogueType* RogueTypeType_List;
RogueType* RogueTypeAttributes;
RogueType* RogueTypeTemplate;
RogueType* RogueTypeTypeParameter_List;
RogueType* RogueTypeTypeParameter;
RogueType* RogueTypeTable_Int32_Template_;
RogueType* RogueTypeTableEntry_Int32_Template_;
RogueType* RogueTypeTypeSpecializer_List;
RogueType* RogueTypeTypeSpecializer;
RogueType* RogueTypeDefinition_List;
RogueType* RogueTypeDefinition;
RogueType* RogueTypeCmd;
RogueType* RogueTypeTable_String_Definition_;
RogueType* RogueTypeTableEntry_String_Definition_;
RogueType* RogueTypeProperty_List;
RogueType* RogueTypeProperty;
RogueType* RogueTypeTable_String_Property_;
RogueType* RogueTypeTableEntry_String_Property_;
RogueType* RogueTypeMethod_List;
RogueType* RogueTypeMethod;
RogueType* RogueTypeLocal_List;
RogueType* RogueTypeLocal;
RogueType* RogueTypeCmdStatementList;
RogueType* RogueTypeCmd_List;
RogueType* RogueTypeCmdLabel_List;
RogueType* RogueTypeCmdLabel;
RogueType* RogueTypeTable_String_CmdLabel_;
RogueType* RogueTypeTableEntry_String_CmdLabel_;
RogueType* RogueTypeMethodTemplate;
RogueType* RogueTypeMethodTemplate_List;
RogueType* RogueTypeTable_String_Method_List_;
RogueType* RogueTypeTableEntry_String_Method_List_;
RogueType* RogueTypeTable_String_Method_;
RogueType* RogueTypeTableEntry_String_Method_;
RogueType* RogueTypeMethodTemplates;
RogueType* RogueTypeTable_String_ParseReader_;
RogueType* RogueTypeTableEntry_String_ParseReader_;
RogueType* RogueTypeParseReader;
RogueType* RogueTypeStopwatch;
RogueType* RogueTypeStringTable_Stopwatch_;
RogueType* RogueTypeTable_String_Stopwatch_;
RogueType* RogueTypeTableEntry_String_Stopwatch_;
RogueType* RogueTypePlugin_List;
RogueType* RogueTypePlugin;
RogueType* RogueTypeFunction__RETURNSLogical;
RogueType* RogueTypeFunction_Object_;
RogueType* RogueTypeProgram;
RogueType* RogueTypeTemplate_List;
RogueType* RogueTypeTable_String_Template_;
RogueType* RogueTypeTableEntry_String_Template_;
RogueType* RogueTypeTable_String_Augment_List_;
RogueType* RogueTypeTableEntry_String_Augment_List_;
RogueType* RogueTypeAugment_List;
RogueType* RogueTypeAugment;
RogueType* RogueTypeTable_String_Type_;
RogueType* RogueTypeTableEntry_String_Type_;
RogueType* RogueTypeTable_String_Int32_;
RogueType* RogueTypeTableEntry_String_Int32_;
RogueType* RogueTypeTable_String_String_List_;
RogueType* RogueTypeTableEntry_String_String_List_;
RogueType* RogueTypeTable_Type_CyClass_;
RogueType* RogueTypeTableEntry_Type_CyClass_;
RogueType* RogueTypeCyClass;
RogueType* RogueTypeTable_String_CyMethod_List_;
RogueType* RogueTypeTableEntry_String_CyMethod_List_;
RogueType* RogueTypeCyMethod_List;
RogueType* RogueTypeCyMethod;
RogueType* RogueTypeTable_String_CyProperty_;
RogueType* RogueTypeTableEntry_String_CyProperty_;
RogueType* RogueTypeCyProperty;
RogueType* RogueTypeTable_Type_Type_;
RogueType* RogueTypeTableEntry_Type_Type_;
RogueType* RogueTypeError;
RogueType* RogueTypeRogueError;
RogueType* RogueTypePreprocessor;
RogueType* RogueTypeTable_String_Token_List_;
RogueType* RogueTypeTableEntry_String_Token_List_;
RogueType* RogueTypePreprocessorTokenReader;
RogueType* RogueTypeTokenizer;
RogueType* RogueTypeLiteralCharacterToken;
RogueType* RogueTypeLiteralInt64Token;
RogueType* RogueTypeLiteralInt32Token;
RogueType* RogueTypeLiteralReal64Token;
RogueType* RogueTypeStringDataToken;
RogueType* RogueTypeListRewriter_Token_;
RogueType* RogueTypeProgram_cy_create_delegates__;
RogueType* RogueTypeProgram_cy_on_header_end_Object_;
RogueType* RogueTypeProgram_cy_on_code_end_Object_;
RogueType* RogueTypeCmdAccess;
RogueType* RogueTypeCmdArgs;
RogueType* RogueTypeCmdNamedArg_List;
RogueType* RogueTypeCmdNamedArg;
RogueType* RogueTypeFunction_Type_RETURNSLogical;
RogueType* RogueTypeCmdDefaultValue;
RogueType* RogueTypeCmdLiteral;
RogueType* RogueTypeCmdReturn;
RogueType* RogueTypeCmdStatement;
RogueType* RogueTypeScope;
RogueType* RogueTypeCmdControlStructure_List;
RogueType* RogueTypeCmdControlStructure;
RogueType* RogueTypeCmdTaskControlSection;
RogueType* RogueTypeFunction_431;
RogueType* RogueTypeFunction_432;
RogueType* RogueTypeCPPWriter;
RogueType* RogueTypeInt32_List;
RogueType* RogueTypeTableValueReader_Type_CyClass_;
RogueType* RogueTypeReader_CyClass_;
RogueType* RogueTypeCyClass_List;
RogueType* RogueTypeTableValueReader_String_CyProperty_;
RogueType* RogueTypeReader_CyProperty_;
RogueType* RogueTypeTableValueReader_String_CyMethod_List_;
RogueType* RogueTypeReader_CyMethod_List_;
RogueType* RogueTypeCyMethod_List_List;
RogueType* RogueTypeRequirementError;
RogueType* RogueTypeSet_Type_;
RogueType* RogueTypeTable_Type_Logical_;
RogueType* RogueTypeTableEntry_Type_Logical_;
RogueType* RogueTypeSystem;
RogueType* RogueTypeWeakReference;
RogueType* RogueTypeWriter_Byte_;
RogueType* RogueTypeReal64Value;
RogueType* RogueTypeNullValue;
RogueType* RogueTypeObjectValue;
RogueType* RogueTypeStringValue;
RogueType* RogueTypeUndefinedValue;
RogueType* RogueTypeFile;
RogueType* RogueTypeFunction_1094;
RogueType* RogueTypeBlockingConsoleIOHandler;
RogueType* RogueTypeCmdMakeRequisite;
RogueType* RogueTypeLineReader;
RogueType* RogueTypeFunction_1125;
RogueType* RogueTypeEOLToken;
RogueType* RogueTypeCmdLiteralLogical;
RogueType* RogueTypeCmdLiteralInt32;
RogueType* RogueTypeCloneArgs;
RogueType* RogueTypeCmdAdd;
RogueType* RogueTypeCmdBinary;
RogueType* RogueTypeCmdNativeHeader;
RogueType* RogueTypeCmdNativeSource;
RogueType* RogueTypeCmdNativeCode;
RogueType* RogueTypeCmdIncludeNative;
RogueType* RogueTypeCmdIf;
RogueType* RogueTypeCmdWhich;
RogueType* RogueTypeCmdWhichCase_List;
RogueType* RogueTypeCmdWhichCase;
RogueType* RogueTypeCmdBlock;
RogueType* RogueTypeCmdContingent;
RogueType* RogueTypeCmdGenericLoop;
RogueType* RogueTypeCmdTry;
RogueType* RogueTypeCmdCatch_List;
RogueType* RogueTypeCmdCatch;
RogueType* RogueTypeCmdAwait;
RogueType* RogueTypeCmdYield;
RogueType* RogueTypeCmdThrow;
RogueType* RogueTypeCmdLiteralString;
RogueType* RogueTypeCmdFormattedString;
RogueType* RogueTypeCmdTrace;
RogueType* RogueTypeCmdLocalDeclaration;
RogueType* RogueTypeCmdAssert;
RogueType* RogueTypeCmdEscape;
RogueType* RogueTypeCmdNextIteration;
RogueType* RogueTypeCmdNecessary;
RogueType* RogueTypeCmdSufficient;
RogueType* RogueTypeCmdAdjust;
RogueType* RogueTypeCmdAssign;
RogueType* RogueTypeCmdModifyAndAssign;
RogueType* RogueTypeCmdTryExpression;
RogueType* RogueTypeCmdReadLocal;
RogueType* RogueTypeCmdAdjustLocal;
RogueType* RogueTypeCmdCompareLE;
RogueType* RogueTypeCmdComparison;
RogueType* RogueTypeCmdRange;
RogueType* RogueTypeCmdModifyAndAssignLocal;
RogueType* RogueTypeCmdResolvedModifyAndAssign;
RogueType* RogueTypeCmdRangeUpTo;
RogueType* RogueTypeCmdRangeUpToLessThan;
RogueType* RogueTypeCmdCompareLT;
RogueType* RogueTypeCmdCompareGE;
RogueType* RogueTypeCmdForEach;
RogueType* RogueTypeCmdRangeDownTo;
RogueType* RogueTypeCmdLogicalXor;
RogueType* RogueTypeCmdBinaryLogical;
RogueType* RogueTypeCmdLogicalOr;
RogueType* RogueTypeCmdLogicalAnd;
RogueType* RogueTypeCmdCompareEQ;
RogueType* RogueTypeCmdCompareIsNot;
RogueType* RogueTypeCmdCompareIs;
RogueType* RogueTypeCmdCompareNE;
RogueType* RogueTypeCmdCompareGT;
RogueType* RogueTypeCmdInstanceOf;
RogueType* RogueTypeCmdTypeOperator;
RogueType* RogueTypeCmdLogicalNot;
RogueType* RogueTypeCmdUnary;
RogueType* RogueTypeCmdBitwiseXor;
RogueType* RogueTypeCmdBitwiseOp;
RogueType* RogueTypeCmdBitwiseOr;
RogueType* RogueTypeCmdBitwiseAnd;
RogueType* RogueTypeCmdBitwiseShiftLeft;
RogueType* RogueTypeCmdBitwiseShiftRight;
RogueType* RogueTypeCmdBitwiseShiftRightX;
RogueType* RogueTypeCmdSubtract;
RogueType* RogueTypeCmdMultiply;
RogueType* RogueTypeCmdDivide;
RogueType* RogueTypeCmdMod;
RogueType* RogueTypeCmdPower;
RogueType* RogueTypeCmdNegate;
RogueType* RogueTypeCmdBitwiseNot;
RogueType* RogueTypeCmdLogicalize;
RogueType* RogueTypeCmdIsReference;
RogueType* RogueTypeCmdElementAccess;
RogueType* RogueTypeCmdConvertToType;
RogueType* RogueTypeCmdCreateCallback;
RogueType* RogueTypeCmdAs;
RogueType* RogueTypeFnParam;
RogueType* RogueTypeFnParam_List;
RogueType* RogueTypeCmdCreateFunction;
RogueType* RogueTypeFnArg_List;
RogueType* RogueTypeFnArg;
RogueType* RogueTypeCmdLiteralNull;
RogueType* RogueTypeCmdLiteralReal64;
RogueType* RogueTypeCmdLiteralInt64;
RogueType* RogueTypeCmdLiteralCharacter;
RogueType* RogueTypeCmdLiteralThis;
RogueType* RogueTypeCmdThisContext;
RogueType* RogueTypeCmdCreateList;
RogueType* RogueTypeCmdCallPriorMethod;
RogueType* RogueTypeCmdInlineNative;
RogueType* RogueTypeCmdSelect;
RogueType* RogueTypeCmdSelectCase_List;
RogueType* RogueTypeCmdSelectCase;
RogueType* RogueTypeCmdImplicitIDAccess;
RogueType* RogueTypeCmdImplicitAccess;
RogueType* RogueTypeCmdRequire;
RogueType* RogueTypeCmdEnsure;
RogueType* RogueTypeCmdTypedLiteralList;
RogueType* RogueTypeCmdCreateCompound;
RogueType* RogueTypeVisitor;
RogueType* RogueTypeCmdSwitch;
RogueType* RogueTypeCmdCreateObject;
RogueType* RogueTypeCmdReadSingleton;
RogueType* RogueTypeCmdWriteSingleton;
RogueType* RogueTypeCmdWriteLocal;
RogueType* RogueTypeCmdReadGlobal;
RogueType* RogueTypeCmdWriteGlobal;
RogueType* RogueTypeCmdReadProperty;
RogueType* RogueTypeCmdWriteProperty;
RogueType* RogueTypeCmdCall;
RogueType* RogueTypeCmdCallDynamicMethod;
RogueType* RogueTypeCmdCallMethod;
RogueType* RogueTypeCmdAdjustProperty;
RogueType* RogueTypeCmdAdjustGlobal;
RogueType* RogueTypeCmdModifyAndAssignGlobal;
RogueType* RogueTypeCmdModifyAndAssignProperty;
RogueType* RogueTypeCmdCreateArray;
RogueType* RogueTypeCmdReadArrayElement;
RogueType* RogueTypeCmdReadArrayCount;
RogueType* RogueTypeCmdWriteArrayElement;
RogueType* RogueTypeCmdTaskControl;
RogueType* RogueTypeCmdTaskControlSection_List;
RogueType* RogueTypeCmdNoAction;
RogueType* RogueTypeListRewriter_Type_;
RogueType* RogueTypeUpdateThisTypeVisitor;
RogueType* RogueTypeTable_String_TypeSpecializer_;
RogueType* RogueTypeTableEntry_String_TypeSpecializer_;
RogueType* RogueTypeCmdCastToType;
RogueType* RogueTypeTraceUsedCodeVisitor;
RogueType* RogueTypeCloneMethodArgs;
RogueType* RogueTypeTaskArgs;
RogueType* RogueTypeToken_List_List;
RogueType* RogueTypeDirectiveTokenType;
RogueType* RogueTypeStructuralDirectiveTokenType;
RogueType* RogueTypeEOLTokenType;
RogueType* RogueTypeStructureTokenType;
RogueType* RogueTypeNativeCodeTokenType;
RogueType* RogueTypeModifyAndAssignTokenType;
RogueType* RogueTypeFunction_CmdNamedArg_RETURNSLogical;
RogueType* RogueTypeMacroArgs;
RogueType* RogueTypeTable_String_Cmd_;
RogueType* RogueTypeTableEntry_String_Cmd_;
RogueType* RogueTypeListRewriter_CmdNamedArg_;
RogueType* RogueTypeFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical;
RogueType* RogueTypeQuicksort_CmdNamedArg_;
RogueType* RogueTypeCmdCallInlineNativeRoutine;
RogueType* RogueTypeCmdCallInlineNative;
RogueType* RogueTypeCmdCallNativeRoutine;
RogueType* RogueTypeCmdCallRoutine;
RogueType* RogueTypeCmdCallInlineNativeMethod;
RogueType* RogueTypeCmdCallNativeMethod;
RogueType* RogueTypeCmdCallAspectMethod;
RogueType* RogueTypeCandidateMethods;
RogueType* RogueTypeFunction_2953;
RogueType* RogueTypeFunction_2954;
RogueType* RogueTypeIOError;
RogueType* RogueTypeFileReader;
RogueType* RogueTypeFileWriter;
RogueType* RogueTypeUTF8Reader;
RogueType* RogueTypeQueryToGenericFunctionConversionVisitor;
RogueType* RogueTypeListReader_CmdSelectCase_;
RogueType* RogueTypeReader_CmdSelectCase_;
RogueType* RogueTypeCmdCallStaticMethod;
RogueType* RogueTypeNativeCodeToken;
RogueType* RogueTypeContainsImplicitAccessVisitor;
RogueType* RogueTypeOptionalInt32;
RogueType* RogueTypeOptionalCharacter;
RogueType* RogueTypeOptionalByte;
RogueType* RogueTypeSystemEnvironment;
RogueType* RogueTypeOptionalString;
RogueType* RogueTypeOptionalType;
RogueType* RogueTypeOptionalMethod;
RogueType* RogueTypeOptionalCmd;

int Rogue_literal_string_count = 2112;
RogueString* Rogue_literal_strings[2112];

void RogueStringBuilder__init_class()
{
  RogueStringBuilder_work_bytes = ((RogueByte_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))) )));
}

RogueLogical RogueLogical__create__Int32( RogueInt32 value_0 )
{
  return (RogueLogical)(value_0 != 0);
}

RogueCharacter RogueCharacter__create__Int32( RogueInt32 value_0 )
{
  return (RogueCharacter)(((RogueCharacter)(value_0)));
}

RogueClassValue* RogueValue__create__Real64( RogueReal64 value_0 )
{
  return (RogueClassValue*)(((RogueClassValue*)(((RogueReal64Value__init__Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassReal64Value*,ROGUE_CREATE_OBJECT(Real64Value))), value_0 ))))));
}

RogueClassValue* RogueValue__create__Object( RogueObject* value_0 )
{
  if (((void*)value_0) == ((void*)NULL))
  {
    return (RogueClassValue*)(((RogueClassValue*)(((RogueClassNullValue*)ROGUE_SINGLETON(NullValue)))));
  }
  return (RogueClassValue*)(((RogueClassValue*)(((RogueObjectValue__init__Object( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassObjectValue*,ROGUE_CREATE_OBJECT(ObjectValue))), value_0 ))))));
}

RogueClassValue* RogueValue__create__String( RogueString* value_0 )
{
  if (((void*)value_0) == ((void*)NULL))
  {
    return (RogueClassValue*)(((RogueClassValue*)(((RogueClassNullValue*)ROGUE_SINGLETON(NullValue)))));
  }
  return (RogueClassValue*)(((RogueClassValue*)(((RogueStringValue__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringValue*,ROGUE_CREATE_OBJECT(StringValue))), value_0 ))))));
}

RogueLogical RogueOptionalValue__operator__Value( RogueClassValue* value_0 )
{
  return (RogueLogical)(((((void*)value_0) != ((void*)NULL) && (Rogue_call_ROGUEM32( 39, value_0 ))) && (!((Rogue_call_ROGUEM32( 37, value_0 ))) || (Rogue_call_ROGUEM32( 97, value_0 )))));
}

RogueInt32 RogueMath__max__Int32_Int32( RogueInt32 a_0, RogueInt32 b_1 )
{
  if (a_0 >= b_1)
  {
    return (RogueInt32)(a_0);
  }
  else
  {
    return (RogueInt32)(b_1);
  }
}

RogueInt32 RogueMath__mod__Int32_Int32( RogueInt32 a_0, RogueInt32 b_1 )
{
  if (((!(!!(a_0)) && !(!!(b_1))) || b_1 == 1))
  {
    return (RogueInt32)(0);
  }
  RogueInt32 r_2 = (a_0 % b_1);
  if ((a_0 ^ b_1) < 0)
  {
    if (!!(r_2))
    {
      return (RogueInt32)((r_2 + b_1));
    }
    else
    {
      return (RogueInt32)(0);
    }
  }
  else
  {
    return (RogueInt32)(r_2);
  }
}

RogueInt64 RogueMath__mod__Int64_Int64( RogueInt64 a_0, RogueInt64 b_1 )
{
  if (((!(!!(a_0)) && !(!!(b_1))) || b_1 == ((RogueInt64)(1))))
  {
    return (RogueInt64)(((RogueInt64)(0)));
  }
  RogueInt64 r_2 = (a_0 % b_1);
  if ((a_0 ^ b_1) < ((RogueInt64)(0)))
  {
    if (!!(r_2))
    {
      return (RogueInt64)((r_2 + b_1));
    }
    else
    {
      return (RogueInt64)(((RogueInt64)(0)));
    }
  }
  else
  {
    return (RogueInt64)(r_2);
  }
}

RogueReal64 RogueMath__mod__Real64_Real64( RogueReal64 a_0, RogueReal64 b_1 )
{
  RogueReal64 q_2 = ((a_0 / b_1));
  return (RogueReal64)((a_0 - (floor((double)q_2) * b_1)));
}

RogueInt32 RogueMath__shift_right__Int32_Int32( RogueInt32 value_0, RogueInt32 bits_1 )
{
  if (bits_1 <= 0)
  {
    return (RogueInt32)(value_0);
  }
  --bits_1;
  if (!!(bits_1))
  {
    return (RogueInt32)((((value_0 >> 1) & 2147483647) >> bits_1));
  }
  else
  {
    return (RogueInt32)(((value_0 >> 1) & 2147483647));
  }
}

void RogueRuntime__init_class()
{
  RogueRuntime_type_info_lookup = ((RogueTable_String_TypeInfo___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TypeInfo_*,ROGUE_CREATE_OBJECT(Table_String_TypeInfo_))) )));
  ROGUE_DEF_LOCAL_REF(RogueString*,value_0,(((RogueSystemEnvironment__get__String( ROGUE_ARG(RogueSystem_environment), Rogue_literal_strings[904] )))));
  if (((void*)value_0) != ((void*)NULL))
  {
    RogueReal64 n_1 = (strtod( (char*)value_0->utf8, 0 ));
    if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'M' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[905] )))))
    {
      n_1 *= 1048576.0;
    }
    else if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'K' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[906] )))))
    {
      n_1 *= 1024.0;
    }
    RogueRuntime__set_gc_threshold__Int32( ROGUE_ARG(((RogueInt32)(n_1))) );
  }
}

RogueString* RogueRuntime__literal_string__Int32( RogueInt32 string_index_0 )
{
  if ((string_index_0 < 0 || string_index_0 >= (RogueRuntime__literal_string_count())))
  {
    return (RogueString*)(((RogueString*)(NULL)));
  }
  return (RogueString*)(Rogue_literal_strings[string_index_0]);
}

RogueInt32 RogueRuntime__literal_string_count()
{
  return (RogueInt32)(Rogue_literal_string_count);
}

void RogueRuntime__set_gc_threshold__Int32( RogueInt32 value_0 )
{
  if (value_0 <= 0)
  {
    value_0 = ((RogueInt32)2147483647);
  }
  Rogue_gc_threshold = value_0;

}

RogueTypeInfo* RogueRuntime__type_info__Int32( RogueInt32 type_index_0 )
{
  if (type_index_0 < 0 || type_index_0 >= Rogue_type_count) return 0;
  return RogueType_type_info( &Rogue_types[type_index_0] );

}

void RogueToken__init_class()
{
  RogueToken_filepath_to_filename = ((RogueTable_String_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_String_*,ROGUE_CREATE_OBJECT(Table_String_String_))) )));
}

void RogueTokenType__init_class()
{
}

void RogueType__init_class()
{
  RogueType_configure_chain = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  RogueType_organize_chain = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  RogueType_resolve_chain = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
}

void RogueCmdStatementList__init_class()
{
}

void RogueStopwatch__init_class()
{
}

void RogueCyClass__initialize()
{
  ROGUE_DEF_LOCAL_REF(RogueString*,keywords_0,(Rogue_literal_strings[771]));
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_2721_1,(((RogueString__split( keywords_0 )))));
    RogueInt32 _auto_2722_2 = (0);
    for (;_auto_2722_2 < _auto_2721_1->count;++_auto_2722_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,k_3,(((RogueString*)(_auto_2721_1->data->as_objects[_auto_2722_2]))));
      RogueSet_String___add__String( ROGUE_ARG(RogueCyClass_bad_names), k_3 );
    }
  }
}

RogueString* RogueCyClass__fix_name__String( RogueString* n_0 )
{
  if (((RogueSet_String___contains__String( ROGUE_ARG(RogueCyClass_bad_names), n_0 ))))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( n_0, Rogue_literal_strings[313] ))));
  }
  if (((RogueString__operatorEQUALSEQUALS__String( n_0, Rogue_literal_strings[472] ))))
  {
    return (RogueString*)(Rogue_literal_strings[773]);
  }
  if (((RogueString__operatorEQUALSEQUALS__String( n_0, Rogue_literal_strings[774] ))))
  {
    return (RogueString*)(Rogue_literal_strings[775]);
  }
  if (((RogueString__operatorEQUALSEQUALS__String( n_0, Rogue_literal_strings[776] ))))
  {
    return (RogueString*)(Rogue_literal_strings[777]);
  }
  if (((RogueString__operatorEQUALSEQUALS__String( n_0, Rogue_literal_strings[778] ))))
  {
    return (RogueString*)(Rogue_literal_strings[779]);
  }
  if (((RogueString__operatorEQUALSEQUALS__String( n_0, Rogue_literal_strings[780] ))))
  {
    return (RogueString*)(Rogue_literal_strings[781]);
  }
  if (((RogueString__operatorEQUALSEQUALS__String( n_0, Rogue_literal_strings[782] ))))
  {
    return (RogueString*)(Rogue_literal_strings[783]);
  }
  if (((RogueString__operatorEQUALSEQUALS__String( n_0, Rogue_literal_strings[784] ))))
  {
    return (RogueString*)(Rogue_literal_strings[785]);
  }
  if (((RogueString__operatorEQUALSEQUALS__String( n_0, Rogue_literal_strings[786] ))))
  {
    return (RogueString*)(Rogue_literal_strings[787]);
  }
  if (((RogueString__begins_with__String( n_0, Rogue_literal_strings[452] ))))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if ((((RogueString__begins_with__String( n_0, Rogue_literal_strings[315] ))) && ((RogueString__ends_with__String( n_0, Rogue_literal_strings[158] )))))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__clipped__Int32_Int32( n_0, 0, 2 )))), Rogue_literal_strings[788] ))));
  }
  return (RogueString*)(n_0);
}

RogueString* RogueCyClass__get_c_type__Type( RogueClassType* t_0 )
{
  if (((RogueType__is_reference( t_0 ))))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(t_0->cpp_class_name), Rogue_literal_strings[188] ))));
  }
  return (RogueString*)(t_0->cpp_class_name);
}

RogueString* RogueCyClass__get_c_to_py__Type( RogueClassType* t_0 )
{
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((RogueCyClass__get_p_type__Type( t_0 ))), Rogue_literal_strings[0] ))))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if (((void*)t_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String))
  {
    return (RogueString*)(Rogue_literal_strings[791]);
  }
  if (((RogueType__is_reference( t_0 ))))
  {
    return (RogueString*)(Rogue_literal_strings[792]);
  }
  return (RogueString*)(((RogueCharacter__to_String( (RogueCharacter)'%' ))));
}

RogueString* RogueCyClass__get_py_to_c__Type( RogueClassType* t_0 )
{
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((RogueCyClass__get_p_type__Type( t_0 ))), Rogue_literal_strings[0] ))))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,pass_ctype_1,((RogueCyClass__get_c_type__Type( t_0 ))));
  if (((RogueString__operatorEQUALSEQUALS__String( pass_ctype_1, Rogue_literal_strings[0] ))))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if (((RogueType__is_reference( t_0 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,pass_ptype_2,((RogueCyClass__get_p_type__Type( t_0 ))));
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[166] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], pass_ctype_1 )))) )))), Rogue_literal_strings[804] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], pass_ptype_2 )))) )))), Rogue_literal_strings[12] )))) ))));
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[166] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], pass_ctype_1 )))) )))), Rogue_literal_strings[805] )))) ))));
}

RogueString* RogueCyClass__get_p_type__Type( RogueClassType* type_0 )
{
  if (((void*)type_0) == ((void*)NULL))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if (type_0->is_array)
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if (((RogueType__is_compound( type_0 ))))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,pytype_1,(type_0->name));
  if (((RogueString__ends_with__String( pytype_1, Rogue_literal_strings[158] ))))
  {
    return (RogueString*)(type_0->cpp_name);
  }
  else if (((RogueString__contains__String( pytype_1, Rogue_literal_strings[172] ))))
  {
    if (!(!!(type_0->cpp_name)))
    {
      RogueType__assign_cpp_name( type_0 );
    }
    return (RogueString*)(type_0->cpp_name);
  }
  else if (((RogueString__contains__String( pytype_1, Rogue_literal_strings[9] ))))
  {
    return (RogueString*)(type_0->cpp_name);
  }
  return (RogueString*)(type_0->name);
}

void RogueCyClass__init_class()
{
  RogueCyClass_bad_names = ((RogueSet_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassSet_String_*,ROGUE_CREATE_OBJECT(Set_String_))) )));
}

void RoguePreprocessor__define__String_String( RogueString* name_0, RogueString* definition_1 )
{
  RoguePreprocessor__define__String_Token_List( name_0, ROGUE_ARG(((RogueTokenizer__tokenize__String_String( ROGUE_ARG(((RogueClassTokenizer*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), Rogue_literal_strings[229], definition_1 )))) );
}

void RoguePreprocessor__define__String_Token_List( RogueString* name_0, RogueToken_List* tokens_1 )
{
  RogueTable_String_Token_List___set__String_Token_List( ROGUE_ARG(RoguePreprocessor_definitions), name_0, tokens_1 );
}

void RoguePreprocessor__init_class()
{
  RoguePreprocessor_definitions = ((RogueTable_String_Token_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Token_List_*,ROGUE_CREATE_OBJECT(Table_String_Token_List_))) )));
}

void RogueSystem__exit__Int32( RogueInt32 result_code_0 )
{
  Rogue_quit();
  exit( result_code_0 );

}

RogueInt32 RogueSystem__run__String( RogueString* command_0 )
{
  RogueInt32 return_val_1 = (0);
  return_val_1 = system( (char*)command_0->utf8 );

  if (return_val_1 == -1)
  {
    ROGUE_THROW(RogueClassError,((RogueClassError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), Rogue_literal_strings[901] )))));
  }
  return (RogueInt32)(return_val_1);
}

RogueReal64 RogueSystem__time()
{
#if defined(_WIN32)
    struct __timeb64 time_struct;
    RogueReal64 time_seconds;
    _ftime64_s( &time_struct );
    time_seconds = (RogueReal64) time_struct.time;
    time_seconds += time_struct.millitm / 1000.0;
    return time_seconds;
#else
    struct timeval time_struct;
    RogueReal64 time_seconds;
    gettimeofday( &time_struct, 0 );
    time_seconds = (RogueReal64) time_struct.tv_sec;
    time_seconds += (time_struct.tv_usec / 1000000.0);
    return time_seconds;
#endif

}

void RogueSystem__init_class()
{
  RogueSystem_command_line_arguments = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
}

void RogueStringValue__init_class()
{
  RogueStringValue_empty_string = ((RogueStringValue__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringValue*,ROGUE_CREATE_OBJECT(StringValue))), Rogue_literal_strings[0] )));
}

RogueString* RogueFile__absolute_filepath__String( RogueString* filepath_0 )
{
  if (!(!!(filepath_0)))
  {
    return (RogueString*)(((RogueString*)(NULL)));
  }
  if (!((RogueFile__exists__String( filepath_0 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,parent_1,((RogueFile__path__String( filepath_0 ))));
    if (parent_1->character_count == 0)
    {
      parent_1 = ((RogueString*)Rogue_literal_strings[154]);
    }
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((RogueFile__absolute_filepath__String( parent_1 ))) )))) )))), Rogue_literal_strings[183] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((RogueFile__filename__String( filepath_0 ))) )))) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,return_value_2,0);
#if defined(_WIN32)
  {
    char long_name[PATH_MAX+4];
    char full_name[PATH_MAX+4];
    if (GetInt64PathName((char*)filepath_0->utf8, long_name, PATH_MAX+4) == 0)
    {
      strcpy_s( long_name, PATH_MAX+4, (char*)filepath_0->utf8 );
    }
    if (GetFullPathName(long_name, PATH_MAX+4, full_name, 0) != 0)
    {
      return_value_2 = RogueString_create_from_utf8( full_name, -1 );
    }
  }
#else
  {
    int original_dir_fd;
    int new_dir_fd;
    char filename[PATH_MAX];
    char c_filepath[ PATH_MAX ];
    bool is_folder;
    is_folder = RogueFile__is_folder__String( filepath_0 );
    int len = filepath_0->byte_count;
    if (len >= PATH_MAX) len = PATH_MAX - 1;
    memcpy( c_filepath, (char*)filepath_0->utf8, len );
    c_filepath[len] = 0;
    // A way to get back to the starting folder when finished.
    original_dir_fd = open( ".", O_RDONLY );
    if (is_folder)
    {
      filename[0] = 0;
    }
    else
    {
      // fchdir only works with a path, not a path+filename (c_filepath).
      // Copy out the filename and null terminate the filepath to be just a path.
      int i = (int) strlen( c_filepath ) - 1;
      while (i >= 0 && c_filepath[i] != '/') --i;
      strcpy( filename, c_filepath+i+1 );
      if (i == -1) strcpy( c_filepath, "." );
      else         c_filepath[i] = 0;
    }
    new_dir_fd = open( c_filepath, O_RDONLY );
    do
    {
      if (original_dir_fd >= 0 && new_dir_fd >= 0)
      {
        int r = fchdir( new_dir_fd );
        if ( r != 0 ) break;
        char * r2 = getcwd( c_filepath, PATH_MAX );
        if ( r2 == 0 ) break;
        if ( !is_folder )
        {
          strcat( c_filepath, "/" );
          strcat( c_filepath, filename );
        }
        r = fchdir( original_dir_fd );
        if ( r != 0 ) break;
      }
      return_value_2 = RogueString_create_from_utf8( c_filepath, -1 );
    } while (false);
    if (original_dir_fd >= 0) close( original_dir_fd );
    if (new_dir_fd >= 0) close( new_dir_fd );
  }
#endif

  if (((void*)return_value_2) == ((void*)NULL))
  {
    ROGUE_THROW(RogueClassIOError,((RogueClassIOError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassIOError*,ROGUE_CREATE_OBJECT(IOError)))), Rogue_literal_strings[248] )))));
  }
  return (RogueString*)(return_value_2);
}

RogueLogical RogueFile__create_folder__String( RogueString* _auto_5755 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,filepath_0,_auto_5755);
  filepath_0 = ((RogueString*)(RogueFile__absolute_filepath__String( filepath_0 )));
  if ((RogueFile__exists__String( filepath_0 )))
  {
    return (RogueLogical)((RogueFile__is_folder__String( filepath_0 )));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,parent_1,((RogueFile__path__String( filepath_0 ))));
  if (!((RogueFile__create_folder__String( parent_1 ))))
  {
    return (RogueLogical)(false);
  }
  return (0 == mkdir((char*)filepath_0->utf8, 0777));

}

RogueLogical RogueFile__exists__String( RogueString* filepath_0 )
{
  if ( !filepath_0 ) return false;
  FILE* fp = fopen( (char*)filepath_0->utf8, "rb" );
  if ( !fp ) return false;
  fclose( fp );
  return true;

}

RogueString* RogueFile__filename__String( RogueString* filepath_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'/', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_1.exists))
  {
    i_1 = ((RogueOptionalInt32)((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'\\', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  if (!(i_1.exists))
  {
    return (RogueString*)(filepath_0);
  }
  return (RogueString*)(((RogueString__from__Int32( filepath_0, ROGUE_ARG((i_1.value + 1)) ))));
}

RogueLogical RogueFile__is_folder__String( RogueString* filepath_0 )
{
  if ( !filepath_0 ) return false;
#if defined(_WIN32)
    char filepath_copy[PATH_MAX];
    strcpy( filepath_copy, (char*)filepath_0->utf8 );
    int path_len = filepath_0->byte_count;
    int i = strlen(filepath_copy)-1;
    while (i > 0 && (filepath_copy[i] == '/' || filepath_copy[i] == '\\')) filepath_copy[i--] = 0;
    // Windows allows dir\* to count as a directory; guard against.
    for (i=0; filepath_copy[i]; ++i)
    {
      if (filepath_copy[i] == '*' || filepath_copy[i] == '?') return 0;
    }
    WIN32_FIND_DATA entry;
    HANDLE dir = FindFirstFile( filepath_copy, &entry );
    if (dir != INVALID_HANDLE_VALUE)
    {
      if (entry.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
      {
        FindClose( dir );
        return 1;
      }
    }
    FindClose( dir );
    return 0;
#else
    DIR* dir = opendir( (char*)filepath_0->utf8 );
    if ( !dir ) return 0;
    closedir( dir );
    return 1;
#endif

}

RogueString* RogueFile__load_as_string__String( RogueString* filepath_0 )
{
  RogueInt32 count_1 = ((RogueFile__size__String( filepath_0 )));
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), count_1 )))));
  ROGUE_DEF_LOCAL_REF(RogueClassFileReader*,infile_3,((RogueFile__reader__String( filepath_0 ))));
  {
    RogueInt32 _auto_856_4 = (1);
    RogueInt32 _auto_857_5 = (count_1);
    for (;_auto_856_4 <= _auto_857_5;++_auto_856_4)
    {
      RogueByte b_6 = (((RogueFileReader__read( infile_3 ))));
      RogueByte_List__add__Byte( ROGUE_ARG(buffer_2->utf8), b_6 );
      if ((((RogueInt32)(b_6)) & 192) != 128)
      {
        ++buffer_2->count;
      }
    }
  }
  RogueFileReader__close( infile_3 );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_2 ))));
}

RogueString* RogueFile__path__String( RogueString* filepath_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'/', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_1.exists))
  {
    i_1 = ((RogueOptionalInt32)((RogueString__locate_last__Character_OptionalInt32( filepath_0, (RogueCharacter)'\\', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  if (!(i_1.exists))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  return (RogueString*)(((RogueString__from__Int32_Int32( filepath_0, 0, ROGUE_ARG((i_1.value - 1)) ))));
}

RogueClassFileReader* RogueFile__reader__String( RogueString* filepath_0 )
{
  return (RogueClassFileReader*)(((RogueFileReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFileReader*,ROGUE_CREATE_OBJECT(FileReader))), filepath_0 ))));
}

RogueLogical RogueFile__save__String_String( RogueString* filepath_0, RogueString* data_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassFileWriter*,outfile_2,((RogueFile__writer__String( filepath_0 ))));
  RogueFileWriter__write__String( outfile_2, data_1 );
  RogueFileWriter__close( outfile_2 );
  return (RogueLogical)(!(outfile_2->error));
}

RogueInt32 RogueFile__size__String( RogueString* filepath_0 )
{
  if ( !filepath_0 ) return 0;
  FILE* fp = fopen( (char*)filepath_0->utf8, "rb" );
  if ( !fp ) return 0;
  fseek( fp, 0, SEEK_END );
  RogueInt32 size = (RogueInt32) ftell( fp );
  fclose( fp );
  return size;

}

RogueClassFileWriter* RogueFile__writer__String( RogueString* filepath_0 )
{
  return (RogueClassFileWriter*)(((RogueFileWriter__init__String_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFileWriter*,ROGUE_CREATE_OBJECT(FileWriter))), filepath_0, false ))));
}

RogueCmdNamedArg_List* RogueQuicksort_CmdNamedArg___sort__CmdNamedArg_List_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* list_0, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_1 )
{
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( ROGUE_ARG(list_0->data), compare_fn_1, 0, ROGUE_ARG((list_0->count - 1)) );
  return (RogueCmdNamedArg_List*)(list_0);
}

void RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( RogueArray* data_0, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_1, RogueInt32 i1_2, RogueInt32 i2_3 )
{
  if (i1_2 >= i2_3)
  {
    return;
  }
  else if ((i1_2 + 1) == i2_3)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,a_4,(((RogueClassCmdNamedArg*)(data_0->as_objects[i1_2]))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,b_5,(((RogueClassCmdNamedArg*)(data_0->as_objects[i2_3]))));
    if (!((Rogue_call_ROGUEM1288( 17, compare_fn_1, a_4, b_5 ))))
    {
      data_0->as_objects[i2_3] = a_4;
      data_0->as_objects[i1_2] = b_5;
    }
    return;
  }
  else if ((i1_2 + 2) == i2_3)
  {
    RogueInt32 ib_6 = ((i1_2 + 1));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,a_7,(((RogueClassCmdNamedArg*)(data_0->as_objects[i1_2]))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,b_8,(((RogueClassCmdNamedArg*)(data_0->as_objects[ib_6]))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,c_9,(((RogueClassCmdNamedArg*)(data_0->as_objects[i2_3]))));
    if ((Rogue_call_ROGUEM1288( 17, compare_fn_1, a_7, b_8 )))
    {
      if ((Rogue_call_ROGUEM1288( 17, compare_fn_1, b_8, c_9 )))
      {
        return;
      }
      else if ((Rogue_call_ROGUEM1288( 17, compare_fn_1, a_7, c_9 )))
      {
        data_0->as_objects[ib_6] = c_9;
        data_0->as_objects[i2_3] = b_8;
        return;
      }
      else
      {
        data_0->as_objects[i1_2] = c_9;
        data_0->as_objects[ib_6] = a_7;
        data_0->as_objects[i2_3] = b_8;
        return;
      }
    }
    else if ((Rogue_call_ROGUEM1288( 17, compare_fn_1, a_7, c_9 )))
    {
      data_0->as_objects[i1_2] = b_8;
      data_0->as_objects[ib_6] = a_7;
      return;
    }
    else if ((Rogue_call_ROGUEM1288( 17, compare_fn_1, b_8, c_9 )))
    {
      data_0->as_objects[i1_2] = b_8;
      data_0->as_objects[ib_6] = c_9;
      data_0->as_objects[i2_3] = a_7;
      return;
    }
    else
    {
      data_0->as_objects[i1_2] = c_9;
      data_0->as_objects[ib_6] = b_8;
      data_0->as_objects[i2_3] = a_7;
      return;
    }
  }
  RogueInt32 pivot_index_10 = ((RogueMath__shift_right__Int32_Int32( ROGUE_ARG((i1_2 + i2_3)), 1 )));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,pivot_11,(((RogueClassCmdNamedArg*)(data_0->as_objects[pivot_index_10]))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,first_12,(((RogueClassCmdNamedArg*)(data_0->as_objects[i1_2]))));
  if ((Rogue_call_ROGUEM1288( 17, compare_fn_1, pivot_11, first_12 )))
  {
    pivot_11 = ((RogueClassCmdNamedArg*)first_12);
    pivot_index_10 = ((RogueInt32)i1_2);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,last_13,(((RogueClassCmdNamedArg*)(data_0->as_objects[i2_3]))));
  if ((Rogue_call_ROGUEM1288( 17, compare_fn_1, last_13, pivot_11 )))
  {
    pivot_11 = ((RogueClassCmdNamedArg*)last_13);
    pivot_index_10 = ((RogueInt32)i2_3);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,temp_14,(((RogueClassCmdNamedArg*)(data_0->as_objects[pivot_index_10]))));
  data_0->as_objects[pivot_index_10] = ((RogueClassCmdNamedArg*)(data_0->as_objects[i2_3]));
  data_0->as_objects[i2_3] = temp_14;
  pivot_index_10 = ((RogueInt32)i1_2);
  {
    RogueInt32 i_15 = (i1_2);
    RogueInt32 _auto_2897_16 = ((i2_3 - 1));
    for (;i_15 <= _auto_2897_16;++i_15)
    {
      if ((Rogue_call_ROGUEM1288( 17, compare_fn_1, ROGUE_ARG(((RogueClassCmdNamedArg*)(data_0->as_objects[i_15]))), pivot_11 )))
      {
        temp_14 = ((RogueClassCmdNamedArg*)((RogueClassCmdNamedArg*)(data_0->as_objects[i_15])));
        data_0->as_objects[i_15] = ((RogueClassCmdNamedArg*)(data_0->as_objects[pivot_index_10]));
        data_0->as_objects[pivot_index_10] = temp_14;
        ++pivot_index_10;
      }
    }
  }
  temp_14 = ((RogueClassCmdNamedArg*)((RogueClassCmdNamedArg*)(data_0->as_objects[pivot_index_10])));
  data_0->as_objects[pivot_index_10] = ((RogueClassCmdNamedArg*)(data_0->as_objects[i2_3]));
  data_0->as_objects[i2_3] = temp_14;
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( data_0, compare_fn_1, i1_2, ROGUE_ARG((pivot_index_10 - 1)) );
  RogueQuicksort_CmdNamedArg___sort__Array_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical_Int32_Int32( data_0, compare_fn_1, ROGUE_ARG((pivot_index_10 + 1)), i2_3 );
}

RogueOptionalInt32 RogueOptionalInt32__create()
{
  RogueInt32 default_value_0 = 0;
  return (RogueOptionalInt32)(RogueOptionalInt32( default_value_0, false ));
}

RogueOptionalCharacter RogueOptionalCharacter__create()
{
  RogueCharacter default_value_0 = 0;
  return (RogueOptionalCharacter)(RogueOptionalCharacter( default_value_0, false ));
}

RogueOptionalByte RogueOptionalByte__create()
{
  RogueByte default_value_0 = 0;
  return (RogueOptionalByte)(RogueOptionalByte( default_value_0, false ));
}

RogueOptionalString RogueOptionalString__create()
{
  ROGUE_DEF_LOCAL_REF(RogueString*,default_value_0,0);
  return (RogueOptionalString)(RogueOptionalString( default_value_0, false ));
}

RogueOptionalType RogueOptionalType__create()
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,default_value_0,0);
  return (RogueOptionalType)(RogueOptionalType( default_value_0, false ));
}

RogueOptionalMethod RogueOptionalMethod__create()
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,default_value_0,0);
  return (RogueOptionalMethod)(RogueOptionalMethod( default_value_0, false ));
}

RogueOptionalCmd RogueOptionalCmd__create()
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,default_value_0,0);
  return (RogueOptionalCmd)(RogueOptionalCmd( default_value_0, false ));
}


void RogueObject__init_object( RogueObject* THIS )
{
}

RogueObject* RogueObject__init( RogueObject* THIS )
{
  return (RogueObject*)(THIS);
}

RogueInt32 RogueObject__hash_code( RogueObject* THIS )
{
  return (RogueInt32)(((RogueInt32)(((RogueObject__object_id( ROGUE_ARG(THIS) ))))));
}

RogueInt64 RogueObject__object_id( RogueObject* THIS )
{
  RogueInt64 addr_0 = 0;
  addr_0 = (RogueInt64)(intptr_t)THIS;

  return (RogueInt64)(addr_0);
}

RogueLogical RogueObject__operatorEQUALSEQUALS__Object( RogueObject* THIS, RogueObject* other_0 )
{
  return (RogueLogical)(((void*)THIS) == ((void*)other_0));
}

RogueString* RogueObject__to_String( RogueObject* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM4( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[11] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt64__to_hex_string__Int32( ROGUE_ARG(((RogueObject__object_id( ROGUE_ARG(THIS) )))), 16 )))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueObject__type_name( RogueObject* THIS )
{
  return (RogueString*)(Rogue_literal_strings[10]);
}

RogueClassGlobal* RogueGlobal__init_object( RogueClassGlobal* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->standard_output = ((RogueClassPrintWriter*)(((RogueClassConsole*)ROGUE_SINGLETON(Console))));
  THIS->global_output_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__init( RogueClassGlobal* THIS )
{
  RogueGlobal__on_exit__Function__( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassFunction__*)(((RogueClassFunction_161*)ROGUE_SINGLETON(Function_161))))) );
  return (RogueClassGlobal*)(THIS);
}

RogueString* RogueGlobal__type_name( RogueClassGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[295]);
}

RogueClassGlobal* RogueGlobal__flush( RogueClassGlobal* THIS )
{
  if (!!(THIS->global_output_buffer->count))
  {
    RogueGlobal__write__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(THIS->global_output_buffer) );
    RogueStringBuilder__clear( ROGUE_ARG(THIS->global_output_buffer) );
  }
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__Character( RogueClassGlobal* THIS, RogueCharacter value_0 )
{
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->global_output_buffer), value_0, true );
  if (value_0 == (RogueCharacter)10)
  {
    return (RogueClassGlobal*)(((RogueGlobal__flush( ROGUE_ARG(THIS) ))));
  }
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__Object( RogueClassGlobal* THIS, RogueObject* value_0 )
{
  RogueStringBuilder__print__Object( ROGUE_ARG(THIS->global_output_buffer), value_0 );
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__print__String( RogueClassGlobal* THIS, RogueString* value_0 )
{
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->global_output_buffer), value_0 );
  if (THIS->global_output_buffer->count > 1024)
  {
    RogueGlobal__flush( ROGUE_ARG(THIS) );
  }
  return (RogueClassGlobal*)(THIS);
}

RogueClassGlobal* RogueGlobal__println( RogueClassGlobal* THIS )
{
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->global_output_buffer), (RogueCharacter)10, true );
  return (RogueClassGlobal*)(((RogueGlobal__flush( ROGUE_ARG(THIS) ))));
}

RogueClassGlobal* RogueGlobal__println__Object( RogueClassGlobal* THIS, RogueObject* value_0 )
{
  return (RogueClassGlobal*)(((RogueGlobal__println( ROGUE_ARG(((RogueGlobal__print__Object( ROGUE_ARG(THIS), value_0 )))) ))));
}

RogueClassGlobal* RogueGlobal__println__String( RogueClassGlobal* THIS, RogueString* value_0 )
{
  return (RogueClassGlobal*)(((RogueGlobal__println( ROGUE_ARG(((RogueGlobal__print__String( ROGUE_ARG(THIS), value_0 )))) ))));
}

RogueClassGlobal* RogueGlobal__write__StringBuilder( RogueClassGlobal* THIS, RogueStringBuilder* buffer_0 )
{
  RoguePrintWriter__flush( ROGUE_ARG(((RogueObject*)(RoguePrintWriter__write__StringBuilder( ROGUE_ARG(((RogueObject*)THIS->standard_output)), buffer_0 )))) );
  return (RogueClassGlobal*)(THIS);
}

void RogueGlobal__on_launch( RogueClassGlobal* THIS )
{
  RogueRogueC__launch( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)) );
}

void RogueGlobal__run_tests( RogueClassGlobal* THIS )
{
}

void RogueGlobal__call_exit_functions( RogueClassGlobal* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueFunction___List*,functions_0,(THIS->exit_functions));
  THIS->exit_functions = ((RogueFunction___List*)(NULL));
  if (!!(functions_0))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueFunction___List*,_auto_244_1,(functions_0));
      RogueInt32 _auto_245_2 = (0);
      for (;_auto_245_2 < _auto_244_1->count;++_auto_245_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFunction__*,fn_3,(((RogueClassFunction__*)(_auto_244_1->data->as_objects[_auto_245_2]))));
        Rogue_call_ROGUEM19( 17, fn_3 );
      }
    }
  }
}

void RogueGlobal__on_exit__Function__( RogueClassGlobal* THIS, RogueClassFunction__* fn_0 )
{
  if (!(!!(THIS->exit_functions)))
  {
    THIS->exit_functions = ((RogueFunction___List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFunction___List*,ROGUE_CREATE_OBJECT(Function___List))) )));
  }
  RogueFunction___List__add__Function__( ROGUE_ARG(THIS->exit_functions), fn_0 );
}

RogueClassPrintWriter_global_output_buffer_* RoguePrintWriter_global_output_buffer___flush( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 1:
      return (RogueClassPrintWriter_global_output_buffer_*)RogueGlobal__flush( (RogueClassGlobal*)THIS );
    default:
      return 0;
  }
}

RogueClassPrintWriter_global_output_buffer_* RoguePrintWriter_global_output_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 1:
      return (RogueClassPrintWriter_global_output_buffer_*)RogueGlobal__write__StringBuilder( (RogueClassGlobal*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueClassPrintWriter* RoguePrintWriter__flush( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 1:
      return (RogueClassPrintWriter*)RogueGlobal__flush( (RogueClassGlobal*)THIS );
    case 48:
      return (RogueClassPrintWriter*)RogueConsole__flush( (RogueClassConsole*)THIS );
    default:
      return 0;
  }
}

RogueClassPrintWriter* RoguePrintWriter__write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 1:
      return (RogueClassPrintWriter*)RogueGlobal__write__StringBuilder( (RogueClassGlobal*)THIS, buffer_0 );
    case 48:
      return (RogueClassPrintWriter*)RogueConsole__write__StringBuilder( (RogueClassConsole*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueStringBuilder* RogueStringBuilder__init_object( RogueStringBuilder* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->at_newline = true;
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__init( RogueStringBuilder* THIS )
{
  RogueStringBuilder__init__Int32( ROGUE_ARG(THIS), 40 );
  return (RogueStringBuilder*)(THIS);
}

RogueInt32 RogueStringBuilder__hash_code( RogueStringBuilder* THIS )
{
  RogueInt32 code_0 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_673_1,(THIS->utf8));
    RogueInt32 _auto_674_2 = (0);
    for (;_auto_674_2 < _auto_673_1->count;++_auto_674_2)
    {
      RogueByte ch_3 = (_auto_673_1->data->as_bytes[_auto_674_2]);
      code_0 = ((RogueInt32)(((code_0 << 3) - code_0) + ((RogueInt32)(ch_3))));
    }
  }
  return (RogueInt32)(code_0);
}

RogueString* RogueStringBuilder__to_String( RogueStringBuilder* THIS )
{
  return (RogueString*)(RogueString_create_from_utf8( (char*)THIS->utf8->data->as_bytes, THIS->utf8->count ));
}

RogueString* RogueStringBuilder__type_name( RogueStringBuilder* THIS )
{
  return (RogueString*)(Rogue_literal_strings[379]);
}

RogueStringBuilder* RogueStringBuilder__init__Int32( RogueStringBuilder* THIS, RogueInt32 initial_capacity_0 )
{
  THIS->utf8 = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), initial_capacity_0 )));
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__clear( RogueStringBuilder* THIS )
{
  RogueByte_List__clear( ROGUE_ARG(THIS->utf8) );
  THIS->count = 0;
  THIS->at_newline = true;
  THIS->cursor_index = 0;
  THIS->cursor_offset = 0;
  return (RogueStringBuilder*)(THIS);
}

RogueCharacter RogueStringBuilder__get__Int32( RogueStringBuilder* THIS, RogueInt32 index_0 )
{
  if (index_0 == 0)
  {
    THIS->cursor_offset = 0;
    THIS->cursor_index = 0;
  }
  else if (index_0 == (THIS->count - 1))
  {
    THIS->cursor_offset = THIS->utf8->count;
    THIS->cursor_index = THIS->count;
  }
  while (THIS->cursor_index < index_0)
  {
    ++THIS->cursor_offset;
    while ((((RogueInt32)(THIS->utf8->data->as_bytes[THIS->cursor_offset])) & 192) == 128)
    {
      ++THIS->cursor_offset;
    }
    ++THIS->cursor_index;
  }
  while (THIS->cursor_index > index_0)
  {
    --THIS->cursor_offset;
    while ((((RogueInt32)(THIS->utf8->data->as_bytes[THIS->cursor_offset])) & 192) == 128)
    {
      --THIS->cursor_offset;
    }
    --THIS->cursor_index;
  }
  RogueByte ch_1 = (THIS->utf8->data->as_bytes[THIS->cursor_offset]);
  if (!!((((RogueInt32)(ch_1)) & 128)))
  {
    if (!!((((RogueInt32)(ch_1)) & 32)))
    {
      if (!!((((RogueInt32)(ch_1)) & 16)))
      {
        return (RogueCharacter)(((RogueCharacter)((((((((RogueInt32)(ch_1)) & 7) << 18) | ((((RogueInt32)(THIS->utf8->data->as_bytes[(THIS->cursor_offset + 1)])) & 63) << 12)) | ((((RogueInt32)(THIS->utf8->data->as_bytes[(THIS->cursor_offset + 2)])) & 63) << 6)) | (((RogueInt32)(THIS->utf8->data->as_bytes[(THIS->cursor_offset + 3)])) & 63)))));
      }
      else
      {
        return (RogueCharacter)(((RogueCharacter)(((((((RogueInt32)(ch_1)) & 15) << 12) | ((((RogueInt32)(THIS->utf8->data->as_bytes[(THIS->cursor_offset + 1)])) & 63) << 6)) | (((RogueInt32)(THIS->utf8->data->as_bytes[(THIS->cursor_offset + 2)])) & 63)))));
      }
    }
    else
    {
      return (RogueCharacter)(((RogueCharacter)((((((RogueInt32)(ch_1)) & 31) << 6) | (((RogueInt32)(THIS->utf8->data->as_bytes[(THIS->cursor_offset + 1)])) & 63)))));
    }
  }
  else
  {
    return (RogueCharacter)(((RogueCharacter)(ch_1)));
  }
}

RogueStringBuilder* RogueStringBuilder__insert_spaces__Int32_Int32( RogueStringBuilder* THIS, RogueInt32 index_0, RogueInt32 spaces_1 )
{
  if (((spaces_1 > 0 && index_0 >= 0) && index_0 < THIS->count))
  {
    RogueByte_List__shift__Int32_OptionalInt32_Int32_OptionalByte( ROGUE_ARG(THIS->utf8), index_0, ROGUE_ARG((RogueOptionalInt32__create())), spaces_1, ROGUE_ARG(RogueOptionalByte( ((RogueByte)((RogueCharacter)' ')), true )) );
    THIS->count += 2;
  }
  return (RogueStringBuilder*)(THIS);
}

RogueOptionalInt32 RogueStringBuilder__locate__Character( RogueStringBuilder* THIS, RogueCharacter ch_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,_auto_675_1,(THIS));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_675_1->count;++i_2)
    {
      if (((RogueStringBuilder__get__Int32( ROGUE_ARG(THIS), i_2 ))) == ch_0)
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueLogical RogueStringBuilder__needs_indent( RogueStringBuilder* THIS )
{
  return (RogueLogical)((THIS->at_newline && THIS->indent > 0));
}

RogueStringBuilder* RogueStringBuilder__print__Character_Logical( RogueStringBuilder* THIS, RogueCharacter value_0, RogueLogical formatted_1 )
{
  if (formatted_1)
  {
    if (value_0 == (RogueCharacter)10)
    {
      THIS->at_newline = true;
    }
    else if (((RogueStringBuilder__needs_indent( ROGUE_ARG(THIS) ))))
    {
      RogueStringBuilder__print_indent( ROGUE_ARG(THIS) );
    }
  }
  ++THIS->count;
  if (((RogueInt32)(value_0)) < 0)
  {
    RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)(0))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 127 )))
  {
    RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)(value_0))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 2047 )))
  {
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((192 | (((RogueInt32)(value_0)) >> 6))))) )))), ROGUE_ARG(((RogueByte)((128 | (((RogueInt32)(value_0)) & 63))))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 65535 )))
  {
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((224 | (((RogueInt32)(value_0)) >> 12))))) )))), ROGUE_ARG(((RogueByte)((128 | ((((RogueInt32)(value_0)) >> 6) & 63))))) )))), ROGUE_ARG(((RogueByte)((128 | (((RogueInt32)(value_0)) & 63))))) );
  }
  else if (value_0 <= (RogueCharacter__create__Int32( 1114111 )))
  {
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((240 | (((RogueInt32)(value_0)) >> 18))))) )))), ROGUE_ARG(((RogueByte)((128 | ((((RogueInt32)(value_0)) >> 12) & 63))))) );
    RogueByte_List__add__Byte( ROGUE_ARG(((RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((128 | ((((RogueInt32)(value_0)) >> 6) & 63))))) )))), ROGUE_ARG(((RogueByte)((128 | (((RogueInt32)(value_0)) & 63))))) );
  }
  else
  {
    RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((RogueCharacter)'?'))) );
  }
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__Int32( RogueStringBuilder* THIS, RogueInt32 value_0 )
{
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt64)(value_0))) ))));
}

RogueStringBuilder* RogueStringBuilder__print__Logical( RogueStringBuilder* THIS, RogueLogical value_0 )
{
  if (value_0)
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[140] ))));
  }
  else
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[130] ))));
  }
}

RogueStringBuilder* RogueStringBuilder__print__Int64( RogueStringBuilder* THIS, RogueInt64 value_0 )
{
  if (value_0 == (((RogueInt64)(1)) << ((RogueInt64)(63))))
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[17] ))));
  }
  else if (value_0 < ((RogueInt64)(0)))
  {
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG((-(value_0))) ))));
  }
  else if (value_0 >= ((RogueInt64)(10)))
  {
    RogueStringBuilder__print__Int64( ROGUE_ARG(THIS), ROGUE_ARG((value_0 / ((RogueInt64)(10)))) );
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)((((RogueInt64)((RogueCharacter)'0')) + (RogueMath__mod__Int64_Int64( value_0, ROGUE_ARG(((RogueInt64)(10))) )))))), true ))));
  }
  else
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)((((RogueInt64)((RogueCharacter)'0')) + value_0)))), true ))));
  }
}

RogueStringBuilder* RogueStringBuilder__print__Object( RogueStringBuilder* THIS, RogueObject* value_0 )
{
  if (!!(value_0))
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), ROGUE_ARG((Rogue_call_ROGUEM4( 11, value_0 ))) ))));
  }
  return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
}

RogueStringBuilder* RogueStringBuilder__print__Real64( RogueStringBuilder* THIS, RogueReal64 value_0 )
{
  if (value_0 == 0.0)
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[794] );
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_infinite( value_0 ))))
  {
    if (value_0 < 0.0)
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[795] );
    }
    else
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[132] );
    }
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_not_a_number( value_0 ))))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[134] );
    return (RogueStringBuilder*)(THIS);
  }
  if (value_0 < 0.0)
  {
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    value_0 = ((RogueReal64)(-(value_0)));
  }
  if (value_0 >= 1.0e15)
  {
    RogueInt32 pow10_1 = (0);
    while (value_0 >= 10.0)
    {
      value_0 /= 10.0;
      ++pow10_1;
    }
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)'e', true )))), pow10_1 ))));
  }
  if (value_0 < 0.00001)
  {
    RogueInt32 pow10_2 = (0);
    while (value_0 < 0.1)
    {
      value_0 *= 10.0;
      --pow10_2;
    }
    return (RogueStringBuilder*)(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)'e', true )))), pow10_2 ))));
  }
  {
    RogueInt32 decimal_count_3 = (1);
    RogueInt32 _auto_0_4 = (18);
    for (;decimal_count_3 <= _auto_0_4;++decimal_count_3)
    {
      RogueStringBuilder__print_to_work_bytes__Real64_Int32( ROGUE_ARG(THIS), value_0, decimal_count_3 );
      if (((RogueStringBuilder__scan_work_bytes( ROGUE_ARG(THIS) ))) == value_0)
      {
        goto _auto_679;
      }
    }
  }
  _auto_679:;
  RogueStringBuilder__print_work_bytes( ROGUE_ARG(THIS) );
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__Real64_Int32( RogueStringBuilder* THIS, RogueReal64 value_0, RogueInt32 decimal_places_1 )
{
  if (((RogueReal64__is_infinite( value_0 ))))
  {
    if (value_0 < 0.0)
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[795] );
    }
    else
    {
      RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[132] );
    }
    return (RogueStringBuilder*)(THIS);
  }
  else if (((RogueReal64__is_not_a_number( value_0 ))))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[134] );
    return (RogueStringBuilder*)(THIS);
  }
  if (value_0 < 0.0)
  {
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)'-', true );
    value_0 = ((RogueReal64)(-(value_0)));
  }
  RogueStringBuilder__print_to_work_bytes__Real64_Int32( ROGUE_ARG(THIS), value_0, decimal_places_1 );
  RogueStringBuilder__print_work_bytes( ROGUE_ARG(THIS) );
  return (RogueStringBuilder*)(THIS);
}

RogueStringBuilder* RogueStringBuilder__print__String( RogueStringBuilder* THIS, RogueString* value_0 )
{
  if (!!(value_0))
  {
    if (!!(THIS->indent))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,_auto_680_3,(value_0));
        RogueInt32 _auto_681_4 = (0);
        for (;_auto_681_4 < _auto_680_3->character_count;++_auto_681_4)
        {
          RogueCharacter ch_5 = (RogueString_character_at(_auto_680_3,_auto_681_4));
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ch_5, true );
        }
      }
    }
    else
    {
      {
        RogueInt32 i_1 = (0);
        RogueInt32 _auto_1_2 = (value_0->byte_count);
        for (;i_1 < _auto_1_2;++i_1)
        {
          RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(value_0->utf8[ i_1 ]) );
        }
      }
      THIS->count += value_0->character_count;
      if ((!!(value_0->character_count) && ((RogueString__last( value_0 ))) == (RogueCharacter)10))
      {
        THIS->at_newline = true;
      }
    }
    return (RogueStringBuilder*)(THIS);
  }
  else
  {
    return (RogueStringBuilder*)(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
}

void RogueStringBuilder__print_indent( RogueStringBuilder* THIS )
{
  if ((!(((RogueStringBuilder__needs_indent( ROGUE_ARG(THIS) )))) || THIS->indent == 0))
  {
    return;
  }
  {
    RogueInt32 i_0 = (1);
    RogueInt32 _auto_2_1 = (THIS->indent);
    for (;i_0 <= _auto_2_1;++i_0)
    {
      RogueByte_List__add__Byte( ROGUE_ARG(THIS->utf8), ROGUE_ARG(((RogueByte)((RogueCharacter)' '))) );
    }
  }
  THIS->count += THIS->indent;
  THIS->at_newline = false;
}

RogueStringBuilder* RogueStringBuilder__print_to_work_bytes__Real64_Int32( RogueStringBuilder* THIS, RogueReal64 value_0, RogueInt32 decimal_places_1 )
{
  RogueByte_List__clear( ROGUE_ARG(RogueStringBuilder_work_bytes) );
  RogueReal64 whole_2 = (floor((double)value_0));
  value_0 -= whole_2;
  while (whole_2 >= 10.0)
  {
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)((((RogueInt32)((RogueCharacter)'0')) + ((RogueInt32)((RogueMath__mod__Real64_Real64( whole_2, 10.0 )))))))))) );
    whole_2 /= 10.0;
  }
  RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)((((RogueInt32)((RogueCharacter)'0')) + ((RogueInt32)((RogueMath__mod__Real64_Real64( whole_2, 10.0 )))))))))) );
  RogueByte_List__reverse( ROGUE_ARG(RogueStringBuilder_work_bytes) );
  if (decimal_places_1 != 0)
  {
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'.'))) );
    {
      RogueInt32 _auto_3_3 = (1);
      RogueInt32 _auto_4_4 = (decimal_places_1);
      for (;_auto_3_3 <= _auto_4_4;++_auto_3_3)
      {
        value_0 *= 10.0;
        RogueInt32 digit_5 = (((RogueInt32)(floor((double)value_0))));
        value_0 -= ((RogueReal64)(digit_5));
        RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)(((RogueCharacter)((((RogueInt32)((RogueCharacter)'0')) + digit_5)))))) );
      }
    }
  }
  if (value_0 >= 0.5)
  {
    RogueByte_List__add__Byte( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'5'))) );
    RogueStringBuilder__round_off_work_bytes( ROGUE_ARG(THIS) );
  }
  return (RogueStringBuilder*)(THIS);
}

void RogueStringBuilder__print_work_bytes( RogueStringBuilder* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_682_0,(RogueStringBuilder_work_bytes));
    RogueInt32 _auto_683_1 = (0);
    for (;_auto_683_1 < _auto_682_0->count;++_auto_683_1)
    {
      RogueByte digit_2 = (_auto_682_0->data->as_bytes[_auto_683_1]);
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)(digit_2))), true );
    }
  }
}

RogueStringBuilder* RogueStringBuilder__println( RogueStringBuilder* THIS )
{
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__println__Int32( RogueStringBuilder* THIS, RogueInt32 value_0 )
{
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__println__String( RogueStringBuilder* THIS, RogueString* value_0 )
{
  return (RogueStringBuilder*)(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(THIS), value_0 )))), (RogueCharacter)10, true ))));
}

RogueStringBuilder* RogueStringBuilder__reserve__Int32( RogueStringBuilder* THIS, RogueInt32 additional_bytes_0 )
{
  RogueByte_List__reserve__Int32( ROGUE_ARG(THIS->utf8), additional_bytes_0 );
  return (RogueStringBuilder*)(THIS);
}

void RogueStringBuilder__round_off_work_bytes( RogueStringBuilder* THIS )
{
  if (((RogueCharacter)(((RogueByte_List__remove_last( ROGUE_ARG(RogueStringBuilder_work_bytes) ))))) >= (RogueCharacter)'5')
  {
    RogueInt32 i_0 = ((RogueStringBuilder_work_bytes->count - 1));
    while (i_0 >= 0)
    {
      if (((RogueCharacter)(RogueStringBuilder_work_bytes->data->as_bytes[i_0])) != (RogueCharacter)'.')
      {
        RogueStringBuilder_work_bytes->data->as_bytes[i_0] = ((RogueByte)((((RogueInt32)(RogueStringBuilder_work_bytes->data->as_bytes[i_0])) + 1)));
        if (((RogueInt32)(RogueStringBuilder_work_bytes->data->as_bytes[i_0])) == (((RogueInt32)((RogueCharacter)'9')) + 1))
        {
          RogueStringBuilder_work_bytes->data->as_bytes[i_0] = ((RogueByte)((RogueCharacter)'0'));
        }
        else
        {
          return;
        }
      }
      --i_0;
    }
    RogueByte_List__insert__Byte_Int32( ROGUE_ARG(RogueStringBuilder_work_bytes), ROGUE_ARG(((RogueByte)((RogueCharacter)'1'))), 0 );
  }
}

RogueReal64 RogueStringBuilder__scan_work_bytes( RogueStringBuilder* THIS )
{
  RogueReal64 whole_0 = (0.0);
  RogueReal64 decimal_1 = (0.0);
  RogueInt32 decimal_count_2 = (0);
  RogueLogical scanning_whole_3 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_684_4,(RogueStringBuilder_work_bytes));
    RogueInt32 _auto_685_5 = (0);
    for (;_auto_685_5 < _auto_684_4->count;++_auto_685_5)
    {
      RogueByte digit_6 = (_auto_684_4->data->as_bytes[_auto_685_5]);
      if (scanning_whole_3)
      {
        if (((RogueCharacter)(digit_6)) == (RogueCharacter)'.')
        {
          scanning_whole_3 = ((RogueLogical)false);
        }
        else
        {
          whole_0 = ((RogueReal64)((whole_0 * 10.0) + ((RogueReal64)((((RogueCharacter)(digit_6)) - (RogueCharacter)'0')))));
        }
      }
      else
      {
        decimal_1 = ((RogueReal64)((decimal_1 * 10.0) + ((RogueReal64)((((RogueCharacter)(digit_6)) - (RogueCharacter)'0')))));
        ++decimal_count_2;
      }
    }
  }
  return (RogueReal64)((whole_0 + (decimal_1 / ((RogueReal64) pow((double)10.0, (double)((RogueReal64)(decimal_count_2)))))));
}

RogueByte_List* RogueByte_List__init_object( RogueByte_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__init( RogueByte_List* THIS )
{
  RogueByte_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueByte_List*)(THIS);
}

RogueString* RogueByte_List__to_String( RogueByte_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueByte_List*,_auto_713_2,(THIS));
    RogueInt32 _auto_714_3 = (0);
    for (;_auto_714_3 < _auto_713_2->count;++_auto_714_3)
    {
      RogueByte value_4 = (_auto_713_2->data->as_bytes[_auto_714_3]);
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if ((false))
      {
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueByte__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueByte_List__type_name( RogueByte_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1039]);
}

RogueByte_List* RogueByte_List__init__Int32( RogueByte_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueByte) );
  }
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__add__Byte( RogueByte_List* THIS, RogueByte value_0 )
{
  ((RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_bytes[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueByte_List*)(THIS);
}

RogueInt32 RogueByte_List__capacity( RogueByte_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueByte_List* RogueByte_List__clear( RogueByte_List* THIS )
{
  RogueByte_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__ensure_capacity__Int32( RogueByte_List* THIS, RogueInt32 desired_capacity_0 )
{
  return (RogueByte_List*)(((RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG((desired_capacity_0 - THIS->count)) ))));
}

RogueByte_List* RogueByte_List__expand_to_count__Int32( RogueByte_List* THIS, RogueInt32 minimum_count_0 )
{
  if (THIS->count < minimum_count_0)
  {
    RogueByte_List__ensure_capacity__Int32( ROGUE_ARG(THIS), minimum_count_0 );
    THIS->count = minimum_count_0;
  }
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__expand_to_include__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  return (RogueByte_List*)(((RogueByte_List__expand_to_count__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

RogueByte_List* RogueByte_List__discard_from__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  RogueByte zero_value_1 = 0;
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_bytes[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__insert__Byte_Int32( RogueByte_List* THIS, RogueByte value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueByte_List*)(((RogueByte_List__add__Byte( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueByte_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueByte_List__shift__Int32_OptionalInt32_Int32_OptionalByte( ROGUE_ARG(THIS), before_index_1, ROGUE_ARG((RogueOptionalInt32__create())), 1, ROGUE_ARG((RogueOptionalByte__create())) );
    THIS->data->as_bytes[before_index_1] = value_0;
  }
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__reserve__Int32( RogueByte_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueByte) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueByte_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueByte) )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueByte_List*)(THIS);
}

RogueByte RogueByte_List__remove_at__Int32( RogueByte_List* THIS, RogueInt32 index_0 )
{
  RogueByte result_1 = (THIS->data->as_bytes[index_0]);
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  RogueByte zero_value_2 = 0;
  THIS->count = (THIS->count + -1);
  THIS->data->as_bytes[THIS->count] = zero_value_2;
  return (RogueByte)(result_1);
}

RogueByte RogueByte_List__remove_last( RogueByte_List* THIS )
{
  return (RogueByte)(((RogueByte_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueByte_List* RogueByte_List__reverse( RogueByte_List* THIS )
{
  return (RogueByte_List*)(((RogueByte_List__reverse__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((THIS->count - 1)) ))));
}

RogueByte_List* RogueByte_List__reverse__Int32_Int32( RogueByte_List* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  if (i1_0 < 0)
  {
    i1_0 = ((RogueInt32)0);
  }
  if (i2_1 >= THIS->count)
  {
    i2_1 = ((RogueInt32)(THIS->count - 1));
  }
  ROGUE_DEF_LOCAL_REF(RogueArray*,_data_2,(THIS->data));
  while (i1_0 < i2_1)
  {
    RogueByte temp_3 = (_data_2->as_bytes[i1_0]);
    _data_2->as_bytes[i1_0] = _data_2->as_bytes[i2_1];
    _data_2->as_bytes[i2_1] = temp_3;
    ++i1_0;
    --i2_1;
  }
  return (RogueByte_List*)(THIS);
}

RogueByte_List* RogueByte_List__shift__Int32_OptionalInt32_Int32_OptionalByte( RogueByte_List* THIS, RogueInt32 i1_0, RogueOptionalInt32 element_count_1, RogueInt32 delta_2, RogueOptionalByte fill_3 )
{
  if (delta_2 == 0)
  {
    return (RogueByte_List*)(THIS);
  }
  RogueInt32 n_4 = 0;
  if (element_count_1.exists)
  {
    n_4 = ((RogueInt32)element_count_1.value);
  }
  else
  {
    n_4 = ((RogueInt32)(THIS->count - i1_0));
  }
  RogueInt32 dest_i2_5 = ((((i1_0 + delta_2) + n_4) - 1));
  RogueByte_List__expand_to_include__Int32( ROGUE_ARG(THIS), dest_i2_5 );
  RogueArray_set(THIS->data,(i1_0 + delta_2),((RogueArray*)(THIS->data)),i1_0,n_4);
  if (fill_3.exists)
  {
    RogueByte value_6 = (fill_3.value);
    if (delta_2 > 0)
    {
      {
        RogueInt32 i_7 = (i1_0);
        RogueInt32 _auto_7_8 = (((i1_0 + delta_2) - 1));
        for (;i_7 <= _auto_7_8;++i_7)
        {
          THIS->data->as_bytes[i_7] = value_6;
        }
      }
    }
    else
    {
      {
        RogueInt32 i_9 = (((i1_0 + delta_2) + n_4));
        RogueInt32 _auto_8_10 = (((i1_0 + n_4) - 1));
        for (;i_9 <= _auto_8_10;++i_9)
        {
          THIS->data->as_bytes[i_9] = value_6;
        }
      }
    }
  }
  return (RogueByte_List*)(THIS);
}

RogueClassGenericList* RogueGenericList__init_object( RogueClassGenericList* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassGenericList*)(THIS);
}

RogueString* RogueGenericList__type_name( RogueClassGenericList* THIS )
{
  return (RogueString*)(Rogue_literal_strings[382]);
}

RogueString* RogueByte__to_String( RogueByte THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt32)(THIS))) ))));
}

RogueString* RogueArray_Byte___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1084]);
}

RogueString* RogueNativeArray__type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[381]);
}

RogueInt32 RogueInt32__hash_code( RogueInt32 THIS )
{
  return (RogueInt32)(THIS);
}

RogueString* RogueInt32__to_String( RogueInt32 THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS) ))));
}

RogueCharacter RogueInt32__to_digit( RogueInt32 THIS )
{
  if ((THIS >= 0 && THIS <= 9))
  {
    return (RogueCharacter)(((RogueCharacter)((THIS + ((RogueInt32)((RogueCharacter)'0'))))));
  }
  if ((THIS >= 10 && THIS <= 35))
  {
    return (RogueCharacter)(((RogueCharacter)(((THIS - 10) + ((RogueInt32)((RogueCharacter)'A'))))));
  }
  return (RogueCharacter)((RogueCharacter)'0');
}

RogueString* RogueLogical__to_String( RogueLogical THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Logical( Rogue_literal_strings[0], ROGUE_ARG(THIS) ))));
}

RogueFunction___List* RogueFunction___List__init_object( RogueFunction___List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueFunction___List*)(THIS);
}

RogueFunction___List* RogueFunction___List__init( RogueFunction___List* THIS )
{
  RogueFunction___List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueFunction___List*)(THIS);
}

RogueString* RogueFunction___List__to_String( RogueFunction___List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueFunction___List*,_auto_755_2,(THIS));
    RogueInt32 _auto_756_3 = (0);
    for (;_auto_756_3 < _auto_755_2->count;++_auto_756_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFunction__*,value_4,(((RogueClassFunction__*)(_auto_755_2->data->as_objects[_auto_756_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFunction___List__type_name( RogueFunction___List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1042]);
}

RogueFunction___List* RogueFunction___List__init__Int32( RogueFunction___List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFunction__*), true );
  }
  return (RogueFunction___List*)(THIS);
}

RogueFunction___List* RogueFunction___List__add__Function__( RogueFunction___List* THIS, RogueClassFunction__* value_0 )
{
  ((RogueFunction___List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueFunction___List*)(THIS);
}

RogueInt32 RogueFunction___List__capacity( RogueFunction___List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueFunction___List* RogueFunction___List__reserve__Int32( RogueFunction___List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFunction__*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueFunction___List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFunction__*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueFunction___List*)(THIS);
}

RogueClassFunction__* RogueFunction____init_object( RogueClassFunction__* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction__*)(THIS);
}

RogueString* RogueFunction____type_name( RogueClassFunction__* THIS )
{
  return (RogueString*)(Rogue_literal_strings[958]);
}

void RogueFunction____call( RogueClassFunction__* THIS )
{
}

RogueString* RogueArray_Function_____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1073]);
}

RogueException* RogueException__init_object( RogueException* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->stack_trace = ((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 1 )));
  return (RogueException*)(THIS);
}

RogueException* RogueException__init( RogueException* THIS )
{
  THIS->message = (Rogue_call_ROGUEM21( 16, ROGUE_ARG(THIS) ));
  return (RogueException*)(THIS);
}

RogueString* RogueException__to_String( RogueException* THIS )
{
  return (RogueString*)(THIS->message);
}

RogueString* RogueException__type_name( RogueException* THIS )
{
  return (RogueString*)(Rogue_literal_strings[5]);
}

RogueException* RogueException__init__String( RogueException* THIS, RogueString* _auto_42_0 )
{
  THIS->message = _auto_42_0;
  return (RogueException*)(THIS);
}

void RogueException__display( RogueException* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,builder_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[6] );
  RogueStringBuilder__println__String( builder_0, ROGUE_ARG((Rogue_call_ROGUEM21( 16, ROGUE_ARG(THIS) ))) );
  RogueStringBuilder__println__String( builder_0, ROGUE_ARG(((RogueString_List__joined__String( ROGUE_ARG(((RogueString__word_wrapped__Int32_String( ROGUE_ARG(THIS->message), 79, Rogue_literal_strings[7] )))), Rogue_literal_strings[8] )))) );
  if (!!(THIS->stack_trace->entries->count))
  {
    RogueStringBuilder__println( builder_0 );
    RogueStringBuilder__println__String( builder_0, ROGUE_ARG(((RogueString__trimmed( ROGUE_ARG(((RogueStackTrace__to_String( ROGUE_ARG(THIS->stack_trace) )))) )))) );
  }
  RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[6] );
  RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(builder_0))) );
}

RogueString* RogueException__format( RogueException* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,st_0,(((RogueStackTrace__to_String( ROGUE_ARG(THIS->stack_trace) )))));
  if (((void*)st_0) == ((void*)NULL))
  {
    st_0 = ((RogueString*)Rogue_literal_strings[13]);
  }
  st_0 = ((RogueString*)((RogueString__trimmed( st_0 ))));
  if (!!(st_0->character_count))
  {
    st_0 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[8], st_0 ))));
  }
  return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(((((THIS))) ? (ROGUE_ARG((Rogue_call_ROGUEM21( 11, ROGUE_ARG(THIS) )))) : ROGUE_ARG(Rogue_literal_strings[14]))), st_0 ))));
}

RogueInt32 RogueString__hash_code( RogueString* THIS )
{
  return (RogueInt32)(THIS->hash_code);
}

RogueString* RogueString__to_String( RogueString* THIS )
{
  return (RogueString*)(THIS);
}

RogueString* RogueString__type_name( RogueString* THIS )
{
  return (RogueString*)(Rogue_literal_strings[126]);
}

RogueString* RogueString__after__Int32( RogueString* THIS, RogueInt32 index_0 )
{
  return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

RogueString* RogueString__after_any__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__after_any__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + st_0->character_count)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__after_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__after_first__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + st_0->character_count)) ))));
  }
  else
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__after_last__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((i_1.value + 1)) ))));
  }
  else
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
}

RogueString* RogueString__before__Int32( RogueString* THIS, RogueInt32 index_0 )
{
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((index_0 - 1)) ))));
}

RogueString* RogueString__before_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_first__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_last__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueString* RogueString__before_last__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate_last__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (i_1.exists)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((i_1.value - 1)) ))));
  }
  else
  {
    return (RogueString*)(THIS);
  }
}

RogueLogical RogueString__begins_with__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  return (RogueLogical)((!!(THIS->character_count) && RogueString_character_at(THIS,0) == ch_0));
}

RogueLogical RogueString__begins_with__String( RogueString* THIS, RogueString* other_0 )
{
  RogueInt32 other_count_1 = (other_0->character_count);
  return (RogueLogical)((THIS->character_count >= other_count_1 && ((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, 0 )))));
}

RogueString* RogueString__clipped__Int32_Int32( RogueString* THIS, RogueInt32 left_0, RogueInt32 right_1 )
{
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), left_0, ROGUE_ARG((THIS->character_count - (right_1 + 1))) ))));
}

RogueLogical RogueString__contains__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  return (RogueLogical)(((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))).exists);
}

RogueLogical RogueString__contains__String( RogueString* THIS, RogueString* substring_0 )
{
  return (RogueLogical)(((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), substring_0, ROGUE_ARG((RogueOptionalInt32__create())) ))).exists);
}

RogueLogical RogueString__contains_at__String_Int32( RogueString* THIS, RogueString* substring_0, RogueInt32 at_index_1 )
{
  if (at_index_1 < 0)
  {
    return (RogueLogical)(false);
  }
  RogueInt32 offset = RogueString_set_cursor( THIS, at_index_1 );
  RogueInt32 other_count = substring_0->byte_count;
  if (offset + other_count > THIS->byte_count) return false;
  return (0 == memcmp(THIS->utf8 + offset, substring_0->utf8, other_count));

}

RogueLogical RogueString__ends_with__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  return (RogueLogical)((THIS->character_count > 0 && RogueString_character_at(THIS,(THIS->character_count - 1)) == ch_0));
}

RogueLogical RogueString__ends_with__String( RogueString* THIS, RogueString* other_0 )
{
  RogueInt32 other_count_1 = (other_0->character_count);
  return (RogueLogical)(((THIS->character_count >= other_count_1 && other_count_1 > 0) && ((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, ROGUE_ARG((THIS->character_count - other_count_1)) )))));
}

RogueString* RogueString__from__Int32( RogueString* THIS, RogueInt32 i1_0 )
{
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_0, ROGUE_ARG((THIS->character_count - 1)) ))));
}

RogueString* RogueString__from__Int32_Int32( RogueString* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  if (i1_0 < 0)
  {
    i1_0 = ((RogueInt32)0);
  }
  else if (i2_1 >= THIS->character_count)
  {
    i2_1 = ((RogueInt32)(THIS->character_count - 1));
  }
  if (i1_0 > i2_1)
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if (i1_0 == i2_1)
  {
    return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(RogueString_character_at(THIS,i1_0)) ))));
  }
  RogueInt32 byte_i1 = RogueString_set_cursor( THIS, i1_0 );
  RogueInt32 byte_limit = RogueString_set_cursor( THIS, i2_1+1 );
  int new_count = (byte_limit - byte_i1);
  RogueString* result = RogueString_create_with_byte_count( new_count );
  memcpy( result->utf8, THIS->utf8+byte_i1, new_count );
  return RogueString_validate( result );

}

RogueString* RogueString__from_first__Character( RogueString* THIS, RogueCharacter ch_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ch_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_1.exists))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG(i_1.value) ))));
}

RogueString* RogueString__from_first__String( RogueString* THIS, RogueString* st_0 )
{
  RogueOptionalInt32 i_1 = (((RogueString__locate__String_OptionalInt32( ROGUE_ARG(THIS), st_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_1.exists))
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  return (RogueString*)(((RogueString__from__Int32( ROGUE_ARG(THIS), ROGUE_ARG(i_1.value) ))));
}

RogueCharacter RogueString__last( RogueString* THIS )
{
  return (RogueCharacter)(RogueString_character_at(THIS,(THIS->character_count - 1)));
}

RogueString* RogueString__left_justified__Int32_Character( RogueString* THIS, RogueInt32 spaces_0, RogueCharacter fill_1 )
{
  if (THIS->character_count >= spaces_0)
  {
    return (RogueString*)(THIS);
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), spaces_0 )))));
  RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(THIS) );
  {
    RogueInt32 _auto_21_3 = (THIS->character_count);
    RogueInt32 _auto_22_4 = (spaces_0);
    for (;_auto_21_3 < _auto_22_4;++_auto_21_3)
    {
      RogueStringBuilder__print__Character_Logical( buffer_2, fill_1, true );
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_2 ))));
}

RogueString* RogueString__leftmost__Int32( RogueString* THIS, RogueInt32 n_0 )
{
  if (n_0 >= 0)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG((n_0 - 1)) ))));
  }
  else
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), 0, ROGUE_ARG(((THIS->character_count + n_0) - 1)) ))));
  }
}

RogueOptionalInt32 RogueString__locate__Character_OptionalInt32( RogueString* THIS, RogueCharacter ch_0, RogueOptionalInt32 optional_i1_1 )
{
  RogueInt32 i_2 = (0);
  RogueInt32 limit_3 = (THIS->character_count);
  if (optional_i1_1.exists)
  {
    i_2 = ((RogueInt32)optional_i1_1.value);
  }
  while (i_2 < limit_3)
  {
    if (RogueString_character_at(THIS,i_2) == ch_0)
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
    }
    ++i_2;
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate__String_OptionalInt32( RogueString* THIS, RogueString* other_0, RogueOptionalInt32 optional_i1_1 )
{
  RogueInt32 other_count_2 = (other_0->character_count);
  if (other_count_2 == 1)
  {
    return (RogueOptionalInt32)(((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), ROGUE_ARG(RogueString_character_at(other_0,0)), optional_i1_1 ))));
  }
  RogueInt32 this_limit_3 = (((THIS->character_count - other_count_2) + 1));
  if ((other_count_2 == 0 || this_limit_3 <= 0))
  {
    return (RogueOptionalInt32)((RogueOptionalInt32__create()));
  }
  RogueInt32 i1_4 = 0;
  if (optional_i1_1.exists)
  {
    i1_4 = ((RogueInt32)(optional_i1_1.value - 1));
    if (i1_4 < -1)
    {
      i1_4 = ((RogueInt32)-1);
    }
  }
  else
  {
    i1_4 = ((RogueInt32)-1);
  }
  while (++i1_4 < this_limit_3)
  {
    if (((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, i1_4 ))))
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i1_4, true ));
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate_last__Character_OptionalInt32( RogueString* THIS, RogueCharacter ch_0, RogueOptionalInt32 starting_index_1 )
{
  RogueInt32 i_2 = ((THIS->character_count - 1));
  if (starting_index_1.exists)
  {
    i_2 = ((RogueInt32)starting_index_1.value);
  }
  while (i_2 >= 0)
  {
    if (RogueString_character_at(THIS,i_2) == ch_0)
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
    }
    --i_2;
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueOptionalInt32 RogueString__locate_last__String_OptionalInt32( RogueString* THIS, RogueString* other_0, RogueOptionalInt32 starting_index_1 )
{
  RogueInt32 other_count_2 = (other_0->character_count);
  if (other_count_2 == 1)
  {
    return (RogueOptionalInt32)(((RogueString__locate_last__Character_OptionalInt32( ROGUE_ARG(THIS), ROGUE_ARG(RogueString_character_at(other_0,0)), starting_index_1 ))));
  }
  RogueInt32 this_limit_3 = (((THIS->character_count - other_count_2) + 1));
  if ((other_count_2 == 0 || this_limit_3 <= 0))
  {
    return (RogueOptionalInt32)((RogueOptionalInt32__create()));
  }
  RogueInt32 i_4 = 0;
  if (starting_index_1.exists)
  {
    i_4 = ((RogueInt32)(starting_index_1.value + 1));
    if (i_4 > this_limit_3)
    {
      i_4 = ((RogueInt32)this_limit_3);
    }
  }
  else
  {
    i_4 = ((RogueInt32)this_limit_3);
  }
  while (--i_4 >= 0)
  {
    if (((RogueString__contains_at__String_Int32( ROGUE_ARG(THIS), other_0, i_4 ))))
    {
      return (RogueOptionalInt32)(RogueOptionalInt32( i_4, true ));
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueString* RogueString__operatorPLUS__Character( RogueString* THIS, RogueCharacter value_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0, true )))) ))));
}

RogueString* RogueString__operatorPLUS__Int32( RogueString* THIS, RogueInt32 value_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueLogical RogueString__operatorEQUALSEQUALS__String( RogueString* THIS, RogueString* value_0 )
{
  if ((((RogueString__hash_code( ROGUE_ARG(THIS) ))) != ((RogueString__hash_code( value_0 ))) || THIS->character_count != value_0->character_count))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)((0==memcmp(THIS->utf8,value_0->utf8,THIS->byte_count)));
}

RogueInt32 RogueString__operatorLTGT__String( RogueString* THIS, RogueString* other_0 )
{
  if (THIS == other_0) return 0;
  RogueInt32 other_count = other_0->byte_count;
  RogueInt32 limit = THIS->byte_count;
  int result;
  if (limit == other_count)
  {
    // Strings are same length
    result = memcmp( THIS->utf8, other_0->utf8, limit );
    if (result == 0) return 0;
  }
  else
  {
    // Strings differ in length.  Compare the part that matches first.
    if (limit > other_count) limit = other_count;
    result = memcmp( THIS->utf8, other_0->utf8, limit );
    if (result == 0)
    {
      // Equal so far - the shorter string comes before the longer one.
      if (limit == other_count) return 1;
      return -1;
    }
  }
  if (result < 0) return -1;
  else            return 1;

}

RogueString* RogueString__operatorPLUS__Logical( RogueString* THIS, RogueLogical value_0 )
{
  if (value_0)
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[140] ))));
  }
  else
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[130] ))));
  }
}

RogueString* RogueString__operatorPLUS__Int64( RogueString* THIS, RogueInt64 value_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Int64( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__operatorPLUS__Object( RogueString* THIS, RogueObject* value_0 )
{
  if (!!(value_0))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), ROGUE_ARG((Rogue_call_ROGUEM4( 11, value_0 ))) ))));
  }
  else
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
}

RogueString* RogueString__operatorPLUS__Real64( RogueString* THIS, RogueReal64 value_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Real64( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__operatorPLUS__String( RogueString* THIS, RogueString* value_0 )
{
  if (((void*)value_0) == ((void*)NULL))
  {
    return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS), Rogue_literal_strings[1] ))));
  }
  if (THIS->character_count == 0)
  {
    return (RogueString*)(value_0);
  }
  if (value_0->character_count == 0)
  {
    return (RogueString*)(THIS);
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))), value_0 )))) ))));
}

RogueString* RogueString__pluralized__Int32( RogueString* THIS, RogueInt32 quantity_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,st_1,(((RogueString__replacing__String_String( ROGUE_ARG(THIS), Rogue_literal_strings[397], ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], quantity_0 )))) )))));
  if (((RogueString__contains__Character( st_1, (RogueCharacter)'/' ))))
  {
    if (quantity_0 == 1)
    {
      return (RogueString*)(((RogueString__before_first__Character( st_1, (RogueCharacter)'/' ))));
    }
    else
    {
      return (RogueString*)(((RogueString__after_last__Character( st_1, (RogueCharacter)'/' ))));
    }
  }
  else
  {
    RogueOptionalInt32 alt1_2 = (((RogueString__locate__Character_OptionalInt32( st_1, (RogueCharacter)'(', ROGUE_ARG((RogueOptionalInt32__create())) ))));
    if (alt1_2.exists)
    {
      RogueOptionalInt32 alt2_3 = (((RogueString__locate__Character_OptionalInt32( st_1, (RogueCharacter)')', ROGUE_ARG(RogueOptionalInt32( (alt1_2.value + 1), true )) ))));
      if (!(alt2_3.exists))
      {
        return (RogueString*)(THIS);
      }
      if (quantity_0 == 1)
      {
        return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG(alt1_2.value) )))), ROGUE_ARG(((RogueString__after__Int32( st_1, ROGUE_ARG(alt2_3.value) )))) ))));
      }
      return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG(alt1_2.value) )))) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32_Int32( st_1, ROGUE_ARG((alt1_2.value + 1)), ROGUE_ARG((alt2_3.value - 1)) )))) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, ROGUE_ARG(alt2_3.value) )))) )))) )))) ))));
    }
    else
    {
      if (quantity_0 == 1)
      {
        return (RogueString*)(st_1);
      }
      RogueInt32 index_4 = (0);
      RogueInt32 i_5 = (st_1->character_count);
      while (i_5 > 0)
      {
        --i_5;
        if (((RogueCharacter__is_letter( ROGUE_ARG(RogueString_character_at(st_1,i_5)) ))))
        {
          index_4 = ((RogueInt32)i_5);
          goto _auto_78;
        }
      }
      _auto_78:;
      if (RogueString_character_at(st_1,index_4) == (RogueCharacter)'s')
      {
        return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG((index_4 + 1)) )))) )))) )))), Rogue_literal_strings[398] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, index_4 )))) )))) )))) ))));
      }
      else
      {
        return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__before__Int32( st_1, ROGUE_ARG((index_4 + 1)) )))) )))) )))), Rogue_literal_strings[399] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__after__Int32( st_1, index_4 )))) )))) )))) ))));
      }
    }
  }
}

RogueClassStringReader* RogueString__reader( RogueString* THIS )
{
  return (RogueClassStringReader*)(((RogueStringReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringReader*,ROGUE_CREATE_OBJECT(StringReader))), ROGUE_ARG(THIS) ))));
}

RogueString* RogueString__replacing__String_String( RogueString* THIS, RogueString* look_for_0, RogueString* replace_with_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,st_2,(THIS));
  RogueOptionalInt32 i_3 = (((RogueString__locate__String_OptionalInt32( st_2, look_for_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  if (!(i_3.exists))
  {
    return (RogueString*)(st_2);
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_4,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), ROGUE_ARG((THIS->character_count * 2)) )))));
  while (i_3.exists)
  {
    RogueStringBuilder__print__String( buffer_4, ROGUE_ARG(((RogueString__before__Int32( st_2, ROGUE_ARG(i_3.value) )))) );
    RogueStringBuilder__print__String( buffer_4, replace_with_1 );
    st_2 = ((RogueString*)((RogueString__from__Int32( st_2, ROGUE_ARG((i_3.value + look_for_0->character_count)) ))));
    i_3 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( st_2, look_for_0, ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  RogueStringBuilder__print__String( buffer_4, st_2 );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_4 ))));
}

RogueString* RogueString__rightmost__Int32( RogueString* THIS, RogueInt32 n_0 )
{
  RogueInt32 this_count_1 = (THIS->character_count);
  if (n_0 < 0)
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG((-(n_0))), ROGUE_ARG((this_count_1 - 1)) ))));
  }
  else
  {
    return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG((this_count_1 - n_0)), ROGUE_ARG((this_count_1 - 1)) ))));
  }
}

RogueString_List* RogueString__split__Character( RogueString* THIS, RogueCharacter separator_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString_List*,result_1,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
  RogueInt32 i1_2 = (0);
  RogueOptionalInt32 i2_3 = (((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), separator_0, ROGUE_ARG(RogueOptionalInt32( i1_2, true )) ))));
  while (i2_3.exists)
  {
    RogueString_List__add__String( result_1, ROGUE_ARG(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_2, ROGUE_ARG((i2_3.value - 1)) )))) );
    i1_2 = ((RogueInt32)(i2_3.value + 1));
    i2_3 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( ROGUE_ARG(THIS), separator_0, ROGUE_ARG(RogueOptionalInt32( i1_2, true )) ))));
  }
  RogueString_List__add__String( result_1, ROGUE_ARG(((RogueString__from__Int32( ROGUE_ARG(THIS), i1_2 )))) );
  return (RogueString_List*)(result_1);
}

RogueString_List* RogueString__split( RogueString* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString_List*,result_0,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
  RogueInt32 start_1 = (-1);
  RogueInt32 current_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_91_3,(THIS));
    RogueInt32 _auto_92_4 = (0);
    for (;_auto_92_4 < _auto_91_3->character_count;++_auto_92_4)
    {
      RogueCharacter ch_5 = (RogueString_character_at(_auto_91_3,_auto_92_4));
      switch (ch_5)
      {
        case (RogueCharacter)' ':
        case (RogueCharacter)9:
        case (RogueCharacter)10:
        {
          if (start_1 >= 0)
          {
            RogueString_List__add__String( result_0, ROGUE_ARG(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), start_1, ROGUE_ARG((current_2 - 1)) )))) );
            start_1 = ((RogueInt32)-1);
          }
          break;
        }
        default:
        {
          if (start_1 < 0)
          {
            start_1 = ((RogueInt32)current_2);
          }
        }
      }
      ++current_2;
    }
  }
  if (start_1 >= 0)
  {
    RogueString_List__add__String( result_0, ROGUE_ARG(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), start_1, ROGUE_ARG((current_2 - 1)) )))) );
  }
  return (RogueString_List*)(result_0);
}

RogueString* RogueString__join__String_List( RogueString* THIS, RogueString_List* substrings_0 )
{
  return (RogueString*)(((RogueString__join__Reader_String_( ROGUE_ARG(THIS), ROGUE_ARG(((((RogueClassReader_String_*)(((RogueString_List__reader( substrings_0 )))))))) ))));
}

RogueString* RogueString__join__Reader_String_( RogueString* THIS, RogueClassReader_String_* substrings_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,result_1,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueLogical first_2 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassReader_String_*,_auto_103_3,(substrings_0));
    while ((RogueReader_String___has_another( ((RogueObject*)_auto_103_3) )))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,s_4,((RogueReader_String___read( ((RogueObject*)_auto_103_3) ))));
      if (!(first_2))
      {
        RogueStringBuilder__print__String( result_1, ROGUE_ARG(THIS) );
      }
      first_2 = ((RogueLogical)false);
      RogueStringBuilder__print__String( result_1, s_4 );
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( result_1 ))));
}

RogueString* RogueString__to_lowercase( RogueString* THIS )
{
  RogueLogical has_uc_0 = (false);
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_106_2,(THIS));
    RogueInt32 _auto_107_3 = (0);
    for (;_auto_107_3 < _auto_106_2->character_count;++_auto_107_3)
    {
      RogueCharacter ch_4 = (RogueString_character_at(_auto_106_2,_auto_107_3));
      if ((ch_4 >= (RogueCharacter)'A' && ch_4 <= (RogueCharacter)'Z'))
      {
        has_uc_0 = ((RogueLogical)true);
        goto _auto_108;
      }
    }
  }
  _auto_108:;
  if (!(has_uc_0))
  {
    return (RogueString*)(THIS);
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,result_1,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), ROGUE_ARG(THIS->character_count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_109_5,(THIS));
    RogueInt32 _auto_110_6 = (0);
    for (;_auto_110_6 < _auto_109_5->character_count;++_auto_110_6)
    {
      RogueCharacter ch_7 = (RogueString_character_at(_auto_109_5,_auto_110_6));
      if ((ch_7 >= (RogueCharacter)'A' && ch_7 <= (RogueCharacter)'Z'))
      {
        RogueStringBuilder__print__Character_Logical( result_1, ROGUE_ARG(((ch_7 - (RogueCharacter)'A') + (RogueCharacter)'a')), true );
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( result_1, ch_7, true );
      }
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( result_1 ))));
}

RogueString* RogueString__trimmed( RogueString* THIS )
{
  RogueInt32 i1_0 = (0);
  RogueInt32 i2_1 = ((THIS->character_count - 1));
  while (i1_0 <= i2_1)
  {
    if (RogueString_character_at(THIS,i1_0) <= (RogueCharacter)' ')
    {
      ++i1_0;
    }
    else if (RogueString_character_at(THIS,i2_1) <= (RogueCharacter)' ')
    {
      --i2_1;
    }
    else
    {
      goto _auto_116;
    }
  }
  _auto_116:;
  if (i1_0 > i2_1)
  {
    return (RogueString*)(Rogue_literal_strings[0]);
  }
  if ((i1_0 == 0 && i2_1 == (THIS->character_count - 1)))
  {
    return (RogueString*)(THIS);
  }
  return (RogueString*)(((RogueString__from__Int32_Int32( ROGUE_ARG(THIS), i1_0, i2_1 ))));
}

RogueString_List* RogueString__word_wrapped__Int32_String( RogueString* THIS, RogueInt32 width_0, RogueString* allow_break_after_1 )
{
  return (RogueString_List*)(((RogueString__split__Character( ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueString__word_wrapped__Int32_StringBuilder_String( ROGUE_ARG(THIS), width_0, ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), allow_break_after_1 )))) )))), (RogueCharacter)10 ))));
}

RogueStringBuilder* RogueString__word_wrapped__Int32_StringBuilder_String( RogueString* THIS, RogueInt32 width_0, RogueStringBuilder* buffer_1, RogueString* allow_break_after_2 )
{
  RogueInt32 i1_3 = 0;
  RogueInt32 i2_4 = 0;
  RogueInt32 len_5 = (THIS->character_count);
  if (len_5 == 0)
  {
    return (RogueStringBuilder*)(buffer_1);
  }
  RogueLogical needs_newline_6 = (false);
  while (i2_4 < len_5)
  {
    while ((((i2_4 - i1_3) < width_0 && i2_4 < len_5) && RogueString_character_at(THIS,i2_4) != (RogueCharacter)10))
    {
      ++i2_4;
    }
    if ((i2_4 - i1_3) == width_0)
    {
      if (i2_4 >= len_5)
      {
        i2_4 = ((RogueInt32)len_5);
      }
      else if (RogueString_character_at(THIS,i2_4) != (RogueCharacter)10)
      {
        while ((RogueString_character_at(THIS,i2_4) != (RogueCharacter)' ' && i2_4 > i1_3))
        {
          --i2_4;
        }
        if (i2_4 == i1_3)
        {
          i2_4 = ((RogueInt32)(i1_3 + width_0));
          if (!!(allow_break_after_2))
          {
            while (((i2_4 > i1_3 && !(((RogueString__contains__Character( allow_break_after_2, ROGUE_ARG(RogueString_character_at(THIS,(i2_4 - 1))) ))))) && i2_4 > i1_3))
            {
              --i2_4;
            }
            if (i2_4 == i1_3)
            {
              i2_4 = ((RogueInt32)(i1_3 + width_0));
            }
          }
        }
      }
    }
    if (needs_newline_6)
    {
      RogueStringBuilder__println( buffer_1 );
    }
    {
      RogueInt32 i_7 = (i1_3);
      RogueInt32 _auto_29_8 = ((i2_4 - 1));
      for (;i_7 <= _auto_29_8;++i_7)
      {
        RogueStringBuilder__print__Character_Logical( buffer_1, ROGUE_ARG(RogueString_character_at(THIS,i_7)), true );
      }
    }
    needs_newline_6 = ((RogueLogical)true);
    if (i2_4 == len_5)
    {
      return (RogueStringBuilder*)(buffer_1);
    }
    else
    {
      switch (RogueString_character_at(THIS,i2_4))
      {
        case (RogueCharacter)' ':
        {
          while ((i2_4 < len_5 && RogueString_character_at(THIS,i2_4) == (RogueCharacter)' '))
          {
            ++i2_4;
          }
          if ((i2_4 < len_5 && RogueString_character_at(THIS,i2_4) == (RogueCharacter)10))
          {
            ++i2_4;
          }
          break;
        }
        case (RogueCharacter)10:
        {
          ++i2_4;
          break;
        }
      }
      i1_3 = ((RogueInt32)i2_4);
    }
  }
  return (RogueStringBuilder*)(buffer_1);
}

RogueClassStackTrace* RogueStackTrace__init_object( RogueClassStackTrace* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassStackTrace*)(THIS);
}

RogueString* RogueStackTrace__to_String( RogueClassStackTrace* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStackTrace__print__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueStackTrace__type_name( RogueClassStackTrace* THIS )
{
  return (RogueString*)(Rogue_literal_strings[952]);
}

RogueClassStackTrace* RogueStackTrace__init__Int32( RogueClassStackTrace* THIS, RogueInt32 omit_count_0 )
{
  ++omit_count_0;
  RogueDebugTrace* current = Rogue_call_stack;
  while (current && omit_count_0 > 0)
  {
    --omit_count_0;
    current = current->previous_trace;
  }
  if (current) THIS->count = current->count();

  THIS->entries = ((RogueString_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))), ROGUE_ARG(THIS->count) )));
  while (current!=0)
  {
    RogueString_List__add__String( ROGUE_ARG(THIS->entries), ROGUE_ARG(RogueString_create_from_utf8( current->to_c_string() )) );
    current = current->previous_trace;

  }
  return (RogueClassStackTrace*)(THIS);
}

void RogueStackTrace__format( RogueClassStackTrace* THIS )
{
  if (THIS->is_formatted)
  {
    return;
  }
  THIS->is_formatted = true;
  RogueInt32 max_characters_0 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_668_2,(THIS->entries));
    RogueInt32 _auto_669_3 = (0);
    for (;_auto_669_3 < _auto_668_2->count;++_auto_669_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_4,(((RogueString*)(_auto_668_2->data->as_objects[_auto_669_3]))));
      RogueOptionalInt32 sp_1 = (((RogueString__locate__Character_OptionalInt32( entry_4, (RogueCharacter)' ', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      if (sp_1.exists)
      {
        max_characters_0 = ((RogueInt32)(RogueMath__max__Int32_Int32( max_characters_0, ROGUE_ARG(sp_1.value) )));
      }
    }
  }
  ++max_characters_0;
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_670_5,(THIS->entries));
    RogueInt32 i_6 = (0);
    for (;i_6 < _auto_670_5->count;++i_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_7,(((RogueString*)(_auto_670_5->data->as_objects[i_6]))));
      if (((RogueString__contains__Character( entry_7, (RogueCharacter)' ' ))))
      {
        THIS->entries->data->as_objects[i_6] = ((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__left_justified__Int32_Character( ROGUE_ARG(((RogueString__before_first__Character( entry_7, (RogueCharacter)' ' )))), max_characters_0, (RogueCharacter)' ' )))), ROGUE_ARG(((RogueString__from_first__Character( entry_7, (RogueCharacter)' ' )))) )));
      }
    }
  }
}

void RogueStackTrace__print( RogueClassStackTrace* THIS )
{
  RogueStackTrace__print__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassGlobal*)ROGUE_SINGLETON(Global))->global_output_buffer) );
  RogueGlobal__flush( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
}

RogueStringBuilder* RogueStackTrace__print__StringBuilder( RogueClassStackTrace* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStackTrace__format( ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_671_1,(THIS->entries));
    RogueInt32 _auto_672_2 = (0);
    for (;_auto_672_2 < _auto_671_1->count;++_auto_672_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,entry_3,(((RogueString*)(_auto_671_1->data->as_objects[_auto_672_2]))));
      RogueStringBuilder__println__String( buffer_0, entry_3 );
    }
  }
  return (RogueStringBuilder*)(buffer_0);
}

RogueString_List* RogueString_List__init_object( RogueString_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__init( RogueString_List* THIS )
{
  RogueString_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueString_List*)(THIS);
}

RogueString* RogueString_List__to_String( RogueString_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_804_2,(THIS));
    RogueInt32 _auto_805_3 = (0);
    for (;_auto_805_3 < _auto_804_2->count;++_auto_805_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,value_4,(((RogueString*)(_auto_804_2->data->as_objects[_auto_805_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, value_4 );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueString_List__type_name( RogueString_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1041]);
}

RogueString_List* RogueString_List__init__Int32( RogueString_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueString*), true );
  }
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__cloned( RogueString_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString_List*,result_0,(((RogueString_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))), ROGUE_ARG(THIS->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_810_1,(THIS));
    RogueInt32 _auto_811_2 = (0);
    for (;_auto_811_2 < _auto_810_1->count;++_auto_811_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,value_3,(((RogueString*)(_auto_810_1->data->as_objects[_auto_811_2]))));
      RogueString_List__add__String( result_0, value_3 );
    }
  }
  return (RogueString_List*)(result_0);
}

RogueString_List* RogueString_List__add__String( RogueString_List* THIS, RogueString* value_0 )
{
  ((RogueString_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__add__String_List( RogueString_List* THIS, RogueString_List* other_0 )
{
  RogueString_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_812_1,(other_0));
    RogueInt32 _auto_813_2 = (0);
    for (;_auto_813_2 < _auto_812_1->count;++_auto_813_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,value_3,(((RogueString*)(_auto_812_1->data->as_objects[_auto_813_2]))));
      RogueString_List__add__String( ROGUE_ARG(THIS), value_3 );
    }
  }
  return (RogueString_List*)(THIS);
}

RogueInt32 RogueString_List__capacity( RogueString_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueString_List* RogueString_List__ensure_capacity__Int32( RogueString_List* THIS, RogueInt32 desired_capacity_0 )
{
  return (RogueString_List*)(((RogueString_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG((desired_capacity_0 - THIS->count)) ))));
}

RogueString_List* RogueString_List__expand_to_count__Int32( RogueString_List* THIS, RogueInt32 minimum_count_0 )
{
  if (THIS->count < minimum_count_0)
  {
    RogueString_List__ensure_capacity__Int32( ROGUE_ARG(THIS), minimum_count_0 );
    THIS->count = minimum_count_0;
  }
  return (RogueString_List*)(THIS);
}

RogueString_List* RogueString_List__expand_to_include__Int32( RogueString_List* THIS, RogueInt32 index_0 )
{
  return (RogueString_List*)(((RogueString_List__expand_to_count__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

RogueString_List* RogueString_List__insert__String_Int32( RogueString_List* THIS, RogueString* value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueString_List*)(((RogueString_List__add__String( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueString_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueString_List__shift__Int32_OptionalInt32_Int32_OptionalString( ROGUE_ARG(THIS), before_index_1, ROGUE_ARG((RogueOptionalInt32__create())), 1, ROGUE_ARG((RogueOptionalString__create())) );
    THIS->data->as_objects[before_index_1] = value_0;
  }
  return (RogueString_List*)(THIS);
}

RogueOptionalInt32 RogueString_List__locate__String( RogueString_List* THIS, RogueString* value_0 )
{
  if (true)
  {
    if (((void*)value_0) == ((void*)NULL))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_827_1,(THIS));
        RogueInt32 i_2 = (0);
        for (;i_2 < _auto_827_1->count;++i_2)
        {
          if (((void*)value_0) == ((void*)((RogueString*)(THIS->data->as_objects[i_2]))))
          {
            return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
          }
        }
      }
      return (RogueOptionalInt32)((RogueOptionalInt32__create()));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_828_3,(THIS));
    RogueInt32 i_4 = (0);
    for (;i_4 < _auto_828_3->count;++i_4)
    {
      if (((RogueString__operatorEQUALSEQUALS__String( value_0, ROGUE_ARG(((RogueString*)(THIS->data->as_objects[i_4]))) ))))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_4, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueClassListReader_String_* RogueString_List__reader( RogueString_List* THIS )
{
  return (RogueClassListReader_String_*)(((RogueListReader_String___init__String_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListReader_String_*,ROGUE_CREATE_OBJECT(ListReader_String_))), ROGUE_ARG(THIS), 0 ))));
}

RogueString_List* RogueString_List__reserve__Int32( RogueString_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueString*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueString_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueString*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueString_List*)(THIS);
}

RogueString* RogueString_List__remove_at__Int32( RogueString_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,result_1,(((RogueString*)(THIS->data->as_objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueString*,zero_value_2,0);
  THIS->count = (THIS->count + -1);
  THIS->data->as_objects[THIS->count] = zero_value_2;
  return (RogueString*)(result_1);
}

RogueString_List* RogueString_List__shift__Int32_OptionalInt32_Int32_OptionalString( RogueString_List* THIS, RogueInt32 i1_0, RogueOptionalInt32 element_count_1, RogueInt32 delta_2, RogueOptionalString fill_3 )
{
  if (delta_2 == 0)
  {
    return (RogueString_List*)(THIS);
  }
  RogueInt32 n_4 = 0;
  if (element_count_1.exists)
  {
    n_4 = ((RogueInt32)element_count_1.value);
  }
  else
  {
    n_4 = ((RogueInt32)(THIS->count - i1_0));
  }
  RogueInt32 dest_i2_5 = ((((i1_0 + delta_2) + n_4) - 1));
  RogueString_List__expand_to_include__Int32( ROGUE_ARG(THIS), dest_i2_5 );
  RogueArray_set(THIS->data,(i1_0 + delta_2),((RogueArray*)(THIS->data)),i1_0,n_4);
  if (fill_3.exists)
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,value_6,(fill_3.value));
    if (delta_2 > 0)
    {
      {
        RogueInt32 i_7 = (i1_0);
        RogueInt32 _auto_32_8 = (((i1_0 + delta_2) - 1));
        for (;i_7 <= _auto_32_8;++i_7)
        {
          THIS->data->as_objects[i_7] = value_6;
        }
      }
    }
    else
    {
      {
        RogueInt32 i_9 = (((i1_0 + delta_2) + n_4));
        RogueInt32 _auto_33_10 = (((i1_0 + n_4) - 1));
        for (;i_9 <= _auto_33_10;++i_9)
        {
          THIS->data->as_objects[i_9] = value_6;
        }
      }
    }
  }
  return (RogueString_List*)(THIS);
}

RogueString* RogueString_List__joined__String( RogueString_List* THIS, RogueString* separator_0 )
{
  RogueInt32 total_count_1 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_841_3,(THIS));
    RogueInt32 _auto_842_4 = (0);
    for (;_auto_842_4 < _auto_841_3->count;++_auto_842_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_5,(((RogueString*)(_auto_841_3->data->as_objects[_auto_842_4]))));
      total_count_1 += line_5->character_count;
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,builder_2,(((RogueStringBuilder__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))), total_count_1 )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_843_6,(THIS));
    RogueInt32 _auto_844_7 = (0);
    for (;_auto_844_7 < _auto_843_6->count;++_auto_844_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_8,(((RogueString*)(_auto_843_6->data->as_objects[_auto_844_7]))));
      if (!!(builder_2->count))
      {
        RogueStringBuilder__print__String( builder_2, separator_0 );
      }
      RogueStringBuilder__print__String( builder_2, line_8 );
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( builder_2 ))));
}

RogueString* RogueArray_String___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1072]);
}

RogueInt32 RogueReal64__decimal_digit_count( RogueReal64 THIS )
{
  RogueStringBuilder__print__Real64( ROGUE_ARG(((RogueStringBuilder__clear( ((RogueStringBuilder*)((RogueClassPrimitiveWorkBuffer*)ROGUE_SINGLETON(PrimitiveWorkBuffer))) )))), ROGUE_ARG(THIS) );
  RogueOptionalInt32 dot_0 = (((RogueStringBuilder__locate__Character( ((RogueStringBuilder*)((RogueClassPrimitiveWorkBuffer*)ROGUE_SINGLETON(PrimitiveWorkBuffer))), (RogueCharacter)'.' ))));
  if (!(dot_0.exists))
  {
    return (RogueInt32)(0);
  }
  RogueInt32 start_1 = ((dot_0.value + 1));
  RogueInt32 count_2 = (((RogueClassPrimitiveWorkBuffer*)ROGUE_SINGLETON(PrimitiveWorkBuffer))->count);
  if ((count_2 == (start_1 + 1) && ((RogueStringBuilder__get__Int32( ((RogueStringBuilder*)((RogueClassPrimitiveWorkBuffer*)ROGUE_SINGLETON(PrimitiveWorkBuffer))), start_1 ))) == (RogueCharacter)'0'))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)((count_2 - start_1));
}

RogueString* RogueReal64__format__OptionalInt32( RogueReal64 THIS, RogueOptionalInt32 decimal_digits_0 )
{
  RogueOptionalInt32 _auto_35_2 = (decimal_digits_0);
  RogueInt32 digits_1 = (((((_auto_35_2.exists))) ? (_auto_35_2.value) : ((RogueReal64__decimal_digit_count( ROGUE_ARG(THIS) )))));
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Real64_Int32( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS), digits_1 )))) ))));
}

RogueLogical RogueReal64__is_infinite( RogueReal64 THIS )
{
  return (RogueLogical)((THIS == THIS && (THIS - THIS) != 0.0));
}

RogueLogical RogueReal64__is_not_a_number( RogueReal64 THIS )
{
  return (RogueLogical)(THIS != THIS);
}

RogueString* RogueReal64__to_String( RogueReal64 THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Real64( Rogue_literal_strings[0], ROGUE_ARG(THIS) ))));
}

RogueStringBuilder* RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( RogueInt64 THIS, RogueInt32 base_0, RogueInt32 digits_1, RogueStringBuilder* buffer_2 )
{
  RogueInt32 bits_3 = (0);
  RogueInt32 temp_4 = (base_0);
  while (temp_4 > 1)
  {
    ++bits_3;
    temp_4 = ((RogueInt32)(temp_4 >> 1));
  }
  if (digits_1 > 1)
  {
    RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( ROGUE_ARG((THIS >> ((RogueInt64)(bits_3)))), base_0, ROGUE_ARG((digits_1 - 1)), buffer_2 );
  }
  RogueStringBuilder__print__Character_Logical( buffer_2, ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG(((RogueInt32)((THIS & ((RogueInt64)((base_0 - 1))))))) )))), true );
  return (RogueStringBuilder*)(buffer_2);
}

RogueString* RogueInt64__to_String( RogueInt64 THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__Int64( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(THIS) )))) ))));
}

RogueString* RogueInt64__to_hex_string__Int32( RogueInt64 THIS, RogueInt32 digits_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueInt64__print_in_power2_base__Int32_Int32_StringBuilder( ROGUE_ARG(THIS), 16, digits_0, ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueLogical RogueCharacter__is_alphanumeric( RogueCharacter THIS )
{
  return (RogueLogical)((((THIS >= (RogueCharacter)'0' && THIS <= (RogueCharacter)'9') || (THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z')) || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')));
}

RogueLogical RogueCharacter__is_identifier__Logical_Logical( RogueCharacter THIS, RogueLogical start_0, RogueLogical allow_dollar_1 )
{
  if ((((THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z') || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')) || THIS == (RogueCharacter)'_'))
  {
    return (RogueLogical)(true);
  }
  if ((!(start_0) && (THIS >= (RogueCharacter)'0' && THIS <= (RogueCharacter)'9')))
  {
    return (RogueLogical)(true);
  }
  if ((allow_dollar_1 && THIS == (RogueCharacter)'$'))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(false);
}

RogueLogical RogueCharacter__is_letter( RogueCharacter THIS )
{
  return (RogueLogical)(((THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z') || (THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z')));
}

RogueLogical RogueCharacter__is_number__Int32( RogueCharacter THIS, RogueInt32 base_0 )
{
  return (RogueLogical)(((RogueCharacter__to_number__Int32( ROGUE_ARG(THIS), base_0 ))) != -1);
}

RogueString* RogueCharacter__to_String( RogueCharacter THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(THIS) ))));
}

RogueInt32 RogueCharacter__to_number__Int32( RogueCharacter THIS, RogueInt32 base_0 )
{
  RogueInt32 value_1 = 0;
  if ((THIS >= (RogueCharacter)'0' && THIS <= (RogueCharacter)'9'))
  {
    value_1 = ((RogueInt32)((RogueInt32)((THIS - (RogueCharacter)'0'))));
  }
  else if ((THIS >= (RogueCharacter)'A' && THIS <= (RogueCharacter)'Z'))
  {
    value_1 = ((RogueInt32)(10 + ((RogueInt32)((THIS - (RogueCharacter)'A')))));
  }
  else if ((THIS >= (RogueCharacter)'a' && THIS <= (RogueCharacter)'z'))
  {
    value_1 = ((RogueInt32)(10 + ((RogueInt32)((THIS - (RogueCharacter)'a')))));
  }
  else
  {
    return (RogueInt32)(-1);
  }
  if (value_1 < base_0)
  {
    return (RogueInt32)(value_1);
  }
  else
  {
    return (RogueInt32)(-1);
  }
}

RogueClassValue* RogueValue__init_object( RogueClassValue* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassValue*)(THIS);
}

RogueLogical RogueValue__operatorEQUALSEQUALS__Object( RogueClassValue* THIS, RogueObject* other_0 )
{
  return (RogueLogical)((Rogue_call_ROGUEM33( 50, ROGUE_ARG(THIS), ROGUE_ARG((RogueValue__create__Object( other_0 ))) )));
}

RogueString* RogueValue__type_name( RogueClassValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[384]);
}

RogueLogical RogueValue__is_logical( RogueClassValue* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueValue__is_null( RogueClassValue* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueValue__is_non_null( RogueClassValue* THIS )
{
  return (RogueLogical)(true);
}

RogueLogical RogueValue__is_number( RogueClassValue* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueValue__is_string( RogueClassValue* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueValue__operatorEQUALSEQUALS__Value( RogueClassValue* THIS, RogueClassValue* other_0 )
{
  return (RogueLogical)(((void*)THIS) == ((void*)other_0));
}

RogueInt32 RogueValue__to_Int32( RogueClassValue* THIS )
{
  return (RogueInt32)(0);
}

RogueLogical RogueValue__to_Logical( RogueClassValue* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((Rogue_call_ROGUEM34( 96, ROGUE_ARG(THIS) ))) )));
}

RogueReal64 RogueValue__to_Real64( RogueClassValue* THIS )
{
  return (RogueReal64)(((RogueReal64)((Rogue_call_ROGUEM34( 96, ROGUE_ARG(THIS) )))));
}

RogueTypeInfo* RogueTypeInfo__init_object( RogueTypeInfo* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->global_properties = ((RoguePropertyInfo_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RoguePropertyInfo_List*,ROGUE_CREATE_OBJECT(PropertyInfo_List))) )));
  THIS->properties = ((RoguePropertyInfo_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RoguePropertyInfo_List*,ROGUE_CREATE_OBJECT(PropertyInfo_List))) )));
  return (RogueTypeInfo*)(THIS);
}

RogueString* RogueTypeInfo__to_String( RogueTypeInfo* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueTypeInfo__type_name( RogueTypeInfo* THIS )
{
  return (RogueString*)(Rogue_literal_strings[380]);
}

RogueTypeInfo* RogueTypeInfo__init__Int32_String( RogueTypeInfo* THIS, RogueInt32 _auto_54_0, RogueString* _auto_55_1 )
{
  THIS->name = _auto_55_1;
  THIS->index = _auto_54_0;
  return (RogueTypeInfo*)(THIS);
}

void RogueTypeInfo__add_global_property_info__Int32_Int32( RogueTypeInfo* THIS, RogueInt32 global_property_name_index_0, RogueInt32 global_property_type_index_1 )
{
  RoguePropertyInfo_List__add__PropertyInfo( ROGUE_ARG(THIS->global_properties), ROGUE_ARG(((RoguePropertyInfo__init__Int32_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPropertyInfo*,ROGUE_CREATE_OBJECT(PropertyInfo))), ROGUE_ARG(THIS->global_properties->count), global_property_name_index_0, global_property_type_index_1 )))) );
}

void RogueTypeInfo__add_property_info__Int32_Int32( RogueTypeInfo* THIS, RogueInt32 property_name_index_0, RogueInt32 property_type_index_1 )
{
  RoguePropertyInfo_List__add__PropertyInfo( ROGUE_ARG(THIS->properties), ROGUE_ARG(((RoguePropertyInfo__init__Int32_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPropertyInfo*,ROGUE_CREATE_OBJECT(PropertyInfo))), ROGUE_ARG(THIS->properties->count), property_name_index_0, property_type_index_1 )))) );
}

RoguePropertyInfo_List* RoguePropertyInfo_List__init_object( RoguePropertyInfo_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RoguePropertyInfo_List*)(THIS);
}

RoguePropertyInfo_List* RoguePropertyInfo_List__init( RoguePropertyInfo_List* THIS )
{
  RoguePropertyInfo_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RoguePropertyInfo_List*)(THIS);
}

RogueString* RoguePropertyInfo_List__to_String( RoguePropertyInfo_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RoguePropertyInfo_List*,_auto_866_2,(THIS));
    RogueInt32 _auto_867_3 = (0);
    for (;_auto_867_3 < _auto_866_2->count;++_auto_867_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPropertyInfo*,value_4,(((RogueClassPropertyInfo*)(_auto_866_2->data->as_objects[_auto_867_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RoguePropertyInfo__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RoguePropertyInfo_List__type_name( RoguePropertyInfo_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1057]);
}

RoguePropertyInfo_List* RoguePropertyInfo_List__init__Int32( RoguePropertyInfo_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassPropertyInfo*), true );
  }
  return (RoguePropertyInfo_List*)(THIS);
}

RoguePropertyInfo_List* RoguePropertyInfo_List__add__PropertyInfo( RoguePropertyInfo_List* THIS, RogueClassPropertyInfo* value_0 )
{
  ((RoguePropertyInfo_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RoguePropertyInfo_List*)(THIS);
}

RogueInt32 RoguePropertyInfo_List__capacity( RoguePropertyInfo_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RoguePropertyInfo_List* RoguePropertyInfo_List__reserve__Int32( RoguePropertyInfo_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassPropertyInfo*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RoguePropertyInfo_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassPropertyInfo*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RoguePropertyInfo_List*)(THIS);
}

RogueClassPropertyInfo* RoguePropertyInfo__init_object( RogueClassPropertyInfo* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassPropertyInfo*)(THIS);
}

RogueString* RoguePropertyInfo__to_String( RogueClassPropertyInfo* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RoguePropertyInfo__name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((Rogue_PropertyInfo__type( ROGUE_ARG(THIS) )))->name) )))) )))) ))));
}

RogueString* RoguePropertyInfo__type_name( RogueClassPropertyInfo* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1003]);
}

RogueClassPropertyInfo* RoguePropertyInfo__init__Int32_Int32_Int32( RogueClassPropertyInfo* THIS, RogueInt32 _auto_686_0, RogueInt32 _auto_687_1, RogueInt32 _auto_688_2 )
{
  THIS->property_type_index = _auto_688_2;
  THIS->property_name_index = _auto_687_1;
  THIS->index = _auto_686_0;
  return (RogueClassPropertyInfo*)(THIS);
}

RogueString* RoguePropertyInfo__name( RogueClassPropertyInfo* THIS )
{
  return (RogueString*)((RogueRuntime__literal_string__Int32( ROGUE_ARG(THIS->property_name_index) )));
}

RogueTypeInfo* Rogue_PropertyInfo__type( RogueClassPropertyInfo* THIS )
{
  return (RogueTypeInfo*)((RogueRuntime__type_info__Int32( ROGUE_ARG(THIS->property_type_index) )));
}

RogueString* RogueArray_PropertyInfo___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1085]);
}

RogueClassValueTable* RogueValueTable__init_object( RogueClassValueTable* THIS )
{
  RogueValue__init_object( ROGUE_ARG(((RogueClassValue*)THIS)) );
  return (RogueClassValueTable*)(THIS);
}

RogueClassValueTable* RogueValueTable__init( RogueClassValueTable* THIS )
{
  THIS->values = ((RogueTable_String_Value___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Value_*,ROGUE_CREATE_OBJECT(Table_String_Value_))) )));
  return (RogueClassValueTable*)(THIS);
}

RogueString* RogueValueTable__to_String( RogueClassValueTable* THIS )
{
  return (RogueString*)(((RogueTable_String_Value___to_String( ROGUE_ARG(THIS->values) ))));
}

RogueString* RogueValueTable__type_name( RogueClassValueTable* THIS )
{
  return (RogueString*)(Rogue_literal_strings[306]);
}

RogueClassValue* RogueValueTable__get__String( RogueClassValueTable* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassValue*,_auto_64_1,(((RogueTable_String_Value___get__String( ROGUE_ARG(THIS->values), key_0 )))));
  return (RogueClassValue*)(((((_auto_64_1))) ? (ROGUE_ARG(_auto_64_1)) : ROGUE_ARG(((RogueClassValue*)(((RogueClassUndefinedValue*)ROGUE_SINGLETON(UndefinedValue)))))));
}

RogueClassValueTable* RogueValueTable__set__String_Value( RogueClassValueTable* THIS, RogueString* key_0, RogueClassValue* new_value_1 )
{
  RogueTable_String_Value___set__String_Value( ROGUE_ARG(THIS->values), key_0, new_value_1 );
  return (RogueClassValueTable*)(THIS);
}

RogueLogical RogueValueTable__to_Logical( RogueClassValueTable* THIS )
{
  return (RogueLogical)(true);
}

RogueClassTable_String_Value_* RogueTable_String_Value___init_object( RogueClassTable_String_Value_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Value_*)(THIS);
}

RogueClassTable_String_Value_* RogueTable_String_Value___init( RogueClassTable_String_Value_* THIS )
{
  RogueTable_String_Value___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Value_*)(THIS);
}

RogueString* RogueTable_String_Value___to_String( RogueClassTable_String_Value_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Value___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Value___type_name( RogueClassTable_String_Value_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1004]);
}

RogueClassTable_String_Value_* RogueTable_String_Value___init__Int32( RogueClassTable_String_Value_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Value_*), true );
  return (RogueClassTable_String_Value_*)(THIS);
}

RogueClassTableEntry_String_Value_* RogueTable_String_Value___find__String( RogueClassTable_String_Value_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Value_*,entry_2,(((RogueClassTableEntry_String_Value_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Value_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Value_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Value_*)(((RogueClassTableEntry_String_Value_*)(NULL)));
}

RogueClassValue* RogueTable_String_Value___get__String( RogueClassTable_String_Value_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Value_*,entry_1,(((RogueTable_String_Value___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassValue*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassValue*,default_value_2,0);
    return (RogueClassValue*)(default_value_2);
  }
}

RogueClassTable_String_Value_* RogueTable_String_Value___set__String_Value( RogueClassTable_String_Value_* THIS, RogueString* key_0, RogueClassValue* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Value_*,entry_2,(((RogueTable_String_Value___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Value_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Value____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Value_*)((RogueTableEntry_String_Value___init__String_Value_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Value_*,ROGUE_CREATE_OBJECT(TableEntry_String_Value_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Value_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Value_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Value___print_to__StringBuilder( RogueClassTable_String_Value_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Value_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Value_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Value____grow( RogueClassTable_String_Value_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Value_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Value_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Value_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Value_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Value____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1086]);
}

RogueClassTableEntry_String_Value_* RogueTableEntry_String_Value___init_object( RogueClassTableEntry_String_Value_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Value_*)(THIS);
}

RogueString* RogueTableEntry_String_Value___to_String( RogueClassTableEntry_String_Value_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Value___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Value___type_name( RogueClassTableEntry_String_Value_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[914]);
}

RogueClassTableEntry_String_Value_* RogueTableEntry_String_Value___init__String_Value_Int32( RogueClassTableEntry_String_Value_* THIS, RogueString* _key_0, RogueClassValue* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Value_*)(THIS);
}

RogueCharacter_List* RogueCharacter_List__init_object( RogueCharacter_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCharacter_List*)(THIS);
}

RogueCharacter_List* RogueCharacter_List__init( RogueCharacter_List* THIS )
{
  RogueCharacter_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCharacter_List*)(THIS);
}

RogueString* RogueCharacter_List__to_String( RogueCharacter_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_1012_2,(THIS));
    RogueInt32 _auto_1013_3 = (0);
    for (;_auto_1013_3 < _auto_1012_2->count;++_auto_1013_3)
    {
      RogueCharacter value_4 = (_auto_1012_2->data->as_characters[_auto_1013_3]);
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if ((false))
      {
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueCharacter__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCharacter_List__type_name( RogueCharacter_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1040]);
}

RogueCharacter_List* RogueCharacter_List__init__Int32( RogueCharacter_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueCharacter) );
  }
  return (RogueCharacter_List*)(THIS);
}

RogueCharacter_List* RogueCharacter_List__add__Character( RogueCharacter_List* THIS, RogueCharacter value_0 )
{
  ((RogueCharacter_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_characters[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCharacter_List*)(THIS);
}

RogueInt32 RogueCharacter_List__capacity( RogueCharacter_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCharacter_List* RogueCharacter_List__reserve__Int32( RogueCharacter_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueCharacter) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCharacter_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueCharacter) )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCharacter_List*)(THIS);
}

RogueString* RogueArray_Character___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1087]);
}

RogueClassStringTable_String_* RogueStringTable_String___init_object( RogueClassStringTable_String_* THIS )
{
  RogueTable_String_String___init_object( ROGUE_ARG(((RogueClassTable_String_String_*)THIS)) );
  return (RogueClassStringTable_String_*)(THIS);
}

RogueString* RogueStringTable_String___type_name( RogueClassStringTable_String_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1141]);
}

RogueClassTable_String_String_* RogueTable_String_String___init_object( RogueClassTable_String_String_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_String_*)(THIS);
}

RogueClassTable_String_String_* RogueTable_String_String___init( RogueClassTable_String_String_* THIS )
{
  RogueTable_String_String___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_String_*)(THIS);
}

RogueString* RogueTable_String_String___to_String( RogueClassTable_String_String_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_String___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_String___type_name( RogueClassTable_String_String_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[953]);
}

RogueClassTable_String_String_* RogueTable_String_String___init__Int32( RogueClassTable_String_String_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_String_*), true );
  return (RogueClassTable_String_String_*)(THIS);
}

RogueClassTableEntry_String_String_* RogueTable_String_String___find__String( RogueClassTable_String_String_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_2,(((RogueClassTableEntry_String_String_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_String_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_String_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_String_*)(((RogueClassTableEntry_String_String_*)(NULL)));
}

RogueString* RogueTable_String_String___get__String( RogueClassTable_String_String_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_1,(((RogueTable_String_String___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueString*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,default_value_2,0);
    return (RogueString*)(default_value_2);
  }
}

RogueClassTable_String_String_* RogueTable_String_String___set__String_String( RogueClassTable_String_String_* THIS, RogueString* key_0, RogueString* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,entry_2,(((RogueTable_String_String___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_String_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_String____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_String_*)((RogueTableEntry_String_String___init__String_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_String_*,ROGUE_CREATE_OBJECT(TableEntry_String_String_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_String_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_String_*)(THIS);
}

RogueStringBuilder* RogueTable_String_String___print_to__StringBuilder( RogueClassTable_String_String_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->value) );
    cur_1 = ((RogueClassTableEntry_String_String_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_String____grow( RogueClassTable_String_String_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_String_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_String_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_String_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_String____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1088]);
}

RogueClassTableEntry_String_String_* RogueTableEntry_String_String___init_object( RogueClassTableEntry_String_String_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_String_*)(THIS);
}

RogueString* RogueTableEntry_String_String___to_String( RogueClassTableEntry_String_String_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_String___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_String___type_name( RogueClassTableEntry_String_String_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[915]);
}

RogueClassTableEntry_String_String_* RogueTableEntry_String_String___init__String_String_Int32( RogueClassTableEntry_String_String_* THIS, RogueString* _key_0, RogueString* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_String_*)(THIS);
}

RogueClassStringReader* RogueStringReader__init_object( RogueClassStringReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassStringReader*)(THIS);
}

RogueString* RogueStringReader__type_name( RogueClassStringReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[954]);
}

RogueLogical RogueStringReader__has_another( RogueClassStringReader* THIS )
{
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueCharacter RogueStringReader__read( RogueClassStringReader* THIS )
{
  THIS->position = (THIS->position + 1);
  return (RogueCharacter)(RogueString_character_at(THIS->string,(THIS->position - 1)));
}

RogueClassStringReader* RogueStringReader__init__String( RogueClassStringReader* THIS, RogueString* _auto_84_0 )
{
  THIS->string = _auto_84_0;
  if (!!(THIS->string))
  {
    THIS->count = THIS->string->character_count;
  }
  return (RogueClassStringReader*)(THIS);
}

RogueLogical RogueReader_Character___has_another( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 38:
      return RogueStringReader__has_another( (RogueClassStringReader*)THIS );
    case 124:
      return RogueParseReader__has_another( (RogueClassParseReader*)THIS );
    case 412:
      return RogueUTF8Reader__has_another( (RogueClassUTF8Reader*)THIS );
    default:
      return 0;
  }
}

RogueCharacter RogueReader_Character___read( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 38:
      return RogueStringReader__read( (RogueClassStringReader*)THIS );
    case 124:
      return RogueParseReader__read( (RogueClassParseReader*)THIS );
    case 412:
      return RogueUTF8Reader__read( (RogueClassUTF8Reader*)THIS );
    default:
      return 0;
  }
}

RogueClassListReader_String_* RogueListReader_String___init_object( RogueClassListReader_String_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassListReader_String_*)(THIS);
}

RogueString* RogueListReader_String___type_name( RogueClassListReader_String_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[955]);
}

RogueLogical RogueListReader_String___has_another( RogueClassListReader_String_* THIS )
{
  if (THIS->is_limited)
  {
    return (RogueLogical)(THIS->position < THIS->limit);
  }
  else
  {
    return (RogueLogical)(THIS->position < THIS->list->count);
  }
}

RogueString* RogueListReader_String___read( RogueClassListReader_String_* THIS )
{
  THIS->position = (THIS->position + 1);
  return (RogueString*)(((RogueString*)(THIS->list->data->as_objects[(THIS->position - 1)])));
}

RogueClassListReader_String_* RogueListReader_String___init__String_List_Int32( RogueClassListReader_String_* THIS, RogueString_List* _auto_98_0, RogueInt32 _auto_99_1 )
{
  THIS->position = _auto_99_1;
  THIS->list = _auto_98_0;
  return (RogueClassListReader_String_*)(THIS);
}

RogueLogical RogueReader_String___has_another( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 40:
      return RogueListReader_String___has_another( (RogueClassListReader_String_*)THIS );
    case 237:
      return RogueLineReader__has_another( (RogueClassLineReader*)THIS );
    default:
      return 0;
  }
}

RogueString* RogueReader_String___read( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 40:
      return RogueListReader_String___read( (RogueClassListReader_String_*)THIS );
    case 237:
      return RogueLineReader__read( (RogueClassLineReader*)THIS );
    default:
      return 0;
  }
}

RogueClassPrimitiveWorkBuffer* RoguePrimitiveWorkBuffer__init_object( RogueClassPrimitiveWorkBuffer* THIS )
{
  RogueStringBuilder__init_object( ROGUE_ARG(((RogueStringBuilder*)THIS)) );
  return (RogueClassPrimitiveWorkBuffer*)(THIS);
}

RogueString* RoguePrimitiveWorkBuffer__type_name( RogueClassPrimitiveWorkBuffer* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1038]);
}

RogueClassMath* RogueMath__init_object( RogueClassMath* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassMath*)(THIS);
}

RogueString* RogueMath__type_name( RogueClassMath* THIS )
{
  return (RogueString*)(Rogue_literal_strings[956]);
}

RogueClassRuntime* RogueRuntime__init_object( RogueClassRuntime* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassRuntime*)(THIS);
}

RogueString* RogueRuntime__type_name( RogueClassRuntime* THIS )
{
  return (RogueString*)(Rogue_literal_strings[450]);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init_object( RogueClassTable_String_TypeInfo_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init( RogueClassTable_String_TypeInfo_* THIS )
{
  RogueTable_String_TypeInfo___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueString* RogueTable_String_TypeInfo___to_String( RogueClassTable_String_TypeInfo_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TypeInfo___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TypeInfo___type_name( RogueClassTable_String_TypeInfo_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1001]);
}

RogueClassTable_String_TypeInfo_* RogueTable_String_TypeInfo___init__Int32( RogueClassTable_String_TypeInfo_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_TypeInfo_*), true );
  return (RogueClassTable_String_TypeInfo_*)(THIS);
}

RogueStringBuilder* RogueTable_String_TypeInfo___print_to__StringBuilder( RogueClassTable_String_TypeInfo_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeInfo_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_TypeInfo_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueString* RogueArray_TableEntry_String_TypeInfo____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1089]);
}

RogueClassTableEntry_String_TypeInfo_* RogueTableEntry_String_TypeInfo___init_object( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_TypeInfo_*)(THIS);
}

RogueString* RogueTableEntry_String_TypeInfo___to_String( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TypeInfo___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_TypeInfo___type_name( RogueClassTableEntry_String_TypeInfo_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[916]);
}

RogueClassConsole* RogueConsole__init_object( RogueClassConsole* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->output_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  THIS->input_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  return (RogueClassConsole*)(THIS);
}

RogueClassConsole* RogueConsole__init( RogueClassConsole* THIS )
{
  tcgetattr( STDIN_FILENO, &THIS->original_terminal_settings );

  RogueGlobal__on_exit__Function__( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueClassFunction__*)(((RogueFunction_1094__init__Console( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFunction_1094*,ROGUE_CREATE_OBJECT(Function_1094))), ROGUE_ARG(THIS) )))))) );
  THIS->io_handler = ((RogueClassConsoleIOHandler*)(((RogueClassBlockingConsoleIOHandler*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassBlockingConsoleIOHandler*,ROGUE_CREATE_OBJECT(BlockingConsoleIOHandler)))) ))))));
  return (RogueClassConsole*)(THIS);
}

RogueString* RogueConsole__type_name( RogueClassConsole* THIS )
{
  return (RogueString*)(Rogue_literal_strings[957]);
}

RogueLogical RogueConsole__has_another( RogueClassConsole* THIS )
{
  return (RogueLogical)((Rogue_call_ROGUEM78( 17, ROGUE_ARG(THIS->io_handler) )));
}

RogueByte RogueConsole__read( RogueClassConsole* THIS )
{
  return (RogueByte)((Rogue_call_ROGUEM79( 19, ROGUE_ARG(THIS->io_handler) )));
}

RogueClassConsole* RogueConsole__flush( RogueClassConsole* THIS )
{
  if (!!(THIS->output_buffer->count))
  {
    RogueConsole__write__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(THIS->output_buffer) );
    RogueStringBuilder__clear( ROGUE_ARG(THIS->output_buffer) );
  }
  return (RogueClassConsole*)(THIS);
}

RogueClassConsole* RogueConsole__write__StringBuilder( RogueClassConsole* THIS, RogueStringBuilder* buffer_0 )
{
  Rogue_call_ROGUEM80( 21, ROGUE_ARG(THIS->io_handler), ROGUE_ARG(buffer_0->utf8->data), ROGUE_ARG(buffer_0->utf8->count) );
  return (RogueClassConsole*)(THIS);
}

RogueLogical RogueReader_Byte___has_another( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 48:
      return RogueConsole__has_another( (RogueClassConsole*)THIS );
    case 410:
      return RogueFileReader__has_another( (RogueClassFileReader*)THIS );
    default:
      return 0;
  }
}

RogueByte RogueReader_Byte___read( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 48:
      return RogueConsole__read( (RogueClassConsole*)THIS );
    case 410:
      return RogueFileReader__read( (RogueClassFileReader*)THIS );
    default:
      return 0;
  }
}

RogueClassPrintWriter_output_buffer_* RoguePrintWriter_output_buffer___flush( RogueObject* THIS )
{
  switch (THIS->type->index)
  {
    case 48:
      return (RogueClassPrintWriter_output_buffer_*)RogueConsole__flush( (RogueClassConsole*)THIS );
    default:
      return 0;
  }
}

RogueClassPrintWriter_output_buffer_* RoguePrintWriter_output_buffer___write__StringBuilder( RogueObject* THIS, RogueStringBuilder* buffer_0 )
{
  switch (THIS->type->index)
  {
    case 48:
      return (RogueClassPrintWriter_output_buffer_*)RogueConsole__write__StringBuilder( (RogueClassConsole*)THIS, buffer_0 );
    default:
      return 0;
  }
}

RogueClassConsoleIOHandler* RogueConsoleIOHandler__init_object( RogueClassConsoleIOHandler* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassConsoleIOHandler*)(THIS);
}

RogueString* RogueConsoleIOHandler__type_name( RogueClassConsoleIOHandler* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1005]);
}

RogueClassFunction_161* RogueFunction_161__init_object( RogueClassFunction_161* THIS )
{
  RogueFunction____init_object( ROGUE_ARG(((RogueClassFunction__*)THIS)) );
  return (RogueClassFunction_161*)(THIS);
}

RogueString* RogueFunction_161__type_name( RogueClassFunction_161* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1131]);
}

void RogueFunction_161__call( RogueClassFunction_161* THIS )
{
  RogueGlobal__flush( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
}

RogueClassRogueC* RogueRogueC__init_object( RogueClassRogueC* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->included_files = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->manually_included_files = ((RogueSet_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassSet_String_*,ROGUE_CREATE_OBJECT(Set_String_))) )));
  THIS->prefix_path_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->prefix_path_lookup = ((RogueTable_String_Logical___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Logical_*,ROGUE_CREATE_OBJECT(Table_String_Logical_))) )));
  THIS->compile_targets = ((RogueTable_String_Logical___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Logical_*,ROGUE_CREATE_OBJECT(Table_String_Logical_))) )));
  THIS->target_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->libraries_folder = Rogue_literal_strings[0];
  THIS->source_files = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->supported_targets = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->essential_declarations = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->all_essential = false;
  THIS->all_api = false;
  THIS->essential_files = ((RogueSet_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassSet_String_*,ROGUE_CREATE_OBJECT(Set_String_))) )));
  THIS->manual_files_essential = false;
  THIS->all_methods_callable_dynamically = false;
  THIS->parsers = ((RogueParser_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueParser_List*,ROGUE_CREATE_OBJECT(Parser_List))) )));
  THIS->parsereaders_by_filepath = ((RogueTable_String_ParseReader___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_ParseReader_*,ROGUE_CREATE_OBJECT(Table_String_ParseReader_))) )));
  THIS->gc_mode = 0;
  THIS->gc_threshold = 1048576;
  THIS->plugins = ((RoguePlugin_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RoguePlugin_List*,ROGUE_CREATE_OBJECT(Plugin_List))) )));
  return (RogueClassRogueC*)(THIS);
}

RogueString* RogueRogueC__type_name( RogueClassRogueC* THIS )
{
  return (RogueString*)(Rogue_literal_strings[959]);
}

void RogueRogueC__launch( RogueClassRogueC* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,libs_0,(((RogueString__operatorPLUS__String( ROGUE_ARG((RogueFile__path__String( ROGUE_ARG(RogueSystem_executable_filepath) ))), Rogue_literal_strings[2] )))));
  if ((RogueFile__exists__String( libs_0 )))
  {
    THIS->libraries_folder = libs_0;
    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), libs_0 );
    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), libs_0, true );
  }
  ROGUE_TRY
  {
    RogueRogueC__process_command_line_arguments( ROGUE_ARG(THIS) );
    RogueString_List__add__String( ROGUE_ARG(THIS->supported_targets), Rogue_literal_strings[266] );
    RogueString_List__add__String( ROGUE_ARG(THIS->supported_targets), Rogue_literal_strings[267] );
    {
      ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_1098_4,(THIS->plugins));
      RogueInt32 _auto_1099_5 = (0);
      for (;_auto_1099_5 < _auto_1098_4->count;++_auto_1099_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_6,(((RogueClassPlugin*)(_auto_1098_4->data->as_objects[_auto_1099_5]))));
        RoguePlugin__collect_supported_targets( plugin_6 );
      }
    }
    if (THIS->source_files->count == 0)
    {
      if (THIS->print_version)
      {
        RogueGlobal__println__String( ROGUE_ARG(((RogueGlobal__print__Character( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), (RogueCharacter)'v' )))), Rogue_literal_strings[268] );
        RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[269] );
        RogueSystem__exit__Int32( 0 );
      }
      RogueGlobal__println( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[270], Rogue_literal_strings[268] )))) );
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[269] );
      ROGUE_DEF_LOCAL_REF(RogueString*,usage_1,(Rogue_literal_strings[271]));
      usage_1 = ((RogueString*)((RogueString__operatorPLUS__String( usage_1, ROGUE_ARG(((RogueString__replacing__String_String( ROGUE_ARG(((RogueString_List__to_String( ROGUE_ARG(THIS->supported_targets) )))), Rogue_literal_strings[73], Rogue_literal_strings[272] )))) ))));
      usage_1 = ((RogueString*)((RogueString__operatorPLUS__String( usage_1, Rogue_literal_strings[273] ))));
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), usage_1 );
      RogueSystem__exit__Int32( 1 );
    }
    if (THIS->target_list->count == 0)
    {
      RogueString_List__add__String( ROGUE_ARG(THIS->target_list), Rogue_literal_strings[266] );
    }
    if ((((RogueString_List__locate__String( ROGUE_ARG(THIS->target_list), Rogue_literal_strings[267] ))).exists && !(((RogueString_List__locate__String( ROGUE_ARG(THIS->target_list), Rogue_literal_strings[266] ))).exists)))
    {
      RogueString_List__add__String( ROGUE_ARG(THIS->target_list), Rogue_literal_strings[266] );
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1100_7,(THIS->target_list));
      RogueInt32 _auto_1101_8 = (0);
      for (;_auto_1101_8 < _auto_1100_7->count;++_auto_1101_8)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,target_9,(((RogueString*)(_auto_1100_7->data->as_objects[_auto_1101_8]))));
        RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->compile_targets), target_9, true );
      }
    }
    RogueProgram__configure( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) );
    THIS->stopwatch = ((RogueClassStopwatch*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassStopwatch*,ROGUE_CREATE_OBJECT(Stopwatch)))) ))));
    THIS->first_filepath = ((RogueString*)(THIS->source_files->data->as_objects[0]));
    RogueRogueC__include_source__String_Logical( ROGUE_ARG(THIS), Rogue_literal_strings[385], true );
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1102_10,(THIS->source_files));
      RogueInt32 _auto_1103_11 = (0);
      for (;_auto_1103_11 < _auto_1102_10->count;++_auto_1103_11)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,filepath_12,(((RogueString*)(_auto_1102_10->data->as_objects[_auto_1103_11]))));
        RogueRogueC__include_source__String_Logical( ROGUE_ARG(THIS), filepath_12, false );
      }
    }
    RogueRogueC__include_source__String_Logical( ROGUE_ARG(THIS), Rogue_literal_strings[386], false );
    {
      ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_1104_13,(THIS->parsers));
      RogueInt32 _auto_1105_14 = (0);
      for (;_auto_1105_14 < _auto_1104_13->count;++_auto_1105_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_15,(((RogueClassParser*)(_auto_1104_13->data->as_objects[_auto_1105_14]))));
        RogueParser__insert_module_prefixes( parser_15 );
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_1106_16,(THIS->parsers));
      RogueInt32 _auto_1107_17 = (0);
      for (;_auto_1107_17 < _auto_1106_16->count;++_auto_1107_17)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_18,(((RogueClassParser*)(_auto_1106_16->data->as_objects[_auto_1107_17]))));
        RogueParser__parse_elements( parser_18 );
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,((Rogue_call_ROGUEM109( 18, ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[374] )))), Rogue_literal_strings[387], 0, 0 ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1108_19,(THIS->essential_declarations));
      RogueInt32 _auto_1109_20 = (0);
      for (;_auto_1109_20 < _auto_1108_19->count;++_auto_1109_20)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,declaration_21,(((RogueString*)(_auto_1108_19->data->as_objects[_auto_1109_20]))));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_2 )))->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_2, declaration_21 )))))) );
      }
    }
    if (THIS->manual_files_essential)
    {
      RogueSet_String___union_update__Set_String_( ROGUE_ARG(THIS->essential_files), ROGUE_ARG(THIS->manually_included_files) );
    }
    RogueProgram__resolve( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) );
    RogueRogueC__write_output( ROGUE_ARG(THIS) );
  }
  ROGUE_CATCH( RogueClassError,err_3 )
  {
    RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(err_3))) );
    RogueSystem__exit__Int32( 1 );
  }
  ROGUE_END_TRY
}

void RogueRogueC__write_output( RogueClassRogueC* THIS )
{
  if (((RogueTable_String_Logical___get__String( ROGUE_ARG(THIS->compile_targets), Rogue_literal_strings[266] ))))
  {
    RogueRogueC__write_cpp( ROGUE_ARG(THIS) );
    return;
  }
  ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[902] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->target_list))) )))) )))), Rogue_literal_strings[903] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
}

void RogueRogueC__on_compile_finished( RogueClassRogueC* THIS )
{
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[897] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->stopwatch))) )))) )))), Rogue_literal_strings[12] )))) )))) );
}

RogueClassFile* RogueRogueC__find_source_file__String( RogueClassRogueC* THIS, RogueString* _auto_5756 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,filepath_0,_auto_5756);
  ROGUE_DEF_LOCAL_REF(RogueClassFile*,file_1,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_0 )))));
  if ((RogueFile__exists__String( ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[245] )))) )))
  {
    filepath_0 = ((RogueString*)((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[245] ))));
    file_1 = ((RogueClassFile*)((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_0 ))));
  }
  if (!((RogueFile__exists__String( ROGUE_ARG(file_1->filepath) ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1112_6,(THIS->prefix_path_list));
      RogueInt32 _auto_1113_7 = (0);
      for (;_auto_1113_7 < _auto_1112_6->count;++_auto_1113_7)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,prefix_8,(((RogueString*)(_auto_1112_6->data->as_objects[_auto_1113_7]))));
        ROGUE_DEF_LOCAL_REF(RogueString*,prefixed_filepath_2,(((RogueString__operatorPLUS__String( prefix_8, filepath_0 )))));
        ROGUE_DEF_LOCAL_REF(RogueClassFile*,prefixed_file_3,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), prefixed_filepath_2 )))));
        if ((RogueFile__exists__String( ROGUE_ARG(((RogueString__operatorPLUS__String( prefixed_filepath_2, Rogue_literal_strings[245] )))) )))
        {
          filepath_0 = ((RogueString*)((RogueString__operatorPLUS__String( prefixed_filepath_2, Rogue_literal_strings[245] ))));
          file_1 = ((RogueClassFile*)((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_0 ))));
          goto _auto_1114;
        }
        else if ((RogueFile__exists__String( ROGUE_ARG(prefixed_file_3->filepath) )))
        {
          filepath_0 = ((RogueString*)prefixed_filepath_2);
          file_1 = ((RogueClassFile*)prefixed_file_3);
          goto _auto_1114;
        }
      }
    }
    _auto_1114:;
  }
  if (!((RogueFile__exists__String( ROGUE_ARG(file_1->filepath) ))))
  {
    return (RogueClassFile*)(((RogueClassFile*)(NULL)));
  }
  if ((RogueFile__is_folder__String( ROGUE_ARG(file_1->filepath) )))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,path2_4,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[183] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueFile__filename( file_1 )))) )))) )))), Rogue_literal_strings[245] )))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassFile*,file2_5,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), path2_4 )))));
    if ((!((RogueFile__exists__String( ROGUE_ARG(file2_5->filepath) ))) || (RogueFile__is_folder__String( ROGUE_ARG(file2_5->filepath) ))))
    {
      return (RogueClassFile*)(((RogueClassFile*)(NULL)));
    }
    else
    {
      if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), ROGUE_ARG(file_1->filepath) )))))
      {
        RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), ROGUE_ARG(file_1->filepath), true );
        RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), ROGUE_ARG(file_1->filepath) );
      }
      filepath_0 = ((RogueString*)path2_4);
      file_1 = ((RogueClassFile*)file2_5);
    }
  }
  return (RogueClassFile*)(file_1);
}

void RogueRogueC__include_source__String_Logical( RogueClassRogueC* THIS, RogueString* filepath_0, RogueLogical do_not_save_prefix_1 )
{
  RogueRogueC__include_source__Token_String_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassToken*)(NULL))), filepath_0, do_not_save_prefix_1 );
}

void RogueRogueC__include_source__Token_String_Logical( RogueClassRogueC* THIS, RogueClassToken* t_0, RogueString* _auto_5757, RogueLogical do_not_save_prefix_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,filepath_1,_auto_5757);
  ROGUE_DEF_LOCAL_REF(RogueClassFile*,file_3,(((RogueRogueC__find_source_file__String( ROGUE_ARG(THIS), filepath_1 )))));
  if (((void*)file_3) == ((void*)NULL))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_4,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[284] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[235] )))) )))));
    if (!!(t_0))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, mesg_4 ))));
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_4, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  filepath_1 = ((RogueString*)(RogueFile__absolute_filepath__String( ROGUE_ARG(file_3->filepath) )));
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->included_files), filepath_1 ))).exists)
  {
    return;
  }
  RogueString_List__add__String( ROGUE_ARG(THIS->included_files), filepath_1 );
  if (((void*)t_0) == ((void*)NULL))
  {
    RogueSet_String___add__String( ROGUE_ARG(THIS->manually_included_files), filepath_1 );
  }
  if (!(do_not_save_prefix_2))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,prefix_5,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before_last__Character( filepath_1, (RogueCharacter)'/' )))), Rogue_literal_strings[183] )))));
    if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), prefix_5 )))))
    {
      RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), prefix_5, true );
      RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), prefix_5 );
    }
  }
  RogueParser_List__add__Parser( ROGUE_ARG(THIS->parsers), ROGUE_ARG(((RogueParser__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), filepath_1 )))) );
}

void RogueRogueC__include_native__Token_String_String( RogueClassRogueC* THIS, RogueClassToken* t_0, RogueString* _auto_5758, RogueString* native_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,filepath_1,_auto_5758);
  ROGUE_DEF_LOCAL_REF(RogueClassFile*,file_3,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), filepath_1 )))));
  if (!((RogueFile__exists__String( ROGUE_ARG(file_3->filepath) ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1115_9,(THIS->prefix_path_list));
      RogueInt32 _auto_1116_10 = (0);
      for (;_auto_1116_10 < _auto_1115_9->count;++_auto_1116_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,prefix_11,(((RogueString*)(_auto_1115_9->data->as_objects[_auto_1116_10]))));
        ROGUE_DEF_LOCAL_REF(RogueString*,prefixed_filepath_4,(((RogueString__operatorPLUS__String( prefix_11, filepath_1 )))));
        ROGUE_DEF_LOCAL_REF(RogueClassFile*,prefixed_file_5,(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), prefixed_filepath_4 )))));
        if ((RogueFile__exists__String( ROGUE_ARG(prefixed_file_5->filepath) )))
        {
          filepath_1 = ((RogueString*)prefixed_filepath_4);
          file_3 = ((RogueClassFile*)prefixed_file_5);
          goto _auto_1117;
        }
      }
    }
    _auto_1117:;
  }
  if (!((RogueFile__exists__String( ROGUE_ARG(file_3->filepath) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_6,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[284] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[235] )))) )))));
    if (!!(t_0))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, mesg_6 ))));
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_6, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  if ((RogueFile__is_folder__String( ROGUE_ARG(file_3->filepath) )))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,mesg_7,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[291] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(file_3->filepath) )))) )))), Rogue_literal_strings[292] )))) )))));
    if (!!(t_0))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, mesg_7 ))));
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), mesg_7, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
    }
  }
  filepath_1 = ((RogueString*)(RogueFile__absolute_filepath__String( ROGUE_ARG(file_3->filepath) )));
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->included_files), filepath_1 ))).exists)
  {
    return;
  }
  RogueString_List__add__String( ROGUE_ARG(THIS->included_files), filepath_1 );
  ROGUE_DEF_LOCAL_REF(RogueString*,prefix_8,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__before_last__Character( filepath_1, (RogueCharacter)'/' )))), Rogue_literal_strings[183] )))));
  if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), prefix_8 )))))
  {
    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), prefix_8, true );
    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), prefix_8 );
  }
  if (((RogueString__operatorEQUALSEQUALS__String( native_type_2, Rogue_literal_strings[293] ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_1119_12,(((RogueLineReader__init__File( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), file_3 )))));
      while (((RogueLineReader__has_another( _auto_1119_12 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_13,(((RogueLineReader__read( _auto_1119_12 )))));
        RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), line_13 );
      }
    }
  }
  else
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_1120_14,(((RogueLineReader__init__File( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), file_3 )))));
      while (((RogueLineReader__has_another( _auto_1120_14 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_15,(((RogueLineReader__read( _auto_1120_14 )))));
        RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), line_15 );
      }
    }
  }
}

void RogueRogueC__process_command_line_arguments( RogueClassRogueC* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1121_6,(RogueSystem_command_line_arguments));
    RogueInt32 _auto_1122_7 = (0);
    for (;_auto_1122_7 < _auto_1121_6->count;++_auto_1122_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,arg_8,(((RogueString*)(_auto_1121_6->data->as_objects[_auto_1122_7]))));
      ROGUE_DEF_LOCAL_REF(RogueString*,value_0,(((RogueString__after_first__Character( arg_8, (RogueCharacter)'=' )))));
      arg_8 = ((RogueString*)((RogueString__before_first__Character( arg_8, (RogueCharacter)'=' ))));
      if (((RogueString__begins_with__String( arg_8, Rogue_literal_strings[3] ))))
      {
        {
          if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[4] ))))
          {
            if (value_0->character_count == 0)
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[20], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            THIS->output_filepath = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[21] ))))
          {
            THIS->generate_main = true;
            THIS->compile_output = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[22] ))))
          {
            THIS->generate_main = true;
            THIS->compile_output = true;
            THIS->execute_args = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[23] ))))
          {
            THIS->debug_mode = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[24] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[25], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            RogueOptionalInt32 i_1 = (((RogueString__locate__Character_OptionalInt32( value_0, (RogueCharacter)':', ROGUE_ARG((RogueOptionalInt32__create())) ))));
            if (!(i_1.exists))
            {
              RoguePreprocessor__define__String_String( value_0, Rogue_literal_strings[140] );
            }
            else
            {
              RoguePreprocessor__define__String_String( ROGUE_ARG(((RogueString__before_first__Character( value_0, (RogueCharacter)':' )))), ROGUE_ARG(((RogueString__after_first__Character( value_0, (RogueCharacter)':' )))) );
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[230] ))))
          {
            if (!!(value_0->character_count))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[231], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            else
            {
              THIS->all_essential = true;
              THIS->all_api = true;
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[232] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[233], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            {
              ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1123_9,(((RogueString__split__Character( value_0, (RogueCharacter)';' )))));
              RogueInt32 _auto_1124_10 = (0);
              for (;_auto_1124_10 < _auto_1123_9->count;++_auto_1124_10)
              {
                ROGUE_DEF_LOCAL_REF(RogueString*,path_11,(((RogueString*)(_auto_1123_9->data->as_objects[_auto_1124_10]))));
                if (!((RogueFile__exists__String( path_11 ))))
                {
                  ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[234] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], path_11 )))) )))), Rogue_literal_strings[235] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
                }
                if ((RogueFile__is_folder__String( path_11 )))
                {
                  if (!(((RogueString__ends_with__Character( path_11, (RogueCharacter)'/' )))))
                  {
                    path_11 = ((RogueString*)((RogueString__operatorPLUS__Character( path_11, (RogueCharacter)'/' ))));
                  }
                  if (!(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->prefix_path_lookup), path_11 )))))
                  {
                    RogueString_List__add__String( ROGUE_ARG(THIS->prefix_path_list), path_11 );
                    RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->prefix_path_lookup), path_11, true );
                  }
                }
                else
                {
                  RogueString_List__add__String( ROGUE_ARG(THIS->source_files), path_11 );
                }
              }
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[236] ))))
          {
            if (!!(value_0->character_count))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[237], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            THIS->generate_main = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[238] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[239], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            THIS->package_name = value_0;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[240] ))))
          {
            if (!!(value_0->character_count))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[241], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            else
            {
              THIS->all_api = true;
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[242] ))))
          {
            if (!!(value_0->character_count))
            {
              if ((((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[188] ))) || ((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[243] )))))
              {
                THIS->all_essential = true;
                THIS->all_api = true;
              }
              else
              {
                RogueString_List__add__String_List( ROGUE_ARG(THIS->essential_declarations), ROGUE_ARG(((RogueString__split__Character( value_0, (RogueCharacter)',' )))) );
              }
            }
            else
            {
              THIS->all_essential = true;
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[244] ))))
          {
            if (!!(value_0->character_count))
            {
              ROGUE_DEF_LOCAL_REF(RogueClassFile*,file_2,(((RogueRogueC__find_source_file__String( ROGUE_ARG(THIS), value_0 )))));
              if (((void*)file_2) == ((void*)NULL))
              {
                ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[246] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], value_0 )))) )))), Rogue_literal_strings[247] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
              }
              RogueSet_String___add__String( ROGUE_ARG(THIS->essential_files), ROGUE_ARG((RogueFile__absolute_filepath__String( ROGUE_ARG(file_2->filepath) ))) );
              RogueString_List__add__String( ROGUE_ARG(THIS->source_files), ROGUE_ARG((RogueFile__absolute_filepath__String( ROGUE_ARG(file_2->filepath) ))) );
            }
            else
            {
              THIS->manual_files_essential = true;
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[249] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[250], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            RogueString_List__add__String_List( ROGUE_ARG(THIS->target_list), ROGUE_ARG(((RogueString__split__Character( value_0, (RogueCharacter)',' )))) );
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[251] ))))
          {
            if ((!(!!(value_0->character_count)) || ((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[252] )))))
            {
              THIS->gc_mode = 1;
            }
            else if (((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[253] ))))
            {
              THIS->gc_mode = 0;
            }
            else if (((RogueString__operatorEQUALSEQUALS__String( value_0, Rogue_literal_strings[254] ))))
            {
              THIS->gc_mode = 2;
            }
            else
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[255] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], value_0 )))) )))), Rogue_literal_strings[12] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[256] ))))
          {
            if (!(!!(value_0->character_count)))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[257], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            value_0 = ((RogueString*)((RogueString__to_lowercase( value_0 ))));
            RogueReal64 n_3 = (strtod( (char*)value_0->utf8, 0 ));
            if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'m' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[258] )))))
            {
              n_3 *= 1048576.0;
            }
            else if ((((RogueString__ends_with__Character( value_0, (RogueCharacter)'k' ))) || ((RogueString__ends_with__String( value_0, Rogue_literal_strings[259] )))))
            {
              n_3 *= 1024.0;
            }
            RogueInt32 thresh_4 = (((RogueInt32)(n_3)));
            if (thresh_4 < 1)
            {
              thresh_4 = ((RogueInt32)2147483647);
            }
            THIS->gc_threshold = thresh_4;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[260] ))))
          {
            RoguePlugin_List__add__Plugin( ROGUE_ARG(THIS->plugins), ROGUE_ARG(((RoguePlugin__on_generate_additional_types__Function__RETURNSLogical( ROGUE_ARG(((RoguePlugin__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPlugin*,ROGUE_CREATE_OBJECT(Plugin))), Rogue_literal_strings[261] )))), ROGUE_ARG(((RogueClassFunction__RETURNSLogical*)(((RogueClassFunction_1125*)ROGUE_SINGLETON(Function_1125))))) )))) );
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[262] ))))
          {
            THIS->run_tests = true;
            THIS->debug_mode = true;
          }
          else if (((RogueString__operatorEQUALSEQUALS__String( arg_8, Rogue_literal_strings[263] ))))
          {
            if (!!(value_0->character_count))
            {
              ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), Rogue_literal_strings[264], ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
            }
            THIS->print_version = true;
          }
          else
          {
            ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[265] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_8 )))) )))), Rogue_literal_strings[225] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
          }
        }
      }
      else
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->source_files), arg_8 );
      }
    }
  }
}

void RogueRogueC__write_cpp( RogueClassRogueC* THIS )
{
  if (((void*)THIS->output_filepath) == ((void*)NULL))
  {
    THIS->output_filepath = (RogueFile__filename__String( ROGUE_ARG(THIS->first_filepath) ));
    if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG(THIS->output_filepath) )))), Rogue_literal_strings[245] ))))
    {
      THIS->output_filepath = ((RogueString__leftmost__Int32( ROGUE_ARG(THIS->output_filepath), -6 )));
    }
  }
  else if ((RogueFile__is_folder__String( ROGUE_ARG(THIS->output_filepath) )))
  {
    THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), Rogue_literal_strings[183] )));
    ROGUE_DEF_LOCAL_REF(RogueString*,filename_0,((RogueFile__filename__String( ROGUE_ARG(THIS->first_filepath) ))));
    if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( filename_0 )))), Rogue_literal_strings[245] ))))
    {
      THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), ROGUE_ARG(((RogueString__leftmost__Int32( filename_0, -6 )))) )));
    }
    else
    {
      THIS->output_filepath = ((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->output_filepath), Rogue_literal_strings[559] )));
    }
  }
  else if (((RogueString__ends_with__String( ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG(THIS->output_filepath) )))), Rogue_literal_strings[560] ))))
  {
    THIS->output_filepath = ((RogueString__leftmost__Int32( ROGUE_ARG(THIS->output_filepath), -4 )));
  }
  RogueProgram__write_cpp__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->output_filepath) );
  RogueRogueC__on_compile_finished( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)) );
  if (THIS->compile_output)
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,exe_1,(THIS->output_filepath));
    if (((RogueString__contains__Character( exe_1, (RogueCharacter)'/' ))))
    {
      exe_1 = ((RogueString*)((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((RogueFile__path__String( exe_1 ))), Rogue_literal_strings[183] )))), ROGUE_ARG(((RogueString__to_lowercase( ROGUE_ARG((RogueFile__filename__String( exe_1 ))) )))) ))));
    }
    else
    {
      exe_1 = ((RogueString*)((RogueString__to_lowercase( exe_1 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,cmd_2,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[898] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->output_filepath) )))) )))), Rogue_literal_strings[899] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], exe_1 )))) )))) )))));
    if (!!(THIS->execute_args))
    {
      cmd_2 = ((RogueString*)((RogueString__operatorPLUS__String( cmd_2, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[900] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], exe_1 )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->execute_args) )))) )))) )))) ))));
    }
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), cmd_2 );
    RogueGlobal__println( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)) );
    if (!!((RogueSystem__run__String( cmd_2 ))))
    {
      RogueSystem__exit__Int32( 1 );
    }
  }
}

RogueClassSet_String_* RogueSet_String___init_object( RogueClassSet_String_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassSet_String_*)(THIS);
}

RogueClassSet_String_* RogueSet_String___init( RogueClassSet_String_* THIS )
{
  THIS->_t = ((RogueTable_String_Logical___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Logical_*,ROGUE_CREATE_OBJECT(Table_String_Logical_))) )));
  return (RogueClassSet_String_*)(THIS);
}

RogueString* RogueSet_String___to_String( RogueClassSet_String_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueSet_String___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueSet_String___type_name( RogueClassSet_String_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[990]);
}

void RogueSet_String___clear( RogueClassSet_String_* THIS )
{
  RogueTable_String_Logical___clear( ROGUE_ARG(THIS->_t) );
}

RogueLogical RogueSet_String___contains__String( RogueClassSet_String_* THIS, RogueString* v_0 )
{
  return (RogueLogical)(((RogueTable_String_Logical___contains__String( ROGUE_ARG(THIS->_t), v_0 ))));
}

RogueString* RogueSet_String___at__Int32( RogueClassSet_String_* THIS, RogueInt32 index_0 )
{
  return (RogueString*)(((RogueString*)(((RogueTable_String_Logical___keys( ROGUE_ARG(THIS->_t) )))->data->as_objects[index_0])));
}

RogueClassSet_String_* RogueSet_String___add__String( RogueClassSet_String_* THIS, RogueString* v_0 )
{
  RogueTable_String_Logical___set__String_Logical( ROGUE_ARG(THIS->_t), v_0, true );
  return (RogueClassSet_String_*)(THIS);
}

RogueClassSet_String_* RogueSet_String___union_update__Set_String_( RogueClassSet_String_* THIS, RogueClassSet_String_* r_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassSet_String_*,_auto_1128_1,(r_0));
    RogueInt32 _auto_1129_2 = (0);
    for (;_auto_1129_2 < ((RogueSet_String___count( _auto_1128_1 )));++_auto_1129_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,v_3,(((RogueSet_String___at__Int32( _auto_1128_1, _auto_1129_2 )))));
      RogueSet_String___add__String( ROGUE_ARG(THIS), v_3 );
    }
  }
  return (RogueClassSet_String_*)(THIS);
}

RogueInt32 RogueSet_String___count( RogueClassSet_String_* THIS )
{
  return (RogueInt32)(THIS->_t->count);
}

RogueStringBuilder* RogueSet_String___print_to__StringBuilder( RogueClassSet_String_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < ((RogueTable_String_Logical___keys( ROGUE_ARG(THIS->_t) )))->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,key_2,(((RogueString*)(((RogueTable_String_Logical___keys( ROGUE_ARG(THIS->_t) )))->data->as_objects[i_1]))));
    RogueStringBuilder__print__String( buffer_0, key_2 );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init_object( RogueClassTable_String_Logical_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init( RogueClassTable_String_Logical_* THIS )
{
  RogueTable_String_Logical___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueString* RogueTable_String_Logical___to_String( RogueClassTable_String_Logical_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Logical___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Logical___type_name( RogueClassTable_String_Logical_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[975]);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___init__Int32( RogueClassTable_String_Logical_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Logical_*), true );
  return (RogueClassTable_String_Logical_*)(THIS);
}

void RogueTable_String_Logical___clear( RogueClassTable_String_Logical_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueArray*,_auto_1138_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_1138_0->count;++i_1)
    {
      THIS->bins->as_objects[i_1] = ((RogueClassTableEntry_String_Logical_*)(NULL));
    }
  }
  THIS->first_entry = ((RogueClassTableEntry_String_Logical_*)(NULL));
  THIS->last_entry = ((RogueClassTableEntry_String_Logical_*)(NULL));
  THIS->cur_entry = ((RogueClassTableEntry_String_Logical_*)(NULL));
  THIS->count = 0;
}

RogueLogical RogueTable_String_Logical___contains__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_Logical___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_Logical_* RogueTable_String_Logical___find__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_2,(((RogueClassTableEntry_String_Logical_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Logical_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Logical_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Logical_*)(((RogueClassTableEntry_String_Logical_*)(NULL)));
}

RogueLogical RogueTable_String_Logical___get__String( RogueClassTable_String_Logical_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_1,(((RogueTable_String_Logical___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueLogical)(entry_1->value);
  }
  else
  {
    RogueLogical default_value_2 = 0;
    return (RogueLogical)(default_value_2);
  }
}

RogueString_List* RogueTable_String_Logical___keys( RogueClassTable_String_Logical_* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString_List*,result_0,(((RogueString_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))), ROGUE_ARG(THIS->count) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,cur_1,(THIS->first_entry));
  while (!!(cur_1))
  {
    RogueString_List__add__String( result_0, ROGUE_ARG(cur_1->key) );
    cur_1 = ((RogueClassTableEntry_String_Logical_*)cur_1->next_entry);
  }
  return (RogueString_List*)(result_0);
}

RogueClassTable_String_Logical_* RogueTable_String_Logical___set__String_Logical( RogueClassTable_String_Logical_* THIS, RogueString* key_0, RogueLogical value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,entry_2,(((RogueTable_String_Logical___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Logical_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Logical____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Logical_*)((RogueTableEntry_String_Logical___init__String_Logical_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Logical_*,ROGUE_CREATE_OBJECT(TableEntry_String_Logical_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Logical_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Logical_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Logical___print_to__StringBuilder( RogueClassTable_String_Logical_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Logical( buffer_0, ROGUE_ARG(cur_1->value) );
    cur_1 = ((RogueClassTableEntry_String_Logical_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Logical____grow( RogueClassTable_String_Logical_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Logical_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Logical_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Logical_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Logical_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Logical____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1090]);
}

RogueClassTableEntry_String_Logical_* RogueTableEntry_String_Logical___init_object( RogueClassTableEntry_String_Logical_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Logical_*)(THIS);
}

RogueString* RogueTableEntry_String_Logical___to_String( RogueClassTableEntry_String_Logical_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Logical___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Logical( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Logical___type_name( RogueClassTableEntry_String_Logical_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[917]);
}

RogueClassTableEntry_String_Logical_* RogueTableEntry_String_Logical___init__String_Logical_Int32( RogueClassTableEntry_String_Logical_* THIS, RogueString* _key_0, RogueLogical _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Logical_*)(THIS);
}

RogueParser_List* RogueParser_List__init_object( RogueParser_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueParser_List*)(THIS);
}

RogueParser_List* RogueParser_List__init( RogueParser_List* THIS )
{
  RogueParser_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueParser_List*)(THIS);
}

RogueString* RogueParser_List__to_String( RogueParser_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueParser_List*,_auto_1158_2,(THIS));
    RogueInt32 _auto_1159_3 = (0);
    for (;_auto_1159_3 < _auto_1158_2->count;++_auto_1159_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassParser*,value_4,(((RogueClassParser*)(_auto_1158_2->data->as_objects[_auto_1159_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueParser_List__type_name( RogueParser_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1058]);
}

RogueParser_List* RogueParser_List__init__Int32( RogueParser_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassParser*), true );
  }
  return (RogueParser_List*)(THIS);
}

RogueParser_List* RogueParser_List__add__Parser( RogueParser_List* THIS, RogueClassParser* value_0 )
{
  ((RogueParser_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueParser_List*)(THIS);
}

RogueInt32 RogueParser_List__capacity( RogueParser_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueParser_List* RogueParser_List__reserve__Int32( RogueParser_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassParser*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueParser_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassParser*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueParser_List*)(THIS);
}

RogueClassParser* RogueParser__init_object( RogueClassParser* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->local_declarations = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->property_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  THIS->string_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  THIS->used_modules = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassParser*)(THIS);
}

RogueString* RogueParser__type_name( RogueClassParser* THIS )
{
  return (RogueString*)(Rogue_literal_strings[981]);
}

RogueClassParser* RogueParser__init__String( RogueClassParser* THIS, RogueString* _auto_311_0 )
{
  THIS->filepath = _auto_311_0;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__String( ROGUE_ARG(((RogueClassTokenizer*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), ROGUE_ARG(THIS->filepath) )))) )))), true );
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__String_String( RogueClassParser* THIS, RogueString* _auto_312_0, RogueString* content_1 )
{
  THIS->filepath = _auto_312_0;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__String_String( ROGUE_ARG(((RogueClassTokenizer*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), ROGUE_ARG(THIS->filepath), content_1 )))) )))), true );
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__Token_String_String( RogueClassParser* THIS, RogueClassToken* t_0, RogueString* _auto_313_1, RogueString* data_2 )
{
  THIS->filepath = _auto_313_1;
  RogueParser__init__Token_List_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__process__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueTokenizer__tokenize__Token_String_String( ROGUE_ARG(((RogueClassTokenizer*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), t_0, ROGUE_ARG(THIS->filepath), data_2 )))) )))), true );
  return (RogueClassParser*)(THIS);
}

RogueClassParser* RogueParser__init__Token_List_Logical( RogueClassParser* THIS, RogueToken_List* _auto_5759, RogueLogical skip_reprocess_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,tokens_0,_auto_5759);
  if (!(skip_reprocess_1))
  {
    tokens_0 = ((RogueToken_List*)((RoguePreprocessor__reprocess__Token_List( ROGUE_ARG(((RoguePreprocessor__init__Parser( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessor*,ROGUE_CREATE_OBJECT(Preprocessor))), ROGUE_ARG(THIS) )))), tokens_0 ))));
  }
  THIS->reader = ((RogueTokenReader__init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenReader*,ROGUE_CREATE_OBJECT(TokenReader))), tokens_0 )));
  return (RogueClassParser*)(THIS);
}

void RogueParser__add_used_module__String( RogueClassParser* THIS, RogueString* module_name_0 )
{
  if (((RogueString_List__locate__String( ROGUE_ARG(THIS->used_modules), module_name_0 ))).exists)
  {
    return;
  }
  RogueString_List__add__String( ROGUE_ARG(THIS->used_modules), module_name_0 );
  ROGUE_DEF_LOCAL_REF(RogueString_List*,module_ids_1,(((RogueTable_String_String_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->ids_by_module), module_name_0 )))));
  if (!!(module_ids_1))
  {
    if (!(!!(THIS->module_id_map)))
    {
      THIS->module_id_map = ((RogueClassStringTable_String_*)(((RogueTable_String_String___init( ROGUE_ARG(((RogueClassTable_String_String_*)ROGUE_CREATE_REF(RogueClassStringTable_String_*,ROGUE_CREATE_OBJECT(StringTable_String_)))) )))));
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1206_3,(module_ids_1));
      RogueInt32 _auto_1207_4 = (0);
      for (;_auto_1207_4 < _auto_1206_3->count;++_auto_1207_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,m_id_5,(((RogueString*)(_auto_1206_3->data->as_objects[_auto_1207_4]))));
        RogueTable_String_String___set__String_String( ROGUE_ARG(((RogueClassTable_String_String_*)THIS->module_id_map)), m_id_5, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], module_name_0 )))) )))), Rogue_literal_strings[195] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_id_5 )))) )))) )))) );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1208_6,(((RogueTable_String_String_List___keys( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->ids_by_module) )))));
    RogueInt32 _auto_1209_7 = (0);
    for (;_auto_1209_7 < _auto_1208_6->count;++_auto_1209_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,submodule_name_8,(((RogueString*)(_auto_1208_6->data->as_objects[_auto_1209_7]))));
      if ((((RogueString__begins_with__String( submodule_name_8, module_name_0 ))) && ((RogueString__operatorLTGT__String( submodule_name_8, module_name_0 ))) != 0))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,relative_path_2,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__rightmost__Int32( submodule_name_8, ROGUE_ARG((-((module_name_0->character_count + 2)))) )))), Rogue_literal_strings[195] )))));
        if (!(!!(THIS->module_id_map)))
        {
          THIS->module_id_map = ((RogueClassStringTable_String_*)(((RogueTable_String_String___init( ROGUE_ARG(((RogueClassTable_String_String_*)ROGUE_CREATE_REF(RogueClassStringTable_String_*,ROGUE_CREATE_OBJECT(StringTable_String_)))) )))));
        }
        {
          ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1210_9,(((RogueTable_String_String_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->ids_by_module), submodule_name_8 )))));
          RogueInt32 _auto_1211_10 = (0);
          for (;_auto_1211_10 < _auto_1210_9->count;++_auto_1211_10)
          {
            ROGUE_DEF_LOCAL_REF(RogueString*,m_id_11,(((RogueString*)(_auto_1210_9->data->as_objects[_auto_1211_10]))));
            RogueTable_String_String___set__String_String( ROGUE_ARG(((RogueClassTable_String_String_*)THIS->module_id_map)), ROGUE_ARG(((RogueString__operatorPLUS__String( relative_path_2, m_id_11 )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], submodule_name_8 )))) )))), Rogue_literal_strings[195] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_id_11 )))) )))) )))) );
          }
        }
      }
    }
  }
  if (((RogueString__contains__String( module_name_0, Rogue_literal_strings[195] ))))
  {
    RogueParser__add_used_module__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__before_last__String( module_name_0, Rogue_literal_strings[195] )))) );
  }
}

RogueLogical RogueParser__consume__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  if (!(((RogueTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), type_0 )))))
  {
    return (RogueLogical)(false);
  }
  RogueTokenReader__read( ROGUE_ARG(THIS->reader) );
  return (RogueLogical)(true);
}

RogueLogical RogueParser__consume__String( RogueClassParser* THIS, RogueString* identifier_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
  if (((void*)t_1->_type) != ((void*)RogueTokenType_identifier))
  {
    return (RogueLogical)(false);
  }
  if (((RogueString__operatorLTGT__String( ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_1 ))), identifier_0 ))) != 0)
  {
    return (RogueLogical)(false);
  }
  RogueParser__read( ROGUE_ARG(THIS) );
  return (RogueLogical)(true);
}

RogueLogical RogueParser__consume_end_commands( RogueClassParser* THIS )
{
  RogueLogical found_0 = (false);
  while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
  {
    found_0 = ((RogueLogical)true);
  }
  return (RogueLogical)(found_0);
}

RogueLogical RogueParser__consume_eols( RogueClassParser* THIS )
{
  RogueLogical found_any_0 = (false);
  while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
  {
    found_any_0 = ((RogueLogical)true);
  }
  return (RogueLogical)(found_any_0);
}

RogueClassRogueError* RogueParser__error__String( RogueClassParser* THIS, RogueString* message_0 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))), message_0 ))));
}

void RogueParser__insert_module_prefixes( RogueClassParser* THIS )
{
  if (THIS->inserted_module_prefixes)
  {
    return;
  }
  THIS->inserted_module_prefixes = true;
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    if (((void*)t_0->_type) == ((void*)RogueTokenType_identifier))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,name_1,((Rogue_call_ROGUEM101( 11, t_0 ))));
      if (RogueString_character_at(name_1,0) == (RogueCharacter)':')
      {
        THIS->reader->tokens->data->as_objects[(THIS->reader->position - 1)] = (Rogue_call_ROGUEM111( 25, ROGUE_ARG(t_0->_type), t_0, ROGUE_ARG(((RogueString__from__Int32( name_1, 2 )))) ));
      }
      else if (!!(THIS->module_id_map))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,mapping_2,((Rogue_call_ROGUEM57( 30, ROGUE_ARG(((RogueClassTable_String_String_*)THIS->module_id_map)), name_1 ))));
        if (!!(mapping_2))
        {
          THIS->reader->tokens->data->as_objects[(THIS->reader->position - 1)] = (Rogue_call_ROGUEM111( 25, ROGUE_ARG(t_0->_type), t_0, mapping_2 ));
        }
      }
    }
    else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_module))
    {
      RogueParser__add_used_module__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) );
    }
    else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_using))
    {
      RogueParser__add_used_module__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) );
    }
  }
  THIS->reader->position = 0;
}

void RogueParser__must_consume__TokenType_String( RogueClassParser* THIS, RogueClassTokenType* type_0, RogueString* _auto_5760 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,error_message_1,_auto_5760);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), type_0 ))))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (!(!!(error_message_1)))
  {
    error_message_1 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTokenType__quoted_name( type_0 )))) )))) )))), Rogue_literal_strings[302] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM101( 23, t_2 ))) )))) )))), Rogue_literal_strings[154] )))) ))));
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_2, error_message_1 ))));
}

void RogueParser__must_consume_eols( RogueClassParser* THIS )
{
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol), ROGUE_ARG(((RogueString*)(NULL))) );
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
}

RogueClassToken* RogueParser__must_read__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
  if (((void*)t_1->_type) != ((void*)type_0))
  {
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), type_0, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  return (RogueClassToken*)(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) ))));
}

RogueLogical RogueParser__next_is__TokenType( RogueClassParser* THIS, RogueClassTokenType* type_0 )
{
  return (RogueLogical)(((RogueTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), type_0 ))));
}

RogueLogical RogueParser__next_is_end_command( RogueClassParser* THIS )
{
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,type_0,(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type));
  return (RogueLogical)(type_0->is_end_command);
}

RogueLogical RogueParser__next_is_identifier__String( RogueClassParser* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (!((Rogue_call_ROGUEM3( 6, ROGUE_ARG(((RogueObject*)t_1->_type)), ROGUE_ARG(((RogueObject*)(RogueTokenType_identifier))) ))))
  {
    return (RogueLogical)(false);
  }
  if (!(!!(name_0)))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_1 ))), name_0 ))));
}

RogueLogical RogueParser__next_is_statement( RogueClassParser* THIS )
{
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(((RogueTokenReader__next_is_statement_token( ROGUE_ARG(THIS->reader) ))));
}

void RogueParser__parse_elements( RogueClassParser* THIS )
{
  RogueParser__insert_module_prefixes( ROGUE_ARG(THIS) );
  while (((RogueParser__parse_element( ROGUE_ARG(THIS) ))))
  {
  }
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[373] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM101( 23, t_0 ))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
  }
}

RogueLogical RogueParser__parse_element( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  if (((RogueParser__parse_native_element( ROGUE_ARG(THIS) ))))
  {
    return (RogueLogical)(true);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_class))
  {
    RogueParser__parse_class_template( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_routine))
  {
    RogueParser__parse_routine( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_keyword_augment))
  {
    RogueParser__parse_augment( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_module))
  {
    RogueParser__read( ROGUE_ARG(THIS) );
    RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((void*)t_0->_type) == ((void*)RogueTokenType_directive_using))
  {
    RogueParser__read( ROGUE_ARG(THIS) );
    RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  else if (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    THIS->_this_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[295] )));
    THIS->this_method = ((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )));
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    return (RogueLogical)(true);
  }
  return (RogueLogical)(false);
}

void RogueParser__parse_class_template( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueTemplate__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTemplate*,ROGUE_CREATE_OBJECT(Template))), t_0, name_1, 0 )))));
  RogueParser__parse_template_tokens__Template_TokenType( ROGUE_ARG(THIS), template_2, ROGUE_ARG(RogueTokenType_keyword_endClass) );
}

void RogueParser__parse_routine( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  if ((((RogueString__operatorEQUALSEQUALS__String( name_1, Rogue_literal_strings[343] ))) && ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus) )))))
  {
    name_1 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[369], ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueTemplate__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTemplate*,ROGUE_CREATE_OBJECT(Template))), t_0, name_1, 262144 )))));
  RogueParser__parse_template_tokens__Template_TokenType( ROGUE_ARG(THIS), template_2, ROGUE_ARG(RogueTokenType_keyword_endRoutine) );
}

void RogueParser__parse_template_tokens__Template_TokenType( RogueClassParser* THIS, RogueClassTemplate* template_0, RogueClassTokenType* end_type_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,first_t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  RogueLogical is_routine_3 = (((void*)end_type_1) == ((void*)RogueTokenType_keyword_endRoutine));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    RogueLogical first_4 = (true);
    while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      first_4 = ((RogueLogical)false);
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_5,(((RogueParser__must_read__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_6,(((RogueTemplate__add_type_parameter__Token_String( template_0, t_5, ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_5 ))) )))));
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  RogueInt32 starting_pos_7 = (THIS->reader->position);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      RogueLogical first_8 = (true);
      while ((first_8 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_8 = ((RogueLogical)false);
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) );
        RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false );
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          RogueParser__parse_expression( ROGUE_ARG(THIS) );
        }
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))))
          {
            RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
          }
        }
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
    {
      RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false );
    }
  }
  RogueInt32 final_pos_9 = (THIS->reader->position);
  if (is_routine_3)
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      template_0->_routine_return_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
    }
    RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(template_0->attributes) );
    THIS->reader->position = starting_pos_7;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueClassToken*)(((RogueEOLToken__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), first_t_2 )))))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_GLOBAL), first_t_2 )))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_METHODS), first_t_2 )))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueClassToken*)(((RogueEOLToken__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), first_t_2 )))))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_method), first_t_2 )))) );
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG((Rogue_call_ROGUEM111( 25, ROGUE_ARG(RogueTokenType_identifier), first_t_2, Rogue_literal_strings[310] ))) );
  }
  else
  {
    THIS->reader->position = starting_pos_7;
    while (THIS->reader->position < final_pos_9)
    {
      RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) );
    }
    RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(template_0->attributes) );
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,semi_t_10,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
    {
      if (template_0->tokens->count == 0)
      {
        RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eol), semi_t_10 )))) );
      }
      RogueProgram__add_template__Template( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), template_0 );
      return;
    }
  }
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_11,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    if (((void*)t_11->_type) == ((void*)end_type_1))
    {
      RogueProgram__add_template__Template( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), template_0 );
      return;
    }
    RogueToken_List__add__Token( ROGUE_ARG(template_0->tokens), t_11 );
  }
  ROGUE_THROW(RogueClassError,((RogueTokenReader__error__String( ROGUE_ARG(THIS->reader), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTokenType__quoted_name( end_type_1 )))) )))) )))), Rogue_literal_strings[368] )))) )))) ))));
}

void RogueParser__parse_augment( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false )))));
  if (((RogueString__contains__Character( name_1, (RogueCharacter)'$' ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,base_name_2,(((RogueString__before_first__Character( name_1, (RogueCharacter)'<' )))));
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[370] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_2 )))) )))), Rogue_literal_strings[371] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_2 )))) )))), Rogue_literal_strings[372] )))) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_3,(((RogueAugment__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAugment*,ROGUE_CREATE_OBJECT(Augment))), t_0, name_1 )))));
  ROGUE_DEF_LOCAL_REF(RogueAugment_List*,augments_4,(((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), name_1 )))));
  if (!(!!(augments_4)))
  {
    augments_4 = ((RogueAugment_List*)((RogueAugment_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueAugment_List*,ROGUE_CREATE_OBJECT(Augment_List))) ))));
    RogueTable_String_Augment_List___set__String_Augment_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), name_1, augments_4 );
  }
  RogueAugment_List__add__Augment( augments_4, aug_3 );
  ROGUE_DEF_LOCAL_REF(RogueString*,base_name_5,(((RogueString__after_any__String( name_1, Rogue_literal_strings[195] )))));
  if (base_name_5->character_count < name_1->character_count)
  {
    augments_4 = ((RogueAugment_List*)((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), base_name_5 ))));
    if (!(!!(augments_4)))
    {
      augments_4 = ((RogueAugment_List*)((RogueAugment_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueAugment_List*,ROGUE_CREATE_OBJECT(Augment_List))) ))));
      RogueTable_String_Augment_List___set__String_Augment_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), base_name_5, augments_4 );
    }
    RogueAugment_List__add__Augment( augments_4, aug_3 );
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
  {
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    RogueType_List__add__Type( ROGUE_ARG(aug_3->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueType_List__add__Type( ROGUE_ARG(aug_3->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
  }
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endAugment) ))))))
  {
    RogueToken_List__add__Token( ROGUE_ARG(aug_3->tokens), ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endAugment), ROGUE_ARG(((RogueString*)(NULL))) );
}

void RogueParser__parse_attributes__Attributes( RogueClassParser* THIS, RogueClassAttributes* attributes_0 )
{
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) )))))
  {
    return;
  }
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
    {
      RogueAttributes__add__Int32( attributes_0, 32 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[350] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 131072 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[351] ))))
    {
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      RogueAttributes__add__Int32( attributes_0, 1 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[355] ))))
    {
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      RogueAttributes__add__Int32( attributes_0, 3 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[356] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 524288 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[357] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 256 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[358] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 64 );
      RogueAttributes__add__Int32( attributes_0, 2097152 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[354] ))))
    {
      RogueParser__ensure_unspecialized_element_type__Token_Attributes( ROGUE_ARG(THIS), t_1, attributes_0 );
      RogueAttributes__add__Int32( attributes_0, 2 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[359] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 2097152 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[218] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 8192 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[360] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 1024 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[361] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 1048576 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[362] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 16384 );
    }
    else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[363] ))))
    {
      RogueAttributes__add__Int32( attributes_0, 16 );
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) ))))
    {
      RogueAttributes__add__String( attributes_0, ROGUE_ARG((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))) );
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[364], ROGUE_ARG(((RogueObject*)(((RogueParser__peek( ROGUE_ARG(THIS) )))))) )))) ))));
    }
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
}

void RogueParser__ensure_unspecialized_element_type__Token_Attributes( RogueClassParser* THIS, RogueClassToken* t_0, RogueClassAttributes* attributes_1 )
{
  if ((attributes_1->flags & 7) != 0)
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[352] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_0 ))) )))) )))), Rogue_literal_strings[353] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueAttributes__element_type_name( attributes_1 )))) )))) )))), Rogue_literal_strings[225] )))) )))) ))));
  }
}

void RogueParser__parse_type_def__Type( RogueClassParser* THIS, RogueClassType* _auto_314_0 )
{
  THIS->_this_type = _auto_314_0;
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  RogueLogical compound_has_create_2 = (false);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,0);
      if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
      {
        compound_has_create_2 = ((RogueLogical)true);
        m_3 = ((RogueClassMethod*)((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[475] ))));
        RogueAttributes__add__Int32( ROGUE_ARG(m_3->attributes), 4096 );
      }
      else
      {
        m_3 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[417] ))));
      }
      m_3->_return_type = THIS->_this_type;
      RogueLogical first_4 = (true);
      while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_4 = ((RogueLogical)false);
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        t_1 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
        RogueLogical is_flag_5 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))));
        ROGUE_DEF_LOCAL_REF(RogueString*,p_name_6,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_7,(((RogueMethod__add_parameter__Token_String_Type( m_3, t_1, p_name_6, ROGUE_ARG(((RogueClassType*)(NULL))) )))));
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          param_7->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
        }
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        ROGUE_DEF_LOCAL_REF(RogueClassType*,p_type_8,0);
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          p_type_8 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
          if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
          {
            param_7->_type = p_type_8;
          }
          RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_1, p_name_6, p_type_8, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        }
        else if (is_flag_5)
        {
          p_type_8 = ((RogueClassType*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
          if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
          {
            param_7->_type = p_type_8;
          }
          RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_1, p_name_6, p_type_8, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        }
        if ((is_flag_5 && !(!!(param_7->initial_value))))
        {
          if (((void*)p_type_8) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
          {
            param_7->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_1, false )))));
          }
          else
          {
            param_7->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, 0 )))));
          }
        }
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  if (((RogueType__is_compound( ROGUE_ARG(THIS->_this_type) ))))
  {
    RogueType_List__add__Type( ROGUE_ARG(THIS->_this_type->base_types), ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_1, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[527] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_this_type->name) )))) )))), Rogue_literal_strings[75] )))) )))) )))) );
    if (!(compound_has_create_2))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_9,(((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS->_this_type), t_1, Rogue_literal_strings[475] )))));
      RogueAttributes__add__Int32( ROGUE_ARG(m_9->attributes), 4096 );
      m_9->_return_type = THIS->_this_type;
    }
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    RogueLogical first_10 = (true);
    while ((first_10 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      first_10 = ((RogueLogical)false);
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueType_List__add__Type( ROGUE_ARG(THIS->_this_type->base_types), ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
  }
  while (((RogueParser__parse_section( ROGUE_ARG(THIS) ))))
  {
  }
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[373] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM101( 23, ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
  }
}

RogueLogical RogueParser__parse_section( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_DEPENDENCIES) ))))
  {
    while (((RogueParser__parse_dependency( ROGUE_ARG(THIS) ))))
    {
    }
    return (RogueLogical)(true);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_begin_augment_tokens) ))))
  {
    THIS->parsing_augment = true;
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_ENUMERATE) ))))
  {
    while (((RogueParser__parse_definitions__Logical( ROGUE_ARG(THIS), true ))))
    {
    }
    return (RogueLogical)(true);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_DEFINITIONS) ))))
  {
    while (((RogueParser__parse_definitions__Logical( ROGUE_ARG(THIS), false ))))
    {
    }
    return (RogueLogical)(true);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_GLOBAL) ))))
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_PROPERTIES) ))))
    {
      while (((RogueParser__parse_properties__Logical( ROGUE_ARG(THIS), true ))))
      {
      }
      return (RogueLogical)(true);
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_METHODS) ))))
    {
      while (((RogueParser__parse_method__Logical_Logical( ROGUE_ARG(THIS), true, false ))))
      {
      }
      return (RogueLogical)(true);
    }
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_PROPERTIES) ))))
  {
    while (((RogueParser__parse_properties__Logical( ROGUE_ARG(THIS), false ))))
    {
    }
    return (RogueLogical)(true);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_METHODS) ))))
  {
    while (((RogueParser__parse_method__Logical_Logical( ROGUE_ARG(THIS), false, false ))))
    {
    }
    return (RogueLogical)(true);
  }
  return (RogueLogical)(false);
}

RogueLogical RogueParser__parse_definitions__Logical( RogueClassParser* THIS, RogueLogical enumerate_0 )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    return (RogueLogical)(false);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,0);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
  }
  else if (!(((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
  {
    value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
  }
  if ((!(enumerate_0) && !(!!(value_3))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[528] ))));
  }
  if (!!(value_3))
  {
    if (RogueObject_instance_of(value_3,RogueTypeCmdLiteralInt32))
    {
      THIS->_this_type->prev_enum_cmd = ((RogueClassCmd*)(NULL));
      THIS->_this_type->next_enum_offset = (((RogueClassCmdLiteralInt32*)(RogueObject_as(value_3,RogueTypeCmdLiteralInt32)))->value + 1);
    }
    else
    {
      THIS->_this_type->prev_enum_cmd = value_3;
      THIS->_this_type->next_enum_offset = 1;
    }
  }
  else
  {
    if (!!(THIS->_this_type->prev_enum_cmd))
    {
      value_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), t_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->_this_type->prev_enum_cmd), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, ROGUE_ARG(THIS->_this_type->next_enum_offset) )))))) ))))))));
    }
    else
    {
      value_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_1, ROGUE_ARG(THIS->_this_type->next_enum_offset) ))))));
    }
    ++THIS->_this_type->next_enum_offset;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_4,(((RogueDefinition__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassDefinition*,ROGUE_CREATE_OBJECT(Definition))), t_1, name_2, value_3, enumerate_0 )))));
  RogueTable_String_Definition___set__String_Definition( ROGUE_ARG(THIS->_this_type->definition_lookup), name_2, def_4 );
  RogueDefinition_List__add__Definition( ROGUE_ARG(THIS->_this_type->definition_list), def_4 );
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_properties__Logical( RogueClassParser* THIS, RogueLogical as_global_0 )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
  {
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[344] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,native_t_1,(((RogueParser__read( ROGUE_ARG(THIS) )))));
    RogueProperty__mark_native( ROGUE_ARG(((RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), native_t_1, ROGUE_ARG((Rogue_call_ROGUEM101( 11, native_t_1 ))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))) );
    RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
    return (RogueLogical)(true);
  }
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    return (RogueLogical)(false);
  }
  RogueProperty_List__clear( ROGUE_ARG(THIS->property_list) );
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_2 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueString*,name_4,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,0);
    if (as_global_0)
    {
      p_5 = ((RogueClassProperty*)((RogueType__add_global__Token_String( ROGUE_ARG(THIS->_this_type), t_3, name_4 ))));
    }
    else
    {
      p_5 = ((RogueClassProperty*)((RogueType__add_property__Token_String_Type_Cmd( ROGUE_ARG(THIS->_this_type), t_3, name_4, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) ))));
    }
    RogueProperty_List__add__Property( ROGUE_ARG(THIS->property_list), p_5 );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
    {
      p_5->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
  }
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,p_type_6,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1221_8,(THIS->property_list));
      RogueInt32 _auto_1222_9 = (0);
      for (;_auto_1222_9 < _auto_1221_8->count;++_auto_1222_9)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_1221_8->data->as_objects[_auto_1222_9]))));
        p_10->_type = p_type_6;
      }
    }
  }
  else
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1223_11,(THIS->property_list));
      RogueInt32 _auto_1224_12 = (0);
      for (;_auto_1224_12 < _auto_1223_11->count;++_auto_1224_12)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueClassProperty*)(_auto_1223_11->data->as_objects[_auto_1224_12]))));
        ROGUE_DEF_LOCAL_REF(RogueString*,name_7,(Rogue_literal_strings[529]));
        if (as_global_0)
        {
          name_7 = ((RogueString*)Rogue_literal_strings[530]);
        }
        if (!!(p_13->initial_value))
        {
          p_13->_type = (Rogue_call_ROGUEM151( 34, ROGUE_ARG(p_13->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
          if (((void*)p_13->_type) == ((void*)NULL))
          {
            RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG((Rogue_call_ROGUEM142( 16, ROGUE_ARG(p_13->initial_value) ))) );
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(p_13->initial_value->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[531] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_7 )))) )))), Rogue_literal_strings[532] )))) )))) ))));
          }
        }
        else
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(p_13->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[533] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_7 )))) )))), Rogue_literal_strings[534] )))) )))) ))));
        }
      }
    }
  }
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_method__Logical_Logical( RogueClassParser* THIS, RogueLogical as_global_0, RogueLogical skip_add_to_type_1 )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_method) )))))
  {
    return (RogueLogical)(false);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_4,0);
  {
    if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[452] ))))
    {
      name_3 = ((RogueString*)((RogueString__operatorPLUS__String( name_3, ROGUE_ARG((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))) ))));
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[343] ))))
    {
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus) ))))
      {
        name_3 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[369], ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) ))));
      }
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( name_3, Rogue_literal_strings[453] ))))
    {
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
      {
        return_type_4 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
        name_3 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[315], ROGUE_ARG(return_type_4->name) ))));
      }
    }
    else
    {
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassValueTable*,specialization_info_5,0);
  ROGUE_DEF_LOCAL_REF(RogueString*,unspecialized_name_6,(name_3));
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    if (((void*)((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))->_type) == ((void*)RogueTokenType_placeholder_id))
    {
      RogueParser__parse_method_template__Token_String_Logical( ROGUE_ARG(THIS), t_2, name_3, as_global_0 );
      return (RogueLogical)(true);
    }
    else
    {
      specialization_info_5 = ((RogueClassValueTable*)((RogueParser__parse_specialization_info( ROGUE_ARG(THIS) ))));
      name_3 = ((RogueString*)((RogueString__operatorPLUS__String( name_3, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ROGUE_ARG(((RogueObject*)((RogueValueTable__get__String( specialization_info_5, Rogue_literal_strings[458] ))))) ))) ))));
    }
  }
  THIS->this_method = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_2, ROGUE_ARG(THIS->_this_type), name_3 )));
  THIS->this_method->_return_type = return_type_4;
  if ((RogueOptionalValue__operator__Value( ROGUE_ARG(((RogueClassValue*)(specialization_info_5))) )))
  {
    THIS->this_method->specializer_count = (Rogue_call_ROGUEM34( 96, ROGUE_ARG(((RogueValueTable__get__String( specialization_info_5, Rogue_literal_strings[459] )))) ));
    THIS->this_method->unspecialized_name = unspecialized_name_6;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      RogueLogical first_7 = (true);
      while ((first_7 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_7 = ((RogueLogical)false);
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueLogical is_flag_8 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))));
        t_2 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_9,(((RogueMethod__add_parameter__Token_String_Type( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), true )))), ROGUE_ARG(((RogueClassType*)(NULL))) )))));
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          param_9->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
        }
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          param_9->_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
        }
        if (is_flag_8)
        {
          if (!(!!(param_9->_type)))
          {
            param_9->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
          }
          if (!(!!(param_9->initial_value)))
          {
            param_9->initial_value = ((RogueType__create_default_value__Token( ROGUE_ARG(param_9->_type), ROGUE_ARG(param_9->t) )));
          }
        }
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  if (!(!!(return_type_4)))
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_this) ))))
      {
        THIS->this_method->_return_type = THIS->_this_type;
        RogueAttributes__add__Int32( ROGUE_ARG(THIS->this_method->attributes), 8388608 );
      }
      else
      {
        THIS->this_method->_return_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
      }
    }
  }
  RogueParser__parse_attributes__Attributes( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->attributes) );
  if (THIS->parsing_augment)
  {
    RogueAttributes__add__Int32( ROGUE_ARG(THIS->this_method->attributes), 65536 );
  }
  if (!(skip_add_to_type_1))
  {
    if (as_global_0)
    {
      RogueType__add_global_method__Method( ROGUE_ARG(THIS->_this_type), ROGUE_ARG(THIS->this_method) );
    }
    else
    {
      RogueType__add_method__Method( ROGUE_ARG(THIS->_this_type), ROGUE_ARG(THIS->this_method) );
    }
  }
  RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) );
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueMethod__is_macro( ROGUE_ARG(THIS->this_method) ))))
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
    {
      RogueAttributes__add__Int32( ROGUE_ARG(THIS->this_method->attributes), 32 );
    }
    if (((RogueMethod__is_native( ROGUE_ARG(THIS->this_method) ))))
    {
      RogueLogical has_parens_10 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[344] ))));
      }
      THIS->this_method->native_code = (Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ));
      if (has_parens_10)
      {
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
      {
        RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) );
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_11,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[460] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(type_11))) )))) )))), Rogue_literal_strings[235] )))) )))) ))));
      }
    }
    else
    {
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    }
  }
  else if (THIS->parsing_augment)
  {
    RogueParser__parse_augment_statements( ROGUE_ARG(THIS) );
  }
  else
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[298], false )))))) );
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(THIS->this_method->statements) );
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[300], false )))))) );
  }
  return (RogueLogical)(true);
}

void RogueParser__parse_method_template__Token_String_Logical( RogueClassParser* THIS, RogueClassToken* t_0, RogueString* name_1, RogueLogical is_global_2 )
{
  RogueParser__read( ROGUE_ARG(THIS) );
  ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_3,(((RogueMethodTemplate__init__Token_Type_String_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplate*,ROGUE_CREATE_OBJECT(MethodTemplate))), t_0, ROGUE_ARG(THIS->_this_type), name_1, is_global_2 )))));
  RogueLogical first_4 = (true);
  while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_4 = ((RogueLogical)false);
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_5,(((RogueParser__must_read__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id) )))));
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,param_6,(((RogueTypeParameter_List__add__TypeParameter( ROGUE_ARG(m_3->type_parameters), ROGUE_ARG(((RogueTypeParameter__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeParameter*,ROGUE_CREATE_OBJECT(TypeParameter))), t2_5, ROGUE_ARG((Rogue_call_ROGUEM101( 11, t2_5 ))) )))) )))));
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,tokens_7,(m_3->template_tokens));
  while ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__peek( ROGUE_ARG(THIS) )))->_type->is_non_method)))
  {
    RogueToken_List__add__Token( tokens_7, ROGUE_ARG(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) )))) );
  }
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,temp_tokens_8,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(tokens_7->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1225_9,(tokens_7));
    RogueInt32 _auto_1226_10 = (0);
    for (;_auto_1226_10 < _auto_1225_9->count;++_auto_1226_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_11,(((RogueClassToken*)(_auto_1225_9->data->as_objects[_auto_1226_10]))));
      if (((void*)t2_11->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        RogueToken_List__add__Token( temp_tokens_8, ROGUE_ARG((Rogue_call_ROGUEM111( 25, ROGUE_ARG(RogueTokenType_identifier), t2_11, Rogue_literal_strings[10] ))) );
      }
      else
      {
        RogueToken_List__add__Token( temp_tokens_8, t2_11 );
      }
    }
  }
  m_3->parameter_count = ((RogueParser__parse_method_template_parameter_count( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), temp_tokens_8, false )))) )));
  if (!(!!(THIS->_this_type->method_templates)))
  {
    THIS->_this_type->method_templates = ((RogueMethodTemplates__init__Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplates*,ROGUE_CREATE_OBJECT(MethodTemplates))), ROGUE_ARG(THIS->_this_type) )));
  }
  RogueMethodTemplates__add__MethodTemplate( ROGUE_ARG(THIS->_this_type->method_templates), m_3 );
}

RogueInt32 RogueParser__parse_method_template_parameter_count( RogueClassParser* THIS )
{
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) )))))
  {
    return (RogueInt32)(0);
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) ))))
  {
    return (RogueInt32)(0);
  }
  RogueInt32 parameter_count_0 = (0);
  RogueLogical first_1 = (true);
  while ((first_1 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_1 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ++parameter_count_0;
    RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) );
    RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), true );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
    {
      RogueParser__parse_expression( ROGUE_ARG(THIS) );
    }
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      Rogue_Parser__parse_type( ROGUE_ARG(THIS) );
    }
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueInt32)(parameter_count_0);
}

void RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0, RogueClassTokenType* end_type_1 )
{
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), end_type_1, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
}

void RogueParser__parse_multi_line_statements__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_1,(THIS->cur_statement_list));
  THIS->cur_statement_list = statements_0;
  RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), statements_0, true );
    while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
    }
    RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  }
  THIS->cur_statement_list = prev_statement_list_1;
}

void RogueParser__parse_augment_statements( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_0,(THIS->cur_statement_list));
  RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[298], true );
  RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[300], true );
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,cur_label_1,(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[298], true )))));
  THIS->cur_statement_list = cur_label_1->statements;
  RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      cur_label_1 = ((RogueClassCmdLabel*)((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), true ))));
      THIS->cur_statement_list = cur_label_1->statements;
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
      RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
      continue;
    }
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), ROGUE_ARG(cur_label_1->statements), true );
    while ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
    }
    RogueParser__consume_end_commands( ROGUE_ARG(THIS) );
  }
  THIS->cur_statement_list = prev_statement_list_0;
}

void RogueParser__parse_single_line_statements__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,prev_statement_list_1,(THIS->cur_statement_list));
  THIS->cur_statement_list = statements_0;
  while (((RogueParser__next_is_statement( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), statements_0, false );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) )))))
    {
      THIS->cur_statement_list = prev_statement_list_1;
      return;
    }
    while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_semicolon) ))))
    {
    }
    if (((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))
    {
      goto _auto_1228;
    }
  }
  _auto_1228:;
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) )))))
  {
    if (!(((RogueToken__is_structure( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) )))))
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  THIS->cur_statement_list = prev_statement_list_1;
}

void RogueParser__parse_statement__CmdStatementList_Logical( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0, RogueLogical allow_control_structures_1 )
{
  if (((RogueParser__parse_unit_test( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNativeHeader__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeHeader*,ROGUE_CREATE_OBJECT(CmdNativeHeader))), t_2, ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_2 ))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNativeCode__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeCode*,ROGUE_CREATE_OBJECT(CmdNativeCode))), t_2, ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_2 ))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_includeNativeCode) ))))
  {
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[283] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,filepath_3,((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdIncludeNative__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIncludeNative*,ROGUE_CREATE_OBJECT(CmdIncludeNative))), t_2, filepath_3, Rogue_literal_strings[294] )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_includeNativeHeader) ))))
  {
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[283] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,filepath_4,((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdIncludeNative__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIncludeNative*,ROGUE_CREATE_OBJECT(CmdIncludeNative))), t_2, filepath_4, Rogue_literal_strings[293] )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_essential) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_2, ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_2 ))) )))))) );
    return;
  }
  if (allow_control_structures_1)
  {
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_if) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_if( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_which) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_which( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_forEach) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueParser__parse_for_each( ROGUE_ARG(THIS) )))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_block) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_block( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_contingent) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_contingent( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_while) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_while( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_loop) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_loop( ROGUE_ARG(THIS) )))))) );
      return;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_try) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueParser__parse_try_statement( ROGUE_ARG(THIS) )))))) );
      return;
    }
  }
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_local) ))))
  {
    RogueParser__parse_local_or_global__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
    return;
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_global) ))))
  {
    RogueParser__parse_local_or_global__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_return) ))))
  {
    if (((!!(THIS->this_method) && ((RogueMethod__is_macro( ROGUE_ARG(THIS->this_method) )))) && !!(THIS->this_method->_return_type)))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_2, Rogue_literal_strings[334] ))));
    }
    if (((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))) );
    }
    else
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    }
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_await) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statement_list_5,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), statement_list_5, ROGUE_ARG(((RogueClassLocal*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_yield) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), t_2 )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_throw) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_noAction) ))))
  {
    return;
  }
  else if ((((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_trace) ))) || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_trace_args_only) )))))
  {
    RogueLogical exclude_position_6 = (((void*)t_2->_type) == ((void*)RogueTokenType_keyword_trace_args_only));
    ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_7,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
    RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_7, (RogueCharacter)'[', true )))), ROGUE_ARG(THIS->_this_type->name) );
    if (!!(THIS->this_method))
    {
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_7, Rogue_literal_strings[154] )))), ROGUE_ARG(THIS->this_method->name) )))), Rogue_literal_strings[335] );
    }
    RogueStringBuilder__print__String( buffer_7, ROGUE_ARG(((RogueFile__filename( ROGUE_ARG(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), ROGUE_ARG(t_2->filepath) )))) )))) );
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_7, (RogueCharacter)':', true )))), ROGUE_ARG(t_2->line) )))), (RogueCharacter)']', true );
    RogueInt32 data_pos_8 = ((buffer_7->count + 2));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_9,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    RogueLogical needs_space_10 = (false);
    RogueLogical first_11 = (true);
    while (((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))) && (first_11 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))))
    {
      if (first_11)
      {
        if (exclude_position_6)
        {
          RogueStringBuilder__clear( buffer_7 );
        }
        else
        {
          RogueStringBuilder__print__String( buffer_7, Rogue_literal_strings[336] );
        }
      }
      first_11 = ((RogueLogical)false);
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_12,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_13,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      if (RogueObject_instance_of(expr_13,RogueTypeCmdLiteralString))
      {
        RogueStringBuilder__print__String( buffer_7, ROGUE_ARG(((RogueClassCmdLiteralString*)(RogueObject_as(expr_13,RogueTypeCmdLiteralString)))->value) );
        needs_space_10 = ((RogueLogical)false);
      }
      else
      {
        if (needs_space_10)
        {
          RogueStringBuilder__print__Character_Logical( buffer_7, (RogueCharacter)' ', true );
        }
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_14,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
        ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_15,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_12->filepath) )))));
        if ((((!!(parse_reader_15) && !!(start_t_12->line)) && !!(start_t_12->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_12->filepath), ROGUE_ARG(end_t_14->filepath) )))))
        {
          RogueParseReader__seek_location__Int32_Int32( parse_reader_15, ROGUE_ARG(start_t_12->line), ROGUE_ARG(start_t_12->column) );
          while ((((RogueParseReader__has_another( parse_reader_15 ))) && (parse_reader_15->line < end_t_14->line || (parse_reader_15->line == end_t_14->line && parse_reader_15->column < end_t_14->column))))
          {
            RogueCharacter ch_16 = (((RogueParseReader__read( parse_reader_15 ))));
            if (((RogueString__operatorEQUALSEQUALS__String( Rogue_literal_strings[219], ROGUE_ARG(((RogueCharacter__to_String( ch_16 )))) ))))
            {
              RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_9), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_2, Rogue_literal_strings[219], 0 )))))) );
            }
            RogueStringBuilder__print__Character_Logical( buffer_7, ch_16, true );
          }
          RogueStringBuilder__print__String( buffer_7, Rogue_literal_strings[337] );
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_9), expr_13 );
          needs_space_10 = ((RogueLogical)true);
        }
      }
    }
    if ((!(exclude_position_6) && !!(args_9->count)))
    {
      RogueStringBuilder__insert_spaces__Int32_Int32( buffer_7, data_pos_8, ROGUE_ARG((((data_pos_8 + 3) & -4) - data_pos_8)) );
    }
    if ((((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))) && !(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) ))))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[338] ))));
    }
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdTrace__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTrace*,ROGUE_CREATE_OBJECT(CmdTrace))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), t_2, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_7 )))), args_9 )))))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_assert) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueLogical has_parens_17 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_18,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_19,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_20,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_20 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_21,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (has_parens_17)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    if (!(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode))
    {
      return;
    }
    if (!(!!(message_20)))
    {
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_22,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_23,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_18->filepath) )))));
      if ((((!!(parse_reader_23) && !!(start_t_18->line)) && !!(start_t_18->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_18->filepath), ROGUE_ARG(end_t_21->filepath) )))))
      {
        RogueParseReader__seek_location__Int32_Int32( parse_reader_23, ROGUE_ARG(start_t_18->line), ROGUE_ARG(start_t_18->column) );
        while ((((RogueParseReader__has_another( parse_reader_23 ))) && (parse_reader_23->line < end_t_21->line || (parse_reader_23->line == end_t_21->line && parse_reader_23->column < end_t_21->column))))
        {
          RogueStringBuilder__print__Character_Logical( buffer_22, ROGUE_ARG(((RogueParseReader__read( parse_reader_23 )))), true );
        }
      }
      message_20 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_2, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_22 )))), 0 ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_24,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    temp_var_24->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_2, temp_var_24, true )))))) );
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), t_2, expr_19, message_20, temp_var_24 )))))) );
    return;
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_ensure) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueParser__parse_ensure( ROGUE_ARG(THIS) )))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
  {
    if (THIS->parsing_augment)
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_2, Rogue_literal_strings[339] ))));
    }
    else
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->this_method), t_2, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), false )))))) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeWhile) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 8, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeForEach) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 9, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeBlock) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 0, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeContingent) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 1, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeLoop) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 7, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeIf) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 2, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeTry) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 4, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_escapeWhich) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), t_2, 5, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nextIteration) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNextIteration__init__Token_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNextIteration*,ROGUE_CREATE_OBJECT(CmdNextIteration))), t_2, ROGUE_ARG(((RogueClassCmdControlStructure*)(NULL))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_necessary) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdNecessary__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNecessary*,ROGUE_CREATE_OBJECT(CmdNecessary))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmdContingent*)(NULL))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_sufficient) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdSufficient__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSufficient*,ROGUE_CREATE_OBJECT(CmdSufficient))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmdContingent*)(NULL))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus_plus) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), 1 )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus_minus) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), -1 )))))) );
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expression_25,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  t_2 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_2, expression_25, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    return;
  }
  if ((Rogue_call_ROGUEM112( 28, ROGUE_ARG(t_2->_type) )))
  {
    RogueParser__read( ROGUE_ARG(THIS) );
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), t_2, expression_25, ROGUE_ARG(t_2->_type), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus_plus) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, expression_25, 1 )))))) );
    return;
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus_minus) ))))
  {
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), t_2, expression_25, -1 )))))) );
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,t_type_26,(t_2->_type));
  if ((Rogue_call_ROGUEM112( 28, t_type_26 )))
  {
    RogueParser__read( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,target_27,(expression_25));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,new_value_28,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), t_2, target_27, t_type_26, new_value_28 )))))) );
    return;
  }
  if ((!(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) )))) && ((RogueParser__next_is_statement( ROGUE_ARG(THIS) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_29,(((RogueClassCmdAccess*)(RogueObject_as(expression_25,RogueTypeCmdAccess)))));
    if ((!!(access_29) && ((void*)access_29->args) == ((void*)NULL)))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_30,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      while ((!(((RogueParser__next_is_end_command( ROGUE_ARG(THIS) )))) && !(((RogueToken__is_structure( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))))))
      {
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_30), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      }
      access_29->args = args_30;
    }
  }
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), expression_25 );
}

RogueClassCmdWhich* RogueParser__parse_which( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhich*,cmd_which_1,(((RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhich*,ROGUE_CREATE_OBJECT(CmdWhich))), t_0, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueCmdWhichCase_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))) )))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
  while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_case) ))))
  {
    t_0 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,cmd_case_2,(((RogueCmdWhich__add_case__Token( cmd_which_1, t_0 )))));
    RogueLogical first_3 = (true);
    while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      first_3 = ((RogueLogical)false);
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_case_2->conditions)), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_case_2->statements) );
  }
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_others) ))))
  {
    t_0 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,cmd_case_4,(((RogueCmdWhich__add_case_others__Token( cmd_which_1, t_0 )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_case_4->statements) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endWhich), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdWhich*)(cmd_which_1);
}

RogueLogical RogueParser__parse_dependency( RogueClassParser* THIS )
{
  if (((RogueParser__parse_unit_test( ROGUE_ARG(THIS) ))))
  {
    return (RogueLogical)(true);
  }
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader) ))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode) )))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_includeNativeCode) )))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_includeNativeHeader) )))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_essential) )))))
  {
    if (!(!!(THIS->_this_type->dependencies)))
    {
      THIS->_this_type->dependencies = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
    }
    RogueParser__parse_statement__CmdStatementList_Logical( ROGUE_ARG(THIS), ROGUE_ARG(THIS->_this_type->dependencies), false );
    return (RogueLogical)(true);
  }
  else
  {
    return (RogueLogical)(false);
  }
}

RogueLogical RogueParser__parse_unit_test( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_unitTest) )))))
  {
    return (RogueLogical)(false);
  }
  RogueLogical is_multi_line_1 = (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,original_type_2,(THIS->_this_type));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,original_method_3,(THIS->this_method));
  THIS->_this_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[295] )));
  THIS->this_method = ((RogueProgram__get_run_tests_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_4,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  if (is_multi_line_1)
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_4->statements) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endUnitTest), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_4->statements) );
  }
  if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->run_tests)
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->this_method->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_block_4))) );
  }
  THIS->_this_type = original_type_2;
  THIS->this_method = original_method_3;
  return (RogueLogical)(true);
}

RogueLogical RogueParser__parse_native_element( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,code_1,((Rogue_call_ROGUEM101( 11, t_0 ))));
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_1 ))).exists))
    {
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_1 );
    }
    return (RogueLogical)(true);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,code_2,((Rogue_call_ROGUEM101( 11, t_0 ))));
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), code_2 ))).exists))
    {
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), code_2 );
    }
    return (RogueLogical)(true);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_includeNativeCode) ))))
  {
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[283] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,filepath_3,((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    RogueRogueC__include_native__Token_String_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_0, filepath_3, Rogue_literal_strings[294] );
    return (RogueLogical)(true);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_includeNativeHeader) ))))
  {
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[283] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,filepath_4,((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    RogueRogueC__include_native__Token_String_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_0, filepath_4, Rogue_literal_strings[293] );
    return (RogueLogical)(true);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_essential) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,pattern_5,((Rogue_call_ROGUEM101( 11, t_0 ))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)((RogueProgram__get_on_launch_method__Token( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0 )))->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), t_0, pattern_5 )))))) );
    return (RogueLogical)(true);
  }
  else
  {
    return (RogueLogical)(false);
  }
}

RogueClassCmdContingent* RogueParser__parse_contingent( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_1,(((RogueCmdContingent__init__Token_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdContingent*,ROGUE_CREATE_OBJECT(CmdContingent))), t_0, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->statements) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_satisfied) ))))
  {
    cmd_contingent_1->satisfied_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->satisfied_statements) );
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_unsatisfied) ))))
  {
    cmd_contingent_1->unsatisfied_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_contingent_1->unsatisfied_statements) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endContingent), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdContingent*)(cmd_contingent_1);
}

RogueClassCmdTry* RogueParser__parse_try_statement( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTry*,cmd_try_1,(((RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTry*,ROGUE_CREATE_OBJECT(CmdTry))), t_0, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueCmdCatch_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdCatch_List*,ROGUE_CREATE_OBJECT(CmdCatch_List))) )))) )))));
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_try_1->statements) );
    while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_catch) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,cmd_catch_2,(((RogueCmdTry__add_catch__Token( cmd_try_1, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) )))));
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,error_t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
      ROGUE_DEF_LOCAL_REF(RogueString*,error_name_4,(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false )))));
      ROGUE_DEF_LOCAL_REF(RogueClassType*,error_type_5,0);
      RogueLogical no_name_6 = (false);
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
      {
        cmd_catch_2->error_var = ((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), error_t_3, error_name_4, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      else
      {
        cmd_catch_2->_error_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0, error_name_4 )));
      }
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_catch_2->statements) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endTry), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_try_1->statements) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,cmd_catch_7,(((RogueCmdTry__add_catch__Token( cmd_try_1, t_0 )))));
    cmd_catch_7->_error_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception;
  }
  return (RogueClassCmdTry*)(cmd_try_1);
}

RogueClassCmd* RogueParser__parse_try_expression( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,try_expression_1,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_else), ROGUE_ARG(((RogueString*)(NULL))) );
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,else_expression_2,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, result_var_3, false )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdTryExpression__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTryExpression*,ROGUE_CREATE_OBJECT(CmdTryExpression))), t_0, try_expression_1, else_expression_2, result_var_3 )))))) );
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, result_var_3 ))))));
}

void RogueParser__parse_local_or_global__CmdStatementList( RogueClassParser* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueLocal_List__clear( ROGUE_ARG(THIS->local_declarations) );
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_2 = ((RogueLogical)false);
    t_1 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_1, name_3, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    RogueLocal_List__add__Local( ROGUE_ARG(THIS->local_declarations), v_4 );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
    {
      v_4->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
  }
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_5,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1336_6,(THIS->local_declarations));
      RogueInt32 _auto_1337_7 = (0);
      for (;_auto_1337_7 < _auto_1336_6->count;++_auto_1337_7)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_8,(((RogueClassLocal*)(_auto_1336_6->data->as_objects[_auto_1337_7]))));
        v_8->_type = type_5;
      }
    }
  }
  else
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1338_9,(THIS->local_declarations));
      RogueInt32 _auto_1339_10 = (0);
      for (;_auto_1339_10 < _auto_1338_9->count;++_auto_1339_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_11,(((RogueClassLocal*)(_auto_1338_9->data->as_objects[_auto_1339_10]))));
        if ((((void*)v_11->_type) == ((void*)NULL) && !!(v_11->initial_value)))
        {
          v_11->_type = (Rogue_call_ROGUEM151( 34, ROGUE_ARG(v_11->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
        }
      }
    }
  }
  if (!!(statements_0))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1340_12,(THIS->local_declarations));
      RogueInt32 _auto_1341_13 = (0);
      for (;_auto_1341_13 < _auto_1340_12->count;++_auto_1341_13)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_14,(((RogueClassLocal*)(_auto_1340_12->data->as_objects[_auto_1341_13]))));
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(v_14->t), v_14, false )))))) );
      }
    }
  }
  else
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1342_15,(THIS->local_declarations));
      RogueInt32 _auto_1343_16 = (0);
      for (;_auto_1343_16 < _auto_1342_15->count;++_auto_1343_16)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_17,(((RogueClassLocal*)(_auto_1342_15->data->as_objects[_auto_1343_16]))));
        RogueProperty_List__add__Property( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->global_properties), ROGUE_ARG(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), ROGUE_ARG(v_17->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(v_17->name), ROGUE_ARG(v_17->_type), ROGUE_ARG(v_17->initial_value) )))) );
      }
    }
  }
}

RogueClassType* Rogue_Parser__parse_type( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,name_0,0);
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (!!((Rogue_call_ROGUEM106( 30, t_1 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,((Rogue_call_ROGUEM106( 30, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) )))))
    {
      name_0 = ((RogueString*)type_2->name);
      for (;;)
      {
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
        {
          name_0 = ((RogueString*)((RogueString__operatorPLUS__String( name_0, Rogue_literal_strings[158] ))));
        }
        else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
        {
          name_0 = ((RogueString*)((RogueString__operatorPLUS__String( name_0, Rogue_literal_strings[178] ))));
        }
        else
        {
          goto _auto_1344;
        }
      }
      _auto_1344:;
    }
    else
    {
      return (RogueClassType*)(type_2);
    }
  }
  else
  {
    name_0 = ((RogueString*)((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_3,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_1, name_0 )))));
  return (RogueClassType*)(type_3);
}

RogueString* RogueParser__parse_possible_type__Logical( RogueClassParser* THIS, RogueLogical allow_at_sign_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,0);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at_brace) ))))
  {
    name_2 = ((RogueString*)Rogue_literal_strings[306]);
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at_bracket) ))))
  {
    name_2 = ((RogueString*)Rogue_literal_strings[307]);
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    name_2 = ((RogueString*)((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), allow_at_sign_0 ))));
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, ROGUE_ARG(((RogueParser__parse_specialization_string( ROGUE_ARG(THIS) )))) ))));
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( name_2, Rogue_literal_strings[309] ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_3,0);
      ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_4,0);
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
      {
        if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
        {
          parameter_types_3 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
          RogueLogical first_5 = (true);
          while ((first_5 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
          {
            first_5 = ((RogueLogical)false);
            ROGUE_DEF_LOCAL_REF(RogueClassToken*,type_t_6,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
            ROGUE_DEF_LOCAL_REF(RogueString*,type_name_7,(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), false )))));
            if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
            {
              RogueType_List__add__Type( parameter_types_3, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
            }
            else
            {
              RogueType_List__add__Type( parameter_types_3, ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), type_t_6, type_name_7 )))) );
            }
          }
          RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
        }
      }
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
      {
        RogueLogical has_parens_8 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
        return_type_4 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
        if (has_parens_8)
        {
          RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
        }
      }
      name_2 = ((RogueString*)((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_1, parameter_types_3, return_type_4 )))->name);
    }
  }
  for (;;)
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
    {
      name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, Rogue_literal_strings[158] ))));
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
    {
      name_2 = ((RogueString*)((RogueString__operatorPLUS__String( name_2, Rogue_literal_strings[178] ))));
    }
    else
    {
      goto _auto_1345;
    }
  }
  _auto_1345:;
  return (RogueString*)(name_2);
}

RogueClassCmdIf* RogueParser__parse_if( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_1,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))), 2 )))));
  cmd_if_1->condition = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_if_1->statements) );
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_2,(cmd_if_1));
    while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_elseIf) ))))
    {
      RogueInt32 starting_position_3 = (THIS->reader->position);
      RogueParser__read( ROGUE_ARG(THIS) );
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,elseIf_condition_4,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_5,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, elseIf_condition_4, 3 )))));
        RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_else_if_5->statements) );
        cur_if_2->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cur_if_2->else_statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_5))) );
        cur_if_2 = ((RogueClassCmdIf*)cmd_else_if_5);
      }
      else
      {
        THIS->reader->position = starting_position_3;
        goto _auto_1346;
      }
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    }
    _auto_1346:;
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_else) ))) && ((void*)((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))->_type) == ((void*)RogueTokenType_eol)))
    {
      RogueParser__read( ROGUE_ARG(THIS) );
      cur_if_2->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
      RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cur_if_2->else_statements) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endIf), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_if_1->statements) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_6,(cmd_if_1));
    while (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_elseIf) ))))
    {
      RogueInt32 starting_position_7 = (THIS->reader->position);
      RogueParser__read( ROGUE_ARG(THIS) );
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,elseIf_condition_8,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
      {
        THIS->reader->position = starting_position_7;
        goto _auto_1347;
      }
      else
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_9,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_0, elseIf_condition_8, 3 )))));
        RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_else_if_9->statements) );
        cur_if_6->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cur_if_6->else_statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_9))) );
        cur_if_6 = ((RogueClassCmdIf*)cmd_else_if_9);
        RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
      }
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    }
    _auto_1347:;
    if ((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_else) ))) && ((void*)((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))->_type) != ((void*)RogueTokenType_eol)))
    {
      RogueParser__read( ROGUE_ARG(THIS) );
      cur_if_6->else_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cur_if_6->else_statements) );
    }
  }
  return (RogueClassCmdIf*)(cmd_if_1);
}

RogueClassCmdGenericLoop* RogueParser__parse_loop( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_loop_1,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 7, ROGUE_ARG(((RogueClassCmd*)(NULL))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  if (!(((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_2,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    control_var_2->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, 1 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    last_var_3->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAdjustLocal*,step_cmd_4,(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), t_0, control_var_2, 1 )))));
    cmd_loop_1->condition = ((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_2 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_3 )))))) )))))));
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_1, control_var_2 );
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_1, last_var_3 );
    RogueCmdGenericLoop__add_upkeep__Cmd( cmd_loop_1, ROGUE_ARG(((RogueClassCmd*)(step_cmd_4))) );
    if (!(((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
    {
      RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_loop_1->statements) );
      return (RogueClassCmdGenericLoop*)(cmd_loop_1);
    }
  }
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_loop_1->statements) );
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endLoop), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdGenericLoop*)(cmd_loop_1);
}

RogueClassCmdBlock* RogueParser__parse_block( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_1,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  RogueParser__must_consume_eols( ROGUE_ARG(THIS) );
  RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_block_1->statements) );
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endBlock), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmdBlock*)(cmd_block_1);
}

RogueClassCmdGenericLoop* RogueParser__parse_while( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_while_1,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 8, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  if (((RogueParser__consume_eols( ROGUE_ARG(THIS) ))))
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_while_1->statements) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endWhile), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), ROGUE_ARG(cmd_while_1->statements) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  return (RogueClassCmdGenericLoop*)(cmd_while_1);
}

RogueClassCmd* RogueParser__parse_for_each( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  RogueLogical has_parens_1 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_2,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(expr_2,RogueTypeCmdAccess)))));
  if (!!(access_3))
  {
    if ((!!(access_3->context) || !!(access_3->args)))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[323] ))));
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,index_var_name_4,0);
      if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(access_3->name), Rogue_literal_strings[324] ))))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[325] ))));
      }
      else if (((RogueParser__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[324] ))))
      {
        index_var_name_4 = ((RogueString*)((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false ))));
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,collection_var_name_5,0);
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_in) ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,collection_6,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,var_name_7,(((RogueClassCmdAccess*)(RogueObject_as(collection_6,RogueTypeCmdAccess)))));
                if ( !(var_name_7) ) goto _auto_1352;
                if ( !(((void*)var_name_7->context) == ((void*)NULL)) ) goto _auto_1352;
                if ( !(((void*)var_name_7->args) == ((void*)NULL)) ) goto _auto_1352;
                collection_var_name_5 = ((RogueString*)var_name_7->name);
                collection_6 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
                }
              goto _auto_1351;
            }
            _auto_1352:;
            {
              ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(collection_6->t), Rogue_literal_strings[326] ))));
              }
          }
          _auto_1351:;
        }
        ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_8,(((RogueClassCmdRange*)(RogueObject_as(collection_6,RogueTypeCmdRange)))));
        if (!!(range_8))
        {
          if (!!(index_var_name_4))
          {
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(range_8->t), Rogue_literal_strings[327] ))));
          }
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_9,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(access_3->name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
          control_var_9->initial_value = range_8->first;
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_10,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
          last_var_10->initial_value = range_8->last;
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_11,(((RogueClassCmd*)(NULL))));
          if (!!(range_8->step_size))
          {
            step_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(range_8->t), control_var_9, ROGUE_ARG(RogueTokenType_symbol_plus_equals), ROGUE_ARG(range_8->step_size) ))))));
          }
          else if ((RogueObject_instance_of(range_8,RogueTypeCmdRangeUpTo) || RogueObject_instance_of(range_8,RogueTypeCmdRangeUpToLessThan)))
          {
            step_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_8->t), control_var_9, 1 ))))));
          }
          else
          {
            step_cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_8->t), control_var_9, -1 ))))));
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,compare_cmd_12,0);
          if (RogueObject_instance_of(range_8,RogueTypeCmdRangeUpTo))
          {
            compare_cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_9 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_10 )))))) ))))))));
          }
          else if (RogueObject_instance_of(range_8,RogueTypeCmdRangeUpToLessThan))
          {
            compare_cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_9 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_10 )))))) ))))))));
          }
          else
          {
            compare_cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_9 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_10 )))))) ))))))));
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_for_each_13,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 9, compare_cmd_12, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
          RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_13, control_var_9 );
          RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_13, last_var_10 );
          RogueCmdGenericLoop__add_upkeep__Cmd( cmd_for_each_13, step_cmd_11 );
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_13->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_13)));
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_14,0);
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
          {
            step_cmd_14 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
          }
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,cmd_for_each_15,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), t_0, ROGUE_ARG(access_3->name), index_var_name_4, collection_6, step_cmd_14, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
          cmd_for_each_15->collection_var_name = collection_var_name_5;
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_15->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_15)));
        }
      }
      else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_of) ))))
      {
        if (!!(index_var_name_4))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[328] ))));
        }
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,collection_16,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,var_name_17,(((RogueClassCmdAccess*)(RogueObject_as(collection_16,RogueTypeCmdAccess)))));
                if ( !(var_name_17) ) goto _auto_1368;
                if ( !(((void*)var_name_17->context) == ((void*)NULL)) ) goto _auto_1368;
                if ( !(((void*)var_name_17->args) == ((void*)NULL)) ) goto _auto_1368;
                collection_var_name_5 = ((RogueString*)var_name_17->name);
                collection_16 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
                }
              goto _auto_1367;
            }
            _auto_1368:;
            {
              ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(collection_16->t), Rogue_literal_strings[326] ))));
              }
          }
          _auto_1367:;
        }
        ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_18,(((RogueClassCmdRange*)(RogueObject_as(collection_16,RogueTypeCmdRange)))));
        if (!!(range_18))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[329] ))));
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_19,0);
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
          {
            step_cmd_19 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
          }
          if (has_parens_1)
          {
            RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,cmd_for_each_20,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), t_0, ROGUE_ARG(((RogueString*)(NULL))), ROGUE_ARG(access_3->name), collection_16, step_cmd_19, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
          cmd_for_each_20->collection_var_name = collection_var_name_5;
          RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_20->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_20)));
        }
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[330] ))));
      }
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRange*,range_21,(((RogueClassCmdRange*)(RogueObject_as(expr_2,RogueTypeCmdRange)))));
    if (!!(range_21))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_22,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      control_var_22->initial_value = range_21->first;
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,last_var_23,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      last_var_23->initial_value = range_21->last;
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,step_cmd_24,0);
      if (!!(range_21->step_size))
      {
        step_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(range_21->t), control_var_22, ROGUE_ARG(RogueTokenType_symbol_plus_equals), ROGUE_ARG(range_21->step_size) ))))));
      }
      else if ((RogueObject_instance_of(range_21,RogueTypeCmdRangeUpTo) || RogueObject_instance_of(range_21,RogueTypeCmdRangeUpToLessThan)))
      {
        step_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_21->t), control_var_22, 1 ))))));
      }
      else
      {
        step_cmd_24 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(range_21->t), control_var_22, -1 ))))));
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,compare_cmd_25,0);
      if (RogueObject_instance_of(range_21,RogueTypeCmdRangeUpTo))
      {
        compare_cmd_25 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_22 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_23 )))))) ))))))));
      }
      else if (RogueObject_instance_of(range_21,RogueTypeCmdRangeUpToLessThan))
      {
        compare_cmd_25 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_22 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_23 )))))) ))))))));
      }
      else
      {
        compare_cmd_25 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, control_var_22 )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, last_var_23 )))))) ))))))));
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_for_each_26,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), t_0, 9, compare_cmd_25, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
      RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_26, control_var_22 );
      RogueCmdGenericLoop__add_control_var__Local( cmd_for_each_26, last_var_23 );
      RogueCmdGenericLoop__add_upkeep__Cmd( cmd_for_each_26, step_cmd_24 );
      if (has_parens_1)
      {
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      }
      RogueParser__parse_single_or_multi_line_statements__CmdStatementList_TokenType( ROGUE_ARG(THIS), ROGUE_ARG(cmd_for_each_26->statements), ROGUE_ARG(RogueTokenType_keyword_endForEach) );
      return (RogueClassCmd*)(((RogueClassCmd*)(cmd_for_each_26)));
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[331] ))));
    }
  }
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[332] )))) )))) );
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(expr_2->t), Rogue_literal_strings[333] ))));
}

RogueClassToken* RogueParser__peek( RogueClassParser* THIS )
{
  return (RogueClassToken*)(((RogueTokenReader__peek( ROGUE_ARG(THIS->reader) ))));
}

RogueClassToken* RogueParser__read( RogueClassParser* THIS )
{
  return (RogueClassToken*)(((RogueTokenReader__read( ROGUE_ARG(THIS->reader) ))));
}

RogueString* RogueParser__read_identifier__Logical( RogueClassParser* THIS, RogueLogical allow_at_sign_0 )
{
  RogueLogical direct_access_1 = (false);
  if (allow_at_sign_0)
  {
    direct_access_1 = ((RogueLogical)((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at) ))));
  }
  if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_type_identifier) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,result_2,((Rogue_call_ROGUEM106( 30, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))->name));
      if (direct_access_1)
      {
        result_2 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[146], result_2 ))));
      }
      return (RogueString*)(result_2);
    }
    ROGUE_THROW(RogueClassRogueError,((RogueParser__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[282] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM101( 23, ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,result_3,((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
  if (direct_access_1)
  {
    result_3 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[146], result_3 ))));
  }
  return (RogueString*)(result_3);
}

RogueClassCmd* RogueParser__parse_expression( RogueClassParser* THIS )
{
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  return (RogueClassCmd*)(((RogueParser__parse_range( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueParser__parse_range( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_range__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_range__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_upTo) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeUpTo*,result_2,(((RogueClassCmdRangeUpTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpTo*,ROGUE_CREATE_OBJECT(CmdRangeUpTo)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_2->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_upToLessThan) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeUpToLessThan*,result_3,(((RogueClassCmdRangeUpToLessThan*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpToLessThan*,ROGUE_CREATE_OBJECT(CmdRangeUpToLessThan)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_3->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(result_3)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_downTo) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdRangeDownTo*,result_4,(((RogueClassCmdRangeDownTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeDownTo*,ROGUE_CREATE_OBJECT(CmdRangeDownTo)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_xor( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_step) ))))
    {
      result_4->step_size = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
  else
  {
    return (RogueClassCmd*)(lhs_0);
  }
}

RogueClassCmd* RogueParser__parse_logical_xor( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_logical_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_or( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_xor__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_xor) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_logical_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalXor*,ROGUE_CREATE_OBJECT(CmdLogicalXor)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_or( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_logical_or( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_logical_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_logical_and( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_or__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_or) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_logical_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_logical_and( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_logical_and( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_logical_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_comparison( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_logical_and__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_and) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_logical_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalAnd*,ROGUE_CREATE_OBJECT(CmdLogicalAnd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_comparison( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_comparison( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_comparison__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_eq) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_is) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_not) ))))
    {
      return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareIsNot*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIsNot*,ROGUE_CREATE_OBJECT(CmdCompareIsNot)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
    }
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareIs*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIs*,ROGUE_CREATE_OBJECT(CmdCompareIs)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ne) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_lt) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_gt) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareGT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGT*,ROGUE_CREATE_OBJECT(CmdCompareGT)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_le) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ge) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_comparison__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_xor( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_instanceOf) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), t_1, lhs_0, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_not) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_2,(((RogueTokenReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 )))));
    if ((!!(t2_2) && ((void*)t2_2->_type) == ((void*)RogueTokenType_keyword_instanceOf)))
    {
      RogueParser__read( ROGUE_ARG(THIS) );
      RogueParser__read( ROGUE_ARG(THIS) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), t_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), t_1, lhs_0, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) )))))))) ))))))));
    }
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_xor( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_or( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_xor__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_tilde) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_xor__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_or( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_or( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_and( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_or__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  RogueInt32 starting_pos_2 = (THIS->reader->position);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_vertical_bar) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,rhs_3,(((RogueParser__parse_bitwise_and( ROGUE_ARG(THIS) )))));
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_or__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), t_1, lhs_0, rhs_3 )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_and( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_bitwise_shift( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_and__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_bitwise_and__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_bitwise_shift( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_bitwise_shift( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_bitwise_shift__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_bitwise_shift__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_left) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftLeft*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftLeft*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftLeft)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_right) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRight*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRight*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRight)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_shift_right_x) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRightX*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRightX*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRightX)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_add_subtract( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_add_subtract( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_add_subtract__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_plus) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_add_subtract__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_multiply_divide_mod( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_multiply_divide_mod( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_multiply_divide_mod__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_times) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_slash) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_percent) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_multiply_divide_mod__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_power( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_power( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_power__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_power__Cmd( RogueClassParser* THIS, RogueClassCmd* lhs_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_caret) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueParser__parse_power__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), t_1, lhs_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) )))))))) ))));
  }
  return (RogueClassCmd*)(lhs_0);
}

RogueClassCmd* RogueParser__parse_pre_unary( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_minus) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdNegate*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdNegate*,ROGUE_CREATE_OBJECT(CmdNegate)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_not) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_exclamation_point) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseNot*,ROGUE_CREATE_OBJECT(CmdBitwiseNot)))), t_0, ROGUE_ARG(((RogueParser__parse_pre_unary( ROGUE_ARG(THIS) )))) ))))))));
  }
  return (RogueClassCmd*)(((RogueParser__parse_post_unary( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueParser__parse_post_unary( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_post_unary__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_member_access( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_post_unary__Cmd( RogueClassParser* THIS, RogueClassCmd* operand_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_question_mark) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_post_unary__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), t_1, operand_0 )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_isReference) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_post_unary__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdIsReference__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIsReference*,ROGUE_CREATE_OBJECT(CmdIsReference))), t_1, operand_0 )))))) ))));
  }
  return (RogueClassCmd*)(operand_0);
}

RogueClassCmd* RogueParser__parse_member_access( RogueClassParser* THIS )
{
  return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParser__parse_term( ROGUE_ARG(THIS) )))) ))));
}

RogueClassCmd* RogueParser__parse_member_access__Cmd( RogueClassParser* THIS, RogueClassCmd* context_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,access_2,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_1, context_0 )))));
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), access_2 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_slash_slash) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdElementAccess__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdElementAccess*,ROGUE_CREATE_OBJECT(CmdElementAccess))), t_1, context_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_1, name_3, 0 )))))) )))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdElementAccess*,access_4,(((RogueCmdElementAccess__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdElementAccess*,ROGUE_CREATE_OBJECT(CmdElementAccess))), t_1, context_0, ROGUE_ARG(((RogueParser__parse_expression_allowing_query( ROGUE_ARG(THIS) )))) )))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(access_4))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassType*,to_type_5,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_6,(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_1, context_0, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[315], ROGUE_ARG(to_type_5->name) )))), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))));
      access_6->named_args = ((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), ROGUE_ARG(access_6->args) )));
      return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(access_6))) ))));
    }
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdConvertToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToType*,ROGUE_CREATE_OBJECT(CmdConvertToType)))), t_1, context_0, to_type_5 )))))))) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_fat_arrow) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueString*,name_7,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    ROGUE_DEF_LOCAL_REF(RogueType_List*,arg_types_8,0);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      arg_types_8 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
      RogueLogical first_9 = (true);
      while ((first_9 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_9 = ((RogueLogical)false);
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueType_List__add__Type( arg_types_8, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_10,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      return_type_10 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCallback*,ROGUE_CREATE_OBJECT(CmdCreateCallback))), t_1, context_0, name_7, ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), arg_types_8 )))), return_type_10 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_as) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassType*,as_type_11,(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))));
    return (RogueClassCmd*)(((RogueParser__parse_member_access__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAs*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdAs*,ROGUE_CREATE_OBJECT(CmdAs)))), t_1, context_0, as_type_11 )))))))) ))));
  }
  return (RogueClassCmd*)(context_0);
}

RogueClassCmd* RogueParser__parse_access__Token_Cmd( RogueClassParser* THIS, RogueClassToken* _auto_5761, RogueClassCmd* context_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,_auto_5761);
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_meta) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_2,0);
    if (!!(context_1))
    {
      context_type_2 = ((RogueClassType*)(Rogue_call_ROGUEM151( 34, context_1, ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->_this_type), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) )));
    }
    else
    {
      context_type_2 = ((RogueClassType*)THIS->_this_type);
    }
    if (!(!!(context_type_2)))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[303] ))));
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot), ROGUE_ARG(((RogueString*)(NULL))) );
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    ROGUE_DEF_LOCAL_REF(RogueString*,id_3,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    {
      if (((RogueString__operatorEQUALSEQUALS__String( id_3, Rogue_literal_strings[304] ))))
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdDefaultValue__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdDefaultValue*,ROGUE_CREATE_OBJECT(CmdDefaultValue))), t_0, context_type_2 ))))));
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[305] ))));
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_4,(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueParser__parse_possible_type__Logical( ROGUE_ARG(THIS), true )))) )))));
  if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    access_4->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
    access_4->named_args = ((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), ROGUE_ARG(access_4->args) )));
  }
  if (!!(context_1))
  {
    access_4->context = context_1;
  }
  else if ((!!(access_4->args) && ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_instance) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,type_name_5,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(access_4->name) )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))) )))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassType*,inline_type_6,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0, type_name_5 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_7,(((RogueTemplate__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTemplate*,ROGUE_CREATE_OBJECT(Template))), t_0, type_name_5, 0 )))));
    RogueParser__parse_template_tokens__Template_TokenType( ROGUE_ARG(THIS), template_7, ROGUE_ARG(RogueTokenType_keyword_endInstance) );
    RogueType_List__add__Type( ROGUE_ARG(inline_type_6->base_types), ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_0, ROGUE_ARG(access_4->name) )))) );
    access_4->name = type_name_5;
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(access_4)));
}

RogueCmdNamedArg_List* RogueParser__parse_args__CmdArgs( RogueClassParser* THIS, RogueClassCmdArgs* args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_1,0);
  ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,end_type_2,(RogueTokenType_symbol_close_paren));
  RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) );
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), end_type_2 )))))
  {
    RogueLogical first_3 = (true);
    while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
    {
      first_3 = ((RogueLogical)false);
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_ampersand) ))))
      {
        if (!(!!(named_args_1)))
        {
          named_args_1 = ((RogueCmdNamedArg_List*)((RogueCmdNamedArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))) ))));
        }
        RogueLogical is_negative_4 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_exclamation_point) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,arg_t_5,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_6,(((RogueCmdNamedArg__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNamedArg*,ROGUE_CREATE_OBJECT(CmdNamedArg))), arg_t_5, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), ROGUE_ARG(((RogueClassCmd*)(NULL))), false )))));
        arg_6->is_negative = is_negative_4;
        RogueCmdNamedArg_List__add__CmdNamedArg( named_args_1, arg_6 );
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          arg_6->value = ((RogueParser__parse_expression_allowing_query( ROGUE_ARG(THIS) )));
        }
      }
      else
      {
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_0), ROGUE_ARG(((RogueParser__parse_expression_allowing_query( ROGUE_ARG(THIS) )))) );
      }
    }
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), end_type_2, ROGUE_ARG(((RogueString*)(NULL))) );
  }
  return (RogueCmdNamedArg_List*)(named_args_1);
}

RogueClassCmd* RogueParser__parse_expression_allowing_query( RogueClassParser* THIS )
{
  RogueLogical prior_setting_0 = (THIS->implicit_access_used);
  THIS->implicit_access_used = false;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_1,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
  if (THIS->implicit_access_used)
  {
    expr_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), ROGUE_ARG(expr_1->t), ROGUE_ARG(((RogueFnParam_List__add__FnParam( ROGUE_ARG(((RogueFnParam_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnParam_List*,ROGUE_CREATE_OBJECT(FnParam_List))) )))), ROGUE_ARG(((RogueFnParam__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnParam*,ROGUE_CREATE_OBJECT(FnParam))), Rogue_literal_strings[312] )))) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueFnArg_List*)(NULL))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), true, expr_1 ))))));
  }
  THIS->implicit_access_used = prior_setting_0;
  return (RogueClassCmd*)(expr_1);
}

RogueString* RogueParser__parse_specialization_string( RogueClassParser* THIS )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) );
  RogueParser__read( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[172] );
  RogueLogical first_0 = (true);
  while ((first_0 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    if (first_0)
    {
      first_0 = ((RogueLogical)false);
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
    }
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(((RogueToken_List*)(NULL))) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[75] );
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueClassType* RogueParser__parse_specialization_type__Int32( RogueClassParser* THIS, RogueInt32 index_0 )
{
  RogueParser__read( ROGUE_ARG(THIS) );
  RogueInt32 i_1 = (index_0);
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    if (first_2)
    {
      first_2 = ((RogueLogical)false);
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) )))), ROGUE_ARG(((RogueToken_List*)(NULL))) );
    if (i_1 == 0)
    {
      return (RogueClassType*)(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), t_3, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) )))) ))));
    }
    --i_1;
  }
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[616] )))) )))) );
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[617] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], index_0 )))) )))), Rogue_literal_strings[154] )))) )))) ))));
}

RogueClassValueTable* RogueParser__parse_specialization_info( RogueClassParser* THIS )
{
  RogueInt32 count_0 = (0);
  RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) );
  RogueParser__read( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[172] );
  RogueLogical first_1 = (true);
  while ((first_1 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    if (first_1)
    {
      first_1 = ((RogueLogical)false);
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
    }
    ++count_0;
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(((RogueToken_List*)(NULL))) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[75] );
  return (RogueClassValueTable*)(((RogueValueTable__set__String_Value( ROGUE_ARG(((RogueValueTable__set__String_Value( ROGUE_ARG(((RogueValueTable__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassValueTable*,ROGUE_CREATE_OBJECT(ValueTable))) )))), Rogue_literal_strings[458], ROGUE_ARG((RogueValue__create__String( ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) )))) ))) )))), Rogue_literal_strings[459], ROGUE_ARG((RogueValue__create__Real64( ROGUE_ARG(((RogueReal64)(count_0))) ))) ))));
}

RogueInt32 RogueParser__parse_specializer_count( RogueClassParser* THIS )
{
  RogueInt32 num_specializers_0 = (0);
  RogueParser__read( ROGUE_ARG(THIS) );
  RogueLogical first_1 = (true);
  while ((first_1 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    if (first_1)
    {
      first_1 = ((RogueLogical)false);
    }
    RogueParser__parse_specializer__StringBuilder_Token_List( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) )))), ROGUE_ARG(((RogueToken_List*)(NULL))) );
    ++num_specializers_0;
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueInt32)(num_specializers_0);
}

void RogueParser__parse_specializer__StringBuilder_Token_List( RogueClassParser* THIS, RogueStringBuilder* buffer_0, RogueToken_List* tokens_1 )
{
  RogueInt32 nesting_level_2 = (1);
  while (((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[308] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_backslash) ))))
    {
      RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[149] );
      if (!(((RogueTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_3, Rogue_literal_strings[281] ))));
      }
      t_3 = ((RogueClassToken*)((RogueParser__read( ROGUE_ARG(THIS) ))));
      RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(t_3))) );
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
    }
    else if (((void*)t_3->_type) == ((void*)RogueTokenType_symbol_comma))
    {
      if (nesting_level_2 == 1)
      {
        return;
      }
      RogueParser__read( ROGUE_ARG(THIS) );
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[172] );
      ++nesting_level_2;
    }
    else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_specialize) ))))
    {
      --nesting_level_2;
      if (nesting_level_2 == 0)
      {
        return;
      }
      else
      {
        RogueParser__read( ROGUE_ARG(THIS) );
        if (!!(tokens_1))
        {
          RogueToken_List__add__Token( tokens_1, t_3 );
        }
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[75] );
      }
    }
    else
    {
      if (!!(tokens_1))
      {
        RogueToken_List__add__Token( tokens_1, t_3 );
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,st_4,((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
      if (((void*)t_3->_type) == ((void*)RogueTokenType_literal_string))
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'"', true )))), st_4 )))), (RogueCharacter)'"', true );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, st_4 );
      }
    }
  }
}

RogueClassCmd* RogueParser__parse_term( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  RogueInt32 rewind_pos_1 = (THIS->reader->position);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    {
      {
        {
          if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) ))))
          {
            if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_fat_arrow) )))) goto _auto_1403;
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[316] ))));
          }
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_2,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))) goto _auto_1403;
          RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
          if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_with) )))) goto _auto_1403;
          if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_fat_arrow) )))) goto _auto_1403;
          return (RogueClassCmd*)(result_2);
          }
        _auto_1403:;
        {
          THIS->reader->position = rewind_pos_1;
          return (RogueClassCmd*)(((RogueParser__parse_function__Token( ROGUE_ARG(THIS), t_0 ))));
          }
      }
    }
  }
  else if (((((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) ))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at) )))) || ((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_meta) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_3,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_4,(((RogueClassCmdAccess*)(RogueObject_as(result_3,RogueTypeCmdAccess)))));
    if (((!!(access_4) && ((RogueString__ends_with__Character( ROGUE_ARG(access_4->name), (RogueCharacter)']' )))) && !(!!(access_4->args))))
    {
      if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
      {
        return (RogueClassCmd*)(((RogueParser__parse_typed_literal_list__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(access_4->t), ROGUE_ARG(access_4->name) ))));
      }
    }
    return (RogueClassCmd*)(result_3);
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) ))))
  {
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      RogueLogical first_5 = (true);
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      while ((first_5 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_5 = ((RogueLogical)false);
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), t_0, ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_0 ))), args_6 ))))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_0 ))), 0 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_null) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), t_0 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, ROGUE_ARG((Rogue_call_ROGUEM105( 29, t_0 ))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer) ))))
  {
    RogueInt32 value_7 = ((Rogue_call_ROGUEM103( 27, t_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, value_7 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long) ))))
  {
    RogueInt64 value_8 = ((Rogue_call_ROGUEM104( 28, t_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt64__init__Token_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt64*,ROGUE_CREATE_OBJECT(CmdLiteralInt64))), t_0, value_8 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_character) ))))
  {
    RogueCharacter value_9 = ((Rogue_call_ROGUEM102( 26, t_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralCharacter__init__Token_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralCharacter*,ROGUE_CREATE_OBJECT(CmdLiteralCharacter))), t_0, value_9 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_this) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), t_0, ROGUE_ARG(THIS->_this_type) ))))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_true) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_false) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_pi) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, 3.141592653589793 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_infinity) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, (1.0/0.0) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_NaN) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), t_0, (0.0/0.0) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateList*,list_10,(((RogueCmdCreateList__init__Token_CmdArgs_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateList*,ROGUE_CREATE_OBJECT(CmdCreateList))), t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueClassType*)(NULL))) )))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) )))))
    {
      RogueLogical first_11 = (true);
      while ((first_11 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_11 = ((RogueLogical)false);
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)list_10->args)), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(list_10)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at_brace) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_at_bracket) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_braces) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[306], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_empty_brackets) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[307], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_prior) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot), ROGUE_ARG(((RogueString*)(NULL))) );
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueString*,name_12,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_specialize) ))))
    {
      name_12 = ((RogueString*)((RogueString__operatorPLUS__String( name_12, ROGUE_ARG(((RogueParser__parse_specialization_string( ROGUE_ARG(THIS) )))) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_13,0);
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_14,0);
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      args_13 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
      named_args_14 = ((RogueCmdNamedArg_List*)((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), args_13 ))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallPriorMethod*,ROGUE_CREATE_OBJECT(CmdCallPriorMethod))), t_0, name_12, args_13, named_args_14 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_await) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_var_15,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statement_list_16,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, result_var_15, false )))))) );
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), t_0, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))), statement_list_16, result_var_15 )))))) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(result_var_15->name) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_function) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_function__Token( ROGUE_ARG(THIS), t_0 ))));
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_fat_arrow) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_function__Token( ROGUE_ARG(THIS), t_0 ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_native) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueLogical has_parens_17 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    if (has_parens_17)
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    if (!(((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string) )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), Rogue_literal_strings[344] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,code_18,((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueParser__read( ROGUE_ARG(THIS) )))) ))));
    if (has_parens_17)
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,result_type_19,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
    {
      result_type_19 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_0, code_18, result_type_19 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_select) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmdSelect*,cmd_select_20,(((RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelect*,ROGUE_CREATE_OBJECT(CmdSelect))), t_0, ROGUE_ARG(((RogueClassLocal*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))), ROGUE_ARG(((RogueCmdSelectCase_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdSelectCase_List*,ROGUE_CREATE_OBJECT(CmdSelectCase_List))) )))) )))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,comparison_var_21,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, comparison_var_21, true )))))) );
      comparison_var_21->initial_value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
      cmd_select_20->local_info = comparison_var_21;
      cmd_select_20->expression = comparison_var_21->initial_value;
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace), ROGUE_ARG(((RogueString*)(NULL))) );
    RogueLogical first_22 = (true);
    while ((first_22 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) )))))
    {
      first_22 = ((RogueLogical)false);
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,select_case_23,(((RogueCmdSelectCase__init__Token_Cmd_List_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelectCase*,ROGUE_CREATE_OBJECT(CmdSelectCase))), ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG((Rogue_call_ROGUEM183( 17, ROGUE_ARG(ROGUE_CREATE_REF(RogueCmd_List*,ROGUE_CREATE_OBJECT(Cmd_List))), 1 ))), ROGUE_ARG(((RogueClassCmd*)(NULL))), ROGUE_ARG(((RogueClassLocal*)(NULL))) )))));
      RogueCmdSelectCase_List__add__CmdSelectCase( ROGUE_ARG(cmd_select_20->cases), select_case_23 );
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_others) ))))
      {
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon), ROGUE_ARG(((RogueString*)(NULL))) );
        RogueParser__consume_eols( ROGUE_ARG(THIS) );
        RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_23->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        goto _auto_1440;
      }
      else
      {
        RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_23->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
        while (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) ))))
        {
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_23->conditions), ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
        }
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
          select_case_23->value = ((RogueParser__parse_expression( ROGUE_ARG(THIS) )));
          RogueParser__consume_eols( ROGUE_ARG(THIS) );
        }
        else if (select_case_23->conditions->count > 1)
        {
          RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon), ROGUE_ARG(((RogueString*)(NULL))) );
        }
      }
    }
    _auto_1440:;
    {
      RogueInt32 i_24 = (0);
      RogueInt32 _auto_167_25 = ((cmd_select_20->cases->count - 1));
      for (;i_24 < _auto_167_25;++i_24)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,select_case_26,(((RogueClassCmdSelectCase*)(cmd_select_20->cases->data->as_objects[i_24]))));
        if (!(!!(select_case_26->value)))
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_27,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
          temp_var_27->initial_value = ((RogueCmd_List__remove_last( ROGUE_ARG(select_case_26->conditions) )));
          RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, temp_var_27, false )))))) );
          select_case_26->local_info = temp_var_27;
          RogueCmd_List__add__Cmd( ROGUE_ARG(select_case_26->conditions), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, temp_var_27 )))))) );
          select_case_26->value = ((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), t_0, temp_var_27 )))));
          select_case_26->condition_is_value = true;
        }
      }
    }
    if (((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_20->cases) )))->conditions->count > 1)
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[345] ))));
    }
    else if (!!(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_20->cases) )))->value))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[346] ))));
    }
    else
    {
      ((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_20->cases) )))->value = ((RogueCmd_List__remove_at__Int32( ROGUE_ARG(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_20->cases) )))->conditions), 0 )));
      RogueCmd_List__clear( ROGUE_ARG(((RogueCmdSelectCase_List__last( ROGUE_ARG(cmd_select_20->cases) )))->conditions) );
    }
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace), ROGUE_ARG(((RogueString*)(NULL))) );
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_select_20)));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_slash_slash) ))))
  {
    THIS->implicit_access_used = true;
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdImplicitIDAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdImplicitIDAccess*,ROGUE_CREATE_OBJECT(CmdImplicitIDAccess))), t_0, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_dot) ))))
  {
    THIS->implicit_access_used = true;
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_this) ))))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdImplicitAccess__init__Token_CmdAccess( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdImplicitAccess*,ROGUE_CREATE_OBJECT(CmdImplicitAccess))), t_0, ROGUE_ARG(((RogueClassCmdAccess*)(NULL))) ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_28,(((RogueParser__parse_access__Token_Cmd( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_29,(((RogueClassCmdAccess*)(RogueObject_as(cmd_28,RogueTypeCmdAccess)))));
    if (!!(access_29))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdImplicitAccess__init__Token_CmdAccess( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdImplicitAccess*,ROGUE_CREATE_OBJECT(CmdImplicitAccess))), t_0, access_29 ))))));
    }
    else
    {
      return (RogueClassCmd*)(cmd_28);
    }
  }
  else if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_try) ))))
  {
    return (RogueClassCmd*)(((RogueParser__parse_try_expression( ROGUE_ARG(THIS) ))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_assert) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueLogical has_parens_30 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_31,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_32,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_33,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_33 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_34,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (has_parens_30)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    if (!(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode))
    {
      return (RogueClassCmd*)(expr_32);
    }
    if (!(!!(message_33)))
    {
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_35,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_36,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_31->filepath) )))));
      if ((((!!(parse_reader_36) && !!(start_t_31->line)) && !!(start_t_31->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_31->filepath), ROGUE_ARG(end_t_34->filepath) )))))
      {
        RogueParseReader__seek_location__Int32_Int32( parse_reader_36, ROGUE_ARG(start_t_31->line), ROGUE_ARG(start_t_31->column) );
        while ((((RogueParseReader__has_another( parse_reader_36 ))) && (parse_reader_36->line < end_t_34->line || (parse_reader_36->line == end_t_34->line && parse_reader_36->column < end_t_34->column))))
        {
          RogueStringBuilder__print__Character_Logical( buffer_35, ROGUE_ARG(((RogueParseReader__read( parse_reader_36 )))), true );
        }
      }
      message_33 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_35 )))), 0 ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_37,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    temp_var_37->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, temp_var_37, true )))))) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), t_0, expr_32, message_33, temp_var_37 ))))));
  }
  else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_require) ))))
  {
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    RogueLogical has_parens_38 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,start_t_39,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_40,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,message_41,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_vertical_bar) ))))
    {
      message_41 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,end_t_42,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
    if (has_parens_38)
    {
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
    if (!(!!(message_41)))
    {
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_43,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,parse_reader_44,(((RogueTable_String_ParseReader___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(start_t_39->filepath) )))));
      if ((((!!(parse_reader_44) && !!(start_t_39->line)) && !!(start_t_39->column)) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(start_t_39->filepath), ROGUE_ARG(end_t_42->filepath) )))))
      {
        RogueParseReader__seek_location__Int32_Int32( parse_reader_44, ROGUE_ARG(start_t_39->line), ROGUE_ARG(start_t_39->column) );
        while ((((RogueParseReader__has_another( parse_reader_44 ))) && (parse_reader_44->line < end_t_42->line || (parse_reader_44->line == end_t_42->line && parse_reader_44->column < end_t_42->column))))
        {
          RogueStringBuilder__print__Character_Logical( buffer_43, ROGUE_ARG(((RogueParseReader__read( parse_reader_44 )))), true );
        }
      }
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_43, Rogue_literal_strings[347] )))), ROGUE_ARG(THIS->_this_type->name) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(THIS->this_method->name) )))), Rogue_literal_strings[348] );
      message_41 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueStringBuilder__to_String( buffer_43 )))), 0 ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,temp_var_45,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS->this_method), t_0, ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    temp_var_45->_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cur_statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), t_0, temp_var_45, true )))))) );
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdRequire__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdRequire*,ROGUE_CREATE_OBJECT(CmdRequire))), t_0, expr_40, message_41, temp_var_45 ))))));
  }
  else
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueParser__peek( ROGUE_ARG(THIS) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[349], ROGUE_ARG(((RogueObject*)(((RogueParser__peek( ROGUE_ARG(THIS) )))))) )))), Rogue_literal_strings[225] )))) ))));
  }
}

RogueClassCmd* RogueParser__parse_ensure( RogueClassParser* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RogueParser__read( ROGUE_ARG(THIS) )))));
  RogueLogical has_parens_1 = (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,cmd_block_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  RogueLogical first_3 = (true);
  while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_double_ampersand) )))))
  {
    first_3 = ((RogueLogical)false);
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,expr_4,(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdEnsure*,cmd_ensure_5,0);
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_7,(((RogueParser__parse_args__CmdArgs( ROGUE_ARG(THIS), args_6 )))));
      cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, expr_4, args_6, named_args_7 ))));
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_8,(((RogueClassCmdAccess*)(RogueObject_as(expr_4,RogueTypeCmdAccess)))));
      if (!!(access_8))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_9,(access_8->args));
        if (!(!!(args_9)))
        {
          args_9 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
        }
        ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_10,(access_8->named_args));
        access_8->args = ((RogueClassCmdArgs*)(NULL));
        access_8->named_args = ((RogueCmdNamedArg_List*)(NULL));
        cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, ROGUE_ARG(((RogueClassCmd*)(access_8))), args_9, named_args_10 ))));
      }
      else
      {
        cmd_ensure_5 = ((RogueClassCmdEnsure*)((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), t_0, expr_4, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdNamedArg_List*)(NULL))) ))));
      }
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_block_2->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_ensure_5))) );
  }
  if (has_parens_1)
  {
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  if (cmd_block_2->statements->count == 1)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_block_2->statements->data->as_objects[0])));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(cmd_block_2)));
  }
}

RogueClassCmd* RogueParser__parse_function__Token( RogueClassParser* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,parameters_1,0);
  ROGUE_DEF_LOCAL_REF(RogueClassType*,return_type_2,0);
  RogueLogical is_generic_3 = (false);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
  {
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      parameters_1 = ((RogueFnParam_List*)((RogueFnParam_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnParam_List*,ROGUE_CREATE_OBJECT(FnParam_List))) ))));
      RogueLogical first_4 = (true);
      while ((first_4 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_4 = ((RogueLogical)false);
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_5,(((RogueFnParam__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnParam*,ROGUE_CREATE_OBJECT(FnParam))), ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))) )))));
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_6,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
        RogueLogical cur_generic_7 = (false);
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          param_5->_type = ((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )));
        }
        else
        {
          cur_generic_7 = ((RogueLogical)true);
        }
        if ((!!(parameters_1->count) && is_generic_3 != cur_generic_7))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t2_6, Rogue_literal_strings[317] ))));
        }
        is_generic_3 = ((RogueLogical)cur_generic_7);
        RogueFnParam_List__add__FnParam( parameters_1, param_5 );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  RogueLogical parsed_arrow_8 = (false);
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t2_9,(((RogueParser__peek( ROGUE_ARG(THIS) )))));
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_arrow) ))))
  {
    if (is_generic_3)
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t2_9, Rogue_literal_strings[318] ))));
    }
    parsed_arrow_8 = ((RogueLogical)true);
    return_type_2 = ((RogueClassType*)((Rogue_Parser__parse_type( ROGUE_ARG(THIS) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,with_args_10,0);
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_with) ))))
  {
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    if (!(((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) )))))
    {
      with_args_10 = ((RogueFnArg_List*)((RogueFnArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnArg_List*,ROGUE_CREATE_OBJECT(FnArg_List))) ))));
      RogueLogical first_11 = (true);
      while ((first_11 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
      {
        first_11 = ((RogueLogical)false);
        t2_9 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
        ROGUE_DEF_LOCAL_REF(RogueString*,name_12,(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_13,0);
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_equals) ))))
        {
          value_13 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
        }
        else
        {
          value_13 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t2_9, name_12 ))))));
        }
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,arg_14,(((RogueFnArg__init__String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnArg*,ROGUE_CREATE_OBJECT(FnArg))), name_12, value_13 )))));
        if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
        {
          RogueFnArg__set_type__Type( arg_14, ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(THIS) )))) );
        }
        RogueFnArg_List__add__FnArg( with_args_10, arg_14 );
      }
      RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren), ROGUE_ARG(((RogueString*)(NULL))) );
    }
  }
  RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) );
  if (!(parsed_arrow_8))
  {
    t2_9 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_fat_arrow) ))))
    {
      if (((!!(parameters_1) && !!(parameters_1->count)) && !(is_generic_3)))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t2_9, Rogue_literal_strings[319] ))));
      }
      is_generic_3 = ((RogueLogical)true);
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statements_15,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
  if ((!(is_generic_3) && ((RogueParser__consume_eols( ROGUE_ARG(THIS) )))))
  {
    RogueParser__parse_multi_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_15 );
    RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_endFunction), ROGUE_ARG(((RogueString*)(NULL))) );
  }
  else
  {
    RogueParser__parse_single_line_statements__CmdStatementList( ROGUE_ARG(THIS), statements_15 );
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), t_0, parameters_1, return_type_2, with_args_10, statements_15, is_generic_3, ROGUE_ARG(((RogueClassCmd*)(NULL))) ))))));
}

RogueClassCmd* RogueParser__parse_property_table__Token( RogueClassParser* THIS, RogueClassToken* _auto_5762 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,_auto_5762);
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,table_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[306], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace) ))))
  {
    return (RogueClassCmd*)(table_1);
  }
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_2 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,key_3,0);
    if (((RogueParser__next_is_identifier__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString*)(NULL))) ))))
    {
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
      key_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), t_0, ROGUE_ARG(((RogueParser__read_identifier__Logical( ROGUE_ARG(THIS), false )))), 0 ))))));
    }
    else
    {
      key_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_4,0);
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_colon) ))))
    {
      RogueParser__consume_eols( ROGUE_ARG(THIS) );
      t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
      if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace) ))))
      {
        value_4 = ((RogueClassCmd*)((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
      }
      else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
      {
        value_4 = ((RogueClassCmd*)((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
      }
      else
      {
        value_4 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
      }
    }
    else
    {
      value_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true ))))));
    }
    table_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(key_3->t), table_1, Rogue_literal_strings[343], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), key_3, value_4 )))) ))))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_brace), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmd*)(table_1);
}

RogueClassCmd* RogueParser__parse_property_list__Token( RogueClassParser* THIS, RogueClassToken* _auto_5763 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,_auto_5763);
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,list_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[307], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket) ))))
  {
    return (RogueClassCmd*)(list_1);
  }
  RogueLogical first_2 = (true);
  while ((first_2 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_2 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,0);
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_brace) ))))
    {
      value_3 = ((RogueClassCmd*)((RogueParser__parse_property_table__Token( ROGUE_ARG(THIS), t_0 ))));
    }
    else if (((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
    {
      value_3 = ((RogueClassCmd*)((RogueParser__parse_property_list__Token( ROGUE_ARG(THIS), t_0 ))));
    }
    else
    {
      value_3 = ((RogueClassCmd*)((RogueParser__parse_expression( ROGUE_ARG(THIS) ))));
    }
    list_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(value_3->t), list_1, Rogue_literal_strings[342], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), value_3 )))) ))))));
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmd*)(list_1);
}

RogueClassCmd* RogueParser__parse_typed_literal_list__Token_String( RogueClassParser* THIS, RogueClassToken* _auto_5764, RogueString* list_type_name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,_auto_5764);
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTypedLiteralList*,list_2,(((RogueCmdTypedLiteralList__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTypedLiteralList*,ROGUE_CREATE_OBJECT(CmdTypedLiteralList))), t_0, list_type_name_1, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))));
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  RogueParser__consume_eols( ROGUE_ARG(THIS) );
  RogueLogical first_3 = (true);
  while ((first_3 || ((RogueParser__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_3 = ((RogueLogical)false);
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
    t_0 = ((RogueClassToken*)((RogueParser__peek( ROGUE_ARG(THIS) ))));
    if (((RogueParser__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_bracket) ))))
    {
      if (((RogueString__ends_with__String( list_type_name_1, Rogue_literal_strings[340] ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,item_4,(((RogueParser__parse_typed_literal_list__Token_String( ROGUE_ARG(THIS), t_0, ROGUE_ARG(((RogueString__leftmost__Int32( list_type_name_1, -2 )))) )))));
        RogueCmdTypedLiteralList__add__Cmd( list_2, item_4 );
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, Rogue_literal_strings[341] ))));
      }
    }
    else
    {
      RogueCmdTypedLiteralList__add__Cmd( list_2, ROGUE_ARG(((RogueParser__parse_expression( ROGUE_ARG(THIS) )))) );
    }
    RogueParser__consume_eols( ROGUE_ARG(THIS) );
  }
  RogueParser__must_consume__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_bracket), ROGUE_ARG(((RogueString*)(NULL))) );
  return (RogueClassCmd*)(((RogueClassCmd*)(list_2)));
}

RogueClassTokenReader* RogueTokenReader__init_object( RogueClassTokenReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTokenReader*)(THIS);
}

RogueString* RogueTokenReader__type_name( RogueClassTokenReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1006]);
}

RogueClassTokenReader* RogueTokenReader__init__Token_List( RogueClassTokenReader* THIS, RogueToken_List* _auto_689_0 )
{
  THIS->tokens = _auto_689_0;
  THIS->count = THIS->tokens->count;
  return (RogueClassTokenReader*)(THIS);
}

RogueClassError* RogueTokenReader__error__String( RogueClassTokenReader* THIS, RogueString* message_0 )
{
  if (((RogueTokenReader__has_another( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueTokenReader__peek( ROGUE_ARG(THIS) )))), message_0 ))))));
  }
  if (!!(THIS->count))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))), message_0 ))))));
  }
  return (RogueClassError*)(((RogueClassError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))))));
}

RogueLogical RogueTokenReader__has_another( RogueClassTokenReader* THIS )
{
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueLogical RogueTokenReader__next_is__TokenType( RogueClassTokenReader* THIS, RogueClassTokenType* type_0 )
{
  if (THIS->position == THIS->count)
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(((void*)((RogueClassToken*)(THIS->tokens->data->as_objects[THIS->position]))->_type) == ((void*)type_0));
}

RogueLogical RogueTokenReader__next_is_statement_token( RogueClassTokenReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueLogical)(false);
  }
  if ((Rogue_call_ROGUEM112( 29, ROGUE_ARG(((RogueClassToken*)(THIS->tokens->data->as_objects[THIS->position]))->_type) )))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(true);
}

RogueClassToken* RogueTokenReader__peek( RogueClassTokenReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->as_objects[THIS->position])));
}

RogueClassToken* RogueTokenReader__peek__Int32( RogueClassTokenReader* THIS, RogueInt32 num_ahead_0 )
{
  if ((THIS->position + num_ahead_0) >= THIS->count)
  {
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->as_objects[(THIS->position + num_ahead_0)])));
}

RogueClassToken* RogueTokenReader__read( RogueClassTokenReader* THIS )
{
  ++THIS->position;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->tokens->data->as_objects[(THIS->position - 1)])));
}

RogueToken_List* RogueToken_List__init_object( RogueToken_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__init( RogueToken_List* THIS )
{
  RogueToken_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueToken_List*)(THIS);
}

RogueString* RogueToken_List__to_String( RogueToken_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1460_2,(THIS));
    RogueInt32 _auto_1461_3 = (0);
    for (;_auto_1461_3 < _auto_1460_2->count;++_auto_1461_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,value_4,(((RogueClassToken*)(_auto_1460_2->data->as_objects[_auto_1461_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM101( 11, value_4 ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueToken_List__type_name( RogueToken_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1046]);
}

RogueToken_List* RogueToken_List__init__Int32( RogueToken_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassToken*), true );
  }
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__add__Token( RogueToken_List* THIS, RogueClassToken* value_0 )
{
  ((RogueToken_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueToken_List*)(THIS);
}

RogueToken_List* RogueToken_List__add__Token_List( RogueToken_List* THIS, RogueToken_List* other_0 )
{
  RogueToken_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1468_1,(other_0));
    RogueInt32 _auto_1469_2 = (0);
    for (;_auto_1469_2 < _auto_1468_1->count;++_auto_1469_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,value_3,(((RogueClassToken*)(_auto_1468_1->data->as_objects[_auto_1469_2]))));
      RogueToken_List__add__Token( ROGUE_ARG(THIS), value_3 );
    }
  }
  return (RogueToken_List*)(THIS);
}

RogueInt32 RogueToken_List__capacity( RogueToken_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueToken_List* RogueToken_List__discard_from__Int32( RogueToken_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueToken_List*)(THIS);
}

RogueClassToken* RogueToken_List__last( RogueToken_List* THIS )
{
  return (RogueClassToken*)(((RogueClassToken*)(THIS->data->as_objects[(THIS->count - 1)])));
}

RogueToken_List* RogueToken_List__reserve__Int32( RogueToken_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassToken*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueToken_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassToken*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueToken_List*)(THIS);
}

RogueClassToken* RogueToken_List__remove_at__Int32( RogueToken_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,result_1,(((RogueClassToken*)(THIS->data->as_objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,zero_value_2,0);
  THIS->count = (THIS->count + -1);
  THIS->data->as_objects[THIS->count] = zero_value_2;
  return (RogueClassToken*)(result_1);
}

RogueClassToken* RogueToken_List__remove_last( RogueToken_List* THIS )
{
  return (RogueClassToken*)(((RogueToken_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueClassListRewriter_Token_* RogueToken_List__rewriter( RogueToken_List* THIS )
{
  return (RogueClassListRewriter_Token_*)(((RogueListRewriter_Token___init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListRewriter_Token_*,ROGUE_CREATE_OBJECT(ListRewriter_Token_))), ROGUE_ARG(THIS) ))));
}

RogueClassToken* RogueToken__init_object( RogueClassToken* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassToken*)(THIS);
}

RogueString* RogueToken__to_String( RogueClassToken* THIS )
{
  return (RogueString*)(((RogueTokenType__to_String__Token( ROGUE_ARG(THIS->_type), ROGUE_ARG(THIS) ))));
}

RogueString* RogueToken__type_name( RogueClassToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[974]);
}

RogueClassToken* RogueToken__init__TokenType( RogueClassToken* THIS, RogueClassTokenType* _auto_280_0 )
{
  THIS->_type = _auto_280_0;
  return (RogueClassToken*)(THIS);
}

RogueClassRogueError* RogueToken__error__String( RogueClassToken* THIS, RogueString* message_0 )
{
  return (RogueClassRogueError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->line), ROGUE_ARG(THIS->column) ))));
}

RogueString* RogueToken__filename( RogueClassToken* THIS )
{
  if (!(!!(THIS->filepath)))
  {
    return (RogueString*)(Rogue_literal_strings[746]);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,f_0,((Rogue_call_ROGUEM57( 30, ROGUE_ARG(RogueToken_filepath_to_filename), ROGUE_ARG(THIS->filepath) ))));
  if (!!(f_0))
  {
    return (RogueString*)(f_0);
  }
  f_0 = ((RogueString*)(RogueFile__filename__String( ROGUE_ARG(THIS->filepath) )));
  RogueTable_String_String___set__String_String( ROGUE_ARG(RogueToken_filepath_to_filename), ROGUE_ARG(THIS->filepath), f_0 );
  return (RogueString*)(f_0);
}

RogueLogical RogueToken__is_directive( RogueClassToken* THIS )
{
  return (RogueLogical)((Rogue_call_ROGUEM112( 27, ROGUE_ARG(THIS->_type) )));
}

RogueLogical RogueToken__is_structure( RogueClassToken* THIS )
{
  return (RogueLogical)((Rogue_call_ROGUEM112( 29, ROGUE_ARG(THIS->_type) )));
}

RogueString* RogueToken__quoted_name( RogueClassToken* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[206] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM101( 11, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[206] )))) ))));
}

RogueClassToken* RogueToken__set_location__String_Int32_Int32( RogueClassToken* THIS, RogueString* _auto_281_0, RogueInt32 _auto_282_1, RogueInt32 _auto_283_2 )
{
  THIS->column = _auto_283_2;
  THIS->line = _auto_282_1;
  THIS->filepath = _auto_281_0;
  return (RogueClassToken*)(THIS);
}

RogueClassToken* RogueToken__set_location__Token( RogueClassToken* THIS, RogueClassToken* existing_0 )
{
  THIS->filepath = existing_0->filepath;
  THIS->line = existing_0->line;
  THIS->column = existing_0->column;
  return (RogueClassToken*)(THIS);
}

RogueCharacter RogueToken__to_Character( RogueClassToken* THIS )
{
  return (RogueCharacter)(((RogueCharacter)(0)));
}

RogueInt32 RogueToken__to_Int32( RogueClassToken* THIS )
{
  return (RogueInt32)(0);
}

RogueInt64 RogueToken__to_Int64( RogueClassToken* THIS )
{
  return (RogueInt64)(((RogueInt64)((Rogue_call_ROGUEM103( 27, ROGUE_ARG(THIS) )))));
}

RogueReal64 RogueToken__to_Real64( RogueClassToken* THIS )
{
  return (RogueReal64)(0.0);
}

RogueClassType* RogueToken__to_Type( RogueClassToken* THIS )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassTokenType* RogueTokenType__init_object( RogueClassTokenType* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTokenType*)(THIS);
}

RogueString* RogueTokenType__to_String( RogueClassTokenType* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueTokenType__type_name( RogueClassTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[983]);
}

RogueClassTokenType* RogueTokenType__init__String( RogueClassTokenType* THIS, RogueString* _auto_316_0 )
{
  THIS->name = _auto_316_0;
  return (RogueClassTokenType*)(THIS);
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(THIS) )))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Character( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueCharacter value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralCharacterToken__init__TokenType_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralCharacterToken*,ROGUE_CREATE_OBJECT(LiteralCharacterToken))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Int64( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueInt64 value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralInt64Token__init__TokenType_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralInt64Token*,ROGUE_CREATE_OBJECT(LiteralInt64Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Int32( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueInt32 value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralInt32Token__init__TokenType_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralInt32Token*,ROGUE_CREATE_OBJECT(LiteralInt32Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_Real64( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueReal64 value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueLiteralReal64Token__init__TokenType_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLiteralReal64Token*,ROGUE_CREATE_OBJECT(LiteralReal64Token))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__String_Int32_Int32_String( RogueClassTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueStringDataToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStringDataToken*,ROGUE_CREATE_OBJECT(StringDataToken))), ROGUE_ARG(THIS), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueTokenType__create_token__Token( RogueClassTokenType* THIS, RogueClassToken* existing_0 )
{
  return (RogueClassToken*)((Rogue_call_ROGUEM109( 18, ROGUE_ARG(THIS), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column) )));
}

RogueClassToken* RogueTokenType__create_token__Token_String( RogueClassTokenType* THIS, RogueClassToken* existing_0, RogueString* value_1 )
{
  return (RogueClassToken*)((Rogue_call_ROGUEM110( 23, ROGUE_ARG(THIS), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column), value_1 )));
}

RogueLogical RogueTokenType__is_directive( RogueClassTokenType* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueTokenType__is_op_with_assign( RogueClassTokenType* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueTokenType__is_structure( RogueClassTokenType* THIS )
{
  return (RogueLogical)(false);
}

RogueClassTokenType* RogueTokenType__mark_end_command( RogueClassTokenType* THIS )
{
  THIS->is_end_command = true;
  return (RogueClassTokenType*)(THIS);
}

RogueClassTokenType* RogueTokenType__mark_non_method( RogueClassTokenType* THIS )
{
  THIS->is_non_method = true;
  return (RogueClassTokenType*)(THIS);
}

RogueString* RogueTokenType__quoted_name( RogueClassTokenType* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[206] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[206] )))) ))));
}

RogueString* RogueTokenType__to_String__Token( RogueClassTokenType* THIS, RogueClassToken* t_0 )
{
  return (RogueString*)(THIS->name);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init_object( RogueClassTable_String_TokenType_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init( RogueClassTable_String_TokenType_* THIS )
{
  RogueTable_String_TokenType___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueString* RogueTable_String_TokenType___to_String( RogueClassTable_String_TokenType_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TokenType___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TokenType___type_name( RogueClassTable_String_TokenType_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1007]);
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___init__Int32( RogueClassTable_String_TokenType_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_TokenType_*), true );
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueClassTableEntry_String_TokenType_* RogueTable_String_TokenType___find__String( RogueClassTable_String_TokenType_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_2,(((RogueClassTableEntry_String_TokenType_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_TokenType_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_TokenType_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_TokenType_*)(((RogueClassTableEntry_String_TokenType_*)(NULL)));
}

RogueClassTokenType* RogueTable_String_TokenType___get__String( RogueClassTable_String_TokenType_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_1,(((RogueTable_String_TokenType___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassTokenType*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,default_value_2,0);
    return (RogueClassTokenType*)(default_value_2);
  }
}

RogueClassTable_String_TokenType_* RogueTable_String_TokenType___set__String_TokenType( RogueClassTable_String_TokenType_* THIS, RogueString* key_0, RogueClassTokenType* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,entry_2,(((RogueTable_String_TokenType___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_TokenType_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_TokenType____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_TokenType_*)((RogueTableEntry_String_TokenType___init__String_TokenType_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_TokenType_*,ROGUE_CREATE_OBJECT(TableEntry_String_TokenType_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_TokenType_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_TokenType_*)(THIS);
}

RogueStringBuilder* RogueTable_String_TokenType___print_to__StringBuilder( RogueClassTable_String_TokenType_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_TokenType_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_TokenType____grow( RogueClassTable_String_TokenType_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_TokenType_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TokenType_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_TokenType_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_TokenType_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_TokenType____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1091]);
}

RogueClassTableEntry_String_TokenType_* RogueTableEntry_String_TokenType___init_object( RogueClassTableEntry_String_TokenType_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_TokenType_*)(THIS);
}

RogueString* RogueTableEntry_String_TokenType___to_String( RogueClassTableEntry_String_TokenType_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TokenType___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_TokenType___type_name( RogueClassTableEntry_String_TokenType_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[918]);
}

RogueClassTableEntry_String_TokenType_* RogueTableEntry_String_TokenType___init__String_TokenType_Int32( RogueClassTableEntry_String_TokenType_* THIS, RogueString* _key_0, RogueClassTokenType* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_TokenType_*)(THIS);
}

RogueString* RogueArray_Token___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1092]);
}

RogueClassType* RogueType__init_object( RogueClassType* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  THIS->index = -1;
  THIS->base_types = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  THIS->extended_types = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  THIS->definition_list = ((RogueDefinition_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueDefinition_List*,ROGUE_CREATE_OBJECT(Definition_List))) )));
  THIS->definition_lookup = ((RogueTable_String_Definition___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Definition_*,ROGUE_CREATE_OBJECT(Table_String_Definition_))) )));
  THIS->next_enum_offset = 0;
  THIS->global_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  THIS->global_lookup = ((RogueTable_String_Property___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Property_*,ROGUE_CREATE_OBJECT(Table_String_Property_))) )));
  THIS->property_list = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  THIS->property_lookup = ((RogueTable_String_Property___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Property_*,ROGUE_CREATE_OBJECT(Table_String_Property_))) )));
  THIS->global_method_list = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  THIS->global_method_lookup_by_name = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  THIS->global_method_lookup_by_signature = ((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )));
  THIS->method_list = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  THIS->method_lookup_by_name = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  THIS->method_lookup_by_signature = ((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )));
  THIS->is_function = false;
  THIS->method_templates = ((RogueMethodTemplates__init__Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplates*,ROGUE_CREATE_OBJECT(MethodTemplates))), ROGUE_ARG(THIS) )));
  return (RogueClassType*)(THIS);
}

RogueString* RogueType__to_String( RogueClassType* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueType__type_name( RogueClassType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[966]);
}

RogueClassType* RogueType__init__Token_String( RogueClassType* THIS, RogueClassToken* _auto_274_0, RogueString* _auto_275_1 )
{
  THIS->name = _auto_275_1;
  THIS->t = _auto_274_0;
  return (RogueClassType*)(THIS);
}

RogueClassMethod* RogueType__add_method__Token_String( RogueClassType* THIS, RogueClassToken* m_t_0, RogueString* m_name_1 )
{
  return (RogueClassMethod*)(((RogueType__add_method__Method( ROGUE_ARG(THIS), ROGUE_ARG(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), m_t_0, ROGUE_ARG(THIS), m_name_1 )))) ))));
}

RogueClassMethod* RogueType__add_method__Method( RogueClassType* THIS, RogueClassMethod* m_0 )
{
  RogueMethod_List__add__Method( ROGUE_ARG(THIS->method_list), m_0 );
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))));
  if (!(!!(list_1)))
  {
    list_1 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name), list_1 );
  }
  RogueMethod_List__add__Method( list_1, m_0 );
  return (RogueClassMethod*)(m_0);
}

RogueClassMethod* RogueType__add_global_method__Token_String( RogueClassType* THIS, RogueClassToken* r_t_0, RogueString* r_name_1 )
{
  return (RogueClassMethod*)(((RogueType__add_global_method__Method( ROGUE_ARG(THIS), ROGUE_ARG(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), r_t_0, ROGUE_ARG(THIS), r_name_1 )))) ))));
}

RogueClassMethod* RogueType__add_global_method__Method( RogueClassType* THIS, RogueClassMethod* m_0 )
{
  RogueAttributes__add__Int32( ROGUE_ARG(m_0->attributes), 512 );
  if ((THIS->organized && !(THIS->organizing)))
  {
    RogueType__inject_global_method__Method_OptionalInt32( ROGUE_ARG(THIS), m_0, ROGUE_ARG((RogueOptionalInt32__create())) );
    return (RogueClassMethod*)(m_0);
  }
  RogueMethod_List__add__Method( ROGUE_ARG(THIS->global_method_list), m_0 );
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))));
  if (!(!!(list_1)))
  {
    list_1 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name), list_1 );
  }
  RogueMethod_List__add__Method( list_1, m_0 );
  return (RogueClassMethod*)(m_0);
}

RogueClassProperty* RogueType__add_global__Token_String( RogueClassType* THIS, RogueClassToken* s_t_0, RogueString* s_name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_2,(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), s_t_0, ROGUE_ARG(THIS), s_name_1, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  RogueProperty_List__add__Property( ROGUE_ARG(THIS->global_list), s_2 );
  RogueTable_String_Property___set__String_Property( ROGUE_ARG(THIS->global_lookup), s_name_1, s_2 );
  return (RogueClassProperty*)(s_2);
}

RogueClassProperty* RogueType__add_property__Token_String_Type_Cmd( RogueClassType* THIS, RogueClassToken* p_t_0, RogueString* p_name_1, RogueClassType* p_type_2, RogueClassCmd* initial_value_3 )
{
  return (RogueClassProperty*)(((RogueType__add_property__Property( ROGUE_ARG(THIS), ROGUE_ARG(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), p_t_0, ROGUE_ARG(THIS), p_name_1, p_type_2, initial_value_3 )))) ))));
}

RogueClassProperty* RogueType__add_property__Property( RogueClassType* THIS, RogueClassProperty* p_0 )
{
  RogueProperty_List__add__Property( ROGUE_ARG(THIS->property_list), p_0 );
  RogueTable_String_Property___set__String_Property( ROGUE_ARG(THIS->property_lookup), ROGUE_ARG(p_0->name), p_0 );
  return (RogueClassProperty*)(p_0);
}

void RogueType__collect_type_info__Int32_List( RogueClassType* THIS, RogueInt32_List* info_0 )
{
  RogueInt32_List__add__Int32( info_0, 0 );
  if (((RogueType__is_primitive( ROGUE_ARG(THIS) ))))
  {
    RogueInt32_List__add__Int32( info_0, 0 );
  }
  else
  {
    RogueInt32_List__add__Int32( info_0, ROGUE_ARG(THIS->dynamic_method_table_index) );
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,flat_base_types_1,(((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )))));
  if (!!(THIS->base_class))
  {
    RogueType__collect_base_types__Type_List( ROGUE_ARG(THIS->base_class), flat_base_types_1 );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1530_2,(THIS->base_types));
    RogueInt32 _auto_1531_3 = (0);
    for (;_auto_1531_3 < _auto_1530_2->count;++_auto_1531_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1530_2->data->as_objects[_auto_1531_3]))));
      RogueType__collect_base_types__Type_List( base_type_4, flat_base_types_1 );
    }
  }
  RogueInt32_List__add__Int32( info_0, ROGUE_ARG(flat_base_types_1->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1532_5,(flat_base_types_1));
    RogueInt32 _auto_1533_6 = (0);
    for (;_auto_1533_6 < _auto_1532_5->count;++_auto_1533_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_7,(((RogueClassType*)(_auto_1532_5->data->as_objects[_auto_1533_6]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(base_type_7->index) );
    }
  }
  RogueInt32_List__add__Int32( info_0, ROGUE_ARG(THIS->global_list->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1534_8,(THIS->global_list));
    RogueInt32 _auto_1535_9 = (0);
    for (;_auto_1535_9 < _auto_1534_8->count;++_auto_1535_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_1534_8->data->as_objects[_auto_1535_9]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(((RogueProgram__add_literal_string__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_10->name) )))) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1536_11,(THIS->global_list));
    RogueInt32 _auto_1537_12 = (0);
    for (;_auto_1537_12 < _auto_1536_11->count;++_auto_1537_12)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueClassProperty*)(_auto_1536_11->data->as_objects[_auto_1537_12]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(p_13->_type->index) );
    }
  }
  RogueInt32_List__add__Int32( info_0, ROGUE_ARG(THIS->property_list->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1538_14,(THIS->property_list));
    RogueInt32 _auto_1539_15 = (0);
    for (;_auto_1539_15 < _auto_1538_14->count;++_auto_1539_15)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_16,(((RogueClassProperty*)(_auto_1538_14->data->as_objects[_auto_1539_15]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(((RogueProgram__add_literal_string__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_16->name) )))) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1540_17,(THIS->property_list));
    RogueInt32 _auto_1541_18 = (0);
    for (;_auto_1541_18 < _auto_1540_17->count;++_auto_1541_18)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_19,(((RogueClassProperty*)(_auto_1540_17->data->as_objects[_auto_1541_18]))));
      RogueInt32_List__add__Int32( info_0, ROGUE_ARG(p_19->_type->index) );
    }
  }
}

RogueClassCmd* RogueType__create_default_value__Token( RogueClassType* THIS, RogueClassToken* _t_0 )
{
  if (((RogueType__is_reference( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), _t_0 ))))));
  }
  if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), _t_0, ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdArgs*)(NULL))) ))))));
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), _t_0, false ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), _t_0, 0 ))))));
}

void RogueType__dispatch__Visitor( RogueClassType* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Type( v_0, ROGUE_ARG(THIS) );
}

void RogueType__collect_aspect_base_classes( RogueClassType* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1616_0,(THIS->base_types));
    RogueInt32 _auto_1617_1 = (0);
    for (;_auto_1617_1 < _auto_1616_0->count;++_auto_1617_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_2,(((RogueClassType*)(_auto_1616_0->data->as_objects[_auto_1617_1]))));
      if (!!(base_type_2->aspect_base_class))
      {
        if (!(((RogueType_List__locate__Type( ROGUE_ARG(THIS->base_types), ROGUE_ARG(base_type_2->aspect_base_class) ))).exists))
        {
          RogueType_List__add__Type( ROGUE_ARG(THIS->base_types), ROGUE_ARG(base_type_2->aspect_base_class) );
        }
      }
    }
  }
}

RogueClassMethod* RogueType__find_method__String( RogueClassType* THIS, RogueString* signature_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->method_lookup_by_signature), signature_0 )))));
  if (!!(m_1))
  {
    return (RogueClassMethod*)(m_1);
  }
  return (RogueClassMethod*)(((RogueType__find_global_method__String( ROGUE_ARG(THIS), signature_0 ))));
}

RogueClassMethod* RogueType__find_global_method__String( RogueClassType* THIS, RogueString* signature_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->global_method_lookup_by_signature), signature_0 )))));
  if (!!(m_1))
  {
    return (RogueClassMethod*)(m_1);
  }
  return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
}

RogueClassProperty* RogueType__find_property__String( RogueClassType* THIS, RogueString* _auto_5765 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,p_name_0,_auto_5765);
  if (RogueString_character_at(p_name_0,0) == (RogueCharacter)'@')
  {
    p_name_0 = ((RogueString*)((RogueString__rightmost__Int32( p_name_0, -1 ))));
  }
  return (RogueClassProperty*)(((RogueTable_String_Property___get__String( ROGUE_ARG(THIS->property_lookup), p_name_0 ))));
}

RogueClassProperty* RogueType__find_global__String( RogueClassType* THIS, RogueString* _auto_5766 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,s_name_0,_auto_5766);
  if (RogueString_character_at(s_name_0,0) == (RogueCharacter)'@')
  {
    s_name_0 = ((RogueString*)((RogueString__rightmost__Int32( s_name_0, -1 ))));
  }
  return (RogueClassProperty*)(((RogueTable_String_Property___get__String( ROGUE_ARG(THIS->global_lookup), s_name_0 ))));
}

RogueLogical RogueType__has_extended_class( RogueClassType* THIS )
{
  return (RogueLogical)(!!(THIS->extended_types->count));
}

RogueLogical RogueType__has_method_named__String( RogueClassType* THIS, RogueString* m_name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), m_name_0 )))));
  if ((!!(list_1) && !!(list_1->count)))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(false);
}

RogueLogical RogueType__has_global_method_named__String( RogueClassType* THIS, RogueString* m_name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_1,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), m_name_0 )))));
  return (RogueLogical)((!!(list_1) && !!(list_1->count)));
}

RogueLogical RogueType__instance_of__Type( RogueClassType* THIS, RogueClassType* ancestor_type_0 )
{
  if (((void*)THIS) == ((void*)ancestor_type_0))
  {
    return (RogueLogical)(true);
  }
  if ((((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null) && ((RogueType__is_reference( ancestor_type_0 )))))
  {
    return (RogueLogical)(true);
  }
  if ((((RogueType__is_reference( ROGUE_ARG(THIS) ))) && ((void*)ancestor_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)))
  {
    return (RogueLogical)(true);
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1618_1,(THIS->base_types));
    RogueInt32 _auto_1619_2 = (0);
    for (;_auto_1619_2 < _auto_1618_1->count;++_auto_1619_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1618_1->data->as_objects[_auto_1619_2]))));
      if (((RogueType__instance_of__Type( base_type_3, ancestor_type_0 ))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)(false);
}

RogueLogical RogueType__is_compatible_with__Type( RogueClassType* THIS, RogueClassType* other_0 )
{
  if (((void*)THIS) == ((void*)other_0))
  {
    return (RogueLogical)(true);
  }
  if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) && ((RogueType__is_primitive( other_0 )))))
  {
    if ((((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical) ^ ((void*)other_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical)))
    {
      return (RogueLogical)(false);
    }
    return (RogueLogical)(true);
  }
  if (other_0->is_optional)
  {
    if (((void*)other_0->_element_type) == ((void*)THIS))
    {
      return (RogueLogical)(true);
    }
    if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null))
    {
      return (RogueLogical)(true);
    }
    if (((RogueType__is_primitive( ROGUE_ARG(other_0->_element_type) ))))
    {
      if (((RogueType__is_primitive( ROGUE_ARG(THIS) ))))
      {
        return (RogueLogical)(!((((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical) ^ ((void*)other_0->_element_type) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))));
      }
      else if ((THIS->is_optional && ((RogueType__is_primitive( ROGUE_ARG(THIS->_element_type) )))))
      {
        return (RogueLogical)(!((((void*)THIS->_element_type) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical) ^ ((void*)other_0->_element_type) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))));
      }
    }
  }
  if ((((RogueType__is_aspect( ROGUE_ARG(THIS) ))) && ((void*)other_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(((RogueType__instance_of__Type( ROGUE_ARG(THIS), other_0 ))));
}

RogueLogical RogueType__is_equivalent_or_more_specific_than__Type( RogueClassType* THIS, RogueClassType* other_0 )
{
  if (((void*)THIS) == ((void*)other_0))
  {
    return (RogueLogical)(true);
  }
  if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) && ((RogueType__is_primitive( other_0 )))))
  {
    return (RogueLogical)(((RogueType__primitive_rank( ROGUE_ARG(THIS) ))) >= ((RogueType__primitive_rank( other_0 ))));
  }
  if (((RogueType__instance_of__Type( ROGUE_ARG(THIS), other_0 ))))
  {
    return (RogueLogical)(true);
  }
  if ((other_0->is_list && ((void*)other_0->_element_type) == ((void*)THIS)))
  {
    return (RogueLogical)(true);
  }
  return (RogueLogical)(false);
}

RogueLogical RogueType__is_abstract( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 131072)) )));
}

RogueLogical RogueType__is_aspect( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->attributes->flags & 7) == 1);
}

RogueLogical RogueType__is_class( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->attributes->flags & 7) == 0);
}

RogueLogical RogueType__is_compound( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->attributes->flags & 7) == 3);
}

RogueLogical RogueType__is_native( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32)) )));
}

RogueLogical RogueType__is_primitive( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->attributes->flags & 7) == 2);
}

RogueLogical RogueType__is_reference( RogueClassType* THIS )
{
  switch ((THIS->attributes->flags & 7))
  {
    case 0:
    case 1:
    {
      return (RogueLogical)(true);
      break;
    }
    default:
    {
      return (RogueLogical)(false);
    }
  }
}

RogueLogical RogueType__is_api( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 16)) )));
}

RogueLogical RogueType__is_essential( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 8192)) )));
}

RogueLogical RogueType__is_routine( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 262144)) )));
}

RogueLogical RogueType__is_singleton( RogueClassType* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 1024)) )));
}

RogueClassType* RogueType__make_api( RogueClassType* THIS )
{
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 16 );
  return (RogueClassType*)(THIS);
}

RogueClassType* RogueType__make_essential( RogueClassType* THIS )
{
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 8192 );
  return (RogueClassType*)(THIS);
}

RogueClassType* RogueType__configure__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  if (THIS->configured)
  {
    return (RogueClassType*)(THIS);
  }
  THIS->configured = true;
  RogueType_List__add__Type( ROGUE_ARG(RogueType_configure_chain), ROGUE_ARG(THIS) );
  THIS->index = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list->count;
  RogueType_List__add__Type( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_list), ROGUE_ARG(THIS) );
  if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->all_essential)
  {
    RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 16 );
    RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 8192 );
  }
  if (!(THIS->defined))
  {
    THIS->defined = true;
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_1,(((RogueProgram__find_template__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )))));
    if (!!(template_1))
    {
      RogueTemplate__instantiate__Type_Scope( template_1, ROGUE_ARG(THIS), scope_0 );
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[543] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[225] )))) )))) ))));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassListRewriter_Type_*,rewriter_2,(((RogueType_List__rewriter( ROGUE_ARG(THIS->base_types) )))));
    while (((RogueListRewriter_Type___has_another( rewriter_2 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueListRewriter_Type___read( rewriter_2 )))));
      RogueType__configure__Scope( base_type_3, scope_0 );
      if (!(((RogueType__is_aspect( base_type_3 )))))
      {
        if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
        {
          if (!!(THIS->aspect_base_class))
          {
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[544] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_3))) )))) )))), Rogue_literal_strings[445] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->aspect_base_class))) )))) )))), Rogue_literal_strings[545] )))) )))) ))));
          }
          else
          {
            THIS->aspect_base_class = base_type_3;
          }
        }
        else if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[546] ))));
        }
        else
        {
          RogueListRewriter_Type___write__Type( rewriter_2, base_type_3 );
        }
      }
      else
      {
        RogueListRewriter_Type___write__Type( rewriter_2, base_type_3 );
      }
      if (((RogueType__instance_of__Type( base_type_3, ROGUE_ARG(THIS) ))))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[547] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS))) )))) )))), Rogue_literal_strings[548] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_3))) )))) )))), Rogue_literal_strings[549] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_3))) )))) )))), Rogue_literal_strings[550] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
      }
    }
  }
  if (((RogueType__is_class( ROGUE_ARG(THIS) ))))
  {
    RogueType__collect_aspect_base_classes( ROGUE_ARG(THIS) );
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1623_4,(THIS->base_types));
      RogueInt32 _auto_1624_5 = (0);
      for (;_auto_1624_5 < _auto_1623_4->count;++_auto_1624_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_6,(((RogueClassType*)(_auto_1623_4->data->as_objects[_auto_1624_5]))));
        if (((RogueType__is_class( base_type_6 ))))
        {
          if ((!!(THIS->base_class) && ((void*)THIS->base_class) != ((void*)base_type_6)))
          {
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[551] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->base_class))) )))) )))), Rogue_literal_strings[445] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(base_type_6))) )))) )))), Rogue_literal_strings[552] )))) )))) ))));
          }
          else
          {
            THIS->base_class = base_type_6;
          }
        }
      }
    }
    if ((!(!!(THIS->base_class)) && ((void*)THIS) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object)))
    {
      RogueType__configure__Scope( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      THIS->base_class = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object;
      RogueType_List__insert__Type_Int32( ROGUE_ARG(THIS->base_types), ROGUE_ARG(THIS->base_class), 0 );
    }
    if (!!(THIS->base_class))
    {
      RogueType_List__insert__Type_Int32( ROGUE_ARG(THIS->base_types), ROGUE_ARG(((RogueType_List__remove__Type( ROGUE_ARG(THIS->base_types), ROGUE_ARG(THIS->base_class) )))), 0 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1625_7,(THIS->base_types));
    RogueInt32 _auto_1626_8 = (0);
    for (;_auto_1626_8 < _auto_1625_7->count;++_auto_1626_8)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_9,(((RogueClassType*)(_auto_1625_7->data->as_objects[_auto_1626_8]))));
      RogueType_List__add__Type( ROGUE_ARG(base_type_9->extended_types), ROGUE_ARG(THIS) );
    }
  }
  if (!!(THIS->_element_type))
  {
    RogueType__configure__Scope( ROGUE_ARG(THIS->_element_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1627_10,(THIS->global_list));
    RogueInt32 _auto_1628_11 = (0);
    for (;_auto_1628_11 < _auto_1627_10->count;++_auto_1628_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_12,(((RogueClassProperty*)(_auto_1627_10->data->as_objects[_auto_1628_11]))));
      RogueType__configure__Scope( ROGUE_ARG(p_12->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1629_13,(THIS->property_list));
    RogueInt32 _auto_1630_14 = (0);
    for (;_auto_1630_14 < _auto_1629_13->count;++_auto_1630_14)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_15,(((RogueClassProperty*)(_auto_1629_13->data->as_objects[_auto_1630_14]))));
      RogueType__configure__Scope( ROGUE_ARG(p_15->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  RogueType_List__remove_last( ROGUE_ARG(RogueType_configure_chain) );
  return (RogueClassType*)(THIS);
}

RogueClassType* RogueType__organize__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  if (THIS->organized)
  {
    return (RogueClassType*)(THIS);
  }
  RogueType_List__add__Type( ROGUE_ARG(RogueType_organize_chain), ROGUE_ARG(THIS) );
  THIS->organized = true;
  THIS->organizing = true;
  RogueType__configure__Scope( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1631_16,(THIS->base_types));
    RogueInt32 _auto_1632_17 = (0);
    for (;_auto_1632_17 < _auto_1631_16->count;++_auto_1632_17)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_18,(((RogueClassType*)(_auto_1631_16->data->as_objects[_auto_1632_17]))));
      RogueType__organize__Scope( base_type_18, scope_0 );
    }
  }
  if (((void*)THIS) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object))
  {
    RogueType__organize__Scope( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1633_19,(THIS->base_types));
    RogueInt32 _auto_1634_20 = (0);
    for (;_auto_1634_20 < _auto_1633_19->count;++_auto_1634_20)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_21,(((RogueClassType*)(_auto_1633_19->data->as_objects[_auto_1634_20]))));
      RogueType__inherit_definitions__Type( ROGUE_ARG(THIS), base_type_21 );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueProperty_List*,full_property_list_1,(((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )))));
  RogueTable_String_Property___clear( ROGUE_ARG(THIS->property_lookup) );
  RogueType__inherit_properties__Property_List_Table_String_Property_( ROGUE_ARG(THIS), full_property_list_1, ROGUE_ARG(THIS->property_lookup) );
  THIS->property_list = full_property_list_1;
  RogueType__create_introspection_methods__Scope( ROGUE_ARG(THIS), scope_0 );
  RogueType__inherit_methods__Scope( ROGUE_ARG(THIS), scope_0 );
  if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
  {
    RogueType_List__clear( ROGUE_ARG(THIS->base_types) );
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_class_2,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[464] )))));
  if (!!(m_init_class_2))
  {
    if (((void*)m_init_class_2->type_context) == ((void*)THIS))
    {
      RogueMethod__make_essential( m_init_class_2 );
    }
  }
  else
  {
    m_init_class_2 = ((RogueClassMethod*)((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[464] ))));
    if (!!(m_init_class_2))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(m_init_class_2->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[465] )))) )))) ))));
    }
  }
  if (!!(THIS->global_list->count))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[464] )))));
    if ((!(!!(m_3)) || ((void*)m_3->type_context) != ((void*)THIS)))
    {
      m_3 = ((RogueClassMethod*)((RogueMethod__organize__Scope_Logical( ROGUE_ARG(((RogueType__add_global_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[466] )))), scope_0, true ))));
    }
    RogueMethod__make_essential( m_3 );
    RogueInt32 i_4 = ((THIS->global_list->count - 1));
    while (i_4 >= 0)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_5,(((RogueClassProperty*)(THIS->global_list->data->as_objects[i_4]))));
      if (!!(s_5->initial_value))
      {
        RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)m_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(s_5->t), s_5, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(s_5->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) )))))), 0 );
      }
      --i_4;
    }
  }
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && !(((RogueType__is_native( ROGUE_ARG(THIS) ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_6,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[467] )))));
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,prior_m_7,(m_6));
    if ((!!(m_6) && ((void*)m_6->type_context) == ((void*)THIS)))
    {
      RogueMethod__make_essential( m_6 );
    }
    else
    {
      m_6 = ((RogueClassMethod*)((RogueMethod__organize__Scope_Logical( ROGUE_ARG(((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[468] )))), scope_0, true ))));
      RogueMethod__make_essential( m_6 );
      RogueAttributes__add__Int32( ROGUE_ARG(m_6->attributes), 4194304 );
      if (!!(prior_m_7))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_6 );
        THIS->method_list->data->as_objects[((RogueMethod_List__locate__Method( ROGUE_ARG(THIS->method_list), prior_m_7 ))).value] = m_6;
        RogueMethod_List__remove__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_6->name) )))), prior_m_7 );
        RogueTable_String_Method___set__String_Method( ROGUE_ARG(THIS->method_lookup_by_signature), ROGUE_ARG(m_6->signature), m_6 );
        m_6->overridden_method = prior_m_7;
        RogueMethod_List__add__Method( ROGUE_ARG(prior_m_7->overriding_methods), m_6 );
      }
    }
    m_6->_return_type = THIS;
    RogueInt32 i_8 = ((THIS->property_list->count - 1));
    while (i_8 >= 0)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_9,(((RogueClassProperty*)(THIS->property_list->data->as_objects[i_8]))));
      if ((!!(p_9->initial_value) && ((void*)p_9->type_context) == ((void*)THIS)))
      {
        RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)m_6->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(p_9->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(p_9->t), ROGUE_ARG(p_9->type_context) )))))))), p_9, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(p_9->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) )))))), 0 );
      }
      --i_8;
    }
    if (!!(m_6->overridden_method))
    {
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)m_6->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallPriorMethod*,ROGUE_CREATE_OBJECT(CmdCallPriorMethod))), ROGUE_ARG(THIS->t), Rogue_literal_strings[468], ROGUE_ARG(((RogueClassCmdArgs*)(NULL))), ROGUE_ARG(((RogueCmdNamedArg_List*)(NULL))) )))))), 0 );
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_6->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) )))))))) )))))) );
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_6->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), ROGUE_ARG(THIS), m_6 )))))) );
  }
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && !(((RogueType__is_native( ROGUE_ARG(THIS) ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[469] )))));
    if ((!!(m_10) && ((void*)m_10->type_context) == ((void*)THIS)))
    {
      if (!!(m_10->_return_type))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(m_10->t), Rogue_literal_strings[470] ))));
      }
      RogueMethod__make_essential( m_10 );
    }
  }
  if ((((RogueType__is_class( ROGUE_ARG(THIS) ))) && ((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[471] )))));
    if (!!(m_11))
    {
      RogueMethod__make_essential( m_11 );
    }
  }
  if ((((RogueType__is_compound( ROGUE_ARG(THIS) ))) || ((RogueType__is_primitive( ROGUE_ARG(THIS) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_12,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[471] )))));
    if (!(!!(m_12)))
    {
      m_12 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[472] ))));
      m_12->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String;
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_12->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[12] )))) )))), 0 )))))) )))))) );
      RogueMethod__organize__Scope_Logical( m_12, scope_0, true );
    }
  }
  if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1637_22,(THIS->property_list));
      RogueInt32 _auto_1638_23 = (0);
      for (;_auto_1638_23 < _auto_1637_22->count;++_auto_1638_23)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_24,(((RogueClassProperty*)(_auto_1637_22->data->as_objects[_auto_1638_23]))));
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_13,(((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(p_24->name), Rogue_literal_strings[348] )))) )))));
        if (!(!!(m_13)))
        {
          m_13 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(p_24->t), ROGUE_ARG(p_24->name) ))));
          RogueAttributes__add__Int32( ROGUE_ARG(m_13->attributes), 524288 );
          m_13->_return_type = p_24->_type;
          RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_13->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(p_24->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(p_24->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[146], ROGUE_ARG(p_24->name) )))) )))))) )))))) );
          RogueMethod__organize__Scope_Logical( m_13, scope_0, true );
        }
        m_13 = ((RogueClassMethod*)((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[369] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_24->name) )))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_24->_type))) )))) )))), Rogue_literal_strings[12] )))) )))) ))));
        if (!(!!(m_13)))
        {
          m_13 = ((RogueClassMethod*)((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(p_24->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[369], ROGUE_ARG(p_24->name) )))) ))));
          RogueMethod__add_parameter__Token_String_Type( m_13, ROGUE_ARG(p_24->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[146], ROGUE_ARG(p_24->name) )))), ROGUE_ARG(((RogueClassType*)(NULL))) );
          RogueAttributes__add__Int32( ROGUE_ARG(m_13->attributes), 524288 );
          m_13->_return_type = THIS;
          RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_13->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(p_24->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(p_24->t), ROGUE_ARG(THIS) )))))))) )))))) );
          RogueMethod__organize__Scope_Logical( m_13, scope_0, true );
        }
      }
    }
  }
  if (((void*)THIS) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray))
  {
    THIS->is_array = ((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray) )));
    if (THIS->is_array)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,cur_type_14,(THIS));
      while (!(((RogueString__begins_with__String( ROGUE_ARG(cur_type_14->name), Rogue_literal_strings[474] )))))
      {
        cur_type_14 = ((RogueClassType*)cur_type_14->base_class);
        if (((void*)cur_type_14) == ((void*)NULL))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[473] ))));
        }
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,element_type_name_15,(((RogueString__before_last__String( ROGUE_ARG(((RogueString__after_first__String( ROGUE_ARG(cur_type_14->name), Rogue_literal_strings[172] )))), Rogue_literal_strings[75] )))));
      THIS->_element_type = ((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), element_type_name_15 )))), scope_0 )));
    }
  }
  RogueType__index_and_move_inline_to_end__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->global_method_list) );
  RogueType__index_and_move_inline_to_end__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->method_list) );
  THIS->organizing = false;
  RogueType_List__remove_last( ROGUE_ARG(RogueType_organize_chain) );
  return (RogueClassType*)(THIS);
}

RogueInt32 RogueType__primitive_rank( RogueClassType* THIS )
{
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueInt32)(7);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))
  {
    return (RogueInt32)(6);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))
  {
    return (RogueInt32)(5);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueInt32)(4);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))
  {
    return (RogueInt32)(3);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
  {
    return (RogueInt32)(2);
  }
  if (((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueInt32)(1);
  }
  return (RogueInt32)(0);
}

void RogueType__collect_base_types__Type_List( RogueClassType* THIS, RogueType_List* list_0 )
{
  if (((RogueType_List__locate__Type( list_0, ROGUE_ARG(THIS) ))).exists)
  {
    return;
  }
  RogueType_List__add__Type( list_0, ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1639_1,(THIS->base_types));
    RogueInt32 _auto_1640_2 = (0);
    for (;_auto_1640_2 < _auto_1639_1->count;++_auto_1640_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1639_1->data->as_objects[_auto_1640_2]))));
      RogueType__collect_base_types__Type_List( base_type_3, list_0 );
    }
  }
}

void RogueType__cull_unused_methods( RogueClassType* THIS )
{
  if (THIS->culled)
  {
    return;
  }
  THIS->culled = true;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1641_3,(THIS->base_types));
    RogueInt32 _auto_1642_4 = (0);
    for (;_auto_1642_4 < _auto_1641_3->count;++_auto_1642_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_5,(((RogueClassType*)(_auto_1641_3->data->as_objects[_auto_1642_4]))));
      RogueType__cull_unused_methods( base_type_5 );
    }
  }
  RogueInt32 i_0 = ((THIS->method_list->count - 1));
  while (i_0 >= 0)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueClassMethod*)(THIS->method_list->data->as_objects[i_0]))));
    if (((RogueMethod__is_macro( m_1 ))))
    {
      RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_1 );
    }
    --i_0;
  }
  if (!(((RogueType__has_extended_class( ROGUE_ARG(THIS) )))))
  {
    i_0 = ((RogueInt32)(THIS->method_list->count - 1));
    while (i_0 >= 0)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueClassMethod*)(THIS->method_list->data->as_objects[i_0]))));
      if (!(m_2->is_used))
      {
        if ((!(!!(THIS->base_class)) || THIS->base_class->method_list->count <= i_0))
        {
          RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_2 );
        }
      }
      --i_0;
    }
  }
  i_0 = ((RogueInt32)0);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1643_6,(THIS->method_list));
    RogueInt32 _auto_1644_7 = (0);
    for (;_auto_1644_7 < _auto_1643_6->count;++_auto_1644_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_8,(((RogueClassMethod*)(_auto_1643_6->data->as_objects[_auto_1644_7]))));
      m_8->index = i_0;
      ++i_0;
    }
  }
}

RogueLogical RogueType__has_global_references( RogueClassType* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1645_0,(THIS->global_list));
    RogueInt32 _auto_1646_1 = (0);
    for (;_auto_1646_1 < _auto_1645_0->count;++_auto_1646_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_2,(((RogueClassProperty*)(_auto_1645_0->data->as_objects[_auto_1646_1]))));
      if (((RogueType__is_reference( ROGUE_ARG(g_2->_type) ))))
      {
        return (RogueLogical)(true);
      }
      if ((((RogueType__is_compound( ROGUE_ARG(g_2->_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(g_2->_type) )))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)(false);
}

RogueLogical RogueType__has_object_references( RogueClassType* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1647_0,(THIS->property_list));
    RogueInt32 _auto_1648_1 = (0);
    for (;_auto_1648_1 < _auto_1647_0->count;++_auto_1648_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_2,(((RogueClassProperty*)(_auto_1647_0->data->as_objects[_auto_1648_1]))));
      if (((RogueType__is_reference( ROGUE_ARG(p_2->_type) ))))
      {
        return (RogueLogical)(true);
      }
      if ((((RogueType__is_compound( ROGUE_ARG(p_2->_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(p_2->_type) )))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)((THIS->is_array && ((RogueType__has_object_references( ROGUE_ARG(THIS->_element_type) )))));
}

RogueLogical RogueType__is_reference_array( RogueClassType* THIS )
{
  return (RogueLogical)((THIS->is_array && ((RogueType__is_reference( ROGUE_ARG(THIS->_element_type) )))));
}

void RogueType__inherit_definitions__Type( RogueClassType* THIS, RogueClassType* from_type_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueDefinition_List*,_auto_1649_1,(from_type_0->definition_list));
    RogueInt32 _auto_1650_2 = (0);
    for (;_auto_1650_2 < _auto_1649_1->count;++_auto_1650_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_3,(((RogueClassDefinition*)(_auto_1649_1->data->as_objects[_auto_1650_2]))));
      if (!(((RogueTable_String_Definition___contains__String( ROGUE_ARG(THIS->definition_lookup), ROGUE_ARG(def_3->name) )))))
      {
        RogueDefinition_List__add__Definition( ROGUE_ARG(THIS->definition_list), def_3 );
        RogueTable_String_Definition___set__String_Definition( ROGUE_ARG(THIS->definition_lookup), ROGUE_ARG(def_3->name), ROGUE_ARG(((RogueTable_String_Definition___get__String( ROGUE_ARG(from_type_0->definition_lookup), ROGUE_ARG(def_3->name) )))) );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1651_4,(from_type_0->base_types));
    RogueInt32 _auto_1652_5 = (0);
    for (;_auto_1652_5 < _auto_1651_4->count;++_auto_1652_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_6,(((RogueClassType*)(_auto_1651_4->data->as_objects[_auto_1652_5]))));
      RogueType__inherit_definitions__Type( ROGUE_ARG(THIS), base_type_6 );
    }
  }
}

void RogueType__inherit_properties__Property_List_Table_String_Property_( RogueClassType* THIS, RogueProperty_List* list_0, RogueClassTable_String_Property_* lookup_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1653_2,(THIS->base_types));
    RogueInt32 _auto_1654_3 = (0);
    for (;_auto_1654_3 < _auto_1653_2->count;++_auto_1654_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1653_2->data->as_objects[_auto_1654_3]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1655_5,(base_type_4->property_list));
        RogueInt32 _auto_1656_6 = (0);
        for (;_auto_1656_6 < _auto_1655_5->count;++_auto_1656_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,base_p_7,(((RogueClassProperty*)(_auto_1655_5->data->as_objects[_auto_1656_6]))));
          RogueType__inherit_property__Property_Property_List_Table_String_Property_( ROGUE_ARG(THIS), base_p_7, list_0, lookup_1 );
        }
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1657_8,(THIS->property_list));
    RogueInt32 _auto_1658_9 = (0);
    for (;_auto_1658_9 < _auto_1657_8->count;++_auto_1658_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_1657_8->data->as_objects[_auto_1658_9]))));
      RogueType__inherit_property__Property_Property_List_Table_String_Property_( ROGUE_ARG(THIS), p_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_property__Property_Property_List_Table_String_Property_( RogueClassType* THIS, RogueClassProperty* _auto_5767, RogueProperty_List* list_1, RogueClassTable_String_Property_* lookup_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_0,_auto_5767);
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,existing_p_3,(((RogueTable_String_Property___get__String( lookup_2, ROGUE_ARG(p_0->name) )))));
  if (!!(existing_p_3))
  {
    RogueInt32 i_4 = (((RogueProperty_List__locate__Property( list_1, existing_p_3 ))).value);
    if (((((void*)p_0->type_context) == ((void*)existing_p_3->type_context) && !(((RogueProperty__is_incorporated( p_0 ))))) && !(((RogueProperty__is_incorporated( existing_p_3 ))))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[423] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[424] )))) )))) ))));
    }
    else if (((void*)p_0->_type) == ((void*)existing_p_3->_type))
    {
      if (!!(p_0->initial_value))
      {
        if (!!(existing_p_3->initial_value))
        {
          if (((RogueType__instance_of__Type( ROGUE_ARG(p_0->_type), ROGUE_ARG(existing_p_3->_type) ))))
          {
            if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
            {
              p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__cloned( p_0 )))), ROGUE_ARG(THIS) ))));
              RogueProperty__mark_incorporated( p_0 );
            }
            list_1->data->as_objects[i_4] = p_0;
            RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
          }
          else
          {
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[443] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[444] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->type_context))) )))) )))), Rogue_literal_strings[445] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->type_context))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
          }
        }
        else
        {
          if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
          {
            p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__cloned( p_0 )))), ROGUE_ARG(THIS) ))));
            RogueProperty__mark_incorporated( p_0 );
          }
          list_1->data->as_objects[i_4] = p_0;
          RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
        }
      }
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(p_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[446] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[447] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->_type))) )))) )))), Rogue_literal_strings[347] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(p_0->type_context))) )))) )))), Rogue_literal_strings[445] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_0->name) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->_type))) )))) )))), Rogue_literal_strings[347] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_p_3->type_context))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
    }
  }
  else
  {
    if (((RogueType__is_aspect( ROGUE_ARG(p_0->type_context) ))))
    {
      p_0 = ((RogueClassProperty*)((RogueProperty__set_type_context__Type( ROGUE_ARG(((RogueProperty__cloned( p_0 )))), ROGUE_ARG(THIS) ))));
      RogueProperty__mark_incorporated( p_0 );
    }
    RogueProperty_List__add__Property( list_1, p_0 );
    RogueTable_String_Property___set__String_Property( lookup_2, ROGUE_ARG(p_0->name), p_0 );
  }
}

void RogueType__create_introspection_methods__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_type_name_1,(((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[448] )))));
  m_type_name_1->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_type_name_1->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), 0 )))))) )))))) );
  if ((((RogueType__is_compound( ROGUE_ARG(THIS) ))) || ((RogueType__is_primitive( ROGUE_ARG(THIS) )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_type_info_2,(((RogueType__add_method__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[449] )))));
    m_type_info_2->_return_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), Rogue_literal_strings[380] )));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_type_info_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[450] )))))), Rogue_literal_strings[449], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), 0 )))))) )))) )))))) )))))) );
  }
}

void RogueType__inherit_methods__Scope( RogueClassType* THIS, RogueClassScope* scope_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1659_6,(THIS->base_types));
    RogueInt32 _auto_1660_7 = (0);
    for (;_auto_1660_7 < _auto_1659_6->count;++_auto_1660_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_8,(((RogueClassType*)(_auto_1659_6->data->as_objects[_auto_1660_7]))));
      if (!!(base_type_8->method_templates))
      {
        if (!(!!(THIS->method_templates)))
        {
          THIS->method_templates = ((RogueMethodTemplates__init__Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplates*,ROGUE_CREATE_OBJECT(MethodTemplates))), ROGUE_ARG(THIS) )));
        }
        RogueMethodTemplates__inherit__MethodTemplates_Type( ROGUE_ARG(THIS->method_templates), ROGUE_ARG(base_type_8->method_templates), ROGUE_ARG(THIS) );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1661_9,(THIS->global_method_list));
    RogueInt32 _auto_1662_10 = (0);
    for (;_auto_1662_10 < _auto_1661_9->count;++_auto_1662_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueClassMethod*)(_auto_1661_9->data->as_objects[_auto_1662_10]))));
      RogueMethod__organize__Scope_Logical( m_11, scope_0, true );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1663_12,(THIS->method_list));
    RogueInt32 _auto_1664_13 = (0);
    for (;_auto_1664_13 < _auto_1663_12->count;++_auto_1664_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueClassMethod*)(_auto_1663_12->data->as_objects[_auto_1664_13]))));
      RogueMethod__organize__Scope_Logical( m_14, scope_0, true );
    }
  }
  RogueTable_String_Method___clear( ROGUE_ARG(THIS->global_method_lookup_by_signature) );
  RogueTable_String_Method_List___clear( ROGUE_ARG(THIS->global_method_lookup_by_name) );
  RogueTable_String_Method___clear( ROGUE_ARG(THIS->method_lookup_by_signature) );
  RogueTable_String_Method_List___clear( ROGUE_ARG(THIS->method_lookup_by_name) );
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,full_routine_list_1,(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))));
  RogueType__inherit_global_methods__Method_List_Table_String_Method_( ROGUE_ARG(THIS), full_routine_list_1, ROGUE_ARG(THIS->global_method_lookup_by_signature) );
  THIS->global_method_list = full_routine_list_1;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1665_15,(THIS->global_method_list));
    RogueInt32 _auto_1666_16 = (0);
    for (;_auto_1666_16 < _auto_1665_15->count;++_auto_1666_16)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_17,(((RogueClassMethod*)(_auto_1665_15->data->as_objects[_auto_1666_16]))));
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_2,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(r_17->name) )))));
      if (!(!!(list_2)))
      {
        list_2 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
        RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(r_17->name), list_2 );
      }
      RogueMethod_List__add__Method( list_2, r_17 );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,full_method_list_3,(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))));
  RogueType__inherit_methods__Method_List_Table_String_Method_( ROGUE_ARG(THIS), full_method_list_3, ROGUE_ARG(THIS->method_lookup_by_signature) );
  THIS->method_list = full_method_list_3;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1667_18,(THIS->method_list));
    RogueInt32 _auto_1668_19 = (0);
    for (;_auto_1668_19 < _auto_1667_18->count;++_auto_1668_19)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_20,(((RogueClassMethod*)(_auto_1667_18->data->as_objects[_auto_1668_19]))));
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_4,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_20->name) )))));
      if (!(!!(list_4)))
      {
        list_4 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
        RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_20->name), list_4 );
      }
      RogueMethod_List__add__Method( list_4, m_20 );
    }
  }
  if (!!(THIS->method_templates))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1669_21,(THIS->method_list));
      RogueInt32 _auto_1670_22 = (0);
      for (;_auto_1670_22 < _auto_1669_21->count;++_auto_1670_22)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_23,(((RogueClassMethod*)(_auto_1669_21->data->as_objects[_auto_1670_22]))));
        if (((void*)m_23->type_context) != ((void*)THIS))
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,st_5,(m_23->source_template));
          if (!!(st_5))
          {
            RogueMethodTemplates__instantiate__String_Int32_Int32_Token_String( ROGUE_ARG(THIS->method_templates), ROGUE_ARG(st_5->name), ROGUE_ARG(st_5->type_parameters->count), ROGUE_ARG(st_5->parameter_count), ROGUE_ARG(st_5->t), ROGUE_ARG(m_23->name) );
          }
        }
      }
    }
  }
  RogueType__check_abstract_methods__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->method_list) );
  RogueType__check_abstract_methods__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(THIS->global_method_list) );
}

void RogueType__check_abstract_methods__Method_List( RogueClassType* THIS, RogueMethod_List* list_0 )
{
  if ((((RogueType__is_abstract( ROGUE_ARG(THIS) ))) || ((RogueType__is_aspect( ROGUE_ARG(THIS) )))))
  {
    return;
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1671_1,(list_0));
    RogueInt32 _auto_1672_2 = (0);
    for (;_auto_1672_2 < _auto_1671_1->count;++_auto_1672_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1671_1->data->as_objects[_auto_1672_2]))));
      if (((RogueMethod__is_abstract( m_3 ))))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[461] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[462] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_3->signature) )))) )))), Rogue_literal_strings[463] )))) )))) ))));
      }
    }
  }
}

void RogueType__inherit_methods__Method_List_Table_String_Method_( RogueClassType* THIS, RogueMethod_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1673_2,(THIS->base_types));
    RogueInt32 _auto_1674_3 = (0);
    for (;_auto_1674_3 < _auto_1673_2->count;++_auto_1674_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1673_2->data->as_objects[_auto_1674_3]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1675_5,(base_type_4->method_list));
        RogueInt32 _auto_1676_6 = (0);
        for (;_auto_1676_6 < _auto_1675_5->count;++_auto_1676_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,base_m_7,(((RogueClassMethod*)(_auto_1675_5->data->as_objects[_auto_1676_6]))));
          RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), base_m_7, list_0, lookup_1 );
        }
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1677_8,(THIS->method_list));
    RogueInt32 _auto_1678_9 = (0);
    for (;_auto_1678_9 < _auto_1677_8->count;++_auto_1678_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_1677_8->data->as_objects[_auto_1678_9]))));
      RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* _auto_5768, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_0,_auto_5768);
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_3,(((RogueTable_String_Method___get__String( lookup_2, ROGUE_ARG(m_0->signature) )))));
  if (!!(existing_m_3))
  {
    if (((void*)m_0->_return_type) != ((void*)existing_m_3->_return_type))
    {
      {
        {
          {
            if ( !(m_0->_return_type) ) goto _auto_1680;
            if ( !(existing_m_3->_return_type) ) goto _auto_1680;
            if (((RogueType__instance_of__Type( ROGUE_ARG(m_0->_return_type), ROGUE_ARG(existing_m_3->_return_type) )))) goto _auto_1681;
            if ((((((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))) && ((RogueMethod__returns_this( m_0 )))) && ((RogueType__instance_of__Type( ROGUE_ARG(existing_m_3->_return_type), ROGUE_ARG(m_0->_return_type) )))) && ((void*)existing_m_3->type_context) == ((void*)THIS))) goto _auto_1681;
            if ( !(false) ) goto _auto_1680;
            }
          _auto_1681:;
          goto _auto_1679;
        }
        _auto_1680:;
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[402] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->type_context->name) )))) )))), Rogue_literal_strings[195] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[403] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->_return_type))) )))) )))), Rogue_literal_strings[404] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(existing_m_3->_return_type))) )))) )))), Rogue_literal_strings[405] )))) )))) ))));
          }
      }
      _auto_1679:;
    }
    if ((((RogueMethod__is_macro( existing_m_3 ))) ^ ((RogueMethod__is_macro( m_0 )))))
    {
      if (((RogueMethod__is_macro( m_0 ))))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(existing_m_3->t), Rogue_literal_strings[406] ))));
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(existing_m_3->t), Rogue_literal_strings[407] ))));
      }
    }
    RogueInt32 i_4 = (((RogueMethod_List__locate__Method( list_1, existing_m_3 ))).value);
    if (!(((RogueMethod__is_incorporated( existing_m_3 )))))
    {
      if (((void*)m_0->type_context) == ((void*)existing_m_3->type_context))
      {
        if (((RogueMethod__is_augment( m_0 ))))
        {
          RogueType__apply_augment_labels__Method_Method( ROGUE_ARG(THIS), m_0, existing_m_3 );
          return;
        }
        else
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[410] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->type_context))) )))) )))), Rogue_literal_strings[411] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
        }
      }
    }
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overriding_methods), existing_m_3 );
      RogueMethod__add_incorporating_class__Type( m_0, ROGUE_ARG(THIS) );
      if (((RogueMethod__is_abstract( m_0 ))))
      {
        return;
      }
      m_0 = ((RogueClassMethod*)((RogueMethod__incorporate__Type( m_0, ROGUE_ARG(THIS) ))));
    }
    else if (((RogueMethod__is_augment( m_0 ))))
    {
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    m_0->overridden_method = existing_m_3;
    while ((!!(m_0->overridden_method) && ((void*)m_0->type_context) == ((void*)m_0->overridden_method->type_context)))
    {
      if (!!(m_0->overridden_method->overridden_method))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(m_0->overridden_method->overridden_method->overriding_methods), ROGUE_ARG(m_0->overridden_method) );
      }
      m_0->overridden_method = m_0->overridden_method->overridden_method;
    }
    if (!!(m_0->overridden_method))
    {
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overridden_method->overriding_methods), m_0 );
    }
    if (((RogueMethod__is_essential( existing_m_3 ))))
    {
      RogueMethod__make_essential( m_0 );
    }
    list_1->data->as_objects[i_4] = m_0;
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
    RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
  else
  {
    if (((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))))
    {
      RogueMethod__add_incorporating_class__Type( m_0, ROGUE_ARG(THIS) );
      m_0 = ((RogueClassMethod*)((RogueMethod__incorporate__Type( m_0, ROGUE_ARG(THIS) ))));
      RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_0->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), ROGUE_ARG(THIS), m_0 )))))) );
    }
    else if (((RogueMethod__is_augment( m_0 ))))
    {
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    RogueMethod_List__add__Method( list_1, m_0 );
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
    RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
}

void RogueType__override_inherited_propagated_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* _auto_5769, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_0,_auto_5769);
  if ((((RogueMethod__is_propagated( m_0 ))) && ((void*)m_0->type_context) != ((void*)THIS)))
  {
    m_0 = ((RogueClassMethod*)((RogueMethod__set_type_context__Type( ROGUE_ARG(((RogueMethod__cloned( m_0 )))), ROGUE_ARG(THIS) ))));
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_0->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), ROGUE_ARG(THIS), m_0 )))))) );
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, list_1, lookup_2 );
  }
}

void RogueType__inherit_global_methods__Method_List_Table_String_Method_( RogueClassType* THIS, RogueMethod_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1682_2,(THIS->base_types));
    RogueInt32 _auto_1683_3 = (0);
    for (;_auto_1683_3 < _auto_1682_2->count;++_auto_1683_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueClassType*)(_auto_1682_2->data->as_objects[_auto_1683_3]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1684_5,(base_type_4->global_method_list));
        RogueInt32 _auto_1685_6 = (0);
        for (;_auto_1685_6 < _auto_1684_5->count;++_auto_1685_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,base_m_7,(((RogueClassMethod*)(_auto_1684_5->data->as_objects[_auto_1685_6]))));
          RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), base_m_7, list_0, lookup_1 );
        }
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1686_8,(THIS->global_method_list));
    RogueInt32 _auto_1687_9 = (0);
    for (;_auto_1687_9 < _auto_1686_8->count;++_auto_1687_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_1686_8->data->as_objects[_auto_1687_9]))));
      RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_10, list_0, lookup_1 );
    }
  }
}

void RogueType__inherit_global_method__Method_Method_List_Table_String_Method_( RogueClassType* THIS, RogueClassMethod* m_0, RogueMethod_List* list_1, RogueClassTable_String_Method_* lookup_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_3,(((RogueTable_String_Method___get__String( lookup_2, ROGUE_ARG(m_0->signature) )))));
  if (!!(existing_m_3))
  {
    if (((void*)m_0->type_context) == ((void*)existing_m_3->type_context))
    {
      if (((RogueMethod__is_augment( m_0 ))))
      {
        RogueType__apply_augment_labels__Method_Method( ROGUE_ARG(THIS), m_0, existing_m_3 );
        return;
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[410] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(m_0->type_context))) )))) )))), Rogue_literal_strings[451] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->signature) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
      }
    }
    RogueInt32 i_4 = (((RogueMethod_List__locate__Method( list_1, existing_m_3 ))).value);
    if ((((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))) && ((void*)m_0->type_context) != ((void*)THIS)))
    {
      return;
    }
    if (((RogueMethod__is_augment( m_0 ))))
    {
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    list_1->data->as_objects[i_4] = m_0;
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
  }
  else
  {
    if ((((RogueType__is_aspect( ROGUE_ARG(m_0->type_context) ))) && ((void*)m_0->type_context) != ((void*)THIS)))
    {
      return;
    }
    if (((RogueMethod__is_augment( m_0 ))))
    {
      RogueMethod__convert_augment_to_standalone( m_0 );
    }
    RogueMethod_List__add__Method( list_1, m_0 );
    RogueTable_String_Method___set__String_Method( lookup_2, ROGUE_ARG(m_0->signature), m_0 );
  }
}

void RogueType__inject_global_method__Method_OptionalInt32( RogueClassType* THIS, RogueClassMethod* m_0, RogueOptionalInt32 at_index_1 )
{
  if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  RogueMethod__assign_signature( m_0 );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_2,(((RogueType__find_global_method__String( ROGUE_ARG(THIS), ROGUE_ARG(m_0->signature) )))));
  if (!!(existing_m_2))
  {
    if (((void*)m_0) == ((void*)existing_m_2))
    {
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->global_method_list), m_0 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->global_method_list), m_0, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_3 = (at_index_1.value);
          RogueInt32 _auto_173_4 = (THIS->global_method_list->count);
          for (;adjust_i_3 < _auto_173_4;++adjust_i_3)
          {
            ((RogueClassMethod*)(THIS->global_method_list->data->as_objects[adjust_i_3]))->index = adjust_i_3;
          }
        }
        {
          ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1688_12,(THIS->extended_types));
          RogueInt32 _auto_1689_13 = (0);
          for (;_auto_1689_13 < _auto_1688_12->count;++_auto_1689_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_14,(((RogueClassType*)(_auto_1688_12->data->as_objects[_auto_1689_13]))));
            if (extended_class_14->organized)
            {
              RogueType__inject_global_method__Method_OptionalInt32( extended_class_14, m_0, at_index_1 );
            }
          }
        }
      }
    }
    else if (((RogueType__instance_of__Type( ROGUE_ARG(m_0->type_context), ROGUE_ARG(existing_m_2->type_context) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,overrides_5,(existing_m_2->overriding_methods));
      existing_m_2->overriding_methods = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->global_method_list), existing_m_2 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->global_method_list), existing_m_2, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_6 = (at_index_1.value);
          RogueInt32 _auto_174_7 = (THIS->global_method_list->count);
          for (;adjust_i_6 < _auto_174_7;++adjust_i_6)
          {
            ((RogueClassMethod*)(THIS->global_method_list->data->as_objects[adjust_i_6]))->index = adjust_i_6;
          }
        }
      }
      RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->global_method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
      m_0->overriding_methods = overrides_5;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1690_15,(overrides_5));
        RogueInt32 _auto_1691_16 = (0);
        for (;_auto_1691_16 < _auto_1690_15->count;++_auto_1691_16)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,overriding_m_17,(((RogueClassMethod*)(_auto_1690_15->data->as_objects[_auto_1691_16]))));
          overriding_m_17->overridden_method = m_0;
        }
      }
      RogueMethod_List__remove__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), existing_m_2 );
      RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1692_18,(THIS->extended_types));
        RogueInt32 _auto_1693_19 = (0);
        for (;_auto_1693_19 < _auto_1692_18->count;++_auto_1693_19)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_20,(((RogueClassType*)(_auto_1692_18->data->as_objects[_auto_1693_19]))));
          if (extended_class_20->organized)
          {
            RogueType__inject_global_method__Method_OptionalInt32( extended_class_20, m_0, at_index_1 );
          }
        }
      }
    }
    else
    {
      existing_m_2->overridden_method = m_0;
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overriding_methods), existing_m_2 );
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->global_method_list), existing_m_2 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->global_method_list), existing_m_2, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_8 = (at_index_1.value);
          RogueInt32 _auto_175_9 = (THIS->global_method_list->count);
          for (;adjust_i_8 < _auto_175_9;++adjust_i_8)
          {
            ((RogueClassMethod*)(THIS->global_method_list->data->as_objects[adjust_i_8]))->index = adjust_i_8;
          }
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1694_21,(THIS->extended_types));
        RogueInt32 _auto_1695_22 = (0);
        for (;_auto_1695_22 < _auto_1694_21->count;++_auto_1695_22)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_23,(((RogueClassType*)(_auto_1694_21->data->as_objects[_auto_1695_22]))));
          if (extended_class_23->organized)
          {
            RogueType__inject_global_method__Method_OptionalInt32( extended_class_23, existing_m_2, at_index_1 );
          }
        }
      }
    }
  }
  else if (at_index_1.exists)
  {
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->global_method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
    RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->global_method_list), ROGUE_ARG(((RogueMethod_List__remove_last( ROGUE_ARG(THIS->global_method_list) )))), ROGUE_ARG(at_index_1.value) );
    {
      RogueInt32 adjust_i_10 = (at_index_1.value);
      RogueInt32 _auto_176_11 = (THIS->global_method_list->count);
      for (;adjust_i_10 < _auto_176_11;++adjust_i_10)
      {
        ((RogueClassMethod*)(THIS->global_method_list->data->as_objects[adjust_i_10]))->index = adjust_i_10;
      }
    }
    RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
    if (!!(THIS->extended_types->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1696_24,(THIS->extended_types));
        RogueInt32 _auto_1697_25 = (0);
        for (;_auto_1697_25 < _auto_1696_24->count;++_auto_1697_25)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_26,(((RogueClassType*)(_auto_1696_24->data->as_objects[_auto_1697_25]))));
          if (extended_class_26->organized)
          {
            RogueType__inject_global_method__Method_OptionalInt32( extended_class_26, m_0, at_index_1 );
          }
        }
      }
    }
  }
  else
  {
    RogueMethod__organize__Scope_Logical( m_0, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
    m_0->index = THIS->global_method_list->count;
    at_index_1 = ((RogueOptionalInt32)RogueOptionalInt32( THIS->global_method_list->count, true ));
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->global_method_list), ROGUE_ARG(THIS->global_method_lookup_by_signature) );
    RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
    if (!!(THIS->extended_types->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1698_27,(THIS->extended_types));
        RogueInt32 _auto_1699_28 = (0);
        for (;_auto_1699_28 < _auto_1698_27->count;++_auto_1699_28)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_29,(((RogueClassType*)(_auto_1698_27->data->as_objects[_auto_1699_28]))));
          if (extended_class_29->organized)
          {
            RogueType__inject_global_method__Method_OptionalInt32( extended_class_29, m_0, at_index_1 );
          }
        }
      }
    }
  }
  if (THIS->resolved)
  {
    RogueMethod__resolve( m_0 );
  }
}

void RogueType__inject_method__Method_OptionalInt32( RogueClassType* THIS, RogueClassMethod* m_0, RogueOptionalInt32 at_index_1 )
{
  if (((RogueType__is_aspect( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  if (((RogueMethod__is_global( m_0 ))))
  {
    RogueType__inject_global_method__Method_OptionalInt32( ROGUE_ARG(THIS), m_0, at_index_1 );
    return;
  }
  RogueMethod__assign_signature( m_0 );
  if (!(!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) ))))))
  {
    RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name), ROGUE_ARG(((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )))) );
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_2,(((RogueType__find_method__String( ROGUE_ARG(THIS), ROGUE_ARG(m_0->signature) )))));
  if (!!(existing_m_2))
  {
    if (((void*)m_0) == ((void*)existing_m_2))
    {
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), m_0 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), m_0, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_3 = (at_index_1.value);
          RogueInt32 _auto_177_4 = (THIS->method_list->count);
          for (;adjust_i_3 < _auto_177_4;++adjust_i_3)
          {
            ((RogueClassMethod*)(THIS->method_list->data->as_objects[adjust_i_3]))->index = adjust_i_3;
          }
        }
        {
          ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1700_12,(THIS->extended_types));
          RogueInt32 _auto_1701_13 = (0);
          for (;_auto_1701_13 < _auto_1700_12->count;++_auto_1701_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_14,(((RogueClassType*)(_auto_1700_12->data->as_objects[_auto_1701_13]))));
            if (extended_class_14->organized)
            {
              RogueType__inject_method__Method_OptionalInt32( extended_class_14, m_0, at_index_1 );
            }
          }
        }
      }
    }
    else if (((RogueType__instance_of__Type( ROGUE_ARG(m_0->type_context), ROGUE_ARG(existing_m_2->type_context) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,overrides_5,(existing_m_2->overriding_methods));
      existing_m_2->overriding_methods = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), existing_m_2 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), existing_m_2, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_6 = (at_index_1.value);
          RogueInt32 _auto_178_7 = (THIS->method_list->count);
          for (;adjust_i_6 < _auto_178_7;++adjust_i_6)
          {
            ((RogueClassMethod*)(THIS->method_list->data->as_objects[adjust_i_6]))->index = adjust_i_6;
          }
        }
      }
      RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
      m_0->overriding_methods = overrides_5;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1702_15,(overrides_5));
        RogueInt32 _auto_1703_16 = (0);
        for (;_auto_1703_16 < _auto_1702_15->count;++_auto_1703_16)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,overriding_m_17,(((RogueClassMethod*)(_auto_1702_15->data->as_objects[_auto_1703_16]))));
          overriding_m_17->overridden_method = m_0;
        }
      }
      RogueMethod_List__remove__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), existing_m_2 );
      RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1704_18,(THIS->extended_types));
        RogueInt32 _auto_1705_19 = (0);
        for (;_auto_1705_19 < _auto_1704_18->count;++_auto_1705_19)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_20,(((RogueClassType*)(_auto_1704_18->data->as_objects[_auto_1705_19]))));
          if (extended_class_20->organized)
          {
            RogueType__inject_method__Method_OptionalInt32( extended_class_20, m_0, at_index_1 );
          }
        }
      }
    }
    else
    {
      existing_m_2->overridden_method = m_0;
      RogueMethod_List__add__Method( ROGUE_ARG(m_0->overriding_methods), existing_m_2 );
      if (!!(at_index_1.value))
      {
        RogueMethod_List__remove__Method( ROGUE_ARG(THIS->method_list), existing_m_2 );
        RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), existing_m_2, ROGUE_ARG(at_index_1.value) );
        {
          RogueInt32 adjust_i_8 = (at_index_1.value);
          RogueInt32 _auto_179_9 = (THIS->method_list->count);
          for (;adjust_i_8 < _auto_179_9;++adjust_i_8)
          {
            ((RogueClassMethod*)(THIS->method_list->data->as_objects[adjust_i_8]))->index = adjust_i_8;
          }
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1706_21,(THIS->extended_types));
        RogueInt32 _auto_1707_22 = (0);
        for (;_auto_1707_22 < _auto_1706_21->count;++_auto_1707_22)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_23,(((RogueClassType*)(_auto_1706_21->data->as_objects[_auto_1707_22]))));
          if (extended_class_23->organized)
          {
            RogueType__inject_method__Method_OptionalInt32( extended_class_23, existing_m_2, at_index_1 );
          }
        }
      }
    }
  }
  else if (at_index_1.exists)
  {
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
    RogueMethod_List__insert__Method_Int32( ROGUE_ARG(THIS->method_list), ROGUE_ARG(((RogueMethod_List__remove_last( ROGUE_ARG(THIS->method_list) )))), ROGUE_ARG(at_index_1.value) );
    {
      RogueInt32 adjust_i_10 = (at_index_1.value);
      RogueInt32 _auto_180_11 = (THIS->method_list->count);
      for (;adjust_i_10 < _auto_180_11;++adjust_i_10)
      {
        ((RogueClassMethod*)(THIS->method_list->data->as_objects[adjust_i_10]))->index = adjust_i_10;
      }
    }
    RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
    if (!!(THIS->extended_types->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1708_24,(THIS->extended_types));
        RogueInt32 _auto_1709_25 = (0);
        for (;_auto_1709_25 < _auto_1708_24->count;++_auto_1709_25)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_26,(((RogueClassType*)(_auto_1708_24->data->as_objects[_auto_1709_25]))));
          if (extended_class_26->organized)
          {
            RogueType__inject_method__Method_OptionalInt32( extended_class_26, m_0, at_index_1 );
          }
        }
      }
    }
  }
  else
  {
    RogueMethod__organize__Scope_Logical( m_0, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
    m_0->index = THIS->method_list->count;
    at_index_1 = ((RogueOptionalInt32)RogueOptionalInt32( THIS->method_list->count, true ));
    RogueType__inherit_method__Method_Method_List_Table_String_Method_( ROGUE_ARG(THIS), m_0, ROGUE_ARG(THIS->method_list), ROGUE_ARG(THIS->method_lookup_by_signature) );
    RogueMethod_List__add__Method( ROGUE_ARG(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->method_lookup_by_name), ROGUE_ARG(m_0->name) )))), m_0 );
    if (!!(THIS->extended_types->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1710_27,(THIS->extended_types));
        RogueInt32 _auto_1711_28 = (0);
        for (;_auto_1711_28 < _auto_1710_27->count;++_auto_1711_28)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,extended_class_29,(((RogueClassType*)(_auto_1710_27->data->as_objects[_auto_1711_28]))));
          if (extended_class_29->organized)
          {
            RogueType__inject_method__Method_OptionalInt32( extended_class_29, m_0, at_index_1 );
          }
        }
      }
    }
  }
  if (THIS->resolved)
  {
    RogueMethod__resolve( m_0 );
  }
}

void RogueType__apply_augment_labels__Method_Method( RogueClassType* THIS, RogueClassMethod* aug_m_0, RogueClassMethod* existing_m_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_1712_3,(existing_m_1->label_list));
    RogueInt32 _auto_1713_4 = (0);
    for (;_auto_1713_4 < _auto_1712_3->count;++_auto_1713_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,method_label_5,(((RogueClassCmdLabel*)(_auto_1712_3->data->as_objects[_auto_1713_4]))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,aug_label_2,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(aug_m_0->label_lookup), ROGUE_ARG(method_label_5->name) )))));
      if (!!(aug_label_2))
      {
        RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)method_label_5->statements)), ROGUE_ARG(((RogueCmd_List*)(aug_label_2->statements))) );
        aug_label_2->is_referenced = true;
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_1714_6,(aug_m_0->label_list));
    RogueInt32 _auto_1715_7 = (0);
    for (;_auto_1715_7 < _auto_1714_6->count;++_auto_1715_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,label_8,(((RogueClassCmdLabel*)(_auto_1714_6->data->as_objects[_auto_1715_7]))));
      if (!(label_8->is_referenced))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(label_8->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[408] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(label_8->name) )))) )))), Rogue_literal_strings[409] )))) )))) ))));
      }
    }
  }
}

void RogueType__index_and_move_inline_to_end__Method_List( RogueClassType* THIS, RogueMethod_List* list_0 )
{
  RogueInt32 i_1 = ((list_0->count - 1));
  while (i_1 >= 0)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueClassMethod*)(list_0->data->as_objects[i_1]))));
    if (((RogueMethod__is_macro( m_2 ))))
    {
      RogueMethod_List__remove__Method( list_0, m_2 );
      RogueMethod_List__add__Method( list_0, m_2 );
    }
    --i_1;
  }
  i_1 = ((RogueInt32)0);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1716_3,(list_0));
    RogueInt32 _auto_1717_4 = (0);
    for (;_auto_1717_4 < _auto_1716_3->count;++_auto_1717_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueClassMethod*)(_auto_1716_3->data->as_objects[_auto_1717_4]))));
      m_5->index = i_1;
      ++i_1;
    }
  }
}

RogueLogical RogueType__omit_output( RogueClassType* THIS )
{
  return (RogueLogical)((((RogueType__is_native( ROGUE_ARG(THIS) ))) || !(THIS->is_used)));
}

RogueClassType* RogueType__resolve( RogueClassType* THIS )
{
  if (THIS->resolved)
  {
    return (RogueClassType*)(THIS);
  }
  THIS->resolved = true;
  RogueType_List__add__Type( ROGUE_ARG(RogueType_resolve_chain), ROGUE_ARG(THIS) );
  RogueType__organize__Scope( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1718_0,(THIS->global_method_list));
    RogueInt32 _auto_1719_1 = (0);
    for (;_auto_1719_1 < _auto_1718_0->count;++_auto_1719_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_2,(((RogueClassMethod*)(_auto_1718_0->data->as_objects[_auto_1719_1]))));
      RogueMethod__resolve( r_2 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1720_3,(THIS->method_list));
    RogueInt32 _auto_1721_4 = (0);
    for (;_auto_1721_4 < _auto_1720_3->count;++_auto_1721_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueClassMethod*)(_auto_1720_3->data->as_objects[_auto_1721_4]))));
      RogueMethod__resolve( m_5 );
    }
  }
  RogueType_List__remove_last( ROGUE_ARG(RogueType_resolve_chain) );
  return (RogueClassType*)(THIS);
}

RogueLogical RogueType__should_cull( RogueClassType* THIS )
{
  return (RogueLogical)(!(THIS->is_used));
}

void RogueType__trace_used_code( RogueClassType* THIS )
{
  if (THIS->is_used)
  {
    return;
  }
  THIS->is_used = true;
  if (((RogueType__is_singleton( ROGUE_ARG(THIS) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_0,(((RogueType__find_method__String( ROGUE_ARG(THIS), Rogue_literal_strings[553] )))));
    if (!!(m_0))
    {
      RogueMethod__make_essential( m_0 );
    }
  }
  if (!!(THIS->_element_type))
  {
    RogueType__trace_used_code( ROGUE_ARG(THIS->_element_type) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1722_1,(THIS->base_types));
    RogueInt32 _auto_1723_2 = (0);
    for (;_auto_1723_2 < _auto_1722_1->count;++_auto_1723_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_3,(((RogueClassType*)(_auto_1722_1->data->as_objects[_auto_1723_2]))));
      RogueType__trace_used_code( base_type_3 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1724_4,(THIS->global_list));
    RogueInt32 _auto_1725_5 = (0);
    for (;_auto_1725_5 < _auto_1724_4->count;++_auto_1725_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_6,(((RogueClassProperty*)(_auto_1724_4->data->as_objects[_auto_1725_5]))));
      RogueType__trace_used_code( ROGUE_ARG(s_6->_type) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1726_7,(THIS->property_list));
    RogueInt32 _auto_1727_8 = (0);
    for (;_auto_1727_8 < _auto_1726_7->count;++_auto_1727_8)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_9,(((RogueClassProperty*)(_auto_1726_7->data->as_objects[_auto_1727_8]))));
      RogueType__trace_used_code( ROGUE_ARG(p_9->_type) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1728_10,(THIS->global_method_list));
    RogueInt32 _auto_1729_11 = (0);
    for (;_auto_1729_11 < _auto_1728_10->count;++_auto_1729_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_12,(((RogueClassMethod*)(_auto_1728_10->data->as_objects[_auto_1729_11]))));
      if (((RogueMethod__is_essential( r_12 ))))
      {
        RogueMethod__trace_used_code( r_12 );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1730_13,(THIS->method_list));
    RogueInt32 _auto_1731_14 = (0);
    for (;_auto_1731_14 < _auto_1730_13->count;++_auto_1731_14)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_15,(((RogueClassMethod*)(_auto_1730_13->data->as_objects[_auto_1731_14]))));
      if (((RogueMethod__is_essential( m_15 ))))
      {
        RogueMethod__trace_used_code( m_15 );
      }
    }
  }
}

void RogueType__validate( RogueClassType* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1732_0,(THIS->method_list));
    RogueInt32 _auto_1733_1 = (0);
    for (;_auto_1733_1 < _auto_1732_0->count;++_auto_1733_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueClassMethod*)(_auto_1732_0->data->as_objects[_auto_1733_1]))));
      RogueMethod__validate( m_2 );
    }
  }
}

void RogueType__assign_cpp_name( RogueClassType* THIS )
{
  if (!!(THIS->cpp_name))
  {
    return;
  }
  THIS->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )));
  if ((THIS->is_array || ((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_NativeArray)))
  {
    THIS->cpp_class_name = Rogue_literal_strings[579];
    THIS->cpp_name = Rogue_literal_strings[580];
  }
  else if ((((RogueType__is_primitive( ROGUE_ARG(THIS) ))) || THIS->simplify_name))
  {
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[274], ROGUE_ARG(THIS->cpp_name) )));
  }
  else if (THIS->is_list)
  {
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[274], ROGUE_ARG(THIS->cpp_name) )));
  }
  else if (THIS->is_optional)
  {
    THIS->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[392], ROGUE_ARG(THIS->_element_type->cpp_name) )))) )));
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[274], ROGUE_ARG(THIS->cpp_name) )));
  }
  else
  {
    THIS->cpp_class_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[581], ROGUE_ARG(THIS->cpp_name) )));
  }
  THIS->cpp_type_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[582], ROGUE_ARG(THIS->cpp_name) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1734_0,(THIS->global_list));
    RogueInt32 _auto_1735_1 = (0);
    for (;_auto_1735_1 < _auto_1734_0->count;++_auto_1735_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,s_2,(((RogueClassProperty*)(_auto_1734_0->data->as_objects[_auto_1735_1]))));
      s_2->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(s_2->name) )));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1736_3,(THIS->property_list));
    RogueInt32 _auto_1737_4 = (0);
    for (;_auto_1737_4 < _auto_1736_3->count;++_auto_1737_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_1736_3->data->as_objects[_auto_1737_4]))));
      if (((RogueProperty__is_native( p_5 ))))
      {
        p_5->cpp_name = p_5->name;
      }
      else
      {
        p_5->cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->name) )));
      }
    }
  }
}

void RogueType__print_data_definition__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  if ((((RogueType__omit_output( ROGUE_ARG(THIS) ))) || ((RogueType__is_primitive( ROGUE_ARG(THIS) )))))
  {
    return;
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[600] )))), ROGUE_ARG(THIS->cpp_class_name) );
  RogueLogical is_error_1 = (false);
  if (((RogueType__is_reference( ROGUE_ARG(THIS) ))))
  {
    if (((RogueType__instance_of__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) ))))
    {
      is_error_1 = ((RogueLogical)true);
      RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[603] )))), ROGUE_ARG(THIS->base_class) );
    }
    else
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[605] );
    }
  }
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__println( writer_0 )))), Rogue_literal_strings[170] );
  writer_0->indent += 2;
  if (!(((RogueType__is_aspect( ROGUE_ARG(THIS) )))))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[606] );
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1738_5,(THIS->property_list));
      RogueInt32 _auto_1739_6 = (0);
      for (;_auto_1739_6 < _auto_1738_5->count;++_auto_1739_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_7,(((RogueClassProperty*)(_auto_1738_5->data->as_objects[_auto_1739_6]))));
        if ((!(is_error_1) || ((void*)p_7->type_context) == ((void*)THIS)))
        {
          if ((((RogueType__is_compound( ROGUE_ARG(THIS) ))) && ((RogueType__is_reference( ROGUE_ARG(p_7->_type) )))))
          {
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[607] );
            RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_7->_type) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(p_7->cpp_name) );
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[608] );
          }
          else if (((RogueProperty__is_native( p_7 ))))
          {
            RogueCPPWriter__print_native_code__Token_Type_Method_Local_List_String_Type( writer_0, ROGUE_ARG(p_7->t), ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassMethod*)(NULL))), ROGUE_ARG(((RogueLocal_List*)(NULL))), ROGUE_ARG(p_7->name), ROGUE_ARG(((RogueClassType*)(NULL))) );
          }
          else
          {
            RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_7->_type) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(p_7->cpp_name) )))), Rogue_literal_strings[179] );
          }
        }
      }
    }
    RogueCPPWriter__println( writer_0 );
  }
  if (((RogueType__is_compound( ROGUE_ARG(THIS) ))))
  {
    if (!!(THIS->property_list->count))
    {
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[621] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[622] );
      RogueCPPWriter__println( writer_0 );
      if (THIS->is_optional)
      {
        RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[623] )))), ROGUE_ARG(((RogueClassProperty*)(THIS->property_list->data->as_objects[0]))->_type) );
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[624] );
      }
      else
      {
        RogueInt32 native_property_count_2 = (0);
        {
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1741_8,(THIS->property_list));
                RogueInt32 _auto_1742_9 = (0);
                for (;_auto_1742_9 < _auto_1741_8->count;++_auto_1742_9)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueClassProperty*)(_auto_1741_8->data->as_objects[_auto_1742_9]))));
                  if (((RogueProperty__is_native( p_10 ))))
                  {
                    ++native_property_count_2;
                  }
                }
              }
              if ( !(native_property_count_2 == 0) ) goto _auto_1743;
              }
            {
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[623] );
              RogueLogical first_3 = (true);
              {
                ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1744_11,(THIS->property_list));
                RogueInt32 _auto_1745_12 = (0);
                for (;_auto_1745_12 < _auto_1744_11->count;++_auto_1745_12)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueClassProperty*)(_auto_1744_11->data->as_objects[_auto_1745_12]))));
                  if (first_3)
                  {
                    first_3 = ((RogueLogical)false);
                  }
                  else
                  {
                    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
                  }
                  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_13->_type) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(p_13->cpp_name) );
                }
              }
              RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[626] );
              first_3 = ((RogueLogical)true);
              {
                ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1746_14,(THIS->property_list));
                RogueInt32 _auto_1747_15 = (0);
                for (;_auto_1747_15 < _auto_1746_14->count;++_auto_1747_15)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_16,(((RogueClassProperty*)(_auto_1746_14->data->as_objects[_auto_1747_15]))));
                  if (first_3)
                  {
                    first_3 = ((RogueLogical)false);
                  }
                  else
                  {
                    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
                  }
                  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(p_16->cpp_name) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(p_16->cpp_name) )))), Rogue_literal_strings[12] );
                }
              }
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[627] );
              RogueCPPWriter__println( writer_0 );
              }
            goto _auto_1740;
          }
          _auto_1743:;
          {
            if (native_property_count_2 != THIS->property_list->count)
            {
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS) )))), Rogue_literal_strings[623] );
              RogueLogical first_4 = (true);
              {
                ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1748_17,(THIS->property_list));
                RogueInt32 _auto_1749_18 = (0);
                for (;_auto_1749_18 < _auto_1748_17->count;++_auto_1749_18)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_19,(((RogueClassProperty*)(_auto_1748_17->data->as_objects[_auto_1749_18]))));
                  if (!(((RogueProperty__is_native( p_19 )))))
                  {
                    if (first_4)
                    {
                      first_4 = ((RogueLogical)false);
                    }
                    else
                    {
                      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
                    }
                    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(p_19->_type) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(p_19->cpp_name) );
                  }
                }
              }
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[628] );
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
              writer_0->indent += 2;
              RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[629] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[630] );
              {
                ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_1750_20,(THIS->property_list));
                RogueInt32 _auto_1751_21 = (0);
                for (;_auto_1751_21 < _auto_1750_20->count;++_auto_1751_21)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_22,(((RogueClassProperty*)(_auto_1750_20->data->as_objects[_auto_1751_21]))));
                  if (!(((RogueProperty__is_native( p_22 )))))
                  {
                    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[631] )))), ROGUE_ARG(p_22->cpp_name) )))), Rogue_literal_strings[632] )))), ROGUE_ARG(p_22->cpp_name) )))), Rogue_literal_strings[179] );
                  }
                }
              }
              writer_0->indent -= 2;
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
              RogueCPPWriter__println( writer_0 );
            }
            }
        }
        _auto_1740:;
      }
    }
    if (!(((RogueType__is_aspect( ROGUE_ARG(THIS) )))))
    {
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[633] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[634] );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
      writer_0->indent += 2;
      if (THIS->is_optional)
      {
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[635] );
      }
      else
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[636] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[637] );
      }
      writer_0->indent -= 2;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
      RogueCPPWriter__println( writer_0 );
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_type_name__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[638] )))), ROGUE_ARG(THIS) )))), Rogue_literal_strings[634] );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[639] );
    }
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[640] );
}

void RogueType__print_global_method_prototypes__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1752_1,(THIS->global_method_list));
    RogueInt32 _auto_1753_2 = (0);
    for (;_auto_1753_2 < _auto_1752_1->count;++_auto_1753_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1752_1->data->as_objects[_auto_1753_2]))));
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueMethod__print_prototype__CPPWriter( m_3, writer_0 );
      }
    }
  }
}

void RogueType__print_global_method_definitions__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1754_1,(THIS->global_method_list));
    RogueInt32 _auto_1755_2 = (0);
    for (;_auto_1755_2 < _auto_1754_1->count;++_auto_1755_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1754_1->data->as_objects[_auto_1755_2]))));
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueCPPWriter__mark_routine_start__Method( writer_0, m_3 );
        RogueMethod__print_definition__CPPWriter( m_3, writer_0 );
        RogueCPPWriter__mark_routine_end( writer_0 );
      }
    }
  }
}

void RogueType__print_method_prototypes__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1756_1,(THIS->method_list));
    RogueInt32 _auto_1757_2 = (0);
    for (;_auto_1757_2 < _auto_1756_1->count;++_auto_1757_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1756_1->data->as_objects[_auto_1757_2]))));
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueMethod__print_prototype__CPPWriter( m_3, writer_0 );
      }
    }
  }
}

void RogueType__determine_cpp_method_typedefs__String_List_Table_String_Method_( RogueClassType* THIS, RogueString_List* list_0, RogueClassTable_String_Method_* lookup_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_2,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1758_6,(THIS->method_list));
    RogueInt32 _auto_1759_7 = (0);
    for (;_auto_1759_7 < _auto_1758_6->count;++_auto_1759_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_8,(((RogueClassMethod*)(_auto_1758_6->data->as_objects[_auto_1759_7]))));
      if (((!(((RogueMethod__is_macro( m_8 )))) && ((RogueMethod__is_dynamic( m_8 )))) && m_8->is_used))
      {
        RogueStringBuilder__clear( buffer_2 );
        if (!!(m_8->_return_type))
        {
          RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(m_8->_return_type->cpp_class_name) );
          if (((RogueType__is_reference( ROGUE_ARG(m_8->_return_type) ))))
          {
            RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)'*', true );
          }
        }
        else
        {
          RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[604] );
        }
        RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[652] );
        RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(m_8->type_context->cpp_class_name) )))), Rogue_literal_strings[188] );
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_1760_9,(m_8->parameters));
          RogueInt32 i_10 = (0);
          for (;i_10 < _auto_1760_9->count;++i_10)
          {
            RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)',', true );
            ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_3,(((RogueClassLocal*)(m_8->parameters->data->as_objects[i_10]))->_type));
            RogueStringBuilder__print__String( buffer_2, ROGUE_ARG(param_type_3->cpp_class_name) );
            if (((RogueType__is_reference( param_type_3 ))))
            {
              RogueStringBuilder__print__Character_Logical( buffer_2, (RogueCharacter)'*', true );
            }
          }
        }
        RogueStringBuilder__print__String( buffer_2, Rogue_literal_strings[12] );
        ROGUE_DEF_LOCAL_REF(RogueString*,sig_4,(((RogueStringBuilder__to_String( buffer_2 )))));
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,mapping_5,(((RogueTable_String_Method___get__String( lookup_1, sig_4 )))));
        if (!!(mapping_5))
        {
          m_8->cpp_typedef = mapping_5->cpp_typedef;
          if ((!(mapping_5->called_dynamically) && m_8->called_dynamically))
          {
            RogueTable_String_Method___set__String_Method( lookup_1, sig_4, m_8 );
          }
        }
        else
        {
          m_8->cpp_typedef = ((RogueString__operatorPLUS__Int32( Rogue_literal_strings[653], ROGUE_ARG(list_0->count) )));
          RogueTable_String_Method___set__String_Method( lookup_1, sig_4, m_8 );
          RogueString_List__add__String( list_0, sig_4 );
        }
      }
    }
  }
}

RogueInt32 RogueType__print_dynamic_method_table_entries__Int32_CPPWriter( RogueClassType* THIS, RogueInt32 at_index_0, RogueClassCPPWriter* writer_1 )
{
  if (!(((RogueType__is_reference( ROGUE_ARG(THIS) )))))
  {
    return (RogueInt32)(at_index_0);
  }
  THIS->dynamic_method_table_index = at_index_0;
  RogueInt32 i2_2 = ((THIS->method_list->count - 1));
  while (i2_2 > 0)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(THIS->method_list->data->as_objects[i2_2]))));
    if (((!(((RogueMethod__is_macro( m_3 )))) && ((RogueMethod__is_dynamic( m_3 )))) && m_3->is_used))
    {
      goto _auto_1761;
    }
    --i2_2;
  }
  _auto_1761:;
  RogueLogical print_type_name_4 = (true);
  {
    RogueInt32 i_5 = (0);
    RogueInt32 _auto_181_6 = (i2_2);
    for (;i_5 <= _auto_181_6;++i_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_7,(((RogueClassMethod*)(THIS->method_list->data->as_objects[i_5]))));
      if (!(((RogueMethod__is_macro( m_7 )))))
      {
        if (((((RogueMethod__is_dynamic( m_7 ))) && m_7->is_used) && !(((RogueMethod__is_abstract( m_7 ))))))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[707] )))), ROGUE_ARG(m_7->cpp_typedef) )))), Rogue_literal_strings[708] )))), ROGUE_ARG(m_7->cpp_name) )))), Rogue_literal_strings[7] );
        }
        else
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[709] );
        }
        if (print_type_name_4)
        {
          print_type_name_4 = ((RogueLogical)false);
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[710] )))), ROGUE_ARG(THIS->name) );
        }
        RogueCPPWriter__println( writer_1 );
        ++at_index_0;
      }
    }
  }
  return (RogueInt32)(at_index_0);
}

void RogueType__print_method_definitions__CPPWriter( RogueClassType* THIS, RogueClassCPPWriter* writer_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_1762_1,(THIS->method_list));
    RogueInt32 _auto_1763_2 = (0);
    for (;_auto_1763_2 < _auto_1762_1->count;++_auto_1763_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueClassMethod*)(_auto_1762_1->data->as_objects[_auto_1763_2]))));
      if (((void*)m_3->type_context) == ((void*)THIS))
      {
        RogueCPPWriter__mark_method_start__Type_Method( writer_0, ROGUE_ARG(THIS), m_3 );
        RogueMethod__print_definition__CPPWriter( m_3, writer_0 );
        RogueCPPWriter__mark_method_end( writer_0 );
      }
    }
  }
}

RogueType_List* RogueType_List__init_object( RogueType_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__init( RogueType_List* THIS )
{
  RogueType_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueType_List*)(THIS);
}

RogueString* RogueType_List__to_String( RogueType_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1764_2,(THIS));
    RogueInt32 _auto_1765_3 = (0);
    for (;_auto_1765_3 < _auto_1764_2->count;++_auto_1765_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_4,(((RogueClassType*)(_auto_1764_2->data->as_objects[_auto_1765_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueType__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueType_List__type_name( RogueType_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1045]);
}

RogueType_List* RogueType_List__init__Int32( RogueType_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassType*), true );
  }
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__cloned( RogueType_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueType_List*,result_0,(((RogueType_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))), ROGUE_ARG(THIS->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1770_1,(THIS));
    RogueInt32 _auto_1771_2 = (0);
    for (;_auto_1771_2 < _auto_1770_1->count;++_auto_1771_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_3,(((RogueClassType*)(_auto_1770_1->data->as_objects[_auto_1771_2]))));
      RogueType_List__add__Type( result_0, value_3 );
    }
  }
  return (RogueType_List*)(result_0);
}

RogueType_List* RogueType_List__add__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  ((RogueType_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueType_List*)(THIS);
}

RogueInt32 RogueType_List__capacity( RogueType_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueType_List* RogueType_List__clear( RogueType_List* THIS )
{
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__ensure_capacity__Int32( RogueType_List* THIS, RogueInt32 desired_capacity_0 )
{
  return (RogueType_List*)(((RogueType_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG((desired_capacity_0 - THIS->count)) ))));
}

RogueType_List* RogueType_List__expand_to_count__Int32( RogueType_List* THIS, RogueInt32 minimum_count_0 )
{
  if (THIS->count < minimum_count_0)
  {
    RogueType_List__ensure_capacity__Int32( ROGUE_ARG(THIS), minimum_count_0 );
    THIS->count = minimum_count_0;
  }
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__expand_to_include__Int32( RogueType_List* THIS, RogueInt32 index_0 )
{
  return (RogueType_List*)(((RogueType_List__expand_to_count__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

RogueType_List* RogueType_List__discard_from__Int32( RogueType_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__insert__Type_Int32( RogueType_List* THIS, RogueClassType* value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueType_List*)(((RogueType_List__add__Type( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueType_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueType_List__shift__Int32_OptionalInt32_Int32_OptionalType( ROGUE_ARG(THIS), before_index_1, ROGUE_ARG((RogueOptionalInt32__create())), 1, ROGUE_ARG((RogueOptionalType__create())) );
    THIS->data->as_objects[before_index_1] = value_0;
  }
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__keep__Function_Type_RETURNSLogical( RogueType_List* THIS, RogueClassFunction_Type_RETURNSLogical* keep_if_0 )
{
  RogueInt32 write_pos_1 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1793_3,(THIS));
    RogueInt32 i_4 = (0);
    for (;i_4 < _auto_1793_3->count;++i_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,value_2,(((RogueClassType*)(THIS->data->as_objects[i_4]))));
      if ((Rogue_call_ROGUEM352( 17, keep_if_0, value_2 )))
      {
        THIS->data->as_objects[write_pos_1] = value_2;
        ++write_pos_1;
      }
    }
  }
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS), write_pos_1 );
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__keeping__Function_Type_RETURNSLogical( RogueType_List* THIS, RogueClassFunction_Type_RETURNSLogical* keep_if_0 )
{
  return (RogueType_List*)(((RogueType_List__keep__Function_Type_RETURNSLogical( ROGUE_ARG(((RogueType_List__cloned( ROGUE_ARG(THIS) )))), keep_if_0 ))));
}

RogueOptionalInt32 RogueType_List__locate__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  if (true)
  {
    if (((void*)value_0) == ((void*)NULL))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1796_1,(THIS));
        RogueInt32 i_2 = (0);
        for (;i_2 < _auto_1796_1->count;++i_2)
        {
          if (((void*)value_0) == ((void*)((RogueClassType*)(THIS->data->as_objects[i_2]))))
          {
            return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
          }
        }
      }
      return (RogueOptionalInt32)((RogueOptionalInt32__create()));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1797_3,(THIS));
    RogueInt32 i_4 = (0);
    for (;i_4 < _auto_1797_3->count;++i_4)
    {
      if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassType*)(THIS->data->as_objects[i_4]))))) )))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_4, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueType_List* RogueType_List__reserve__Int32( RogueType_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassType*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueType_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassType*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueType_List*)(THIS);
}

RogueClassType* RogueType_List__remove__Type( RogueType_List* THIS, RogueClassType* value_0 )
{
  RogueOptionalInt32 index_1 = (((RogueType_List__locate__Type( ROGUE_ARG(THIS), value_0 ))));
  if (index_1.exists)
  {
    return (RogueClassType*)(((RogueType_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    return (RogueClassType*)(value_0);
  }
}

RogueClassType* RogueType_List__remove_at__Int32( RogueType_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(((RogueClassType*)(THIS->data->as_objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassType*,zero_value_2,0);
  THIS->count = (THIS->count + -1);
  THIS->data->as_objects[THIS->count] = zero_value_2;
  return (RogueClassType*)(result_1);
}

RogueClassType* RogueType_List__remove_last( RogueType_List* THIS )
{
  return (RogueClassType*)(((RogueType_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueClassListRewriter_Type_* RogueType_List__rewriter( RogueType_List* THIS )
{
  return (RogueClassListRewriter_Type_*)(((RogueListRewriter_Type___init__Type_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListRewriter_Type_*,ROGUE_CREATE_OBJECT(ListRewriter_Type_))), ROGUE_ARG(THIS) ))));
}

RogueType_List* RogueType_List__shift__Int32_OptionalInt32_Int32_OptionalType( RogueType_List* THIS, RogueInt32 i1_0, RogueOptionalInt32 element_count_1, RogueInt32 delta_2, RogueOptionalType fill_3 )
{
  if (delta_2 == 0)
  {
    return (RogueType_List*)(THIS);
  }
  RogueInt32 n_4 = 0;
  if (element_count_1.exists)
  {
    n_4 = ((RogueInt32)element_count_1.value);
  }
  else
  {
    n_4 = ((RogueInt32)(THIS->count - i1_0));
  }
  RogueInt32 dest_i2_5 = ((((i1_0 + delta_2) + n_4) - 1));
  RogueType_List__expand_to_include__Int32( ROGUE_ARG(THIS), dest_i2_5 );
  RogueArray_set(THIS->data,(i1_0 + delta_2),((RogueArray*)(THIS->data)),i1_0,n_4);
  if (fill_3.exists)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,value_6,(fill_3.value));
    if (delta_2 > 0)
    {
      {
        RogueInt32 i_7 = (i1_0);
        RogueInt32 _auto_184_8 = (((i1_0 + delta_2) - 1));
        for (;i_7 <= _auto_184_8;++i_7)
        {
          THIS->data->as_objects[i_7] = value_6;
        }
      }
    }
    else
    {
      {
        RogueInt32 i_9 = (((i1_0 + delta_2) + n_4));
        RogueInt32 _auto_185_10 = (((i1_0 + n_4) - 1));
        for (;i_9 <= _auto_185_10;++i_9)
        {
          THIS->data->as_objects[i_9] = value_6;
        }
      }
    }
  }
  return (RogueType_List*)(THIS);
}

RogueType_List* RogueType_List__swap__Int32_Int32( RogueType_List* THIS, RogueInt32 i1_0, RogueInt32 i2_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,temp_2,(((RogueClassType*)(THIS->data->as_objects[i1_0]))));
  THIS->data->as_objects[i1_0] = ((RogueClassType*)(THIS->data->as_objects[i2_1]));
  THIS->data->as_objects[i2_1] = temp_2;
  return (RogueType_List*)(THIS);
}

RogueString* RogueArray_Type___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1074]);
}

RogueClassAttributes* RogueAttributes__init_object( RogueClassAttributes* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__init( RogueClassAttributes* THIS )
{
  return (RogueClassAttributes*)(THIS);
}

RogueString* RogueAttributes__type_name( RogueClassAttributes* THIS )
{
  return (RogueString*)(Rogue_literal_strings[973]);
}

RogueClassAttributes* RogueAttributes__init__Int32( RogueClassAttributes* THIS, RogueInt32 _auto_279_0 )
{
  THIS->flags = _auto_279_0;
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__cloned( RogueClassAttributes* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassAttributes*,result_0,(((RogueAttributes__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))), ROGUE_ARG(THIS->flags) )))));
  if (!!(THIS->tags))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1812_1,(THIS->tags));
      RogueInt32 _auto_1813_2 = (0);
      for (;_auto_1813_2 < _auto_1812_1->count;++_auto_1813_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,tag_3,(((RogueString*)(_auto_1812_1->data->as_objects[_auto_1813_2]))));
        RogueAttributes__add__String( result_0, tag_3 );
      }
    }
  }
  return (RogueClassAttributes*)(result_0);
}

RogueClassAttributes* RogueAttributes__add__Int32( RogueClassAttributes* THIS, RogueInt32 flag_0 )
{
  THIS->flags |= flag_0;
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__add__String( RogueClassAttributes* THIS, RogueString* tag_0 )
{
  if (((void*)THIS->tags) == ((void*)NULL))
  {
    THIS->tags = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  }
  RogueString_List__add__String( ROGUE_ARG(THIS->tags), tag_0 );
  return (RogueClassAttributes*)(THIS);
}

RogueClassAttributes* RogueAttributes__add__Attributes( RogueClassAttributes* THIS, RogueClassAttributes* other_0 )
{
  THIS->flags |= other_0->flags;
  if (!!(other_0->tags))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_1814_1,(other_0->tags));
      RogueInt32 _auto_1815_2 = (0);
      for (;_auto_1815_2 < _auto_1814_1->count;++_auto_1815_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,tag_3,(((RogueString*)(_auto_1814_1->data->as_objects[_auto_1815_2]))));
        RogueAttributes__add__String( ROGUE_ARG(THIS), tag_3 );
      }
    }
  }
  return (RogueClassAttributes*)(THIS);
}

RogueString* RogueAttributes__element_type_name( RogueClassAttributes* THIS )
{
  switch ((THIS->flags & 7))
  {
    case 2:
    {
      return (RogueString*)(Rogue_literal_strings[354]);
      break;
    }
    case 1:
    {
      return (RogueString*)(Rogue_literal_strings[351]);
      break;
    }
    case 3:
    {
      return (RogueString*)(Rogue_literal_strings[355]);
      break;
    }
    default:
    {
      return (RogueString*)(Rogue_literal_strings[42]);
    }
  }
}

RogueClassTemplate* RogueTemplate__init_object( RogueClassTemplate* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  return (RogueClassTemplate*)(THIS);
}

RogueString* RogueTemplate__type_name( RogueClassTemplate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[961]);
}

RogueClassTemplate* RogueTemplate__init__Token_String_Int32( RogueClassTemplate* THIS, RogueClassToken* _auto_266_0, RogueString* _auto_267_1, RogueInt32 attribute_flags_2 )
{
  THIS->name = _auto_267_1;
  THIS->t = _auto_266_0;
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), attribute_flags_2 );
  return (RogueClassTemplate*)(THIS);
}

RogueClassTypeParameter* RogueTemplate__add_type_parameter__Token_String( RogueClassTemplate* THIS, RogueClassToken* p_t_0, RogueString* p_name_1 )
{
  if (((void*)THIS->type_parameters) == ((void*)NULL))
  {
    THIS->type_parameters = ((RogueTypeParameter_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeParameter_List*,ROGUE_CREATE_OBJECT(TypeParameter_List))) )));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_2,(((RogueTypeParameter__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeParameter*,ROGUE_CREATE_OBJECT(TypeParameter))), p_t_0, p_name_1 )))));
  RogueTypeParameter_List__add__TypeParameter( ROGUE_ARG(THIS->type_parameters), param_2 );
  return (RogueClassTypeParameter*)(param_2);
}

void RogueTemplate__instantiate__Type_Scope( RogueClassTemplate* THIS, RogueClassType* type_0, RogueClassScope* scope_1 )
{
  if (!!(THIS->alternates_by_param_count))
  {
    RogueInt32 specializer_count_2 = (0);
    if (((RogueString__contains__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' ))))
    {
      specializer_count_2 = ((RogueInt32)((RogueParser__parse_specializer_count( ROGUE_ARG(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(type_0->t), ROGUE_ARG(type_0->name), ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))) )))) ))));
    }
    if (((RogueTemplate__type_parameter_count( ROGUE_ARG(THIS) ))) != specializer_count_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,alternate_3,(((RogueTable_Int32_Template___get__Int32( ROGUE_ARG(THIS->alternates_by_param_count), specializer_count_2 )))));
      if (!!(alternate_3))
      {
        RogueTemplate__instantiate__Type_Scope( alternate_3, type_0, scope_1 );
        return;
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[394] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[395] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__pluralized__Int32( Rogue_literal_strings[396], specializer_count_2 )))) )))) )))), Rogue_literal_strings[400] )))) )))) ))));
      }
    }
  }
  type_0->t = THIS->t;
  RogueAttributes__add__Attributes( ROGUE_ARG(type_0->attributes), ROGUE_ARG(THIS->attributes) );
  type_0->source_template = THIS;
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,augmented_tokens_4,(THIS->tokens));
  augmented_tokens_4 = ((RogueToken_List*)((RogueTemplate__add_augmented_tokens__Type_String_Token_List( ROGUE_ARG(THIS), type_0, ROGUE_ARG(THIS->name), augmented_tokens_4 ))));
  if (((RogueString__operatorLTGT__String( ROGUE_ARG(type_0->name), ROGUE_ARG(THIS->name) ))) != 0)
  {
    augmented_tokens_4 = ((RogueToken_List*)((RogueTemplate__add_augmented_tokens__Type_String_Token_List( ROGUE_ARG(THIS), type_0, ROGUE_ARG(type_0->name), augmented_tokens_4 ))));
  }
  if (((RogueString__ends_with__Character( ROGUE_ARG(type_0->name), (RogueCharacter)']' ))))
  {
    RogueTemplate__instantiate_list__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
  else if (((RogueString__ends_with__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'?' ))))
  {
    RogueTemplate__instantiate_optional__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
  else if (!!(THIS->type_parameters))
  {
    RogueTemplate__instantiate_parameterized_type__Type_Token_List_Scope( ROGUE_ARG(THIS), type_0, augmented_tokens_4, scope_1 );
  }
  else
  {
    RogueTemplate__instantiate_standard_type__Type_Token_List( ROGUE_ARG(THIS), type_0, augmented_tokens_4 );
  }
}

RogueToken_List* RogueTemplate__add_augmented_tokens__Type_String_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueString* augment_name_1, RogueToken_List* _auto_5770 )
{
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,augmented_tokens_2,_auto_5770);
  ROGUE_DEF_LOCAL_REF(RogueAugment_List*,augments_3,(((RogueTable_String_Augment_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->augment_lookup), augment_name_1 )))));
  if (!(!!(augments_3)))
  {
    return (RogueToken_List*)(augmented_tokens_2);
  }
  RogueInt32 t_count_4 = (2);
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_1816_5,(augments_3));
    RogueInt32 _auto_1817_6 = (0);
    for (;_auto_1817_6 < _auto_1816_5->count;++_auto_1817_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_7,(((RogueClassAugment*)(_auto_1816_5->data->as_objects[_auto_1817_6]))));
      t_count_4 += aug_7->tokens->count;
    }
  }
  if (((void*)augmented_tokens_2) == ((void*)THIS->tokens))
  {
    augmented_tokens_2 = ((RogueToken_List*)((RogueToken_List__add__Token_List( ROGUE_ARG(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((THIS->tokens->count + t_count_4)) )))), augmented_tokens_2 ))));
  }
  else
  {
    RogueToken_List__reserve__Int32( augmented_tokens_2, t_count_4 );
  }
  RogueToken_List__add__Token( augmented_tokens_2, ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(RogueTokenType_begin_augment_tokens) )))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_1818_8,(augments_3));
    RogueInt32 _auto_1819_9 = (0);
    for (;_auto_1819_9 < _auto_1818_8->count;++_auto_1819_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,aug_10,(((RogueClassAugment*)(_auto_1818_8->data->as_objects[_auto_1819_9]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_1820_11,(aug_10->base_types));
        RogueInt32 _auto_1821_12 = (0);
        for (;_auto_1821_12 < _auto_1820_11->count;++_auto_1821_12)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_13,(((RogueClassType*)(_auto_1820_11->data->as_objects[_auto_1821_12]))));
          RogueType_List__add__Type( ROGUE_ARG(type_0->base_types), base_type_13 );
        }
      }
      RogueToken_List__add__Token_List( augmented_tokens_2, ROGUE_ARG(aug_10->tokens) );
    }
  }
  RogueToken_List__add__Token( augmented_tokens_2, ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) );
  return (RogueToken_List*)(augmented_tokens_2);
}

void RogueTemplate__instantiate_list__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  type_0->is_list = true;
  type_0->_element_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(type_0->name), -2 )))) )));
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_2,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(augmented_tokens_1->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1822_3,(augmented_tokens_1));
    RogueInt32 _auto_1823_4 = (0);
    for (;_auto_1823_4 < _auto_1822_3->count;++_auto_1823_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_5,(((RogueClassToken*)(_auto_1822_3->data->as_objects[_auto_1823_4]))));
      if (((void*)template_t_5->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((Rogue_call_ROGUEM101( 11, template_t_5 ))), Rogue_literal_strings[401] ))))
        {
          RogueToken_List__add__Token( instance_tokens_2, ROGUE_ARG((Rogue_call_ROGUEM111( 25, ROGUE_ARG(RogueTokenType_identifier), template_t_5, ROGUE_ARG(type_0->_element_type->name) ))) );
        }
        else
        {
          RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
        }
      }
      else
      {
        RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
      }
    }
  }
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_2, false )))), type_0 );
}

void RogueTemplate__instantiate_optional__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  type_0->is_optional = true;
  type_0->_element_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(type_0->name), -1 )))) )));
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_2,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(augmented_tokens_1->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1824_3,(augmented_tokens_1));
    RogueInt32 _auto_1825_4 = (0);
    for (;_auto_1825_4 < _auto_1824_3->count;++_auto_1825_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_5,(((RogueClassToken*)(_auto_1824_3->data->as_objects[_auto_1825_4]))));
      if (((void*)template_t_5->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG((Rogue_call_ROGUEM101( 11, template_t_5 ))), Rogue_literal_strings[401] ))))
        {
          RogueToken_List__add__Token( instance_tokens_2, ROGUE_ARG((Rogue_call_ROGUEM111( 25, ROGUE_ARG(RogueTokenType_identifier), template_t_5, ROGUE_ARG(type_0->_element_type->name) ))) );
        }
        else
        {
          RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
        }
      }
      else
      {
        RogueToken_List__add__Token( instance_tokens_2, template_t_5 );
      }
    }
  }
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_2, false )))), type_0 );
}

void RogueTemplate__instantiate_parameterized_type__Type_Token_List_Scope( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1, RogueClassScope* scope_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,instance_tokens_3,(augmented_tokens_1));
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_TypeSpecializer_*,type_specializers_4,(((RogueTable_String_TypeSpecializer___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TypeSpecializer_*,ROGUE_CREATE_OBJECT(Table_String_TypeSpecializer_))) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,specialization_string_5,(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))));
  if (specialization_string_5->character_count == 0)
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[535] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[536] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[537] )))) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_6,(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(THIS->t), ROGUE_ARG(type_0->name), ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' )))) )))));
  RogueParser__read( parser_6 );
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_7,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueLogical first_8 = (true);
  while ((first_8 || ((RogueParser__consume__TokenType( parser_6, ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_8 = ((RogueLogical)false);
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,specializer_tokens_9,(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))));
    RogueParser__parse_specializer__StringBuilder_Token_List( parser_6, ROGUE_ARG(((RogueStringBuilder__clear( buffer_7 )))), specializer_tokens_9 );
    RogueInt32 index_10 = (type_specializers_4->count);
    if (index_10 >= THIS->type_parameters->count)
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[538] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,param_11,(((RogueClassTypeParameter*)(THIS->type_parameters->data->as_objects[index_10]))));
    ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_12,(((RogueTypeSpecializer__init__String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTypeSpecializer*,ROGUE_CREATE_OBJECT(TypeSpecializer))), ROGUE_ARG(param_11->name), index_10 )))));
    specializer_12->tokens = specializer_tokens_9;
    RogueTable_String_TypeSpecializer___set__String_TypeSpecializer( type_specializers_4, ROGUE_ARG(specializer_12->name), specializer_12 );
    if (!(!!(type_0->specializers)))
    {
      type_0->specializers = ((RogueTypeSpecializer_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeSpecializer_List*,ROGUE_CREATE_OBJECT(TypeSpecializer_List))) )));
    }
    RogueTypeSpecializer_List__add__TypeSpecializer( ROGUE_ARG(type_0->specializers), specializer_12 );
  }
  if (type_specializers_4->count < THIS->type_parameters->count)
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(type_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[539] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[540] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(type_specializers_4->count) )))) )))), Rogue_literal_strings[541] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_parameters->count) )))) )))), Rogue_literal_strings[493] )))) )))) ))));
  }
  instance_tokens_3 = ((RogueToken_List*)((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((augmented_tokens_1->count * 2)) ))));
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1826_14,(augmented_tokens_1));
    RogueInt32 _auto_1827_15 = (0);
    for (;_auto_1827_15 < _auto_1826_14->count;++_auto_1827_15)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,template_t_16,(((RogueClassToken*)(_auto_1826_14->data->as_objects[_auto_1827_15]))));
      if (((void*)template_t_16->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_13,(((RogueTable_String_TypeSpecializer___get__String( type_specializers_4, ROGUE_ARG((Rogue_call_ROGUEM101( 11, template_t_16 ))) )))));
        if (!!(specializer_13))
        {
          {
            ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_1828_17,(specializer_13->tokens));
            RogueInt32 _auto_1829_18 = (0);
            for (;_auto_1829_18 < _auto_1828_17->count;++_auto_1829_18)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassToken*,specializer_t_19,(((RogueClassToken*)(_auto_1828_17->data->as_objects[_auto_1829_18]))));
              RogueToken_List__add__Token( instance_tokens_3, specializer_t_19 );
            }
          }
        }
        else
        {
          RogueToken_List__add__Token( instance_tokens_3, template_t_16 );
        }
      }
      else
      {
        RogueToken_List__add__Token( instance_tokens_3, template_t_16 );
      }
    }
  }
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), instance_tokens_3, false )))), type_0 );
}

void RogueTemplate__instantiate_standard_type__Type_Token_List( RogueClassTemplate* THIS, RogueClassType* type_0, RogueToken_List* augmented_tokens_1 )
{
  if (((RogueString__contains__Character( ROGUE_ARG(type_0->name), (RogueCharacter)'<' ))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[542] ))));
  }
  RogueParser__parse_type_def__Type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), augmented_tokens_1, false )))), type_0 );
}

RogueInt32 RogueTemplate__type_parameter_count( RogueClassTemplate* THIS )
{
  if (!!(THIS->type_parameters))
  {
    return (RogueInt32)(THIS->type_parameters->count);
  }
  return (RogueInt32)(0);
}

RogueTypeParameter_List* RogueTypeParameter_List__init_object( RogueTypeParameter_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTypeParameter_List*)(THIS);
}

RogueTypeParameter_List* RogueTypeParameter_List__init( RogueTypeParameter_List* THIS )
{
  RogueTypeParameter_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTypeParameter_List*)(THIS);
}

RogueString* RogueTypeParameter_List__to_String( RogueTypeParameter_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,_auto_1830_2,(THIS));
    RogueInt32 _auto_1831_3 = (0);
    for (;_auto_1831_3 < _auto_1830_2->count;++_auto_1831_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,value_4,(((RogueClassTypeParameter*)(_auto_1830_2->data->as_objects[_auto_1831_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTypeParameter_List__type_name( RogueTypeParameter_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1052]);
}

RogueTypeParameter_List* RogueTypeParameter_List__init__Int32( RogueTypeParameter_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTypeParameter*), true );
  }
  return (RogueTypeParameter_List*)(THIS);
}

RogueTypeParameter_List* RogueTypeParameter_List__add__TypeParameter( RogueTypeParameter_List* THIS, RogueClassTypeParameter* value_0 )
{
  ((RogueTypeParameter_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueTypeParameter_List*)(THIS);
}

RogueInt32 RogueTypeParameter_List__capacity( RogueTypeParameter_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTypeParameter_List* RogueTypeParameter_List__reserve__Int32( RogueTypeParameter_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeParameter*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTypeParameter_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeParameter*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTypeParameter_List*)(THIS);
}

RogueClassTypeParameter* RogueTypeParameter__init_object( RogueClassTypeParameter* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTypeParameter*)(THIS);
}

RogueString* RogueTypeParameter__type_name( RogueClassTypeParameter* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1008]);
}

RogueClassTypeParameter* RogueTypeParameter__init__Token_String( RogueClassTypeParameter* THIS, RogueClassToken* _auto_690_0, RogueString* _auto_691_1 )
{
  THIS->name = _auto_691_1;
  THIS->t = _auto_690_0;
  return (RogueClassTypeParameter*)(THIS);
}

RogueString* RogueArray_TypeParameter___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1093]);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init_object( RogueClassTable_Int32_Template_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init( RogueClassTable_Int32_Template_* THIS )
{
  RogueTable_Int32_Template___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueString* RogueTable_Int32_Template___to_String( RogueClassTable_Int32_Template_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_Int32_Template___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_Int32_Template___type_name( RogueClassTable_Int32_Template_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[972]);
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___init__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_Int32_Template_*), true );
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueLogical RogueTable_Int32_Template___contains__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  return (RogueLogical)(!!(((RogueTable_Int32_Template___find__Int32( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_Int32_Template_* RogueTable_Int32_Template___find__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  RogueInt32 hash_1 = (((RogueInt32__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_2,(((RogueClassTableEntry_Int32_Template_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && entry_2->key == key_0))
    {
      return (RogueClassTableEntry_Int32_Template_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_Int32_Template_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_Int32_Template_*)(((RogueClassTableEntry_Int32_Template_*)(NULL)));
}

RogueClassTemplate* RogueTable_Int32_Template___get__Int32( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_1,(((RogueTable_Int32_Template___find__Int32( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassTemplate*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,default_value_2,0);
    return (RogueClassTemplate*)(default_value_2);
  }
}

RogueClassTable_Int32_Template_* RogueTable_Int32_Template___set__Int32_Template( RogueClassTable_Int32_Template_* THIS, RogueInt32 key_0, RogueClassTemplate* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,entry_2,(((RogueTable_Int32_Template___find__Int32( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_Int32_Template_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_Int32_Template____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueInt32__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_Int32_Template_*)((RogueTableEntry_Int32_Template___init__Int32_Template_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_Int32_Template_*,ROGUE_CREATE_OBJECT(TableEntry_Int32_Template_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_Int32_Template_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_Int32_Template_*)(THIS);
}

RogueStringBuilder* RogueTable_Int32_Template___print_to__StringBuilder( RogueClassTable_Int32_Template_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__Int32( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_Int32_Template_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_Int32_Template____grow( RogueClassTable_Int32_Template_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_Int32_Template_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Int32_Template_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_Int32_Template_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_Int32_Template_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_Int32_Template____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1094]);
}

RogueClassTableEntry_Int32_Template_* RogueTableEntry_Int32_Template___init_object( RogueClassTableEntry_Int32_Template_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_Int32_Template_*)(THIS);
}

RogueString* RogueTableEntry_Int32_Template___to_String( RogueClassTableEntry_Int32_Template_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_Int32_Template___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_Int32_Template___type_name( RogueClassTableEntry_Int32_Template_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[919]);
}

RogueClassTableEntry_Int32_Template_* RogueTableEntry_Int32_Template___init__Int32_Template_Int32( RogueClassTableEntry_Int32_Template_* THIS, RogueInt32 _key_0, RogueClassTemplate* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_Int32_Template_*)(THIS);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init_object( RogueTypeSpecializer_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init( RogueTypeSpecializer_List* THIS )
{
  RogueTypeSpecializer_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueString* RogueTypeSpecializer_List__to_String( RogueTypeSpecializer_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeSpecializer_List*,_auto_1901_2,(THIS));
    RogueInt32 _auto_1902_3 = (0);
    for (;_auto_1902_3 < _auto_1901_2->count;++_auto_1902_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,value_4,(((RogueClassTypeSpecializer*)(_auto_1901_2->data->as_objects[_auto_1902_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTypeSpecializer_List__type_name( RogueTypeSpecializer_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1059]);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__init__Int32( RogueTypeSpecializer_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTypeSpecializer*), true );
  }
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__add__TypeSpecializer( RogueTypeSpecializer_List* THIS, RogueClassTypeSpecializer* value_0 )
{
  ((RogueTypeSpecializer_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueInt32 RogueTypeSpecializer_List__capacity( RogueTypeSpecializer_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTypeSpecializer_List* RogueTypeSpecializer_List__reserve__Int32( RogueTypeSpecializer_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeSpecializer*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTypeSpecializer_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTypeSpecializer*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTypeSpecializer_List*)(THIS);
}

RogueClassTypeSpecializer* RogueTypeSpecializer__init_object( RogueClassTypeSpecializer* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTypeSpecializer*)(THIS);
}

RogueString* RogueTypeSpecializer__type_name( RogueClassTypeSpecializer* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1009]);
}

RogueClassTypeSpecializer* RogueTypeSpecializer__init__String_Int32( RogueClassTypeSpecializer* THIS, RogueString* _auto_692_0, RogueInt32 _auto_693_1 )
{
  THIS->index = _auto_693_1;
  THIS->name = _auto_692_0;
  return (RogueClassTypeSpecializer*)(THIS);
}

RogueString* RogueArray_TypeSpecializer___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1095]);
}

RogueDefinition_List* RogueDefinition_List__init_object( RogueDefinition_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueDefinition_List*)(THIS);
}

RogueDefinition_List* RogueDefinition_List__init( RogueDefinition_List* THIS )
{
  RogueDefinition_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueDefinition_List*)(THIS);
}

RogueString* RogueDefinition_List__to_String( RogueDefinition_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueDefinition_List*,_auto_1950_2,(THIS));
    RogueInt32 _auto_1951_3 = (0);
    for (;_auto_1951_3 < _auto_1950_2->count;++_auto_1951_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,value_4,(((RogueClassDefinition*)(_auto_1950_2->data->as_objects[_auto_1951_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueDefinition_List__type_name( RogueDefinition_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1060]);
}

RogueDefinition_List* RogueDefinition_List__init__Int32( RogueDefinition_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassDefinition*), true );
  }
  return (RogueDefinition_List*)(THIS);
}

RogueDefinition_List* RogueDefinition_List__add__Definition( RogueDefinition_List* THIS, RogueClassDefinition* value_0 )
{
  ((RogueDefinition_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueDefinition_List*)(THIS);
}

RogueInt32 RogueDefinition_List__capacity( RogueDefinition_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueDefinition_List* RogueDefinition_List__reserve__Int32( RogueDefinition_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassDefinition*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueDefinition_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassDefinition*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueDefinition_List*)(THIS);
}

RogueClassDefinition* RogueDefinition__init_object( RogueClassDefinition* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassDefinition*)(THIS);
}

RogueString* RogueDefinition__type_name( RogueClassDefinition* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1010]);
}

RogueClassDefinition* RogueDefinition__init__Token_String_Cmd_Logical( RogueClassDefinition* THIS, RogueClassToken* _auto_694_0, RogueString* _auto_695_1, RogueClassCmd* _auto_696_2, RogueLogical _auto_697_3 )
{
  THIS->is_enumeration = _auto_697_3;
  THIS->expression = _auto_696_2;
  THIS->name = _auto_695_1;
  THIS->t = _auto_694_0;
  return (RogueClassDefinition*)(THIS);
}

RogueClassCmd* RogueCmd__init_object( RogueClassCmd* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassCmd*)(THIS);
}

RogueString* RogueCmd__type_name( RogueClassCmd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[413]);
}

void RogueCmd__add_to__CmdStatementList( RogueClassCmd* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_0), ROGUE_ARG(THIS) );
}

RogueClassCmd* RogueCmd__call_prior__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1273] ))));
}

RogueClassCmd* RogueCmd__cast_to__Type_Scope_Logical_Logical( RogueClassCmd* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1, RogueLogical allow_implicit_narrowing_2, RogueLogical is_conversion_3 )
{
  return (RogueClassCmd*)(((RogueCmd__cast_to__Type_Type_Scope_Logical_Logical( ROGUE_ARG(THIS), ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS) ))), target_type_0, scope_1, allow_implicit_narrowing_2, is_conversion_3 ))));
}

RogueClassCmd* RogueCmd__cast_to__Type_Type_Scope_Logical_Logical( RogueClassCmd* THIS, RogueClassType* this_type_0, RogueClassType* target_type_1, RogueClassScope* scope_2, RogueLogical allow_implicit_narrowing_3, RogueLogical is_conversion_4 )
{
  if (((void*)this_type_0) == ((void*)target_type_1))
  {
    return (RogueClassCmd*)(THIS);
  }
  RogueType__organize__Scope( this_type_0, scope_2 );
  RogueType__organize__Scope( target_type_1, scope_2 );
  if (!(is_conversion_4))
  {
    if ((((RogueType__instance_of__Type( this_type_0, target_type_1 ))) || (((RogueType__instance_of__Type( target_type_1, this_type_0 ))) && allow_implicit_narrowing_3)))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), target_type_1 ))))))));
    }
  }
  if ((((RogueType__is_primitive( this_type_0 ))) && ((RogueType__is_primitive( target_type_1 )))))
  {
    if (!((((void*)this_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical) || ((void*)target_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), target_type_1 ))))))));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_5,(((RogueString__operatorPLUS__String( Rogue_literal_strings[315], ROGUE_ARG(target_type_1->name) )))));
  if (((RogueType__has_method_named__String( this_type_0, m_name_5 ))))
  {
    return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_2, this_type_0, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), m_name_5 )))), true, 0 ))));
  }
  if ((!!(((RogueType__find_method__String( target_type_1, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[507] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_0->name) )))) )))), Rogue_literal_strings[12] )))) )))) )))) || !!(((RogueType__find_global_method__String( target_type_1, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[508] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_0->name) )))) )))), Rogue_literal_strings[12] )))) )))) ))))))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(target_type_1->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS) )))) )))), scope_2 ))));
  }
  if (is_conversion_4)
  {
    if ((((RogueType__instance_of__Type( this_type_0, target_type_1 ))) || (((RogueType__instance_of__Type( target_type_1, this_type_0 ))) && allow_implicit_narrowing_3)))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS), target_type_1 ))))))));
    }
  }
  if (((void*)target_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) ))))))));
  }
  if (target_type_1->is_optional)
  {
    if (((void*)this_type_0) == ((void*)target_type_1->_element_type))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_0->name) )))) )))), Rogue_literal_strings[178] )))) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS) )))) ))))));
    }
    else if (((void*)this_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(this_type_0->name) )))) )))), Rogue_literal_strings[178] )))) )))), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
    }
    else if (((RogueType__is_primitive( this_type_0 ))))
    {
      return (RogueClassCmd*)((Rogue_call_ROGUEM145( 19, ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS), ROGUE_ARG(target_type_1->_element_type), scope_2, allow_implicit_narrowing_3, false ))), scope_2 ))), target_type_1, scope_2, allow_implicit_narrowing_3, false )));
    }
  }
  if (((RogueType__instance_of__Type( target_type_1, this_type_0 ))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[394] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(this_type_0))) )))) )))), Rogue_literal_strings[522] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(target_type_1))) )))) )))), Rogue_literal_strings[523] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(target_type_1))) )))) )))), Rogue_literal_strings[524] )))) )))) ))));
  }
  if (((RogueType__is_aspect( this_type_0 ))))
  {
    return (RogueClassCmd*)(((RogueCmd__cast_to__Type_Type_Scope_Logical_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), target_type_1, scope_2, allow_implicit_narrowing_3, is_conversion_4 ))));
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[410] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(this_type_0))) )))) )))), Rogue_literal_strings[525] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(target_type_1))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
}

RogueClassCmd* RogueCmd__cloned__CloneArgs( RogueClassCmd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM142( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[414] )))) )))) ))));
}

RogueClassCmd* RogueCmd__cloned__Cmd_CloneArgs( RogueClassCmd* THIS, RogueClassCmd* other_0, RogueClassCloneArgs* clone_args_1 )
{
  if (!!(other_0))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM146( 21, other_0, clone_args_1 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
}

RogueClassCmdArgs* RogueCmd__cloned__CmdArgs_CloneArgs( RogueClassCmd* THIS, RogueClassCmdArgs* args_0, RogueClassCloneArgs* clone_args_1 )
{
  if (!!(args_0))
  {
    return (RogueClassCmdArgs*)(((RogueCmdArgs__cloned__CloneArgs( args_0, clone_args_1 ))));
  }
  return (RogueClassCmdArgs*)(((RogueClassCmdArgs*)(NULL)));
}

RogueClassCmdStatementList* RogueCmd__cloned__CmdStatementList_CloneArgs( RogueClassCmd* THIS, RogueClassCmdStatementList* statements_0, RogueClassCloneArgs* clone_args_1 )
{
  if (!!(statements_0))
  {
    return (RogueClassCmdStatementList*)(((RogueCmdStatementList__cloned__CloneArgs( statements_0, clone_args_1 ))));
  }
  return (RogueClassCmdStatementList*)(((RogueClassCmdStatementList*)(NULL)));
}

RogueClassCmd* RogueCmd__combine_literal_operands__Type( RogueClassCmd* THIS, RogueClassType* common_type_0 )
{
  return (RogueClassCmd*)(THIS);
}

RogueClassCmd* RogueCmd__dispatch__Visitor( RogueClassCmd* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(THIS) ))));
}

void RogueCmd__exit_scope__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
}

RogueClassType* RogueCmd__find_operation_result_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_2,(((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(THIS), left_type_0, right_type_1 )))));
  if (!(!!(result_2)))
  {
    return (RogueClassType*)(left_type_0);
  }
  if (((void*)result_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
  {
    return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
  }
  return (RogueClassType*)(result_2);
}

RogueClassType* RogueCmd__find_common_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  if (((void*)left_type_0) == ((void*)NULL))
  {
    return (RogueClassType*)(right_type_1);
  }
  if (((void*)right_type_1) == ((void*)NULL))
  {
    return (RogueClassType*)(left_type_0);
  }
  if (((void*)left_type_0) == ((void*)right_type_1))
  {
    return (RogueClassType*)(left_type_0);
  }
  if (left_type_0->is_optional)
  {
    if (right_type_1->is_optional)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_2,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(THIS), ROGUE_ARG(left_type_0->_element_type), ROGUE_ARG(right_type_1->_element_type) )))));
      return (RogueClassType*)(((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(common_type_2->name) )))) )))), Rogue_literal_strings[178] )))) )))) )))), ROGUE_ARG(((RogueClassScope*)(NULL))) ))));
    }
    else
    {
      RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(THIS), ROGUE_ARG(left_type_0->_element_type), right_type_1 );
      return (RogueClassType*)(left_type_0);
    }
  }
  else if (right_type_1->is_optional)
  {
    RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(THIS), left_type_0, ROGUE_ARG(right_type_1->_element_type) );
    return (RogueClassType*)(right_type_1);
  }
  if (((RogueType__is_primitive( left_type_0 ))))
  {
    if (((RogueType__is_primitive( right_type_1 ))))
    {
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64);
      }
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32);
      }
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64);
      }
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
      }
      if ((((void*)left_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character) || ((void*)right_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character)))
      {
        return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character);
      }
    }
  }
  if (((RogueType__instance_of__Type( left_type_0, right_type_1 ))))
  {
    return (RogueClassType*)(right_type_1);
  }
  if (((RogueType__instance_of__Type( right_type_1, left_type_0 ))))
  {
    return (RogueClassType*)(left_type_0);
  }
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueLogical RogueCmd__generates_output( RogueClassCmd* THIS )
{
  return (RogueLogical)(true);
}

RogueLogical RogueCmd__is_generic_function( RogueClassCmd* THIS )
{
  return (RogueLogical)(false);
}

RogueClassType* RogueCmd__must_find_common_type__Type_Type( RogueClassCmd* THIS, RogueClassType* left_type_0, RogueClassType* right_type_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_2,(((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(THIS), left_type_0, right_type_1 )))));
  if (!!(common_type_2))
  {
    return (RogueClassType*)(common_type_2);
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1224] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_0))) )))) )))), Rogue_literal_strings[445] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_1))) )))) )))), Rogue_literal_strings[1225] )))) )))) ))));
}

RogueClassType* RogueCmd__implicit_type__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueLogical RogueCmd__is_literal( RogueClassCmd* THIS )
{
  return (RogueLogical)(false);
}

void RogueCmd__require_type_context( RogueClassCmd* THIS )
{
  if (!!((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS) ))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[501] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS) ))))) )))) )))), Rogue_literal_strings[502] )))) )))) ))));
  }
  else
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[503] ))));
  }
}

RogueClassCmd* RogueCmd__require_integer( RogueClassCmd* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,_type_0,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS) ))));
  if ((((void*)_type_0) == ((void*)NULL) || ((void*)_type_0) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[513] ))));
  }
  return (RogueClassCmd*)(THIS);
}

RogueClassCmd* RogueCmd__require_logical__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  if (((void*)(Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS) ))) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS) )))))), scope_0 ))));
  }
  return (RogueClassCmd*)(THIS);
}

RogueClassType* Rogue_Cmd__require_type( RogueClassCmd* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_0,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS) ))));
  if (((void*)result_0) == ((void*)NULL))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[482] ))));
  }
  return (RogueClassType*)(result_0);
}

RogueClassCmd* RogueCmd__require_value( RogueClassCmd* THIS )
{
  Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS) );
  return (RogueClassCmd*)(THIS);
}

RogueLogical RogueCmd__requires_semicolon( RogueClassCmd* THIS )
{
  return (RogueLogical)(true);
}

RogueClassCmd* RogueCmd__resolve__Scope( RogueClassCmd* THIS, RogueClassScope* scope_0 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM142( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[439] )))) )))) ))));
  return (RogueClassCmd*)(THIS);
}

RogueClassCmd* RogueCmd__resolve_assignment__Scope_Cmd( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1243] ))));
}

RogueClassCmd* RogueCmd__resolve_adjust__Scope_Int32( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1242] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM142( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[12] )))) )))) ))));
}

RogueClassCmd* RogueCmd__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmd* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1243] ))));
}

RogueLogical RogueCmd__to_Logical( RogueClassCmd* THIS )
{
  return (RogueLogical)(false);
}

RogueClassType* Rogue_Cmd__type( RogueClassCmd* THIS )
{
  RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 0 )))))) );
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM142( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[481] )))) )))) ))));
}

void RogueCmd__write_cpp__CPPWriter_Logical( RogueClassCmd* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM142( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[751] )))) )))) ))));
}

RogueString* RogueArray_Definition___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1096]);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init_object( RogueClassTable_String_Definition_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init( RogueClassTable_String_Definition_* THIS )
{
  RogueTable_String_Definition___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueString* RogueTable_String_Definition___to_String( RogueClassTable_String_Definition_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Definition___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Definition___type_name( RogueClassTable_String_Definition_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1011]);
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___init__Int32( RogueClassTable_String_Definition_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Definition_*), true );
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueLogical RogueTable_String_Definition___contains__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_Definition___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_Definition_* RogueTable_String_Definition___find__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_2,(((RogueClassTableEntry_String_Definition_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Definition_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Definition_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Definition_*)(((RogueClassTableEntry_String_Definition_*)(NULL)));
}

RogueClassDefinition* RogueTable_String_Definition___get__String( RogueClassTable_String_Definition_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_1,(((RogueTable_String_Definition___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassDefinition*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,default_value_2,0);
    return (RogueClassDefinition*)(default_value_2);
  }
}

RogueClassTable_String_Definition_* RogueTable_String_Definition___set__String_Definition( RogueClassTable_String_Definition_* THIS, RogueString* key_0, RogueClassDefinition* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,entry_2,(((RogueTable_String_Definition___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Definition_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Definition____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Definition_*)((RogueTableEntry_String_Definition___init__String_Definition_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Definition_*,ROGUE_CREATE_OBJECT(TableEntry_String_Definition_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Definition_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Definition_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Definition___print_to__StringBuilder( RogueClassTable_String_Definition_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Definition_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Definition____grow( RogueClassTable_String_Definition_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Definition_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Definition_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Definition_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Definition_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Definition____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1097]);
}

RogueClassTableEntry_String_Definition_* RogueTableEntry_String_Definition___init_object( RogueClassTableEntry_String_Definition_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Definition_*)(THIS);
}

RogueString* RogueTableEntry_String_Definition___to_String( RogueClassTableEntry_String_Definition_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Definition___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Definition___type_name( RogueClassTableEntry_String_Definition_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[920]);
}

RogueClassTableEntry_String_Definition_* RogueTableEntry_String_Definition___init__String_Definition_Int32( RogueClassTableEntry_String_Definition_* THIS, RogueString* _key_0, RogueClassDefinition* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Definition_*)(THIS);
}

RogueProperty_List* RogueProperty_List__init_object( RogueProperty_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueProperty_List*)(THIS);
}

RogueProperty_List* RogueProperty_List__init( RogueProperty_List* THIS )
{
  RogueProperty_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueProperty_List*)(THIS);
}

RogueString* RogueProperty_List__to_String( RogueProperty_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_2011_2,(THIS));
    RogueInt32 _auto_2012_3 = (0);
    for (;_auto_2012_3 < _auto_2011_2->count;++_auto_2012_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,value_4,(((RogueClassProperty*)(_auto_2011_2->data->as_objects[_auto_2012_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueProperty__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueProperty_List__type_name( RogueProperty_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1044]);
}

RogueProperty_List* RogueProperty_List__init__Int32( RogueProperty_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassProperty*), true );
  }
  return (RogueProperty_List*)(THIS);
}

RogueProperty_List* RogueProperty_List__add__Property( RogueProperty_List* THIS, RogueClassProperty* value_0 )
{
  ((RogueProperty_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueProperty_List*)(THIS);
}

RogueInt32 RogueProperty_List__capacity( RogueProperty_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueProperty_List* RogueProperty_List__clear( RogueProperty_List* THIS )
{
  RogueProperty_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueProperty_List*)(THIS);
}

RogueProperty_List* RogueProperty_List__discard_from__Int32( RogueProperty_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueProperty_List*)(THIS);
}

RogueOptionalInt32 RogueProperty_List__locate__Property( RogueProperty_List* THIS, RogueClassProperty* value_0 )
{
  if (true)
  {
    if (((void*)value_0) == ((void*)NULL))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_2044_1,(THIS));
        RogueInt32 i_2 = (0);
        for (;i_2 < _auto_2044_1->count;++i_2)
        {
          if (((void*)value_0) == ((void*)((RogueClassProperty*)(THIS->data->as_objects[i_2]))))
          {
            return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
          }
        }
      }
      return (RogueOptionalInt32)((RogueOptionalInt32__create()));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_2045_3,(THIS));
    RogueInt32 i_4 = (0);
    for (;i_4 < _auto_2045_3->count;++i_4)
    {
      if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassProperty*)(THIS->data->as_objects[i_4]))))) )))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_4, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueProperty_List* RogueProperty_List__reserve__Int32( RogueProperty_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassProperty*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueProperty_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassProperty*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueProperty_List*)(THIS);
}

RogueClassProperty* RogueProperty__init_object( RogueClassProperty* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassProperty*)(THIS);
}

RogueString* RogueProperty__to_String( RogueClassProperty* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueProperty__type_name( RogueClassProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[964]);
}

RogueClassProperty* RogueProperty__init__Token_Type_String_Type_Cmd( RogueClassProperty* THIS, RogueClassToken* _auto_268_0, RogueClassType* _auto_269_1, RogueString* _auto_270_2, RogueClassType* _auto_271_3, RogueClassCmd* _auto_272_4 )
{
  THIS->initial_value = _auto_272_4;
  THIS->_type = _auto_271_3;
  THIS->name = _auto_270_2;
  RogueProperty__set_type_context__Type( ROGUE_ARG(THIS), _auto_269_1 );
  THIS->t = _auto_268_0;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__cloned( RogueClassProperty* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,result_0,(((RogueProperty__init__Token_Type_String_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProperty*,ROGUE_CREATE_OBJECT(Property))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  result_0->cpp_name = THIS->cpp_name;
  result_0->_type = THIS->_type;
  result_0->attributes = THIS->attributes;
  if (!!(THIS->initial_value))
  {
    result_0->initial_value = (Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ));
  }
  return (RogueClassProperty*)(result_0);
}

RogueLogical RogueProperty__is_incorporated( RogueClassProperty* THIS )
{
  return (RogueLogical)(!!((THIS->attributes & 2048)));
}

RogueLogical RogueProperty__is_native( RogueClassProperty* THIS )
{
  return (RogueLogical)(!!((THIS->attributes & 32)));
}

RogueClassProperty* RogueProperty__mark_incorporated( RogueClassProperty* THIS )
{
  THIS->attributes |= 2048;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__mark_native( RogueClassProperty* THIS )
{
  THIS->attributes |= 32;
  return (RogueClassProperty*)(THIS);
}

RogueClassProperty* RogueProperty__set_type_context__Type( RogueClassProperty* THIS, RogueClassType* _auto_273_0 )
{
  THIS->type_context = _auto_273_0;
  return (RogueClassProperty*)(THIS);
}

RogueString* RogueArray_Property___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1077]);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init_object( RogueClassTable_String_Property_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init( RogueClassTable_String_Property_* THIS )
{
  RogueTable_String_Property___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueString* RogueTable_String_Property___to_String( RogueClassTable_String_Property_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Property___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Property___type_name( RogueClassTable_String_Property_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1012]);
}

RogueClassTable_String_Property_* RogueTable_String_Property___init__Int32( RogueClassTable_String_Property_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Property_*), true );
  return (RogueClassTable_String_Property_*)(THIS);
}

void RogueTable_String_Property___clear( RogueClassTable_String_Property_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueArray*,_auto_2062_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_2062_0->count;++i_1)
    {
      THIS->bins->as_objects[i_1] = ((RogueClassTableEntry_String_Property_*)(NULL));
    }
  }
  THIS->first_entry = ((RogueClassTableEntry_String_Property_*)(NULL));
  THIS->last_entry = ((RogueClassTableEntry_String_Property_*)(NULL));
  THIS->cur_entry = ((RogueClassTableEntry_String_Property_*)(NULL));
  THIS->count = 0;
}

RogueClassTableEntry_String_Property_* RogueTable_String_Property___find__String( RogueClassTable_String_Property_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_2,(((RogueClassTableEntry_String_Property_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Property_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Property_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Property_*)(((RogueClassTableEntry_String_Property_*)(NULL)));
}

RogueClassProperty* RogueTable_String_Property___get__String( RogueClassTable_String_Property_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_1,(((RogueTable_String_Property___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassProperty*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,default_value_2,0);
    return (RogueClassProperty*)(default_value_2);
  }
}

RogueClassTable_String_Property_* RogueTable_String_Property___set__String_Property( RogueClassTable_String_Property_* THIS, RogueString* key_0, RogueClassProperty* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,entry_2,(((RogueTable_String_Property___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Property_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Property____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Property_*)((RogueTableEntry_String_Property___init__String_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Property_*,ROGUE_CREATE_OBJECT(TableEntry_String_Property_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Property_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Property_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Property___print_to__StringBuilder( RogueClassTable_String_Property_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Property_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Property____grow( RogueClassTable_String_Property_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Property_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Property_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Property_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Property_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Property____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1098]);
}

RogueClassTableEntry_String_Property_* RogueTableEntry_String_Property___init_object( RogueClassTableEntry_String_Property_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Property_*)(THIS);
}

RogueString* RogueTableEntry_String_Property___to_String( RogueClassTableEntry_String_Property_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Property___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Property___type_name( RogueClassTableEntry_String_Property_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[921]);
}

RogueClassTableEntry_String_Property_* RogueTableEntry_String_Property___init__String_Property_Int32( RogueClassTableEntry_String_Property_* THIS, RogueString* _key_0, RogueClassProperty* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Property_*)(THIS);
}

RogueMethod_List* RogueMethod_List__init_object( RogueMethod_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__init( RogueMethod_List* THIS )
{
  RogueMethod_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueMethod_List*)(THIS);
}

RogueString* RogueMethod_List__to_String( RogueMethod_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2072_2,(THIS));
    RogueInt32 _auto_2073_3 = (0);
    for (;_auto_2073_3 < _auto_2072_2->count;++_auto_2073_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,value_4,(((RogueClassMethod*)(_auto_2072_2->data->as_objects[_auto_2073_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueMethod__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueMethod_List__type_name( RogueMethod_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1050]);
}

RogueMethod_List* RogueMethod_List__init__Int32( RogueMethod_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassMethod*), true );
  }
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__add__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  ((RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__add__Method_List( RogueMethod_List* THIS, RogueMethod_List* other_0 )
{
  RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2080_1,(other_0));
    RogueInt32 _auto_2081_2 = (0);
    for (;_auto_2081_2 < _auto_2080_1->count;++_auto_2081_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,value_3,(((RogueClassMethod*)(_auto_2080_1->data->as_objects[_auto_2081_2]))));
      RogueMethod_List__add__Method( ROGUE_ARG(THIS), value_3 );
    }
  }
  return (RogueMethod_List*)(THIS);
}

RogueInt32 RogueMethod_List__capacity( RogueMethod_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueMethod_List* RogueMethod_List__clear( RogueMethod_List* THIS )
{
  RogueMethod_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__ensure_capacity__Int32( RogueMethod_List* THIS, RogueInt32 desired_capacity_0 )
{
  return (RogueMethod_List*)(((RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG((desired_capacity_0 - THIS->count)) ))));
}

RogueMethod_List* RogueMethod_List__expand_to_count__Int32( RogueMethod_List* THIS, RogueInt32 minimum_count_0 )
{
  if (THIS->count < minimum_count_0)
  {
    RogueMethod_List__ensure_capacity__Int32( ROGUE_ARG(THIS), minimum_count_0 );
    THIS->count = minimum_count_0;
  }
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__expand_to_include__Int32( RogueMethod_List* THIS, RogueInt32 index_0 )
{
  return (RogueMethod_List*)(((RogueMethod_List__expand_to_count__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

RogueMethod_List* RogueMethod_List__discard_from__Int32( RogueMethod_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueMethod_List*)(THIS);
}

RogueMethod_List* RogueMethod_List__insert__Method_Int32( RogueMethod_List* THIS, RogueClassMethod* value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueMethod_List*)(((RogueMethod_List__add__Method( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueMethod_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueMethod_List__shift__Int32_OptionalInt32_Int32_OptionalMethod( ROGUE_ARG(THIS), before_index_1, ROGUE_ARG((RogueOptionalInt32__create())), 1, ROGUE_ARG((RogueOptionalMethod__create())) );
    THIS->data->as_objects[before_index_1] = value_0;
  }
  return (RogueMethod_List*)(THIS);
}

RogueOptionalInt32 RogueMethod_List__locate__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  if (true)
  {
    if (((void*)value_0) == ((void*)NULL))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2105_1,(THIS));
        RogueInt32 i_2 = (0);
        for (;i_2 < _auto_2105_1->count;++i_2)
        {
          if (((void*)value_0) == ((void*)((RogueClassMethod*)(THIS->data->as_objects[i_2]))))
          {
            return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
          }
        }
      }
      return (RogueOptionalInt32)((RogueOptionalInt32__create()));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2106_3,(THIS));
    RogueInt32 i_4 = (0);
    for (;i_4 < _auto_2106_3->count;++i_4)
    {
      if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassMethod*)(THIS->data->as_objects[i_4]))))) )))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_4, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueMethod_List* RogueMethod_List__reserve__Int32( RogueMethod_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassMethod*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueMethod_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassMethod*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueMethod_List*)(THIS);
}

RogueClassMethod* RogueMethod_List__remove__Method( RogueMethod_List* THIS, RogueClassMethod* value_0 )
{
  RogueOptionalInt32 index_1 = (((RogueMethod_List__locate__Method( ROGUE_ARG(THIS), value_0 ))));
  if (index_1.exists)
  {
    return (RogueClassMethod*)(((RogueMethod_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    return (RogueClassMethod*)(value_0);
  }
}

RogueClassMethod* RogueMethod_List__remove_at__Int32( RogueMethod_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,result_1,(((RogueClassMethod*)(THIS->data->as_objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,zero_value_2,0);
  THIS->count = (THIS->count + -1);
  THIS->data->as_objects[THIS->count] = zero_value_2;
  return (RogueClassMethod*)(result_1);
}

RogueClassMethod* RogueMethod_List__remove_last( RogueMethod_List* THIS )
{
  return (RogueClassMethod*)(((RogueMethod_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueMethod_List* RogueMethod_List__shift__Int32_OptionalInt32_Int32_OptionalMethod( RogueMethod_List* THIS, RogueInt32 i1_0, RogueOptionalInt32 element_count_1, RogueInt32 delta_2, RogueOptionalMethod fill_3 )
{
  if (delta_2 == 0)
  {
    return (RogueMethod_List*)(THIS);
  }
  RogueInt32 n_4 = 0;
  if (element_count_1.exists)
  {
    n_4 = ((RogueInt32)element_count_1.value);
  }
  else
  {
    n_4 = ((RogueInt32)(THIS->count - i1_0));
  }
  RogueInt32 dest_i2_5 = ((((i1_0 + delta_2) + n_4) - 1));
  RogueMethod_List__expand_to_include__Int32( ROGUE_ARG(THIS), dest_i2_5 );
  RogueArray_set(THIS->data,(i1_0 + delta_2),((RogueArray*)(THIS->data)),i1_0,n_4);
  if (fill_3.exists)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,value_6,(fill_3.value));
    if (delta_2 > 0)
    {
      {
        RogueInt32 i_7 = (i1_0);
        RogueInt32 _auto_209_8 = (((i1_0 + delta_2) - 1));
        for (;i_7 <= _auto_209_8;++i_7)
        {
          THIS->data->as_objects[i_7] = value_6;
        }
      }
    }
    else
    {
      {
        RogueInt32 i_9 = (((i1_0 + delta_2) + n_4));
        RogueInt32 _auto_210_10 = (((i1_0 + n_4) - 1));
        for (;i_9 <= _auto_210_10;++i_9)
        {
          THIS->data->as_objects[i_9] = value_6;
        }
      }
    }
  }
  return (RogueMethod_List*)(THIS);
}

RogueClassMethod* RogueMethod__init_object( RogueClassMethod* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->attributes = ((RogueAttributes__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassAttributes*,ROGUE_CREATE_OBJECT(Attributes))) )));
  THIS->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  THIS->overriding_methods = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  THIS->label_list = ((RogueCmdLabel_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdLabel_List*,ROGUE_CREATE_OBJECT(CmdLabel_List))) )));
  THIS->label_lookup = ((RogueTable_String_CmdLabel___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_CmdLabel_*,ROGUE_CREATE_OBJECT(Table_String_CmdLabel_))) )));
  return (RogueClassMethod*)(THIS);
}

RogueString* RogueMethod__to_String( RogueClassMethod* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,_auto_212_0,(THIS->signature));
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((((_auto_212_0))) ? (ROGUE_ARG(_auto_212_0)) : ROGUE_ARG(THIS->name))) )))) )))) ))));
}

RogueString* RogueMethod__type_name( RogueClassMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[987]);
}

RogueClassMethod* RogueMethod__init__Token_Type_String( RogueClassMethod* THIS, RogueClassToken* _auto_336_0, RogueClassType* _auto_337_1, RogueString* _auto_338_2 )
{
  THIS->name = _auto_338_2;
  RogueMethod__set_type_context__Type( ROGUE_ARG(THIS), _auto_337_1 );
  THIS->t = _auto_336_0;
  return (RogueClassMethod*)(THIS);
}

RogueClassMethod* RogueMethod__cloned( RogueClassMethod* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,result_0,(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS->name) )))));
  result_0->cpp_name = THIS->cpp_name;
  result_0->cpp_typedef = THIS->cpp_typedef;
  result_0->signature = THIS->signature;
  result_0->attributes = ((RogueAttributes__cloned( ROGUE_ARG(THIS->attributes) )));
  result_0->_return_type = THIS->_return_type;
  result_0->_task_result_type = THIS->_task_result_type;
  result_0->source_template = THIS->source_template;
  result_0->specializer_count = THIS->specializer_count;
  result_0->unspecialized_name = THIS->unspecialized_name;
  result_0->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2120_1,(THIS->locals));
    RogueInt32 _auto_2121_2 = (0);
    for (;_auto_2121_2 < _auto_2120_1->count;++_auto_2121_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_3,(((RogueClassLocal*)(_auto_2120_1->data->as_objects[_auto_2121_2]))));
      RogueLocal_List__add__Local( ROGUE_ARG(result_0->locals), ROGUE_ARG(((RogueLocal__cloned__CloneArgs( v_3, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
    }
  }
  result_0->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2122_4,(THIS->parameters));
    RogueInt32 i_5 = (0);
    for (;i_5 < _auto_2122_4->count;++i_5)
    {
      RogueLocal_List__add__Local( ROGUE_ARG(result_0->parameters), ROGUE_ARG(((RogueClassLocal*)(THIS->locals->data->as_objects[i_5]))) );
    }
  }
  result_0->label_list = ((RogueCmdLabel_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdLabel_List*,ROGUE_CREATE_OBJECT(CmdLabel_List))), ROGUE_ARG(THIS->label_list->count) )));
  result_0->label_lookup = ((RogueTable_String_CmdLabel___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_CmdLabel_*,ROGUE_CREATE_OBJECT(Table_String_CmdLabel_))) )));
  result_0->min_args = THIS->min_args;
  result_0->statements = ((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCloneArgs*)(((RogueCloneMethodArgs__init__Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCloneMethodArgs*,ROGUE_CREATE_OBJECT(CloneMethodArgs))), result_0 )))))) )));
  result_0->native_code = THIS->native_code;
  result_0->index = THIS->index;
  return (RogueClassMethod*)(result_0);
}

void RogueMethod__add_incorporating_class__Type( RogueClassMethod* THIS, RogueClassType* incorporating_class_0 )
{
  if (!(!!(THIS->incorporating_classes)))
  {
    THIS->incorporating_classes = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  }
  RogueType_List__add__Type( ROGUE_ARG(THIS->incorporating_classes), incorporating_class_0 );
}

void RogueMethod__dispatch__Visitor( RogueClassMethod* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__Method( v_0, ROGUE_ARG(THIS) );
}

RogueClassMethod* RogueMethod__incorporate__Type( RogueClassMethod* THIS, RogueClassType* into_type_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueMethod__set_incorporated( ROGUE_ARG(((RogueMethod__set_type_context__Type( ROGUE_ARG(((RogueMethod__cloned( ROGUE_ARG(THIS) )))), into_type_0 )))) )))));
  m_1->cpp_name = ((RogueString*)(NULL));
  if (!!(THIS->aspect_statements))
  {
    m_1->statements = ((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->aspect_statements), ROGUE_ARG(((RogueClassCloneArgs*)(RogueObject_as(NULL,RogueTypeCloneArgs)))) )));
  }
  m_1->signature = ((RogueString*)(NULL));
  RogueMethod__assign_signature( m_1 );
  return (RogueClassMethod*)(m_1);
}

RogueLogical RogueMethod__accepts_arg_count__Int32( RogueClassMethod* THIS, RogueInt32 n_0 )
{
  return (RogueLogical)((n_0 >= THIS->min_args && n_0 <= THIS->parameters->count));
}

RogueClassLocal* RogueMethod__add_local__Token_String_Type_Cmd( RogueClassMethod* THIS, RogueClassToken* v_t_0, RogueString* v_name_1, RogueClassType* v_type_2, RogueClassCmd* v_initial_value_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueLocal__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLocal*,ROGUE_CREATE_OBJECT(Local))), v_t_0, v_name_1 )))));
  v_4->index = THIS->locals->count;
  v_4->_type = v_type_2;
  v_4->initial_value = v_initial_value_3;
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->locals), v_4 );
  return (RogueClassLocal*)(v_4);
}

RogueClassLocal* RogueMethod__add_parameter__Token_String_Type( RogueClassMethod* THIS, RogueClassToken* p_t_0, RogueString* p_name_1, RogueClassType* p_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(THIS), p_t_0, p_name_1, p_type_2, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->parameters), p_3 );
  return (RogueClassLocal*)(p_3);
}

void RogueMethod__assign_signature( RogueClassMethod* THIS )
{
  if (!!(THIS->signature))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->name) );
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[9] );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2124_2,(THIS->parameters));
    RogueInt32 _auto_2125_3 = (0);
    for (;_auto_2125_3 < _auto_2124_2->count;++_auto_2125_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_2124_2->data->as_objects[_auto_2125_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[7] );
      }
      RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(param_4->_type->name) );
    }
  }
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[12] );
  THIS->signature = ((RogueStringBuilder__to_String( buffer_0 )));
}

RogueClassCmdLabel* RogueMethod__begin_label__Token_String_Logical( RogueClassMethod* THIS, RogueClassToken* label_t_0, RogueString* label_name_1, RogueLogical consolidate_duplicates_2 )
{
  if (consolidate_duplicates_2)
  {
    THIS->cur_label = ((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )));
    if (!!(THIS->cur_label))
    {
      return (RogueClassCmdLabel*)(THIS->cur_label);
    }
  }
  else if ((((RogueString__operatorEQUALSEQUALS__String( label_name_1, Rogue_literal_strings[298] ))) && ((RogueTable_String_CmdLabel___contains__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( label_t_0, Rogue_literal_strings[299] ))));
  }
  else if ((((RogueString__operatorEQUALSEQUALS__String( label_name_1, Rogue_literal_strings[300] ))) && ((RogueTable_String_CmdLabel___contains__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), label_name_1 )))->t), Rogue_literal_strings[301] ))));
  }
  THIS->cur_label = ((RogueCmdLabel__init__Token_String_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLabel*,ROGUE_CREATE_OBJECT(CmdLabel))), label_t_0, label_name_1, ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )));
  RogueTable_String_CmdLabel___set__String_CmdLabel( ROGUE_ARG(THIS->label_lookup), label_name_1, ROGUE_ARG(THIS->cur_label) );
  RogueCmdLabel_List__add__CmdLabel( ROGUE_ARG(THIS->label_list), ROGUE_ARG(THIS->cur_label) );
  return (RogueClassCmdLabel*)(THIS->cur_label);
}

RogueLogical RogueMethod__is_abstract( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 131072)) )));
}

RogueLogical RogueMethod__is_augment( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 65536)) )));
}

RogueLogical RogueMethod__is_dynamic( RogueClassMethod* THIS )
{
  return (RogueLogical)(((!!(THIS->overridden_method) || !!(THIS->overriding_methods->count)) || !!((THIS->attributes->flags & 4194304))));
}

RogueLogical RogueMethod__is_fallback( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 524288)) )));
}

RogueLogical RogueMethod__is_generated( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 4096)) )));
}

RogueLogical RogueMethod__is_incorporated( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 2048)) )));
}

RogueLogical RogueMethod__is_initializer( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 128)) )));
}

RogueLogical RogueMethod__is_macro( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 64)) )));
}

RogueLogical RogueMethod__is_native( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32)) )));
}

RogueLogical RogueMethod__is_overridden( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG(THIS->overriding_methods->count) )));
}

RogueLogical RogueMethod__is_api( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 16)) )));
}

RogueLogical RogueMethod__is_essential( RogueClassMethod* THIS )
{
  return (RogueLogical)((!!((THIS->attributes->flags & 8192)) || ((RogueMethod__is_api( ROGUE_ARG(THIS) )))));
}

RogueLogical RogueMethod__is_global( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 512)) )));
}

RogueLogical RogueMethod__is_propagated( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 2097152)) )));
}

RogueLogical RogueMethod__is_task( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 16384)) )));
}

RogueLogical RogueMethod__is_task_conversion( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 32768)) )));
}

RogueClassMethod* RogueMethod__make_essential( RogueClassMethod* THIS )
{
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 8192 );
  return (RogueClassMethod*)(THIS);
}

RogueLogical RogueMethod__omit_output( RogueClassMethod* THIS )
{
  return (RogueLogical)(((((((RogueMethod__is_native( ROGUE_ARG(THIS) ))) || ((RogueMethod__is_macro( ROGUE_ARG(THIS) )))) || !(THIS->is_used)) || (((RogueMethod__is_abstract( ROGUE_ARG(THIS) ))) && !(((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) )))))) || ((((RogueMethod__is_generated( ROGUE_ARG(THIS) ))) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[475] )))) && ((RogueType__is_compound( ROGUE_ARG(THIS->type_context) ))))));
}

RogueClassMethod* RogueMethod__organize__Scope_Logical( RogueClassMethod* THIS, RogueClassScope* scope_0, RogueLogical add_to_lookup_1 )
{
  if (THIS->organized)
  {
    return (RogueClassMethod*)(THIS);
  }
  THIS->organized = true;
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[417] ))))
  {
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[418] ))));
    }
    else if (((RogueType__is_compound( ROGUE_ARG(THIS->type_context) ))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[419] ))));
    }
    THIS->attributes->flags |= 128;
    THIS->_return_type = THIS->type_context;
  }
  if (((RogueMethod__is_task( ROGUE_ARG(THIS) ))))
  {
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[420] ))));
    }
    THIS->_task_result_type = THIS->_return_type;
    if (!!(THIS->_return_type))
    {
      RogueType__configure__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      THIS->_return_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[421] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_return_type->name) )))) )))), Rogue_literal_strings[75] )))) )))) )));
    }
    else
    {
      THIS->_return_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), Rogue_literal_strings[422] )));
    }
    RogueType__configure__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2126_8,(THIS->parameters));
    RogueInt32 _auto_2127_9 = (0);
    for (;_auto_2127_9 < _auto_2126_8->count;++_auto_2127_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_10,(((RogueClassLocal*)(_auto_2126_8->data->as_objects[_auto_2127_9]))));
      if (!(((RogueMethod__is_global( ROGUE_ARG(THIS) )))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,property_2,(((RogueType__find_property__String( ROGUE_ARG(THIS->type_context), ROGUE_ARG(param_10->name) )))));
        if (!!(property_2))
        {
          if (((void*)param_10->_type) == ((void*)NULL))
          {
            ROGUE_DEF_LOCAL_REF(RogueString*,new_name_3,(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))));
            ROGUE_DEF_LOCAL_REF(RogueClassToken*,pt_4,(param_10->t));
            RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), pt_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), pt_4, ROGUE_ARG(param_10->name) )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), pt_4, new_name_3 )))))) )))))), 0 );
            param_10->name = new_name_3;
            param_10->_type = property_2->_type;
          }
          else if ((((void*)property_2->type_context) == ((void*)THIS->type_context) && ((RogueProperty__is_incorporated( property_2 ))) == ((RogueMethod__is_incorporated( ROGUE_ARG(THIS) )))))
          {
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(param_10->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[423] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(param_10->name) )))) )))), Rogue_literal_strings[424] )))) )))) ))));
          }
        }
      }
      if (!(!!(param_10->_type)))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(param_10->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[425] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(param_10->name) )))) )))), Rogue_literal_strings[235] )))) )))) ))));
      }
    }
  }
  RogueMethod__assign_signature( ROGUE_ARG(THIS) );
  if ((add_to_lookup_1 && !(((RogueMethod__is_augment( ROGUE_ARG(THIS) ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_5,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->methods_by_signature), ROGUE_ARG(THIS->signature) )))));
    if (!(!!(list_5)))
    {
      list_5 = ((RogueMethod_List*)((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) ))));
      RogueTable_String_Method_List___set__String_Method_List( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->methods_by_signature), ROGUE_ARG(THIS->signature), list_5 );
    }
    RogueMethod_List__add__Method( list_5, ROGUE_ARG(THIS) );
    if (((RogueMethod__is_global( ROGUE_ARG(THIS) ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_6,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->type_context->global_method_lookup_by_signature), ROGUE_ARG(THIS->signature) )))));
      if ((!!(existing_m_6) && ((void*)existing_m_6->type_context) == ((void*)THIS->type_context)))
      {
        if (((RogueType__is_routine( ROGUE_ARG(THIS->type_context) ))))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[426] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from_first__Character( ROGUE_ARG(THIS->signature), (RogueCharacter)'(' )))) )))) )))), Rogue_literal_strings[427] )))) )))) ))));
        }
        else
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[428] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->signature) )))) )))), Rogue_literal_strings[427] )))) )))) ))));
        }
      }
      RogueTable_String_Method___set__String_Method( ROGUE_ARG(THIS->type_context->global_method_lookup_by_signature), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS) );
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_7,(((RogueTable_String_Method___get__String( ROGUE_ARG(THIS->type_context->method_lookup_by_signature), ROGUE_ARG(THIS->signature) )))));
      if ((!!(existing_m_7) && ((void*)existing_m_7->type_context) == ((void*)THIS->type_context)))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[429] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->signature) )))) )))), Rogue_literal_strings[427] )))) )))) ))));
      }
      RogueTable_String_Method___set__String_Method( ROGUE_ARG(THIS->type_context->method_lookup_by_signature), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS) );
    }
  }
  THIS->min_args = THIS->parameters->count;
  while ((THIS->min_args >= 1 && !!(((RogueClassLocal*)(THIS->parameters->data->as_objects[(THIS->min_args - 1)]))->initial_value)))
  {
    --THIS->min_args;
  }
  return (RogueClassMethod*)(THIS);
}

void RogueMethod__resolve( RogueClassMethod* THIS )
{
  if (THIS->resolved)
  {
    return;
  }
  THIS->resolved = true;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2128_2,(THIS->parameters));
    RogueInt32 _auto_2129_3 = (0);
    for (;_auto_2129_3 < _auto_2128_2->count;++_auto_2129_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_2128_2->data->as_objects[_auto_2129_3]))));
      RogueType__configure__Scope( ROGUE_ARG(param_4->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
  }
  if (!!(THIS->_return_type))
  {
    RogueType__configure__Scope( ROGUE_ARG(THIS->_return_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  if ((((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))) && !(((RogueMethod__is_global( ROGUE_ARG(THIS) ))))))
  {
    THIS->aspect_statements = THIS->statements;
    THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  if (((RogueMethod__is_task( ROGUE_ARG(THIS) ))))
  {
    RogueMethod__convert_to_task( ROGUE_ARG(THIS) );
  }
  ROGUE_DEF_LOCAL_REF(RogueClassScope*,scope_0,(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2130_5,(THIS->parameters));
    RogueInt32 _auto_2131_6 = (0);
    for (;_auto_2131_6 < _auto_2130_5->count;++_auto_2131_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_7,(((RogueClassLocal*)(_auto_2130_5->data->as_objects[_auto_2131_6]))));
      RogueScope__push_local__Local_Logical( scope_0, p_7, true );
    }
  }
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, ROGUE_ARG(((void*)THIS) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->m_on_launch)) );
  if (scope_0->local_list->count > THIS->parameters->count)
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[440] ))));
  }
  if (!!(scope_0->control_stack->count))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[441] ))));
  }
  if (((RogueMethod__is_initializer( ROGUE_ARG(THIS) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,return_t_1,(THIS->t));
    if (!!(THIS->statements->count))
    {
      return_t_1 = ((RogueClassToken*)((RogueCmd_List__last( ROGUE_ARG(((RogueCmd_List*)THIS->statements)) )))->t);
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmdReturn__resolve__Scope( ROGUE_ARG(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), return_t_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), return_t_1, ROGUE_ARG(THIS->type_context) )))))))) )))), scope_0 )))) );
  }
}

RogueLogical RogueMethod__returns_this( RogueClassMethod* THIS )
{
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG((THIS->attributes->flags & 8388608)) )));
}

void RogueMethod__convert_augment_to_standalone( RogueClassMethod* THIS )
{
  THIS->attributes->flags &= -65537;
  if (!(!!(THIS->native_code)))
  {
    if (THIS->label_list->count > 2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,label_0,(((RogueClassCmdLabel*)(THIS->label_list->data->as_objects[2]))));
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(label_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[408] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(label_0->name) )))) )))), Rogue_literal_strings[409] )))) )))) ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,insert_label_1,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), Rogue_literal_strings[298] )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,append_label_2,(((RogueTable_String_CmdLabel___get__String( ROGUE_ARG(THIS->label_lookup), Rogue_literal_strings[300] )))));
    RogueTable_String_CmdLabel___clear( ROGUE_ARG(THIS->label_lookup) );
    RogueCmdLabel_List__clear( ROGUE_ARG(THIS->label_list) );
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[298], false )))))) );
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmd_List*)(insert_label_1->statements))) );
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueCmd_List*)(append_label_2->statements))) );
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS), ROGUE_ARG(THIS->t), Rogue_literal_strings[300], false )))))) );
  }
}

void RogueMethod__convert_to_task( RogueClassMethod* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,task_type_0,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[430] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[431] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueProgram__next_unique_integer( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))) )))) )))) )))));
  RogueAttributes__add__Int32( ROGUE_ARG(task_type_0->attributes), 0 );
  RogueType_List__add__Type( ROGUE_ARG(task_type_0->base_types), ROGUE_ARG(THIS->_return_type) );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_1,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[417] )))));
  RogueMethod__add_parameter__Token_String_Type( m_init_1, ROGUE_ARG(THIS->t), Rogue_literal_strings[432], ROGUE_ARG(((RogueClassType*)(NULL))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2132_9,(THIS->parameters));
    RogueInt32 _auto_2133_10 = (0);
    for (;_auto_2133_10 < _auto_2132_9->count;++_auto_2133_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_11,(((RogueClassLocal*)(_auto_2132_9->data->as_objects[_auto_2133_10]))));
      RogueMethod__add_parameter__Token_String_Type( m_init_1, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_11->name) )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(p_11->index) )))) )))) )))), ROGUE_ARG(((RogueClassType*)(NULL))) );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_update_2,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[433] )))));
  m_update_2->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_update_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 8, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[434], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_update_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[435] )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) )))))))) )))))) );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_execute_3,(((RogueType__add_method__Token_String( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[434] )))));
  m_execute_3->_return_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical;
  task_type_0->defined = true;
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_4,(((RogueString__operatorPLUS__String( Rogue_literal_strings[436], ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_temp_5,(((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), m_name_4 )))));
  m_temp_5->_return_type = THIS->_task_result_type;
  RogueAttributes__add__Int32( ROGUE_ARG(m_temp_5->attributes), 32768 );
  m_temp_5->parameters = THIS->parameters;
  m_temp_5->locals = THIS->locals;
  m_temp_5->statements = THIS->statements;
  RogueMethod__organize__Scope_Logical( m_temp_5, ROGUE_ARG(((RogueClassScope*)(NULL))), false );
  RogueMethod__resolve( m_temp_5 );
  THIS->locals = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->parameters = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2134_12,(m_temp_5->locals));
    RogueInt32 _auto_2135_13 = (0);
    for (;_auto_2135_13 < _auto_2134_12->count;++_auto_2135_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_14,(((RogueClassLocal*)(_auto_2134_12->data->as_objects[_auto_2135_13]))));
      if (v_14->index < m_temp_5->parameters->count)
      {
        RogueMethod__add_parameter__Token_String_Type( ROGUE_ARG(THIS), ROGUE_ARG(v_14->t), ROGUE_ARG(v_14->name), ROGUE_ARG(v_14->_type) );
      }
    }
  }
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_6,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
  RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context) )))))))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2136_15,(m_temp_5->parameters));
    RogueInt32 _auto_2137_16 = (0);
    for (;_auto_2137_16 < _auto_2136_15->count;++_auto_2137_16)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_17,(((RogueClassLocal*)(_auto_2136_15->data->as_objects[_auto_2137_16]))));
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_6), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(p_17->name) )))))) );
    }
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(task_type_0->name), args_6 )))))) )))))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2138_18,(m_temp_5->locals));
    RogueInt32 _auto_2139_19 = (0);
    for (;_auto_2139_19 < _auto_2138_18->count;++_auto_2139_19)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_20,(((RogueClassLocal*)(_auto_2138_18->data->as_objects[_auto_2139_19]))));
      ROGUE_DEF_LOCAL_REF(RogueString*,p_name_7,(((RogueString__operatorPLUS__Int32( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(v_20->name), Rogue_literal_strings[313] )))), ROGUE_ARG(v_20->index) )))));
      RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(v_20->t), p_name_7, ROGUE_ARG(v_20->_type), ROGUE_ARG(((RogueClassCmd*)(NULL))) );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_8,(((RogueTaskArgs__init__Type_Method_Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTaskArgs*,ROGUE_CREATE_OBJECT(TaskArgs))), task_type_0, m_execute_3, ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS) )))));
  task_args_8->context_property = ((RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[432], ROGUE_ARG(THIS->type_context), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
  task_args_8->ip_property = ((RogueType__add_property__Token_String_Type_Cmd( task_type_0, ROGUE_ARG(THIS->t), Rogue_literal_strings[435], ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(NULL))) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2144_21,(m_temp_5->statements));
    RogueInt32 _auto_2145_22 = (0);
    for (;_auto_2145_22 < _auto_2144_21->count;++_auto_2145_22)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_23,(((RogueClassCmd*)(_auto_2144_21->data->as_objects[_auto_2145_22]))));
      statement_23 = ((RogueClassCmd*)(Rogue_call_ROGUEM146( 21, statement_23, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_8))) )));
      if (!!(statement_23))
      {
        RogueTaskArgs__add__Cmd( task_args_8, statement_23 );
      }
    }
  }
  if (task_args_8->cmd_task_control->current_section->statements->count == 0)
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)task_args_8->cmd_task_control->current_section->statements)), ROGUE_ARG(((RogueTaskArgs__create_return__Token_Cmd( task_args_8, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))) );
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_execute_3->statements)), ROGUE_ARG(((RogueClassCmd*)(task_args_8->cmd_task_control))) );
  RogueType__configure__Scope( task_type_0, ROGUE_ARG(((RogueClassScope*)(NULL))) );
}

RogueClassMethod* RogueMethod__set_incorporated( RogueClassMethod* THIS )
{
  RogueAttributes__add__Int32( ROGUE_ARG(THIS->attributes), 2048 );
  return (RogueClassMethod*)(THIS);
}

RogueClassMethod* RogueMethod__set_type_context__Type( RogueClassMethod* THIS, RogueClassType* _auto_339_0 )
{
  THIS->type_context = _auto_339_0;
  return (RogueClassMethod*)(THIS);
}

void RogueMethod__trace_used_code( RogueClassMethod* THIS )
{
  if (THIS->is_used)
  {
    return;
  }
  THIS->is_used = true;
  RogueType__trace_used_code( ROGUE_ARG(THIS->type_context) );
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2146_0,(THIS->parameters));
    RogueInt32 _auto_2147_1 = (0);
    for (;_auto_2147_1 < _auto_2146_0->count;++_auto_2147_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_2,(((RogueClassLocal*)(_auto_2146_0->data->as_objects[_auto_2147_1]))));
      RogueType__trace_used_code( ROGUE_ARG(param_2->_type) );
    }
  }
  if (!!(THIS->_return_type))
  {
    RogueType__trace_used_code( ROGUE_ARG(THIS->_return_type) );
  }
  RogueCmdStatementList__trace_used_code( ROGUE_ARG(THIS->statements) );
}

RogueString* RogueMethod__signature_with_named_args( RogueClassMethod* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->name) );
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[9] );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2148_2,(THIS->parameters));
    RogueInt32 _auto_2149_3 = (0);
    for (;_auto_2149_3 < _auto_2148_2->count;++_auto_2149_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_2148_2->data->as_objects[_auto_2149_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[7] );
      }
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(param_4->original_name) )))), (RogueCharacter)':', true )))), ROGUE_ARG(param_4->_type->name) );
    }
  }
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[12] );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

void RogueMethod__validate( RogueClassMethod* THIS )
{
  if ((THIS->is_used && !(((RogueMethod__is_macro( ROGUE_ARG(THIS) ))))))
  {
    if (!!(THIS->overridden_method))
    {
      if (THIS->index != THIS->overridden_method->index)
      {
        RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[554] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS))) )))) )))), Rogue_literal_strings[555] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->index) )))) )))), Rogue_literal_strings[556] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->overridden_method))) )))) )))), Rogue_literal_strings[557] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->overridden_method->index) )))) )))) )))) );
      }
      RogueLogical _auto_213_0;
      ((_auto_213_0=(THIS->index == THIS->overridden_method->index))?_auto_213_0:ROGUE_THROW(RogueClassRequirementError,((RogueRequirementError__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRequirementError*,ROGUE_CREATE_OBJECT(RequirementError))), Rogue_literal_strings[558] )))));
    }
  }
}

void RogueMethod__assign_cpp_name( RogueClassMethod* THIS )
{
  if (!!(THIS->cpp_name))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[430] );
  RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(THIS->name) );
  if (!!(THIS->parameters->count))
  {
    RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[313] );
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2150_1,(THIS->parameters));
      RogueInt32 _auto_2151_2 = (0);
      for (;_auto_2151_2 < _auto_2150_1->count;++_auto_2151_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_3,(((RogueClassLocal*)(_auto_2150_1->data->as_objects[_auto_2151_2]))));
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[313] );
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(param_3->_type->cpp_name) );
      }
    }
  }
  THIS->cpp_name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[274], ROGUE_ARG(((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) )))) )));
}

void RogueMethod__print_prototype__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  if (((RogueMethod__omit_output( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  RogueMethod__print_signature__CPPWriter( ROGUE_ARG(THIS), writer_0 );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[179] );
}

void RogueMethod__print_signature__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(THIS->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] );
  RogueLogical first_1 = (true);
  if (!(((RogueMethod__is_global( ROGUE_ARG(THIS) )))))
  {
    first_1 = ((RogueLogical)false);
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
    if (((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))))
    {
      RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) );
    }
    else
    {
      RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->type_context) );
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[648] );
  }
  if (!!(THIS->parameters->count))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2152_2,(THIS->parameters));
      RogueInt32 _auto_2153_3 = (0);
      for (;_auto_2153_3 < _auto_2152_2->count;++_auto_2153_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_2152_2->data->as_objects[_auto_2153_3]))));
        if (first_1)
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
          first_1 = ((RogueLogical)false);
        }
        else
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
        }
        if (((RogueLocal__parameter_needs_gc( param_4 ))))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(param_4->_type) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueLocal__parameter_cpp_name( param_4 )))) );
        }
        else
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(param_4->_type) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueLocal__cpp_name( param_4 )))) );
        }
      }
    }
  }
  if (!(first_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

void RogueMethod__print_definition__CPPWriter( RogueClassMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  if (((RogueMethod__omit_output( ROGUE_ARG(THIS) ))))
  {
    return;
  }
  RogueMethod__print_signature__CPPWriter( ROGUE_ARG(THIS), writer_0 );
  RogueCPPWriter__println( writer_0 );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2154_2,(THIS->parameters));
    RogueInt32 _auto_2155_3 = (0);
    for (;_auto_2155_3 < _auto_2154_2->count;++_auto_2155_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_4,(((RogueClassLocal*)(_auto_2154_2->data->as_objects[_auto_2155_3]))));
      if (((RogueLocal__parameter_needs_gc( param_4 ))))
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[737] )))), ROGUE_ARG(param_4->_type) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueLocal__cpp_name( param_4 )))) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueLocal__parameter_cpp_name( param_4 )))) )))), Rogue_literal_strings[608] );
      }
    }
  }
  if ((((RogueType__is_aspect( ROGUE_ARG(THIS->type_context) ))) && !(((RogueMethod__is_global( ROGUE_ARG(THIS) ))))))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[738] );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
    writer_0->indent += 2;
    if (!!(THIS->incorporating_classes))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_2156_5,(THIS->incorporating_classes));
        RogueInt32 _auto_2157_6 = (0);
        for (;_auto_2157_6 < _auto_2156_5->count;++_auto_2157_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,ic_7,(((RogueClassType*)(_auto_2156_5->data->as_objects[_auto_2157_6]))));
          if (ic_7->is_used)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueType__find_method__String( ic_7, ROGUE_ARG(THIS->signature) )))));
            if (m_1->is_used)
            {
              RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[739] )))), ROGUE_ARG(ic_7->index) )))), Rogue_literal_strings[152] );
              if (!!(THIS->_return_type))
              {
                RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[740] );
                if (((void*)THIS->_return_type) != ((void*)m_1->_return_type))
                {
                  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[12] );
                }
              }
              else
              {
                RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[336] );
              }
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(m_1->cpp_name) )))), Rogue_literal_strings[741] )))), ROGUE_ARG(m_1->type_context) )))), Rogue_literal_strings[742] );
              {
                ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2158_8,(THIS->parameters));
                RogueInt32 _auto_2159_9 = (0);
                for (;_auto_2159_9 < _auto_2158_8->count;++_auto_2159_9)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_10,(((RogueClassLocal*)(_auto_2158_8->data->as_objects[_auto_2159_9]))));
                  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] )))), ROGUE_ARG(((RogueLocal__cpp_name( param_10 )))) );
                }
              }
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[657] );
            }
          }
        }
      }
    }
    if (!!(THIS->_return_type))
    {
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[743] );
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print_default_value__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[740] )))), ROGUE_ARG(THIS->_return_type) )))), Rogue_literal_strings[179] );
    }
    writer_0->indent -= 2;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  }
  else
  {
    if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
    {
      writer_0->trace_token = THIS->t;
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[744] );
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(THIS->signature) )))), Rogue_literal_strings[745] );
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueToken__filename( ROGUE_ARG(THIS->t) )))) )))), Rogue_literal_strings[747] )))), ROGUE_ARG(THIS->t->line) );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[657] );
    }
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  RogueCPPWriter__println( writer_0 );
}

RogueLocal_List* RogueLocal_List__init_object( RogueLocal_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueLocal_List*)(THIS);
}

RogueLocal_List* RogueLocal_List__init( RogueLocal_List* THIS )
{
  RogueLocal_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueLocal_List*)(THIS);
}

RogueString* RogueLocal_List__to_String( RogueLocal_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2160_2,(THIS));
    RogueInt32 _auto_2161_3 = (0);
    for (;_auto_2161_3 < _auto_2160_2->count;++_auto_2161_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,value_4,(((RogueClassLocal*)(_auto_2160_2->data->as_objects[_auto_2161_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueLocal__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueLocal_List__type_name( RogueLocal_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1051]);
}

RogueLocal_List* RogueLocal_List__init__Int32( RogueLocal_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassLocal*), true );
  }
  return (RogueLocal_List*)(THIS);
}

RogueLocal_List* RogueLocal_List__cloned( RogueLocal_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueLocal_List*,result_0,(((RogueLocal_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))), ROGUE_ARG(THIS->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2166_1,(THIS));
    RogueInt32 _auto_2167_2 = (0);
    for (;_auto_2167_2 < _auto_2166_1->count;++_auto_2167_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,value_3,(((RogueClassLocal*)(_auto_2166_1->data->as_objects[_auto_2167_2]))));
      RogueLocal_List__add__Local( result_0, value_3 );
    }
  }
  return (RogueLocal_List*)(result_0);
}

RogueLocal_List* RogueLocal_List__add__Local( RogueLocal_List* THIS, RogueClassLocal* value_0 )
{
  ((RogueLocal_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueLocal_List*)(THIS);
}

RogueInt32 RogueLocal_List__capacity( RogueLocal_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueLocal_List* RogueLocal_List__clear( RogueLocal_List* THIS )
{
  RogueLocal_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueLocal_List*)(THIS);
}

RogueLocal_List* RogueLocal_List__discard_from__Int32( RogueLocal_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueLocal_List*)(THIS);
}

RogueLocal_List* RogueLocal_List__reserve__Int32( RogueLocal_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassLocal*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueLocal_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassLocal*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueLocal_List*)(THIS);
}

RogueClassLocal* RogueLocal_List__remove_at__Int32( RogueLocal_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_1,(((RogueClassLocal*)(THIS->data->as_objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,zero_value_2,0);
  THIS->count = (THIS->count + -1);
  THIS->data->as_objects[THIS->count] = zero_value_2;
  return (RogueClassLocal*)(result_1);
}

RogueClassLocal* RogueLocal_List__remove_last( RogueLocal_List* THIS )
{
  return (RogueClassLocal*)(((RogueLocal_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueClassLocal* RogueLocal__init_object( RogueClassLocal* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassLocal*)(THIS);
}

RogueString* RogueLocal__to_String( RogueClassLocal* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueLocal__type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_type->name) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueLocal__type_name( RogueClassLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[912]);
}

RogueClassLocal* RogueLocal__init__Token_String( RogueClassLocal* THIS, RogueClassToken* _auto_382_0, RogueString* _auto_383_1 )
{
  THIS->name = _auto_383_1;
  THIS->t = _auto_382_0;
  THIS->original_name = THIS->name;
  return (RogueClassLocal*)(THIS);
}

RogueClassLocal* RogueLocal__cloned__CloneArgs( RogueClassLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,result_1,(((RogueLocal__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLocal*,ROGUE_CREATE_OBJECT(Local))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name) )))));
  result_1->original_name = THIS->original_name;
  result_1->_cpp_name = THIS->_cpp_name;
  result_1->_parameter_cpp_name = THIS->_parameter_cpp_name;
  result_1->_type = THIS->_type;
  result_1->index = THIS->index;
  if (!!(THIS->initial_value))
  {
    result_1->initial_value = (Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->initial_value), clone_args_0 ));
  }
  return (RogueClassLocal*)(result_1);
}

RogueString* RogueLocal__cpp_name( RogueClassLocal* THIS )
{
  if (!(!!(THIS->_cpp_name)))
  {
    THIS->_cpp_name = ((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(((RogueString__operatorPLUS__Int32( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[313] )))), ROGUE_ARG(THIS->index) )))) )));
  }
  return (RogueString*)(THIS->_cpp_name);
}

RogueString* RogueLocal__parameter_cpp_name( RogueClassLocal* THIS )
{
  if (!(!!(THIS->_parameter_cpp_name)))
  {
    THIS->_parameter_cpp_name = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
  }
  return (RogueString*)(THIS->_parameter_cpp_name);
}

RogueLogical RogueLocal__parameter_needs_gc( RogueClassLocal* THIS )
{
  return (RogueLogical)((THIS->is_modified && ((RogueType__is_reference( ROGUE_ARG(THIS->_type) )))));
}

RogueString* RogueArray_Local___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1075]);
}

RogueClassCmdStatementList* RogueCmdStatementList__init_object( RogueClassCmdStatementList* THIS )
{
  RogueCmd_List__init_object( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__init( RogueClassCmdStatementList* THIS )
{
  RogueCmdStatementList__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueClassCmdStatementList*)(THIS);
}

RogueString* RogueCmdStatementList__type_name( RogueClassCmdStatementList* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1366]);
}

RogueClassCmdStatementList* RogueCmdStatementList__init__Int32( RogueClassCmdStatementList* THIS, RogueInt32 initial_capacity_0 )
{
  RogueCmd_List__init__Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), initial_capacity_0 );
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__init__Cmd( RogueClassCmdStatementList* THIS, RogueClassCmd* statement_0 )
{
  RogueCmdStatementList__init( ROGUE_ARG(THIS) );
  if (!!(statement_0))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), statement_0 );
  }
  return (RogueClassCmdStatementList*)(THIS);
}

RogueClassCmdStatementList* RogueCmdStatementList__cloned__CloneArgs( RogueClassCmdStatementList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,result_1,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(THIS->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2256_2,(THIS));
    RogueInt32 _auto_2257_3 = (0);
    for (;_auto_2257_3 < _auto_2256_2->count;++_auto_2257_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueClassCmd*)(_auto_2256_2->data->as_objects[_auto_2257_3]))));
      cmd_4 = ((RogueClassCmd*)(Rogue_call_ROGUEM146( 21, cmd_4, clone_args_0 )));
      if (!!(cmd_4))
      {
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)result_1), cmd_4 );
      }
    }
  }
  return (RogueClassCmdStatementList*)(result_1);
}

void RogueCmdStatementList__dispatch__Visitor( RogueClassCmdStatementList* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdStatementList( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdStatementList__resolve__Scope_Logical( RogueClassCmdStatementList* THIS, RogueClassScope* scope_0, RogueLogical use_separate_results_list_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,original_body_2,(scope_0->this_body));
  scope_0->this_body = THIS;
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,original_statement_3,(scope_0->this_statement));
  if (use_separate_results_list_1)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,result_4,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(THIS->count) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2258_9,(THIS));
      RogueInt32 _auto_2259_10 = (0);
      for (;_auto_2259_10 < _auto_2258_9->count;++_auto_2259_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,(((RogueClassCmd*)(_auto_2258_9->data->as_objects[_auto_2259_10]))));
        scope_0->this_statement = cmd_11;
        Rogue_call_ROGUEM143( 17, ROGUE_ARG((Rogue_call_ROGUEM144( 43, cmd_11, scope_0 ))), result_4 );
      }
    }
    RogueCmd_List__add__Cmd_List( ROGUE_ARG(((RogueCmd_List__clear( ROGUE_ARG(((RogueCmd_List*)THIS)) )))), ROGUE_ARG(((RogueCmd_List*)(result_4))) );
  }
  else
  {
    RogueInt32 n_5 = (THIS->count);
    {
      RogueInt32 i_6 = (0);
      RogueInt32 _auto_219_7 = ((n_5 - 1));
      for (;i_6 <= _auto_219_7;++i_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_8,(((RogueClassCmd*)(THIS->data->as_objects[i_6]))));
        scope_0->this_statement = cmd_8;
        Rogue_call_ROGUEM143( 17, ROGUE_ARG((Rogue_call_ROGUEM144( 43, cmd_8, scope_0 ))), ROGUE_ARG(THIS) );
      }
    }
    RogueCmd_List__discard__Int32_Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), 0, n_5 );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2260_12,(THIS));
    RogueInt32 _auto_2261_13 = (0);
    for (;_auto_2261_13 < _auto_2260_12->count;++_auto_2261_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_14,(((RogueClassCmd*)(_auto_2260_12->data->as_objects[_auto_2261_13]))));
      Rogue_call_ROGUEM149( 28, statement_14, scope_0 );
    }
  }
  scope_0->this_statement = original_statement_3;
  scope_0->this_body = original_body_2;
}

void RogueCmdStatementList__trace_used_code( RogueClassCmdStatementList* THIS )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassVisitor*)(((RogueClassTraceUsedCodeVisitor*)ROGUE_SINGLETON(TraceUsedCodeVisitor))))) );
}

void RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( RogueClassCmdStatementList* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1, RogueLogical skip_trace_update_2 )
{
  if (!!(THIS->count))
  {
    RogueCPPWriter__mark_statement_start__String_Int32_Int32( writer_0, ROGUE_ARG(((RogueClassCmd*)(THIS->data->as_objects[0]))->t->filepath), ROGUE_ARG(((RogueClassCmd*)(THIS->data->as_objects[0]))->t->line), ROGUE_ARG(((RogueClassCmd*)(THIS->data->as_objects[(THIS->count - 1)]))->t->line) );
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2262_3,(THIS));
    RogueInt32 _auto_2263_4 = (0);
    for (;_auto_2263_4 < _auto_2262_3->count;++_auto_2263_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_2262_3->data->as_objects[_auto_2263_4]))));
      if ((!(skip_trace_update_2) && (Rogue_call_ROGUEM150( 31, statement_5 ))))
      {
        RogueCPPWriter__update_trace_info__Token( writer_0, ROGUE_ARG(statement_5->t) );
      }
      Rogue_call_ROGUEM157( 50, statement_5, writer_0, true );
      if ((Rogue_call_ROGUEM150( 42, statement_5 )))
      {
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[179] );
      }
    }
  }
  if (!!(THIS->count))
  {
    RogueCPPWriter__mark_statement_end( writer_0 );
  }
}

RogueCmd_List* RogueCmd_List__init_object( RogueCmd_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__init( RogueCmd_List* THIS )
{
  Rogue_call_ROGUEM183( 17, ROGUE_ARG(THIS), 0 );
  return (RogueCmd_List*)(THIS);
}

RogueString* RogueCmd_List__to_String( RogueCmd_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_2209_2,(THIS));
    RogueInt32 _auto_2210_3 = (0);
    for (;_auto_2210_3 < _auto_2209_2->count;++_auto_2210_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_4,(((RogueClassCmd*)(_auto_2209_2->data->as_objects[_auto_2210_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmd_List__type_name( RogueCmd_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1048]);
}

RogueCmd_List* RogueCmd_List__init__Int32( RogueCmd_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmd*), true );
  }
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__add__Cmd( RogueCmd_List* THIS, RogueClassCmd* value_0 )
{
  ((RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__add__Cmd_List( RogueCmd_List* THIS, RogueCmd_List* other_0 )
{
  RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG(other_0->count) );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_2217_1,(other_0));
    RogueInt32 _auto_2218_2 = (0);
    for (;_auto_2218_2 < _auto_2217_1->count;++_auto_2218_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_3,(((RogueClassCmd*)(_auto_2217_1->data->as_objects[_auto_2218_2]))));
      RogueCmd_List__add__Cmd( ROGUE_ARG(THIS), value_3 );
    }
  }
  return (RogueCmd_List*)(THIS);
}

RogueInt32 RogueCmd_List__capacity( RogueCmd_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmd_List* RogueCmd_List__clear( RogueCmd_List* THIS )
{
  RogueCmd_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__ensure_capacity__Int32( RogueCmd_List* THIS, RogueInt32 desired_capacity_0 )
{
  return (RogueCmd_List*)(((RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), ROGUE_ARG((desired_capacity_0 - THIS->count)) ))));
}

RogueCmd_List* RogueCmd_List__expand_to_count__Int32( RogueCmd_List* THIS, RogueInt32 minimum_count_0 )
{
  if (THIS->count < minimum_count_0)
  {
    RogueCmd_List__ensure_capacity__Int32( ROGUE_ARG(THIS), minimum_count_0 );
    THIS->count = minimum_count_0;
  }
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__expand_to_include__Int32( RogueCmd_List* THIS, RogueInt32 index_0 )
{
  return (RogueCmd_List*)(((RogueCmd_List__expand_to_count__Int32( ROGUE_ARG(THIS), ROGUE_ARG((index_0 + 1)) ))));
}

RogueCmd_List* RogueCmd_List__discard__Int32_Int32( RogueCmd_List* THIS, RogueInt32 i1_0, RogueInt32 n_1 )
{
  RogueInt32 i2_2 = ((i1_0 + n_1));
  RogueArray_set(THIS->data,i1_0,((RogueArray*)(THIS->data)),i2_2,(THIS->count - i2_2));
  return (RogueCmd_List*)(((RogueCmd_List__discard_from__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - n_1)) ))));
}

RogueCmd_List* RogueCmd_List__discard_from__Int32( RogueCmd_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueCmd_List*)(THIS);
}

RogueCmd_List* RogueCmd_List__insert__Cmd_Int32( RogueCmd_List* THIS, RogueClassCmd* value_0, RogueInt32 before_index_1 )
{
  if (before_index_1 < 0)
  {
    before_index_1 = ((RogueInt32)0);
  }
  if (before_index_1 >= THIS->count)
  {
    return (RogueCmd_List*)(((RogueCmd_List__add__Cmd( ROGUE_ARG(THIS), value_0 ))));
  }
  else
  {
    RogueCmd_List__reserve__Int32( ROGUE_ARG(THIS), 1 );
    RogueCmd_List__shift__Int32_OptionalInt32_Int32_OptionalCmd( ROGUE_ARG(THIS), before_index_1, ROGUE_ARG((RogueOptionalInt32__create())), 1, ROGUE_ARG((RogueOptionalCmd__create())) );
    THIS->data->as_objects[before_index_1] = value_0;
  }
  return (RogueCmd_List*)(THIS);
}

RogueClassCmd* RogueCmd_List__last( RogueCmd_List* THIS )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS->data->as_objects[(THIS->count - 1)])));
}

RogueCmd_List* RogueCmd_List__reserve__Int32( RogueCmd_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmd*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmd_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmd*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmd_List*)(THIS);
}

RogueClassCmd* RogueCmd_List__remove_at__Int32( RogueCmd_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,(((RogueClassCmd*)(THIS->data->as_objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,zero_value_2,0);
  THIS->count = (THIS->count + -1);
  THIS->data->as_objects[THIS->count] = zero_value_2;
  return (RogueClassCmd*)(result_1);
}

RogueClassCmd* RogueCmd_List__remove_last( RogueCmd_List* THIS )
{
  return (RogueClassCmd*)(((RogueCmd_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueCmd_List* RogueCmd_List__shift__Int32_OptionalInt32_Int32_OptionalCmd( RogueCmd_List* THIS, RogueInt32 i1_0, RogueOptionalInt32 element_count_1, RogueInt32 delta_2, RogueOptionalCmd fill_3 )
{
  if (delta_2 == 0)
  {
    return (RogueCmd_List*)(THIS);
  }
  RogueInt32 n_4 = 0;
  if (element_count_1.exists)
  {
    n_4 = ((RogueInt32)element_count_1.value);
  }
  else
  {
    n_4 = ((RogueInt32)(THIS->count - i1_0));
  }
  RogueInt32 dest_i2_5 = ((((i1_0 + delta_2) + n_4) - 1));
  RogueCmd_List__expand_to_include__Int32( ROGUE_ARG(THIS), dest_i2_5 );
  RogueArray_set(THIS->data,(i1_0 + delta_2),((RogueArray*)(THIS->data)),i1_0,n_4);
  if (fill_3.exists)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,value_6,(fill_3.value));
    if (delta_2 > 0)
    {
      {
        RogueInt32 i_7 = (i1_0);
        RogueInt32 _auto_222_8 = (((i1_0 + delta_2) - 1));
        for (;i_7 <= _auto_222_8;++i_7)
        {
          THIS->data->as_objects[i_7] = value_6;
        }
      }
    }
    else
    {
      {
        RogueInt32 i_9 = (((i1_0 + delta_2) + n_4));
        RogueInt32 _auto_223_10 = (((i1_0 + n_4) - 1));
        for (;i_9 <= _auto_223_10;++i_9)
        {
          THIS->data->as_objects[i_9] = value_6;
        }
      }
    }
  }
  return (RogueCmd_List*)(THIS);
}

RogueString* RogueArray_Cmd___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1099]);
}

RogueCmdLabel_List* RogueCmdLabel_List__init_object( RogueCmdLabel_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdLabel_List*)(THIS);
}

RogueCmdLabel_List* RogueCmdLabel_List__init( RogueCmdLabel_List* THIS )
{
  RogueCmdLabel_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdLabel_List*)(THIS);
}

RogueString* RogueCmdLabel_List__to_String( RogueCmdLabel_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdLabel_List*,_auto_2266_2,(THIS));
    RogueInt32 _auto_2267_3 = (0);
    for (;_auto_2267_3 < _auto_2266_2->count;++_auto_2267_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,value_4,(((RogueClassCmdLabel*)(_auto_2266_2->data->as_objects[_auto_2267_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdLabel_List__type_name( RogueCmdLabel_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1061]);
}

RogueCmdLabel_List* RogueCmdLabel_List__init__Int32( RogueCmdLabel_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdLabel*), true );
  }
  return (RogueCmdLabel_List*)(THIS);
}

RogueCmdLabel_List* RogueCmdLabel_List__add__CmdLabel( RogueCmdLabel_List* THIS, RogueClassCmdLabel* value_0 )
{
  ((RogueCmdLabel_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCmdLabel_List*)(THIS);
}

RogueInt32 RogueCmdLabel_List__capacity( RogueCmdLabel_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdLabel_List* RogueCmdLabel_List__clear( RogueCmdLabel_List* THIS )
{
  RogueCmdLabel_List__discard_from__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdLabel_List*)(THIS);
}

RogueCmdLabel_List* RogueCmdLabel_List__discard_from__Int32( RogueCmdLabel_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueCmdLabel_List*)(THIS);
}

RogueCmdLabel_List* RogueCmdLabel_List__reserve__Int32( RogueCmdLabel_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdLabel*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdLabel_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdLabel*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdLabel_List*)(THIS);
}

RogueClassCmdLabel* RogueCmdLabel__init_object( RogueClassCmdLabel* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdLabel*)(THIS);
}

RogueString* RogueCmdLabel__type_name( RogueClassCmdLabel* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1157]);
}

RogueClassCmdLabel* RogueCmdLabel__cloned__CloneArgs( RogueClassCmdLabel* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,result_1,(((RogueCmdLabel__init__Token_String_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLabel*,ROGUE_CREATE_OBJECT(CmdLabel))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) )))));
  if (!!(clone_args_0))
  {
    Rogue_call_ROGUEM482( 17, clone_args_0, result_1 );
  }
  return (RogueClassCmdLabel*)(result_1);
}

RogueClassCmd* RogueCmdLabel__dispatch__Visitor( RogueClassCmdLabel* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLabel( v_0, ROGUE_ARG(THIS) ))));
}

RogueLogical RogueCmdLabel__generates_output( RogueClassCmdLabel* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2314_0,(THIS->statements));
    RogueInt32 _auto_2315_1 = (0);
    for (;_auto_2315_1 < _auto_2314_0->count;++_auto_2315_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_2,(((RogueClassCmd*)(_auto_2314_0->data->as_objects[_auto_2315_1]))));
      if ((Rogue_call_ROGUEM150( 31, statement_2 )))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)(false);
}

RogueLogical RogueCmdLabel__requires_semicolon( RogueClassCmdLabel* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdLabel__resolve__Scope( RogueClassCmdLabel* THIS, RogueClassScope* scope_0 )
{
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdLabel__write_cpp__CPPWriter_Logical( RogueClassCmdLabel* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, is_statement_1, false );
}

RogueClassCmdLabel* RogueCmdLabel__init__Token_String_CmdStatementList( RogueClassCmdLabel* THIS, RogueClassToken* _auto_370_0, RogueString* _auto_371_1, RogueClassCmdStatementList* _auto_372_2 )
{
  THIS->statements = _auto_372_2;
  THIS->name = _auto_371_1;
  THIS->t = _auto_370_0;
  return (RogueClassCmdLabel*)(THIS);
}

RogueString* RogueArray_CmdLabel___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1100]);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init_object( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init( RogueClassTable_String_CmdLabel_* THIS )
{
  RogueTable_String_CmdLabel___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueString* RogueTable_String_CmdLabel___to_String( RogueClassTable_String_CmdLabel_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_CmdLabel___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_CmdLabel___type_name( RogueClassTable_String_CmdLabel_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1013]);
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___init__Int32( RogueClassTable_String_CmdLabel_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_CmdLabel_*), true );
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

void RogueTable_String_CmdLabel___clear( RogueClassTable_String_CmdLabel_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueArray*,_auto_2319_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_2319_0->count;++i_1)
    {
      THIS->bins->as_objects[i_1] = ((RogueClassTableEntry_String_CmdLabel_*)(NULL));
    }
  }
  THIS->first_entry = ((RogueClassTableEntry_String_CmdLabel_*)(NULL));
  THIS->last_entry = ((RogueClassTableEntry_String_CmdLabel_*)(NULL));
  THIS->cur_entry = ((RogueClassTableEntry_String_CmdLabel_*)(NULL));
  THIS->count = 0;
}

RogueLogical RogueTable_String_CmdLabel___contains__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_CmdLabel___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_CmdLabel_* RogueTable_String_CmdLabel___find__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_2,(((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_CmdLabel_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_CmdLabel_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_CmdLabel_*)(((RogueClassTableEntry_String_CmdLabel_*)(NULL)));
}

RogueClassCmdLabel* RogueTable_String_CmdLabel___get__String( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_1,(((RogueTable_String_CmdLabel___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassCmdLabel*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLabel*,default_value_2,0);
    return (RogueClassCmdLabel*)(default_value_2);
  }
}

RogueClassTable_String_CmdLabel_* RogueTable_String_CmdLabel___set__String_CmdLabel( RogueClassTable_String_CmdLabel_* THIS, RogueString* key_0, RogueClassCmdLabel* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,entry_2,(((RogueTable_String_CmdLabel___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_CmdLabel_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_CmdLabel____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_CmdLabel_*)((RogueTableEntry_String_CmdLabel___init__String_CmdLabel_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_CmdLabel_*,ROGUE_CREATE_OBJECT(TableEntry_String_CmdLabel_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_CmdLabel_*)(THIS);
}

RogueStringBuilder* RogueTable_String_CmdLabel___print_to__StringBuilder( RogueClassTable_String_CmdLabel_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_CmdLabel_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_CmdLabel____grow( RogueClassTable_String_CmdLabel_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_CmdLabel_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CmdLabel_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_CmdLabel_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_CmdLabel_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_CmdLabel____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1101]);
}

RogueClassTableEntry_String_CmdLabel_* RogueTableEntry_String_CmdLabel___init_object( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_CmdLabel_*)(THIS);
}

RogueString* RogueTableEntry_String_CmdLabel___to_String( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_CmdLabel___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_CmdLabel___type_name( RogueClassTableEntry_String_CmdLabel_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[922]);
}

RogueClassTableEntry_String_CmdLabel_* RogueTableEntry_String_CmdLabel___init__String_CmdLabel_Int32( RogueClassTableEntry_String_CmdLabel_* THIS, RogueString* _key_0, RogueClassCmdLabel* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_CmdLabel_*)(THIS);
}

RogueClassMethodTemplate* RogueMethodTemplate__init_object( RogueClassMethodTemplate* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->type_parameters = ((RogueTypeParameter_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTypeParameter_List*,ROGUE_CREATE_OBJECT(TypeParameter_List))) )));
  THIS->template_tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  THIS->overrides = ((RogueMethodTemplate_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethodTemplate_List*,ROGUE_CREATE_OBJECT(MethodTemplate_List))) )));
  return (RogueClassMethodTemplate*)(THIS);
}

RogueString* RogueMethodTemplate__to_String( RogueClassMethodTemplate* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_context->name) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[455] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->type_parameters->count) )))) )))), Rogue_literal_strings[456] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->parameter_count) )))) )))), Rogue_literal_strings[923] )))) ))));
}

RogueString* RogueMethodTemplate__type_name( RogueClassMethodTemplate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1014]);
}

RogueClassMethodTemplate* RogueMethodTemplate__init__Token_Type_String_Logical( RogueClassMethodTemplate* THIS, RogueClassToken* _auto_698_0, RogueClassType* _auto_699_1, RogueString* _auto_700_2, RogueLogical _auto_701_3 )
{
  THIS->is_global = _auto_701_3;
  THIS->name = _auto_700_2;
  THIS->type_context = _auto_699_1;
  THIS->t = _auto_698_0;
  return (RogueClassMethodTemplate*)(THIS);
}

RogueClassMethodTemplate* RogueMethodTemplate__cloned( RogueClassMethodTemplate* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,result_0,(((RogueMethodTemplate__init__Token_Type_String_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethodTemplate*,ROGUE_CREATE_OBJECT(MethodTemplate))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->type_context), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->is_global) )))));
  result_0->type_parameters = THIS->type_parameters;
  result_0->template_tokens = THIS->template_tokens;
  result_0->parameter_count = THIS->parameter_count;
  return (RogueClassMethodTemplate*)(result_0);
}

void RogueMethodTemplate__instantiate__Token_String( RogueClassMethodTemplate* THIS, RogueClassToken* ref_t_0, RogueString* ref_name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassParser*,parser_2,(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ref_t_0, ref_name_1, ROGUE_ARG(((RogueString__from_first__Character( ref_name_1, (RogueCharacter)'<' )))) )))));
  RogueParser__read( parser_2 );
  ROGUE_DEF_LOCAL_REF(RogueToken_List_List*,specializer_tokens_3,(((RogueToken_List_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List_List*,ROGUE_CREATE_OBJECT(Token_List_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_4,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueLogical first_5 = (true);
  while ((first_5 || ((RogueParser__consume__TokenType( parser_2, ROGUE_ARG(RogueTokenType_symbol_comma) )))))
  {
    first_5 = ((RogueLogical)false);
    RogueToken_List_List__add__Token_List( specializer_tokens_3, ROGUE_ARG(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))) );
    RogueParser__parse_specializer__StringBuilder_Token_List( parser_2, ROGUE_ARG(((RogueStringBuilder__clear( buffer_4 )))), ROGUE_ARG(((RogueToken_List_List__last( specializer_tokens_3 )))) );
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Token_List_*,mappings_6,(((RogueTable_String_Token_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Token_List_*,ROGUE_CREATE_OBJECT(Table_String_Token_List_))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,_auto_2334_10,(THIS->type_parameters));
    RogueInt32 i_11 = (0);
    for (;i_11 < _auto_2334_10->count;++i_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,type_param_12,(((RogueClassTypeParameter*)(_auto_2334_10->data->as_objects[i_11]))));
      RogueTable_String_Token_List___set__String_Token_List( mappings_6, ROGUE_ARG(type_param_12->name), ROGUE_ARG(((RogueToken_List*)(specializer_tokens_3->data->as_objects[i_11]))) );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueToken_List*,tokens_7,(((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG((specializer_tokens_3->count + 10)) )))));
  RogueToken_List__add__Token( tokens_7, ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_keyword_method), ROGUE_ARG(THIS->t) )))) );
  RogueToken_List__add__Token( tokens_7, ROGUE_ARG((Rogue_call_ROGUEM111( 25, ROGUE_ARG(RogueTokenType_identifier), ROGUE_ARG(THIS->t), ref_name_1 ))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_2335_13,(THIS->template_tokens));
    RogueInt32 _auto_2336_14 = (0);
    for (;_auto_2336_14 < _auto_2335_13->count;++_auto_2336_14)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,mt_15,(((RogueClassToken*)(_auto_2335_13->data->as_objects[_auto_2336_14]))));
      if (((void*)mt_15->_type) == ((void*)RogueTokenType_placeholder_id))
      {
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,mapping_8,(((RogueTable_String_Token_List___get__String( mappings_6, ROGUE_ARG((Rogue_call_ROGUEM101( 11, mt_15 ))) )))));
        if (!!(mapping_8))
        {
          {
            ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_2337_16,(mapping_8));
            RogueInt32 _auto_2338_17 = (0);
            for (;_auto_2338_17 < _auto_2337_16->count;++_auto_2338_17)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassToken*,specializer_t_18,(((RogueClassToken*)(_auto_2337_16->data->as_objects[_auto_2338_17]))));
              RogueToken_List__add__Token( tokens_7, specializer_t_18 );
            }
          }
        }
        else
        {
          RogueToken_List__add__Token( tokens_7, mt_15 );
        }
      }
      else
      {
        RogueToken_List__add__Token( tokens_7, mt_15 );
      }
    }
  }
  parser_2 = ((RogueClassParser*)((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), tokens_7, false ))));
  parser_2->_this_type = THIS->type_context;
  RogueParser__parse_method__Logical_Logical( parser_2, ROGUE_ARG(THIS->is_global), true );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_9,(parser_2->this_method));
  m_9->source_template = THIS;
  m_9->specializer_count = THIS->type_parameters->count;
  m_9->unspecialized_name = THIS->name;
  RogueMethod__assign_signature( m_9 );
  RogueType__inject_method__Method_OptionalInt32( ROGUE_ARG(THIS->type_context), m_9, ROGUE_ARG((RogueOptionalInt32__create())) );
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init_object( RogueMethodTemplate_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueMethodTemplate_List*)(THIS);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init( RogueMethodTemplate_List* THIS )
{
  RogueMethodTemplate_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueMethodTemplate_List*)(THIS);
}

RogueString* RogueMethodTemplate_List__to_String( RogueMethodTemplate_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2339_2,(THIS));
    RogueInt32 _auto_2340_3 = (0);
    for (;_auto_2340_3 < _auto_2339_2->count;++_auto_2340_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,value_4,(((RogueClassMethodTemplate*)(_auto_2339_2->data->as_objects[_auto_2340_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueMethodTemplate__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueMethodTemplate_List__type_name( RogueMethodTemplate_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1062]);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__init__Int32( RogueMethodTemplate_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassMethodTemplate*), true );
  }
  return (RogueMethodTemplate_List*)(THIS);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__add__MethodTemplate( RogueMethodTemplate_List* THIS, RogueClassMethodTemplate* value_0 )
{
  ((RogueMethodTemplate_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueMethodTemplate_List*)(THIS);
}

RogueInt32 RogueMethodTemplate_List__capacity( RogueMethodTemplate_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueMethodTemplate_List* RogueMethodTemplate_List__reserve__Int32( RogueMethodTemplate_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassMethodTemplate*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueMethodTemplate_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassMethodTemplate*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueMethodTemplate_List*)(THIS);
}

RogueString* RogueArray_MethodTemplate___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1102]);
}

RogueString* RogueArray_Method___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1076]);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init_object( RogueClassTable_String_Method_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init( RogueClassTable_String_Method_List_* THIS )
{
  RogueTable_String_Method_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueString* RogueTable_String_Method_List___to_String( RogueClassTable_String_Method_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Method_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Method_List___type_name( RogueClassTable_String_Method_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[965]);
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___init__Int32( RogueClassTable_String_Method_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Method_List_*), true );
  return (RogueClassTable_String_Method_List_*)(THIS);
}

void RogueTable_String_Method_List___clear( RogueClassTable_String_Method_List_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueArray*,_auto_2391_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_2391_0->count;++i_1)
    {
      THIS->bins->as_objects[i_1] = ((RogueClassTableEntry_String_Method_List_*)(NULL));
    }
  }
  THIS->first_entry = ((RogueClassTableEntry_String_Method_List_*)(NULL));
  THIS->last_entry = ((RogueClassTableEntry_String_Method_List_*)(NULL));
  THIS->cur_entry = ((RogueClassTableEntry_String_Method_List_*)(NULL));
  THIS->count = 0;
}

RogueLogical RogueTable_String_Method_List___contains__String( RogueClassTable_String_Method_List_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_Method_List___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_Method_List_* RogueTable_String_Method_List___find__String( RogueClassTable_String_Method_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_2,(((RogueClassTableEntry_String_Method_List_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Method_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Method_List_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Method_List_*)(((RogueClassTableEntry_String_Method_List_*)(NULL)));
}

RogueMethod_List* RogueTable_String_Method_List___get__String( RogueClassTable_String_Method_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_1,(((RogueTable_String_Method_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueMethod_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,default_value_2,0);
    return (RogueMethod_List*)(default_value_2);
  }
}

RogueClassTable_String_Method_List_* RogueTable_String_Method_List___set__String_Method_List( RogueClassTable_String_Method_List_* THIS, RogueString* key_0, RogueMethod_List* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,entry_2,(((RogueTable_String_Method_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Method_List_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Method_List____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Method_List_*)((RogueTableEntry_String_Method_List___init__String_Method_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Method_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Method_List_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Method_List_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Method_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Method_List___print_to__StringBuilder( RogueClassTable_String_Method_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Method_List_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Method_List____grow( RogueClassTable_String_Method_List_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Method_List_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_List_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Method_List_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Method_List_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Method_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1103]);
}

RogueClassTableEntry_String_Method_List_* RogueTableEntry_String_Method_List___init_object( RogueClassTableEntry_String_Method_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Method_List_*)(THIS);
}

RogueString* RogueTableEntry_String_Method_List___to_String( RogueClassTableEntry_String_Method_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Method_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Method_List___type_name( RogueClassTableEntry_String_Method_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[924]);
}

RogueClassTableEntry_String_Method_List_* RogueTableEntry_String_Method_List___init__String_Method_List_Int32( RogueClassTableEntry_String_Method_List_* THIS, RogueString* _key_0, RogueMethod_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Method_List_*)(THIS);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init_object( RogueClassTable_String_Method_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init( RogueClassTable_String_Method_* THIS )
{
  RogueTable_String_Method___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueString* RogueTable_String_Method___to_String( RogueClassTable_String_Method_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Method___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Method___type_name( RogueClassTable_String_Method_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[992]);
}

RogueClassTable_String_Method_* RogueTable_String_Method___init__Int32( RogueClassTable_String_Method_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Method_*), true );
  return (RogueClassTable_String_Method_*)(THIS);
}

void RogueTable_String_Method___clear( RogueClassTable_String_Method_* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueArray*,_auto_2413_0,(THIS->bins));
    RogueInt32 i_1 = (0);
    for (;i_1 < _auto_2413_0->count;++i_1)
    {
      THIS->bins->as_objects[i_1] = ((RogueClassTableEntry_String_Method_*)(NULL));
    }
  }
  THIS->first_entry = ((RogueClassTableEntry_String_Method_*)(NULL));
  THIS->last_entry = ((RogueClassTableEntry_String_Method_*)(NULL));
  THIS->cur_entry = ((RogueClassTableEntry_String_Method_*)(NULL));
  THIS->count = 0;
}

RogueClassTableEntry_String_Method_* RogueTable_String_Method___find__String( RogueClassTable_String_Method_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_2,(((RogueClassTableEntry_String_Method_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Method_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Method_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Method_*)(((RogueClassTableEntry_String_Method_*)(NULL)));
}

RogueClassMethod* RogueTable_String_Method___get__String( RogueClassTable_String_Method_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_1,(((RogueTable_String_Method___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassMethod*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,default_value_2,0);
    return (RogueClassMethod*)(default_value_2);
  }
}

RogueClassTable_String_Method_* RogueTable_String_Method___set__String_Method( RogueClassTable_String_Method_* THIS, RogueString* key_0, RogueClassMethod* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,entry_2,(((RogueTable_String_Method___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Method_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Method____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Method_*)((RogueTableEntry_String_Method___init__String_Method_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Method_*,ROGUE_CREATE_OBJECT(TableEntry_String_Method_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Method_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Method_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Method___print_to__StringBuilder( RogueClassTable_String_Method_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Method_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Method____grow( RogueClassTable_String_Method_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Method_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Method_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Method_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Method_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Method____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1104]);
}

RogueClassTableEntry_String_Method_* RogueTableEntry_String_Method___init_object( RogueClassTableEntry_String_Method_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Method_*)(THIS);
}

RogueString* RogueTableEntry_String_Method___to_String( RogueClassTableEntry_String_Method_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Method___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Method___type_name( RogueClassTableEntry_String_Method_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[925]);
}

RogueClassTableEntry_String_Method_* RogueTableEntry_String_Method___init__String_Method_Int32( RogueClassTableEntry_String_Method_* THIS, RogueString* _key_0, RogueClassMethod* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Method_*)(THIS);
}

RogueClassMethodTemplates* RogueMethodTemplates__init_object( RogueClassMethodTemplates* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->templates = ((RogueMethodTemplate_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethodTemplate_List*,ROGUE_CREATE_OBJECT(MethodTemplate_List))) )));
  return (RogueClassMethodTemplates*)(THIS);
}

RogueString* RogueMethodTemplates__type_name( RogueClassMethodTemplates* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1015]);
}

RogueClassMethodTemplates* RogueMethodTemplates__init__Type( RogueClassMethodTemplates* THIS, RogueClassType* _auto_702_0 )
{
  THIS->type_context = _auto_702_0;
  return (RogueClassMethodTemplates*)(THIS);
}

void RogueMethodTemplates__add__MethodTemplate( RogueClassMethodTemplates* THIS, RogueClassMethodTemplate* m_0 )
{
  if (((RogueMethodTemplates__has_template__String_Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG(m_0->name), ROGUE_ARG(m_0->type_parameters->count), ROGUE_ARG(m_0->parameter_count) ))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(m_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[454] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_0->name) )))) )))), Rogue_literal_strings[455] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(m_0->type_parameters->count) )))) )))), Rogue_literal_strings[456] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(m_0->parameter_count) )))) )))), Rogue_literal_strings[457] )))) )))) ))));
  }
  RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(THIS->templates), m_0 );
}

RogueClassMethodTemplate* RogueMethodTemplates__find__String_Int32_Int32( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 specializer_count_1, RogueInt32 parameter_count_2 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2423_3,(THIS->templates));
    RogueInt32 _auto_2424_4 = (0);
    for (;_auto_2424_4 < _auto_2423_3->count;++_auto_2424_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,template_5,(((RogueClassMethodTemplate*)(_auto_2423_3->data->as_objects[_auto_2424_4]))));
      if (((template_5->type_parameters->count == specializer_count_1 && template_5->parameter_count == parameter_count_2) && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(template_5->name), name_0 )))))
      {
        return (RogueClassMethodTemplate*)(template_5);
      }
    }
  }
  return (RogueClassMethodTemplate*)(((RogueClassMethodTemplate*)(NULL)));
}

RogueLogical RogueMethodTemplates__has_template__String_Int32_Int32( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 specializer_count_1, RogueInt32 parameter_count_2 )
{
  return (RogueLogical)(!!(((RogueMethodTemplates__find__String_Int32_Int32( ROGUE_ARG(THIS), name_0, specializer_count_1, parameter_count_2 )))));
}

RogueLogical RogueMethodTemplates__has_templates_named__String( RogueClassMethodTemplates* THIS, RogueString* name_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2425_1,(THIS->templates));
    RogueInt32 _auto_2426_2 = (0);
    for (;_auto_2426_2 < _auto_2425_1->count;++_auto_2426_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_3,(((RogueClassMethodTemplate*)(_auto_2425_1->data->as_objects[_auto_2426_2]))));
      if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_3->name), name_0 ))))
      {
        return (RogueLogical)(true);
      }
    }
  }
  return (RogueLogical)(false);
}

void RogueMethodTemplates__inherit__MethodTemplates_Type( RogueClassMethodTemplates* THIS, RogueClassMethodTemplates* other_0, RogueClassType* extended_type_1 )
{
  if (!(!!(other_0)))
  {
    return;
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2427_3,(other_0->templates));
    RogueInt32 _auto_2428_4 = (0);
    for (;_auto_2428_4 < _auto_2427_3->count;++_auto_2428_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,base_m_5,(((RogueClassMethodTemplate*)(_auto_2427_3->data->as_objects[_auto_2428_4]))));
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_2,(((RogueMethodTemplates__find__String_Int32_Int32( ROGUE_ARG(THIS), ROGUE_ARG(base_m_5->name), ROGUE_ARG(base_m_5->type_parameters->count), ROGUE_ARG(base_m_5->parameter_count) )))));
      if (((!(!!(m_2)) && ((RogueType__is_aspect( ROGUE_ARG(base_m_5->type_context) )))) && !(((RogueType__is_aspect( extended_type_1 ))))))
      {
        m_2 = ((RogueClassMethodTemplate*)((RogueMethodTemplate__cloned( base_m_5 ))));
        m_2->type_context = extended_type_1;
      }
      if (!!(m_2))
      {
        m_2->overridden_m = base_m_5;
        RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(base_m_5->overrides), m_2 );
        RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(THIS->templates), m_2 );
      }
      else
      {
        RogueMethodTemplate_List__add__MethodTemplate( ROGUE_ARG(THIS->templates), base_m_5 );
      }
    }
  }
}

RogueLogical RogueMethodTemplates__instantiate__Token_String( RogueClassMethodTemplates* THIS, RogueClassToken* t_0, RogueString* specialized_name_1 )
{
  if (!(((RogueString__contains__String( specialized_name_1, Rogue_literal_strings[172] )))))
  {
    return (RogueLogical)(false);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,base_name_2,(((RogueString__before_first__String( specialized_name_1, Rogue_literal_strings[172] )))));
  if (!(((RogueMethodTemplates__has_templates_named__String( ROGUE_ARG(THIS), base_name_2 )))))
  {
    return (RogueLogical)(false);
  }
  RogueInt32 specializer_count_3 = (((RogueParser__parse_specializer_count( ROGUE_ARG(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), t_0, specialized_name_1, ROGUE_ARG(((RogueString__from_first__String( specialized_name_1, Rogue_literal_strings[172] )))) )))) ))));
  return (RogueLogical)(((RogueMethodTemplates__instantiate__String_Int32_Token_String( ROGUE_ARG(THIS), base_name_2, specializer_count_3, t_0, specialized_name_1 ))));
}

RogueLogical RogueMethodTemplates__instantiate__String_Int32_Token_String( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 specializer_count_1, RogueClassToken* t_2, RogueString* specialized_name_3 )
{
  RogueLogical found_any_4 = (false);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2429_5,(THIS->templates));
    RogueInt32 _auto_2430_6 = (0);
    for (;_auto_2430_6 < _auto_2429_5->count;++_auto_2430_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_7,(((RogueClassMethodTemplate*)(_auto_2429_5->data->as_objects[_auto_2430_6]))));
      if ((m_7->type_parameters->count == specializer_count_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_7->name), name_0 )))))
      {
        found_any_4 = ((RogueLogical)true);
        RogueMethodTemplate__instantiate__Token_String( m_7, t_2, specialized_name_3 );
      }
    }
  }
  return (RogueLogical)(found_any_4);
}

void RogueMethodTemplates__instantiate__String_Int32_Int32_Token_String( RogueClassMethodTemplates* THIS, RogueString* name_0, RogueInt32 specializer_count_1, RogueInt32 parameter_count_2, RogueClassToken* t_3, RogueString* specialized_name_4 )
{
  if (!(THIS->type_context->organized))
  {
    return;
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,m_5,(((RogueMethodTemplates__find__String_Int32_Int32( ROGUE_ARG(THIS), name_0, specializer_count_1, parameter_count_2 )))));
  if (!!(m_5))
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,possible_existing_6,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->type_context->method_lookup_by_name), specialized_name_4 )))));
    if (!!(possible_existing_6))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2431_7,(possible_existing_6));
        RogueInt32 _auto_2432_8 = (0);
        for (;_auto_2432_8 < _auto_2431_7->count;++_auto_2432_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,existing_m_9,(((RogueClassMethod*)(_auto_2431_7->data->as_objects[_auto_2432_8]))));
          if (existing_m_9->parameters->count == parameter_count_2)
          {
            return;
          }
        }
      }
    }
    RogueMethodTemplate__instantiate__Token_String( m_5, t_3, specialized_name_4 );
    if (!!(m_5->overrides->count))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethodTemplate_List*,_auto_2433_10,(m_5->overrides));
        RogueInt32 _auto_2434_11 = (0);
        for (;_auto_2434_11 < _auto_2433_10->count;++_auto_2434_11)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethodTemplate*,override_m_12,(((RogueClassMethodTemplate*)(_auto_2433_10->data->as_objects[_auto_2434_11]))));
          RogueMethodTemplates__instantiate__String_Int32_Int32_Token_String( ROGUE_ARG(override_m_12->type_context->method_templates), name_0, specializer_count_1, parameter_count_2, t_3, specialized_name_4 );
        }
      }
    }
  }
}

RogueString* RogueArray_Parser___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1105]);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init_object( RogueClassTable_String_ParseReader_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init( RogueClassTable_String_ParseReader_* THIS )
{
  RogueTable_String_ParseReader___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueString* RogueTable_String_ParseReader___to_String( RogueClassTable_String_ParseReader_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_ParseReader___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_ParseReader___type_name( RogueClassTable_String_ParseReader_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1016]);
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___init__Int32( RogueClassTable_String_ParseReader_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_ParseReader_*), true );
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueClassTableEntry_String_ParseReader_* RogueTable_String_ParseReader___find__String( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_2,(((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_ParseReader_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_ParseReader_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_ParseReader_*)(((RogueClassTableEntry_String_ParseReader_*)(NULL)));
}

RogueClassParseReader* RogueTable_String_ParseReader___get__String( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_1,(((RogueTable_String_ParseReader___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassParseReader*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassParseReader*,default_value_2,0);
    return (RogueClassParseReader*)(default_value_2);
  }
}

RogueClassTable_String_ParseReader_* RogueTable_String_ParseReader___set__String_ParseReader( RogueClassTable_String_ParseReader_* THIS, RogueString* key_0, RogueClassParseReader* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,entry_2,(((RogueTable_String_ParseReader___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_ParseReader_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_ParseReader____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_ParseReader_*)((RogueTableEntry_String_ParseReader___init__String_ParseReader_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_ParseReader_*,ROGUE_CREATE_OBJECT(TableEntry_String_ParseReader_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_ParseReader_*)(THIS);
}

RogueStringBuilder* RogueTable_String_ParseReader___print_to__StringBuilder( RogueClassTable_String_ParseReader_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_ParseReader_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_ParseReader____grow( RogueClassTable_String_ParseReader_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_ParseReader_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_ParseReader_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_ParseReader_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_ParseReader_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_ParseReader____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1106]);
}

RogueClassTableEntry_String_ParseReader_* RogueTableEntry_String_ParseReader___init_object( RogueClassTableEntry_String_ParseReader_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_ParseReader_*)(THIS);
}

RogueString* RogueTableEntry_String_ParseReader___to_String( RogueClassTableEntry_String_ParseReader_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_ParseReader___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_ParseReader___type_name( RogueClassTableEntry_String_ParseReader_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[926]);
}

RogueClassTableEntry_String_ParseReader_* RogueTableEntry_String_ParseReader___init__String_ParseReader_Int32( RogueClassTableEntry_String_ParseReader_* THIS, RogueString* _key_0, RogueClassParseReader* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_ParseReader_*)(THIS);
}

RogueClassParseReader* RogueParseReader__init_object( RogueClassParseReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassParseReader*)(THIS);
}

RogueString* RogueParseReader__type_name( RogueClassParseReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[979]);
}

RogueLogical RogueParseReader__has_another( RogueClassParseReader* THIS )
{
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueCharacter RogueParseReader__peek( RogueClassParseReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  return (RogueCharacter)(THIS->data->data->as_characters[THIS->position]);
}

RogueCharacter RogueParseReader__read( RogueClassParseReader* THIS )
{
  RogueCharacter result_0 = (THIS->data->data->as_characters[THIS->position]);
  THIS->position = (THIS->position + 1);
  if (((RogueInt32)(result_0)) == 10)
  {
    ++THIS->line;
    THIS->column = 1;
  }
  else
  {
    ++THIS->column;
  }
  return (RogueCharacter)(result_0);
}

RogueClassParseReader* RogueParseReader__init__String_Int32( RogueClassParseReader* THIS, RogueString* source_0, RogueInt32 _auto_306_1 )
{
  THIS->spaces_per_tab = _auto_306_1;
  RogueInt32 tab_count_2 = (0);
  if (!!(THIS->spaces_per_tab))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2458_5,(source_0));
      RogueInt32 _auto_2459_6 = (0);
      for (;_auto_2459_6 < _auto_2458_5->character_count;++_auto_2459_6)
      {
        RogueCharacter b_7 = (RogueString_character_at(_auto_2458_5,_auto_2459_6));
        if (b_7 == (RogueCharacter)9)
        {
          ++tab_count_2;
        }
      }
    }
  }
  THIS->data = ((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG((source_0->character_count + tab_count_2)) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2460_8,(source_0));
    RogueInt32 _auto_2461_9 = (0);
    for (;_auto_2461_9 < _auto_2460_8->character_count;++_auto_2461_9)
    {
      RogueCharacter b_10 = (RogueString_character_at(_auto_2460_8,_auto_2461_9));
      if ((b_10 == (RogueCharacter)9 && !!(THIS->spaces_per_tab)))
      {
        {
          RogueInt32 _auto_235_3 = (1);
          RogueInt32 _auto_236_4 = (THIS->spaces_per_tab);
          for (;_auto_235_3 <= _auto_236_4;++_auto_235_3)
          {
            RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), ROGUE_ARG(((RogueCharacter)(32))) );
          }
        }
      }
      else
      {
        RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), b_10 );
      }
    }
  }
  THIS->count = THIS->data->count;
  THIS->line = 1;
  THIS->column = 1;
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__init__File_Int32( RogueClassParseReader* THIS, RogueClassFile* file_0, RogueInt32 _auto_307_1 )
{
  THIS->spaces_per_tab = _auto_307_1;
  RogueParseReader__init__String_Int32( ROGUE_ARG(THIS), ROGUE_ARG((RogueFile__load_as_string__String( ROGUE_ARG(file_0->filepath) ))), ROGUE_ARG(THIS->spaces_per_tab) );
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__init__Character_List_Int32( RogueClassParseReader* THIS, RogueCharacter_List* source_0, RogueInt32 _auto_308_1 )
{
  THIS->spaces_per_tab = _auto_308_1;
  RogueInt32 tab_count_2 = (0);
  if (!!(THIS->spaces_per_tab))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_2462_5,(source_0));
      RogueInt32 _auto_2463_6 = (0);
      for (;_auto_2463_6 < _auto_2462_5->count;++_auto_2463_6)
      {
        RogueCharacter b_7 = (_auto_2462_5->data->as_characters[_auto_2463_6]);
        if (b_7 == (RogueCharacter)9)
        {
          ++tab_count_2;
        }
      }
    }
  }
  THIS->data = ((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG((source_0->count + tab_count_2)) )));
  {
    ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,_auto_2464_8,(source_0));
    RogueInt32 _auto_2465_9 = (0);
    for (;_auto_2465_9 < _auto_2464_8->count;++_auto_2465_9)
    {
      RogueCharacter b_10 = (_auto_2464_8->data->as_characters[_auto_2465_9]);
      if ((b_10 == (RogueCharacter)9 && !!(THIS->spaces_per_tab)))
      {
        {
          RogueInt32 _auto_237_3 = (1);
          RogueInt32 _auto_238_4 = (THIS->spaces_per_tab);
          for (;_auto_237_3 <= _auto_238_4;++_auto_237_3)
          {
            RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), ROGUE_ARG(((RogueCharacter)(32))) );
          }
        }
      }
      else
      {
        RogueCharacter_List__add__Character( ROGUE_ARG(THIS->data), b_10 );
      }
    }
  }
  THIS->count = THIS->data->count;
  THIS->line = 1;
  THIS->column = 1;
  return (RogueClassParseReader*)(THIS);
}

RogueLogical RogueParseReader__consume__Character( RogueClassParseReader* THIS, RogueCharacter ch_0 )
{
  if (((RogueParseReader__peek( ROGUE_ARG(THIS) ))) != ch_0)
  {
    return (RogueLogical)(false);
  }
  RogueParseReader__read( ROGUE_ARG(THIS) );
  return (RogueLogical)(true);
}

RogueLogical RogueParseReader__consume__String( RogueClassParseReader* THIS, RogueString* text_0 )
{
  RogueInt32 limit_1 = (text_0->character_count);
  RogueInt32 i_2 = (0);
  while (i_2 < limit_1)
  {
    if (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS), i_2 ))) != RogueString_character_at(text_0,i_2))
    {
      return (RogueLogical)(false);
    }
    ++i_2;
  }
  i_2 = ((RogueInt32)0);
  while (i_2 < limit_1)
  {
    RogueParseReader__read( ROGUE_ARG(THIS) );
    ++i_2;
  }
  return (RogueLogical)(true);
}

RogueLogical RogueParseReader__consume_id__String( RogueClassParseReader* THIS, RogueString* text_0 )
{
  RogueCharacter ch_1 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS), ROGUE_ARG(text_0->character_count) ))));
  if ((((RogueCharacter__is_alphanumeric( ch_1 ))) || ch_1 == (RogueCharacter)'_'))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(((RogueParseReader__consume__String( ROGUE_ARG(THIS), text_0 ))));
}

RogueLogical RogueParseReader__consume_spaces( RogueClassParseReader* THIS )
{
  RogueLogical found_0 = (false);
  while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)' ' ))))
  {
    found_0 = ((RogueLogical)true);
  }
  return (RogueLogical)(found_0);
}

RogueLogical RogueParseReader__has_another__Int32( RogueClassParseReader* THIS, RogueInt32 n_0 )
{
  return (RogueLogical)((THIS->position + n_0) <= THIS->count);
}

RogueCharacter RogueParseReader__peek__Int32( RogueClassParseReader* THIS, RogueInt32 num_ahead_0 )
{
  RogueInt32 peek_pos_1 = ((THIS->position + num_ahead_0));
  if (peek_pos_1 >= THIS->count)
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  return (RogueCharacter)(THIS->data->data->as_characters[peek_pos_1]);
}

RogueClassParseReader* RogueParseReader__seek_location__Int32_Int32( RogueClassParseReader* THIS, RogueInt32 new_line_0, RogueInt32 new_column_1 )
{
  if ((new_line_0 < THIS->line || (new_line_0 == THIS->line && new_column_1 < THIS->column)))
  {
    THIS->position = 0;
    THIS->line = 1;
    THIS->column = 1;
  }
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS) ))) && THIS->line < new_line_0))
  {
    RogueParseReader__read( ROGUE_ARG(THIS) );
  }
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS) ))) && THIS->column < new_column_1))
  {
    RogueParseReader__read( ROGUE_ARG(THIS) );
  }
  return (RogueClassParseReader*)(THIS);
}

RogueClassParseReader* RogueParseReader__set_location__Int32_Int32( RogueClassParseReader* THIS, RogueInt32 _auto_309_0, RogueInt32 _auto_310_1 )
{
  THIS->column = _auto_310_1;
  THIS->line = _auto_309_0;
  return (RogueClassParseReader*)(THIS);
}

RogueClassStopwatch* RogueStopwatch__init_object( RogueClassStopwatch* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->start_time = (RogueSystem__time());
  return (RogueClassStopwatch*)(THIS);
}

RogueString* RogueStopwatch__to_String( RogueClassStopwatch* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Real64_Int32( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueStopwatch__elapsed( ROGUE_ARG(THIS) )))), 2 )))), Rogue_literal_strings[927] )))) ))));
}

RogueString* RogueStopwatch__type_name( RogueClassStopwatch* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1017]);
}

RogueReal64 RogueStopwatch__elapsed( RogueClassStopwatch* THIS )
{
  return (RogueReal64)(((RogueSystem__time()) - THIS->start_time));
}

RogueClassStringTable_Stopwatch_* RogueStringTable_Stopwatch___init_object( RogueClassStringTable_Stopwatch_* THIS )
{
  RogueTable_String_Stopwatch___init_object( ROGUE_ARG(((RogueClassTable_String_Stopwatch_*)THIS)) );
  return (RogueClassStringTable_Stopwatch_*)(THIS);
}

RogueString* RogueStringTable_Stopwatch___type_name( RogueClassStringTable_Stopwatch_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1370]);
}

RogueClassTable_String_Stopwatch_* RogueTable_String_Stopwatch___init_object( RogueClassTable_String_Stopwatch_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Stopwatch_*)(THIS);
}

RogueClassTable_String_Stopwatch_* RogueTable_String_Stopwatch___init( RogueClassTable_String_Stopwatch_* THIS )
{
  RogueTable_String_Stopwatch___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Stopwatch_*)(THIS);
}

RogueString* RogueTable_String_Stopwatch___to_String( RogueClassTable_String_Stopwatch_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Stopwatch___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Stopwatch___type_name( RogueClassTable_String_Stopwatch_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1018]);
}

RogueClassTable_String_Stopwatch_* RogueTable_String_Stopwatch___init__Int32( RogueClassTable_String_Stopwatch_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Stopwatch_*), true );
  return (RogueClassTable_String_Stopwatch_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Stopwatch___print_to__StringBuilder( RogueClassTable_String_Stopwatch_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Stopwatch_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Stopwatch_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueString* RogueArray_TableEntry_String_Stopwatch____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1107]);
}

RogueClassTableEntry_String_Stopwatch_* RogueTableEntry_String_Stopwatch___init_object( RogueClassTableEntry_String_Stopwatch_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Stopwatch_*)(THIS);
}

RogueString* RogueTableEntry_String_Stopwatch___to_String( RogueClassTableEntry_String_Stopwatch_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Stopwatch___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Stopwatch___type_name( RogueClassTableEntry_String_Stopwatch_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[928]);
}

RoguePlugin_List* RoguePlugin_List__init_object( RoguePlugin_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RoguePlugin_List*)(THIS);
}

RoguePlugin_List* RoguePlugin_List__init( RoguePlugin_List* THIS )
{
  RoguePlugin_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RoguePlugin_List*)(THIS);
}

RogueString* RoguePlugin_List__to_String( RoguePlugin_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_2488_2,(THIS));
    RogueInt32 _auto_2489_3 = (0);
    for (;_auto_2489_3 < _auto_2488_2->count;++_auto_2489_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,value_4,(((RogueClassPlugin*)(_auto_2488_2->data->as_objects[_auto_2489_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RoguePlugin_List__type_name( RoguePlugin_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1047]);
}

RoguePlugin_List* RoguePlugin_List__init__Int32( RoguePlugin_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassPlugin*), true );
  }
  return (RoguePlugin_List*)(THIS);
}

RoguePlugin_List* RoguePlugin_List__add__Plugin( RoguePlugin_List* THIS, RogueClassPlugin* value_0 )
{
  ((RoguePlugin_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RoguePlugin_List*)(THIS);
}

RogueInt32 RoguePlugin_List__capacity( RoguePlugin_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RoguePlugin_List* RoguePlugin_List__reserve__Int32( RoguePlugin_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassPlugin*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RoguePlugin_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassPlugin*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RoguePlugin_List*)(THIS);
}

RogueClassPlugin* RoguePlugin__init_object( RogueClassPlugin* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassPlugin*)(THIS);
}

RogueString* RoguePlugin__type_name( RogueClassPlugin* THIS )
{
  return (RogueString*)(Rogue_literal_strings[976]);
}

RogueClassPlugin* RoguePlugin__init__String( RogueClassPlugin* THIS, RogueString* _auto_288_0 )
{
  THIS->name = _auto_288_0;
  return (RogueClassPlugin*)(THIS);
}

void RoguePlugin__collect_supported_targets( RogueClassPlugin* THIS )
{
  if (!!(THIS->collect_supported_types_callback))
  {
    Rogue_call_ROGUEM19( 17, ROGUE_ARG(THIS->collect_supported_types_callback) );
  }
}

RogueLogical RoguePlugin__generate_additional_types( RogueClassPlugin* THIS )
{
  if (!!(THIS->generate_additonal_types_callback))
  {
    return (RogueLogical)((Rogue_call_ROGUEM231( 17, ROGUE_ARG(THIS->generate_additonal_types_callback) )));
  }
  return (RogueLogical)(false);
}

void RoguePlugin__start_code_file__Object( RogueClassPlugin* THIS, RogueObject* code_object_0 )
{
  if (!!(THIS->start_code_file_callback))
  {
    Rogue_call_ROGUEM234( 17, ROGUE_ARG(THIS->start_code_file_callback), code_object_0 );
  }
}

void RoguePlugin__finish_code_file__Object( RogueClassPlugin* THIS, RogueObject* code_object_0 )
{
  if (!!(THIS->finish_code_file_callback))
  {
    Rogue_call_ROGUEM234( 17, ROGUE_ARG(THIS->finish_code_file_callback), code_object_0 );
  }
}

void RoguePlugin__start_header_file__Object( RogueClassPlugin* THIS, RogueObject* code_object_0 )
{
  if (!!(THIS->start_header_file_callback))
  {
    Rogue_call_ROGUEM234( 17, ROGUE_ARG(THIS->start_header_file_callback), code_object_0 );
  }
}

void RoguePlugin__finish_header_file__Object( RogueClassPlugin* THIS, RogueObject* code_object_0 )
{
  if (!!(THIS->finish_header_file_callback))
  {
    Rogue_call_ROGUEM234( 17, ROGUE_ARG(THIS->finish_header_file_callback), code_object_0 );
  }
}

RogueClassPlugin* RoguePlugin__on_generate_additional_types__Function__RETURNSLogical( RogueClassPlugin* THIS, RogueClassFunction__RETURNSLogical* _auto_290_0 )
{
  THIS->generate_additonal_types_callback = _auto_290_0;
  return (RogueClassPlugin*)(THIS);
}

RogueClassPlugin* RoguePlugin__on_finish_header_file__Function_Object_( RogueClassPlugin* THIS, RogueClassFunction_Object_* _auto_292_0 )
{
  THIS->finish_header_file_callback = _auto_292_0;
  return (RogueClassPlugin*)(THIS);
}

RogueClassPlugin* RoguePlugin__on_finish_code_file__Function_Object_( RogueClassPlugin* THIS, RogueClassFunction_Object_* _auto_294_0 )
{
  THIS->finish_code_file_callback = _auto_294_0;
  return (RogueClassPlugin*)(THIS);
}

RogueClassFunction__RETURNSLogical* RogueFunction__RETURNSLogical__init_object( RogueClassFunction__RETURNSLogical* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction__RETURNSLogical*)(THIS);
}

RogueString* RogueFunction__RETURNSLogical__type_name( RogueClassFunction__RETURNSLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[985]);
}

RogueLogical RogueFunction__RETURNSLogical__call( RogueClassFunction__RETURNSLogical* THIS )
{
  return (RogueLogical)(false);
}

RogueClassFunction_Object_* RogueFunction_Object___init_object( RogueClassFunction_Object_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction_Object_*)(THIS);
}

RogueString* RogueFunction_Object___type_name( RogueClassFunction_Object_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[986]);
}

void RogueFunction_Object___call__Object( RogueClassFunction_Object_* THIS, RogueObject* param1_0 )
{
}

RogueString* RogueArray_Plugin___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1079]);
}

RogueClassProgram* RogueProgram__init_object( RogueClassProgram* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->code_prefix = Rogue_literal_strings[274];
  THIS->program_name = Rogue_literal_strings[275];
  THIS->template_list = ((RogueTemplate_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueTemplate_List*,ROGUE_CREATE_OBJECT(Template_List))) )));
  THIS->template_lookup = ((RogueTable_String_Template___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Template_*,ROGUE_CREATE_OBJECT(Table_String_Template_))) )));
  THIS->augment_lookup = ((RogueTable_String_Augment_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Augment_List_*,ROGUE_CREATE_OBJECT(Table_String_Augment_List_))) )));
  THIS->global_properties = ((RogueProperty_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueProperty_List*,ROGUE_CREATE_OBJECT(Property_List))) )));
  THIS->native_header = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->native_code = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->methods_by_signature = ((RogueTable_String_Method_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_List_*,ROGUE_CREATE_OBJECT(Table_String_Method_List_))) )));
  THIS->type_list = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  THIS->type_lookup = ((RogueTable_String_Type___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Type_*,ROGUE_CREATE_OBJECT(Table_String_Type_))) )));
  THIS->literal_string_lookup = ((RogueTable_String_Int32___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Int32_*,ROGUE_CREATE_OBJECT(Table_String_Int32_))) )));
  THIS->literal_string_list = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->string_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  THIS->ids_by_module = ((RogueTable_String_String_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_String_List_*,ROGUE_CREATE_OBJECT(Table_String_String_List_))) )));
  THIS->cy_delegate_construction_pass = 0;
  THIS->cy_first_code_file = true;
  THIS->cy_delegates = ((RogueTable_Type_CyClass___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_Type_CyClass_*,ROGUE_CREATE_OBJECT(Table_Type_CyClass_))) )));
  THIS->cy_delegate_to_pydelegate = ((RogueTable_Type_Type___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_Type_Type_*,ROGUE_CREATE_OBJECT(Table_Type_Type_))) )));
  THIS->cy_overload_count = 0;
  return (RogueClassProgram*)(THIS);
}

RogueString* RogueProgram__type_name( RogueClassProgram* THIS )
{
  return (RogueString*)(Rogue_literal_strings[960]);
}

RogueInt32 RogueProgram__add_literal_string__String( RogueClassProgram* THIS, RogueString* value_0 )
{
  if (!(!!(value_0)))
  {
    return (RogueInt32)(0);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_1,(((RogueTable_String_Int32___find__String( ROGUE_ARG(THIS->literal_string_lookup), value_0 )))));
  if (!!(entry_1))
  {
    return (RogueInt32)(entry_1->value);
  }
  else
  {
    RogueInt32 index_2 = (THIS->literal_string_list->count);
    RogueTable_String_Int32___set__String_Int32( ROGUE_ARG(THIS->literal_string_lookup), value_0, index_2 );
    RogueString_List__add__String( ROGUE_ARG(THIS->literal_string_list), value_0 );
    return (RogueInt32)(index_2);
  }
}

void RogueProgram__add_module_id__String_String( RogueClassProgram* THIS, RogueString* module_name_0, RogueString* id_name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueString_List*,list_2,(((RogueTable_String_String_List___get__String( ROGUE_ARG(THIS->ids_by_module), module_name_0 )))));
  if (!(!!(list_2)))
  {
    list_2 = ((RogueString_List*)((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) ))));
    RogueTable_String_String_List___set__String_String_List( ROGUE_ARG(THIS->ids_by_module), module_name_0, list_2 );
  }
  RogueString_List__add__String( list_2, id_name_1 );
}

void RogueProgram__add_template__Template( RogueClassProgram* THIS, RogueClassTemplate* template_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,existing_template_1,(((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(template_0->name) )))));
  {
    {
      {
        RogueInt32 param_count_2 = (((RogueTemplate__type_parameter_count( template_0 ))));
        if (!(!!(existing_template_1))) goto _auto_277;
        if ( !(param_count_2 != ((RogueTemplate__type_parameter_count( existing_template_1 )))) ) goto _auto_278;
        if (!(!!(existing_template_1->alternates_by_param_count)))
        {
          existing_template_1->alternates_by_param_count = ((RogueTable_Int32_Template___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_Int32_Template_*,ROGUE_CREATE_OBJECT(Table_Int32_Template_))) )));
        }
        if ( !(!(((RogueTable_Int32_Template___contains__Int32( ROGUE_ARG(existing_template_1->alternates_by_param_count), param_count_2 ))))) ) goto _auto_278;
        RogueTable_Int32_Template___set__Int32_Template( ROGUE_ARG(existing_template_1->alternates_by_param_count), param_count_2, template_0 );
        goto _auto_276;
        }
      _auto_277:;
      {
        RogueTemplate_List__add__Template( ROGUE_ARG(THIS->template_list), template_0 );
        RogueTable_String_Template___set__String_Template( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(template_0->name), template_0 );
        }
      goto _auto_276;
    }
    _auto_278:;
    {
      if ((!!((template_0->attributes->flags & 262144)) && !!((existing_template_1->attributes->flags & 262144))))
      {
        RogueToken_List__add__Token_List( ROGUE_ARG(existing_template_1->tokens), ROGUE_ARG(template_0->tokens) );
      }
      else if (!!((existing_template_1->attributes->flags & 262144)))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(template_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[365] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(template_0->name) )))) )))), Rogue_literal_strings[366] )))) )))) ))));
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(template_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[367] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(template_0->name) )))) )))), Rogue_literal_strings[366] )))) )))) ))));
      }
      }
  }
  _auto_276:;
}

void RogueProgram__configure( RogueClassProgram* THIS )
{
  if (((RogueTable_String_Logical___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->compile_targets), Rogue_literal_strings[267] ))))
  {
    ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->all_methods_callable_dynamically = true;
    THIS->cy_plugin = ((RoguePlugin__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPlugin*,ROGUE_CREATE_OBJECT(Plugin))), Rogue_literal_strings[267] )));
    RoguePlugin_List__add__Plugin( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->plugins), ROGUE_ARG(THIS->cy_plugin) );
    RogueInt32 ptr_size_0 = (sizeof(intptr_t));
    if (ptr_size_0 == 4)
    {
      RogueTable_String_Token_List___set__String_Token_List( ROGUE_ARG(RoguePreprocessor_definitions), Rogue_literal_strings[276], ROGUE_ARG(((RogueTokenizer__tokenize__String_String( ROGUE_ARG(((RogueClassTokenizer*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), Rogue_literal_strings[277], Rogue_literal_strings[123] )))) );
    }
    else if (ptr_size_0 == 8)
    {
      RogueTable_String_Token_List___set__String_Token_List( ROGUE_ARG(RoguePreprocessor_definitions), Rogue_literal_strings[276], ROGUE_ARG(((RogueTokenizer__tokenize__String_String( ROGUE_ARG(((RogueClassTokenizer*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), Rogue_literal_strings[277], Rogue_literal_strings[124] )))) );
    }
    else
    {
      ROGUE_THROW(RogueClassError,((RogueClassError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), Rogue_literal_strings[278] )))));
    }
    RoguePlugin__on_generate_additional_types__Function__RETURNSLogical( ROGUE_ARG(THIS->cy_plugin), ROGUE_ARG(((RogueClassFunction__RETURNSLogical*)(((RogueProgram_cy_create_delegates____init__Program( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProgram_cy_create_delegates__*,ROGUE_CREATE_OBJECT(Program_cy_create_delegates__))), ROGUE_ARG(THIS) )))))) );
    RoguePlugin__on_finish_header_file__Function_Object_( ROGUE_ARG(THIS->cy_plugin), ROGUE_ARG(((RogueClassFunction_Object_*)(((RogueProgram_cy_on_header_end_Object___init__Program( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProgram_cy_on_header_end_Object_*,ROGUE_CREATE_OBJECT(Program_cy_on_header_end_Object_))), ROGUE_ARG(THIS) )))))) );
    RoguePlugin__on_finish_code_file__Function_Object_( ROGUE_ARG(THIS->cy_plugin), ROGUE_ARG(((RogueClassFunction_Object_*)(((RogueProgram_cy_on_code_end_Object___init__Program( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassProgram_cy_on_code_end_Object_*,ROGUE_CREATE_OBJECT(Program_cy_on_code_end_Object_))), ROGUE_ARG(THIS) )))))) );
    RogueProgram__cy_inject_rogue_classes( ROGUE_ARG(THIS) );
  }
  THIS->type_null = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[1], 0 )));
  THIS->type_Real64 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[125], 2 )));
  THIS->type_Real32 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[376], 2 )));
  THIS->type_Int64 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[124], 2 )));
  THIS->type_Int32 = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[123], 2 )));
  THIS->type_Character = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[122], 2 )));
  THIS->type_Byte = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[377], 2 )));
  THIS->type_Logical = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[378], 2 )));
  THIS->type_Object = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[10], 32 )));
  THIS->type_String = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[126], 32 )));
  THIS->type_StringBuilder = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[379], 0 )));
  THIS->type_TypeInfo = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[380], 0 )));
  THIS->type_NativeArray = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[381], 32 )));
  THIS->type_GenericList = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[382], 0 )));
  THIS->type_Global = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[295], 0 )));
  THIS->type_Exception = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[5], 0 )));
  THIS->type_WeakReference = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[383], 0 )));
  THIS->type_Value = ((RogueProgram__create_built_in_type__String_Int32( ROGUE_ARG(THIS), Rogue_literal_strings[384], 0 )));
  THIS->type_Exception->simplify_name = true;
  THIS->type_Object->simplify_name = true;
  THIS->type_String->simplify_name = true;
  THIS->type_StringBuilder->simplify_name = true;
  THIS->type_TypeInfo->simplify_name = true;
  THIS->type_WeakReference->simplify_name = true;
  THIS->type_null->organized = true;
  THIS->type_null->defined = true;
  RogueString_List__add__String( ROGUE_ARG(THIS->literal_string_list), Rogue_literal_strings[0] );
  RogueTable_String_Int32___set__String_Int32( ROGUE_ARG(THIS->literal_string_lookup), Rogue_literal_strings[0], 0 );
}

RogueString* RogueProgram__create_unique_id( RogueClassProgram* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[314], ROGUE_ARG(((RogueProgram__next_unique_integer( ROGUE_ARG(THIS) )))) ))));
}

RogueClassMethod* RogueProgram__get_on_launch_method__Token( RogueClassProgram* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_global_1,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, Rogue_literal_strings[295] )))));
  if (!(!!(THIS->m_on_launch)))
  {
    THIS->m_on_launch = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_0, type_global_1, Rogue_literal_strings[296] )));
    if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->run_tests)
    {
      RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[297] )))))) );
      RogueProgram__get_run_tests_method__Token( ROGUE_ARG(THIS), t_0 );
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_on_launch), t_0, Rogue_literal_strings[298], false )))))) );
    RogueMethod__make_essential( ROGUE_ARG(THIS->m_on_launch) );
  }
  return (RogueClassMethod*)(THIS->m_on_launch);
}

RogueClassMethod* RogueProgram__get_run_tests_method__Token( RogueClassProgram* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_global_1,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, Rogue_literal_strings[295] )))));
  if (!(!!(THIS->m_run_tests)))
  {
    THIS->m_run_tests = ((RogueMethod__init__Token_Type_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMethod*,ROGUE_CREATE_OBJECT(Method))), t_0, type_global_1, Rogue_literal_strings[297] )));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_run_tests->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_run_tests), t_0, Rogue_literal_strings[298], false )))))) );
    RogueMethod__make_essential( ROGUE_ARG(THIS->m_run_tests) );
  }
  return (RogueClassMethod*)(THIS->m_run_tests);
}

RogueInt32 RogueProgram__next_unique_integer( RogueClassProgram* THIS )
{
  ++THIS->unique_integer;
  return (RogueInt32)((THIS->unique_integer - 1));
}

RogueClassTemplate* RogueProgram__find_template__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_1,0);
  switch (((RogueString__last( name_0 ))))
  {
    case (RogueCharacter)'?':
    {
      if (!!(((RogueProgram__find_type__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__leftmost__Int32( name_0, -1 )))) )))))
      {
        return (RogueClassTemplate*)(((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), Rogue_literal_strings[392] ))));
      }
      else
      {
        return (RogueClassTemplate*)(((RogueClassTemplate*)(NULL)));
      }
      break;
    }
    case (RogueCharacter)']':
    {
      template_1 = ((RogueClassTemplate*)((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), Rogue_literal_strings[393] ))));
      break;
    }
    default:
    {
      template_1 = ((RogueClassTemplate*)((RogueTable_String_Template___get__String( ROGUE_ARG(THIS->template_lookup), ROGUE_ARG(((RogueString__before_first__Character( name_0, (RogueCharacter)'<' )))) ))));
    }
  }
  if (!!(template_1))
  {
    return (RogueClassTemplate*)(template_1);
  }
  return (RogueClassTemplate*)(((RogueClassTemplate*)(NULL)));
}

RogueClassType* RogueProgram__find_type__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_0 )))));
  if (!!(type_1))
  {
    return (RogueClassType*)(type_1);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueProgram__find_template__String( ROGUE_ARG(THIS), name_0 )))));
  if (!!(template_2))
  {
    type_1 = ((RogueClassType*)((RogueType__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassType*,ROGUE_CREATE_OBJECT(Type))), ROGUE_ARG(template_2->t), name_0 ))));
    RogueAttributes__add__Attributes( ROGUE_ARG(type_1->attributes), ROGUE_ARG(template_2->attributes) );
    RogueTable_String_Type___set__String_Type( ROGUE_ARG(THIS->type_lookup), name_0, type_1 );
    return (RogueClassType*)(type_1);
  }
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassType* RogueProgram__get_type_reference__Token_String( RogueClassProgram* THIS, RogueClassToken* t_0, RogueString* name_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_1 )))));
  if (!!(type_2))
  {
    return (RogueClassType*)(type_2);
  }
  type_2 = ((RogueClassType*)((RogueType__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassType*,ROGUE_CREATE_OBJECT(Type))), t_0, name_1 ))));
  RogueTable_String_Type___set__String_Type( ROGUE_ARG(THIS->type_lookup), name_1, type_2 );
  return (RogueClassType*)(type_2);
}

RogueString* RogueProgram__get_callback_type_signature__Type_List( RogueClassProgram* THIS, RogueType_List* parameter_types_0 )
{
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) )))), Rogue_literal_strings[9] );
  if (!!(parameter_types_0))
  {
    RogueLogical first_1 = (true);
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_373_2,(parameter_types_0));
      RogueInt32 _auto_374_3 = (0);
      for (;_auto_374_3 < _auto_373_2->count;++_auto_374_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_4,(((RogueClassType*)(_auto_373_2->data->as_objects[_auto_374_3]))));
        if (first_1)
        {
          first_1 = ((RogueLogical)false);
        }
        else
        {
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)',', true );
        }
        RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(type_4->name) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)')', true );
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueClassType* RogueProgram__get_callback_type_reference__Token_Type_List_Type( RogueClassProgram* THIS, RogueClassToken* t_0, RogueType_List* parameter_types_1, RogueClassType* return_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,name_3,(((RogueString__operatorPLUS__String( Rogue_literal_strings[309], ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ROGUE_ARG(THIS), parameter_types_1 )))) )))));
  if (!!(return_type_2))
  {
    name_3 = ((RogueString*)((RogueString__operatorPLUS__String( name_3, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[145], ROGUE_ARG(return_type_2->name) )))) ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_4,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_0, name_3 )))));
  if (type_4->defined)
  {
    return (RogueClassType*)(type_4);
  }
  type_4->defined = true;
  type_4->callback_parameter_types = parameter_types_1;
  type_4->_callback_return_type = return_type_2;
  type_4->is_function = true;
  RogueAttributes__add__Int32( ROGUE_ARG(type_4->attributes), 0 );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_5,(((RogueType__add_method__Token_String( type_4, t_0, Rogue_literal_strings[310] )))));
  if (!!(parameter_types_1))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_375_6,(parameter_types_1));
      RogueInt32 i_7 = (0);
      for (;i_7 < _auto_375_6->count;++i_7)
      {
        RogueMethod__add_parameter__Token_String_Type( m_call_5, t_0, ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[311], ROGUE_ARG((i_7 + 1)) )))), ROGUE_ARG(((RogueClassType*)(parameter_types_1->data->as_objects[i_7]))) );
      }
    }
  }
  if (!!(return_type_2))
  {
    m_call_5->_return_type = return_type_2;
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_call_5->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdDefaultValue__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdDefaultValue*,ROGUE_CREATE_OBJECT(CmdDefaultValue))), t_0, return_type_2 )))))) )))))) );
  }
  return (RogueClassType*)(type_4);
}

RogueLogical RogueProgram__is_type_used__String( RogueClassProgram* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueTable_String_Type___get__String( ROGUE_ARG(THIS->type_lookup), name_0 )))));
  if (!(!!(type_1)))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)((type_1->defined && type_1->is_used));
}

RogueClassType* RogueProgram__create_built_in_type__String_Int32( RogueClassProgram* THIS, RogueString* name_0, RogueInt32 attributes_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,((Rogue_call_ROGUEM109( 18, ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[374] )))), Rogue_literal_strings[375], 0, 0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_3,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), t_2, name_0 )))));
  RogueAttributes__add__Int32( ROGUE_ARG(type_3->attributes), attributes_1 );
  return (RogueClassType*)(type_3);
}

RogueLogical RogueProgram__make_fully_essential__Method( RogueClassProgram* THIS, RogueClassMethod* m_0 )
{
  RogueLogical r_1 = (((RogueMethod__is_essential( m_0 ))) == false);
  if ((((RogueMethod__is_api( m_0 ))) && !(((RogueType__is_essential( ROGUE_ARG(m_0->type_context) ))))))
  {
    r_1 = ((RogueLogical)true);
    RogueProgram__make_fully_essential__Type( ROGUE_ARG(THIS), ROGUE_ARG(m_0->type_context) );
  }
  RogueAttributes__add__Int32( ROGUE_ARG(m_0->attributes), 8192 );
  if ((!!(m_0->_return_type) && ((RogueProgram__make_fully_essential__Type( ROGUE_ARG(THIS), ROGUE_ARG(m_0->_return_type) )))))
  {
    r_1 = ((RogueLogical)true);
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_380_2,(m_0->parameters));
    RogueInt32 _auto_381_3 = (0);
    for (;_auto_381_3 < _auto_380_2->count;++_auto_381_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_4,(((RogueClassLocal*)(_auto_380_2->data->as_objects[_auto_381_3]))));
      if (((RogueProgram__make_fully_essential__Type( ROGUE_ARG(THIS), ROGUE_ARG(p_4->_type) ))))
      {
        r_1 = ((RogueLogical)true);
      }
    }
  }
  return (RogueLogical)(r_1);
}

RogueLogical RogueProgram__make_fully_essential__Method_List( RogueClassProgram* THIS, RogueMethod_List* methods_0 )
{
  RogueLogical r_1 = (false);
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_384_2,(methods_0));
    RogueInt32 _auto_385_3 = (0);
    for (;_auto_385_3 < _auto_384_2->count;++_auto_385_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_4,(((RogueClassMethod*)(_auto_384_2->data->as_objects[_auto_385_3]))));
      if (((RogueProgram__make_fully_essential__Method( ROGUE_ARG(THIS), m_4 ))))
      {
        r_1 = ((RogueLogical)true);
      }
    }
  }
  return (RogueLogical)(r_1);
}

RogueLogical RogueProgram__make_fully_essential__Type( RogueClassProgram* THIS, RogueClassType* t_0 )
{
  RogueLogical r_1 = (((RogueType__is_essential( t_0 ))) == false);
  RogueAttributes__add__Int32( ROGUE_ARG(t_0->attributes), 8192 );
  return (RogueLogical)(r_1);
}

void RogueProgram__resolve( RogueClassProgram* THIS )
{
  RogueType__add_method__Method( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueProgram__get_on_launch_method__Token( ROGUE_ARG(THIS), ROGUE_ARG(THIS->type_Global->t) )))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->m_on_launch->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueMethod__begin_label__Token_String_Logical( ROGUE_ARG(THIS->m_on_launch), ROGUE_ARG(THIS->m_on_launch->t), Rogue_literal_strings[300], false )))))) );
  RogueType__add_method__Method( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueProgram__get_run_tests_method__Token( ROGUE_ARG(THIS), ROGUE_ARG(THIS->type_Global->t) )))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_386_4,(THIS->global_properties));
    RogueInt32 _auto_387_5 = (0);
    for (;_auto_387_5 < _auto_386_4->count;++_auto_387_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_6,(((RogueClassProperty*)(_auto_386_4->data->as_objects[_auto_387_5]))));
      if (!(!!(p_6->_type)))
      {
        if (!!(p_6->initial_value))
        {
          p_6->_type = (Rogue_call_ROGUEM151( 34, ROGUE_ARG(p_6->initial_value), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueClassMethod*)(NULL))) )))) ));
          if (!(!!(p_6->_type)))
          {
            ROGUE_DEF_LOCAL_REF(RogueString*,mesg_0,(Rogue_literal_strings[388]));
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(p_6->t), mesg_0 ))));
          }
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,mesg_1,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[389] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_6->name) )))) )))), Rogue_literal_strings[390] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_6->name) )))) )))), Rogue_literal_strings[391] )))) )))));
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(p_6->t), mesg_1 ))));
        }
      }
      RogueType__add_property__Property( ROGUE_ARG(THIS->type_Global), p_6 );
    }
  }
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_null), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Exception), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Real64), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Real32), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Int64), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Int32), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Character), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Byte), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Logical), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_Object), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_NativeArray), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_GenericList), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__configure__Scope( ROGUE_ARG(THIS->type_String), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__resolve( ROGUE_ARG(THIS->type_null) );
  RogueType__organize__Scope( ROGUE_ARG(THIS->type_Global), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Exception) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Real64) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Real32) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Int64) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Int32) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Character) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Byte) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Logical) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Global) );
  RogueType__resolve( ROGUE_ARG(THIS->type_Object) );
  RogueType__resolve( ROGUE_ARG(THIS->type_NativeArray) );
  RogueType__resolve( ROGUE_ARG(THIS->type_GenericList) );
  RogueType__resolve( ROGUE_ARG(THIS->type_String) );
  RogueLogical types_resolved_2 = (false);
  while (!(types_resolved_2))
  {
    if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->all_essential)
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Type_*,_auto_395_7,(THIS->type_lookup));
        RogueInt32 _auto_396_8 = (0);
        for (;_auto_396_8 < _auto_395_7->count;++_auto_396_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,t_9,(((RogueTable_String_Type___at__Int32( _auto_395_7, _auto_396_8 )))));
          RogueType__configure__Scope( t_9, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueTemplate_List*,_auto_397_10,(THIS->template_list));
      RogueInt32 _auto_398_11 = (0);
      for (;_auto_398_11 < _auto_397_10->count;++_auto_398_11)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,templ_12,(((RogueClassTemplate*)(_auto_397_10->data->as_objects[_auto_398_11]))));
        if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->all_api)
        {
          RogueAttributes__add__Int32( ROGUE_ARG(templ_12->attributes), 16 );
        }
        if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->all_essential)
        {
          RogueAttributes__add__Int32( ROGUE_ARG(templ_12->attributes), 16 );
          RogueAttributes__add__Int32( ROGUE_ARG(templ_12->attributes), 8192 );
          if (!(!!(templ_12->type_parameters)))
          {
            ROGUE_DEF_LOCAL_REF(RogueClassType*,t_3,(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(templ_12->t), ROGUE_ARG(templ_12->name) )))));
            RogueType__configure__Scope( t_3, ROGUE_ARG(((RogueClassScope*)(NULL))) );
          }
        }
        if ((!!((templ_12->attributes->flags & 8192)) && !(!!(templ_12->type_parameters))))
        {
          RogueType__resolve( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ROGUE_ARG(THIS), ROGUE_ARG(templ_12->t), ROGUE_ARG(templ_12->name) )))) );
        }
      }
    }
    types_resolved_2 = ((RogueLogical)((RogueProgram__resolve_types( ROGUE_ARG(THIS) ))));
    {
      ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_399_13,(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->plugins));
      RogueInt32 _auto_400_14 = (0);
      for (;_auto_400_14 < _auto_399_13->count;++_auto_400_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_15,(((RogueClassPlugin*)(_auto_399_13->data->as_objects[_auto_400_14]))));
        if (((RoguePlugin__generate_additional_types( plugin_15 ))))
        {
          types_resolved_2 = ((RogueLogical)false);
        }
      }
    }
    if (types_resolved_2)
    {
      if (!(((RogueProgram__cull_unused_code( ROGUE_ARG(THIS) )))))
      {
        types_resolved_2 = ((RogueLogical)false);
      }
    }
  }
  RogueProgram__reorder_compounds( ROGUE_ARG(THIS) );
  RogueProgram__validate( ROGUE_ARG(THIS) );
}

RogueLogical RogueProgram__resolve_types( RogueClassProgram* THIS )
{
  RogueLogical types_resolved_0 = (true);
  RogueInt32 i_1 = (0);
  while (i_1 < THIS->type_list->count)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,t_2,(((RogueClassType*)(THIS->type_list->data->as_objects[i_1]))));
    if (t_2->extended_types->count == 0)
    {
      RogueType__organize__Scope( t_2, ROGUE_ARG(((RogueClassScope*)(NULL))) );
    }
    ++i_1;
  }
  i_1 = ((RogueInt32)0);
  while (i_1 < THIS->type_list->count)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,t_3,(((RogueClassType*)(THIS->type_list->data->as_objects[i_1]))));
    RogueType__resolve( t_3 );
    if ((((RogueType__is_api( t_3 ))) || (!!(t_3->t) && ((RogueSet_String___contains__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->essential_files), ROGUE_ARG(t_3->t->filepath) ))))))
    {
      if (((RogueProgram__make_fully_essential__Type( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassType*)(THIS->type_list->data->as_objects[i_1]))) ))))
      {
        types_resolved_0 = ((RogueLogical)false);
      }
      if (((RogueProgram__make_fully_essential__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(t_3->global_method_list) ))))
      {
        types_resolved_0 = ((RogueLogical)false);
      }
      if (((RogueProgram__make_fully_essential__Method_List( ROGUE_ARG(THIS), ROGUE_ARG(t_3->method_list) ))))
      {
        types_resolved_0 = ((RogueLogical)false);
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_401_4,(t_3->property_list));
        RogueInt32 _auto_402_5 = (0);
        for (;_auto_402_5 < _auto_401_4->count;++_auto_402_5)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_6,(((RogueClassProperty*)(_auto_401_4->data->as_objects[_auto_402_5]))));
          if (((RogueProgram__make_fully_essential__Type( ROGUE_ARG(THIS), ROGUE_ARG(p_6->_type) ))))
          {
            types_resolved_0 = ((RogueLogical)false);
          }
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_403_7,(t_3->global_list));
        RogueInt32 _auto_404_8 = (0);
        for (;_auto_404_8 < _auto_403_7->count;++_auto_404_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_9,(((RogueClassProperty*)(_auto_403_7->data->as_objects[_auto_404_8]))));
          if (((RogueProgram__make_fully_essential__Type( ROGUE_ARG(THIS), ROGUE_ARG(p_9->_type) ))))
          {
            types_resolved_0 = ((RogueLogical)false);
          }
        }
      }
    }
    ++i_1;
    if (i_1 == THIS->type_list->count)
    {
      if (!!(THIS->m_run_tests))
      {
        THIS->m_run_tests->resolved = false;
        RogueMethod__resolve( ROGUE_ARG(THIS->m_run_tests) );
      }
    }
  }
  return (RogueLogical)(types_resolved_0);
}

void RogueProgram__validate( RogueClassProgram* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_405_0,(THIS->type_list));
    RogueInt32 _auto_406_1 = (0);
    for (;_auto_406_1 < _auto_405_0->count;++_auto_406_1)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueClassType*)(_auto_405_0->data->as_objects[_auto_406_1]))));
      RogueType__validate( type_2 );
    }
  }
}

void RogueProgram__reorder_compounds( RogueClassProgram* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueType_List*,compounds_0,(((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )))));
  RogueInt32 write_i_1 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_407_5,(THIS->type_list));
    RogueInt32 read_i_6 = (0);
    for (;read_i_6 < _auto_407_5->count;++read_i_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueClassType*)(THIS->type_list->data->as_objects[read_i_6]))));
      if (((RogueType__is_compound( type_2 ))))
      {
        RogueProgram__collect_compound_dependencies__Type_Type_List( ROGUE_ARG(THIS), type_2, compounds_0 );
      }
      else
      {
        THIS->type_list->data->as_objects[write_i_1] = type_2;
        type_2->index = write_i_1;
        ++write_i_1;
      }
    }
  }
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS->type_list), write_i_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_408_7,(compounds_0));
    RogueInt32 _auto_409_8 = (0);
    for (;_auto_409_8 < _auto_408_7->count;++_auto_409_8)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_9,(((RogueClassType*)(_auto_408_7->data->as_objects[_auto_409_8]))));
      type_9->index = THIS->type_list->count;
      RogueType_List__add__Type( ROGUE_ARG(THIS->type_list), type_9 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_410_10,(THIS->type_list));
    RogueInt32 _auto_411_11 = (0);
    for (;_auto_411_11 < _auto_410_10->count;++_auto_411_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_12,(((RogueClassType*)(_auto_410_10->data->as_objects[_auto_411_11]))));
      if ((((RogueType__instance_of__Type( type_12, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) ))) && ((void*)type_12) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception)))
      {
        if (type_12->base_class->index > type_12->index)
        {
          RogueInt32 i1_3 = (type_12->base_class->index);
          RogueInt32 i2_4 = (type_12->index);
          RogueType_List__swap__Int32_Int32( ROGUE_ARG(THIS->type_list), i1_3, i2_4 );
          type_12->index = i1_3;
          type_12->base_class->index = i2_4;
        }
      }
    }
  }
}

void RogueProgram__collect_compound_dependencies__Type_Type_List( RogueClassProgram* THIS, RogueClassType* type_0, RogueType_List* compounds_1 )
{
  if (type_0->index == -1)
  {
    return;
  }
  type_0->index = -1;
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_412_2,(type_0->property_list));
    RogueInt32 _auto_413_3 = (0);
    for (;_auto_413_3 < _auto_412_2->count;++_auto_413_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_4,(((RogueClassProperty*)(_auto_412_2->data->as_objects[_auto_413_3]))));
      if (((RogueType__is_compound( ROGUE_ARG(p_4->_type) ))))
      {
        RogueProgram__collect_compound_dependencies__Type_Type_List( ROGUE_ARG(THIS), ROGUE_ARG(p_4->_type), compounds_1 );
      }
    }
  }
  RogueType_List__add__Type( compounds_1, type_0 );
}

RogueLogical RogueProgram__cull_unused_code( RogueClassProgram* THIS )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_414_3,(THIS->type_list));
    RogueInt32 _auto_415_4 = (0);
    for (;_auto_415_4 < _auto_414_3->count;++_auto_415_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_5,(((RogueClassType*)(_auto_414_3->data->as_objects[_auto_415_4]))));
      if (((RogueType__is_essential( type_5 ))))
      {
        RogueType__trace_used_code( type_5 );
      }
    }
  }
  RogueProgram__trace_overridden_methods( ROGUE_ARG(THIS) );
  RogueLogical injected_dependencies_0 = (false);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_416_6,(THIS->type_list));
    RogueInt32 _auto_417_7 = (0);
    for (;_auto_417_7 < _auto_416_6->count;++_auto_417_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_8,(((RogueClassType*)(_auto_416_6->data->as_objects[_auto_417_7]))));
      if ((type_8->is_used && !!(type_8->dependencies)))
      {
        injected_dependencies_0 = ((RogueLogical)true);
        RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(type_8->dependencies), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), type_8, ROGUE_ARG(((RogueClassMethod*)(NULL))) )))), false );
        type_8->dependencies = ((RogueClassCmdStatementList*)(NULL));
      }
    }
  }
  if (injected_dependencies_0)
  {
    return (RogueLogical)(false);
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_418_9,(THIS->type_list));
    RogueInt32 _auto_419_10 = (0);
    for (;_auto_419_10 < _auto_418_9->count;++_auto_419_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_11,(((RogueClassType*)(_auto_418_9->data->as_objects[_auto_419_10]))));
      RogueType__cull_unused_methods( type_11 );
    }
  }
  RogueInt32 write_i_1 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_420_12,(THIS->type_list));
    RogueInt32 read_i_13 = (0);
    for (;read_i_13 < _auto_420_12->count;++read_i_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_2,(((RogueClassType*)(THIS->type_list->data->as_objects[read_i_13]))));
      if (!(((RogueType__should_cull( type_2 )))))
      {
        THIS->type_list->data->as_objects[write_i_1] = type_2;
        type_2->index = write_i_1;
        ++write_i_1;
      }
    }
  }
  RogueType_List__discard_from__Int32( ROGUE_ARG(THIS->type_list), write_i_1 );
  return (RogueLogical)(true);
}

void RogueProgram__trace_overridden_methods( RogueClassProgram* THIS )
{
  RogueLogical traced_new_methods_0 = (true);
  while (traced_new_methods_0)
  {
    traced_new_methods_0 = ((RogueLogical)false);
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_421_5,(THIS->type_list));
      RogueInt32 _auto_422_6 = (0);
      for (;_auto_422_6 < _auto_421_5->count;++_auto_422_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,type_7,(((RogueClassType*)(_auto_421_5->data->as_objects[_auto_422_6]))));
        if (type_7->is_used)
        {
          if (((RogueType__is_aspect( type_7 ))))
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_423_8,(type_7->method_list));
              RogueInt32 _auto_424_9 = (0);
              for (;_auto_424_9 < _auto_423_8->count;++_auto_424_9)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_10,(((RogueClassMethod*)(_auto_423_8->data->as_objects[_auto_424_9]))));
                if ((m_10->is_used && !!(m_10->incorporating_classes)))
                {
                  {
                    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_425_11,(m_10->incorporating_classes));
                    RogueInt32 _auto_426_12 = (0);
                    for (;_auto_426_12 < _auto_425_11->count;++_auto_426_12)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassType*,ic_13,(((RogueClassType*)(_auto_425_11->data->as_objects[_auto_426_12]))));
                      if (ic_13->is_used)
                      {
                        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,im_1,(((RogueType__find_method__String( ic_13, ROGUE_ARG(m_10->signature) )))));
                        if (!(im_1->is_used))
                        {
                          traced_new_methods_0 = ((RogueLogical)true);
                          RogueMethod__trace_used_code( im_1 );
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_427_14,(type_7->method_list));
              RogueInt32 _auto_428_15 = (0);
              for (;_auto_428_15 < _auto_427_14->count;++_auto_428_15)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_16,(((RogueClassMethod*)(_auto_427_14->data->as_objects[_auto_428_15]))));
                if (m_16->is_used)
                {
                  {
                    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_429_17,(m_16->overriding_methods));
                    RogueInt32 _auto_430_18 = (0);
                    for (;_auto_430_18 < _auto_429_17->count;++_auto_430_18)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,overriding_m_19,(((RogueClassMethod*)(_auto_429_17->data->as_objects[_auto_430_18]))));
                      if ((!(overriding_m_19->is_used) && overriding_m_19->type_context->is_used))
                      {
                        traced_new_methods_0 = ((RogueLogical)true);
                        RogueMethod__trace_used_code( overriding_m_19 );
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,class_list_2,(((RogueType_List__keeping__Function_Type_RETURNSLogical( ROGUE_ARG(THIS->type_list), ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)(((RogueClassFunction_431*)ROGUE_SINGLETON(Function_431))))) )))));
  ROGUE_DEF_LOCAL_REF(RogueType_List*,aspect_list_3,(((RogueType_List__keeping__Function_Type_RETURNSLogical( ROGUE_ARG(THIS->type_list), ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)(((RogueClassFunction_432*)ROGUE_SINGLETON(Function_432))))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_433_20,(aspect_list_3));
    RogueInt32 _auto_434_21 = (0);
    for (;_auto_434_21 < _auto_433_20->count;++_auto_434_21)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,aspect_22,(((RogueClassType*)(_auto_433_20->data->as_objects[_auto_434_21]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_435_23,(aspect_22->method_list));
        RogueInt32 _auto_436_24 = (0);
        for (;_auto_436_24 < _auto_435_23->count;++_auto_436_24)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,aspect_m_25,(((RogueClassMethod*)(_auto_435_23->data->as_objects[_auto_436_24]))));
          if ((aspect_m_25->is_used && !!(aspect_m_25->incorporating_classes)))
          {
            RogueType_List__clear( ROGUE_ARG(aspect_m_25->incorporating_classes) );
          }
        }
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_437_26,(aspect_list_3));
    RogueInt32 _auto_438_27 = (0);
    for (;_auto_438_27 < _auto_437_26->count;++_auto_438_27)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,aspect_28,(((RogueClassType*)(_auto_437_26->data->as_objects[_auto_438_27]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_439_29,(class_list_2));
        RogueInt32 _auto_440_30 = (0);
        for (;_auto_440_30 < _auto_439_29->count;++_auto_440_30)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,type_31,(((RogueClassType*)(_auto_439_29->data->as_objects[_auto_440_30]))));
          if (((RogueType__instance_of__Type( type_31, aspect_28 ))))
          {
            {
              ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_441_32,(aspect_28->method_list));
              RogueInt32 _auto_442_33 = (0);
              for (;_auto_442_33 < _auto_441_32->count;++_auto_442_33)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassMethod*,aspect_m_34,(((RogueClassMethod*)(_auto_441_32->data->as_objects[_auto_442_33]))));
                if (aspect_m_34->is_used)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,class_m_4,(((RogueType__find_method__String( type_31, ROGUE_ARG(aspect_m_34->signature) )))));
                  if (((!!(class_m_4) && class_m_4->is_used) && !!(aspect_m_34->incorporating_classes)))
                  {
                    RogueType_List__add__Type( ROGUE_ARG(aspect_m_34->incorporating_classes), type_31 );
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

RogueString* RogueProgram__validate_cpp_name__String( RogueClassProgram* THIS, RogueString* _auto_5771 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,name_0,_auto_5771);
  RogueLogical begins_with_code_prefix_1 = (false);
  if (((RogueString__begins_with__String( name_0, ROGUE_ARG(THIS->code_prefix) ))))
  {
    begins_with_code_prefix_1 = ((RogueLogical)true);
    name_0 = ((RogueString*)((RogueString__from__Int32( name_0, ROGUE_ARG(THIS->code_prefix->character_count) ))));
  }
  RogueLogical all_underscores_2 = (true);
  if (((RogueString__ends_with__String( name_0, Rogue_literal_strings[561] ))))
  {
    {
      RogueInt32 i_3 = (0);
      RogueInt32 _auto_246_4 = ((name_0->character_count - 5));
      for (;i_3 <= _auto_246_4;++i_3)
      {
        if (RogueString_character_at(name_0,i_3) != (RogueCharacter)'_')
        {
          all_underscores_2 = ((RogueLogical)false);
          goto _auto_443;
        }
      }
    }
    _auto_443:;
    name_0 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[313], name_0 ))));
  }
  RogueOptionalInt32 i1_5 = (((RogueString__locate__Character_OptionalInt32( name_0, (RogueCharacter)'?', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (i1_5.exists)
  {
    name_0 = ((RogueString*)((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[392], ROGUE_ARG(((RogueString__leftmost__Int32( name_0, ROGUE_ARG(i1_5.value) )))) )))), ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 1)) )))) ))));
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( name_0, (RogueCharacter)'?', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[145], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (i1_5.exists)
  {
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__leftmost__Int32( name_0, ROGUE_ARG(i1_5.value) )))) )))) )))), Rogue_literal_strings[562] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 2)) )))) )))) )))) ))));
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[145], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[172], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (i1_5.exists)
  {
    RogueOptionalInt32 i2_6 = (((RogueProgram__locate_matching_close_specialize__String_OptionalInt32( ROGUE_ARG(THIS), name_0, i1_5 ))));
    if (!(i2_6.exists))
    {
      goto _auto_444;
    }
    ROGUE_DEF_LOCAL_REF(RogueString*,before_7,(((RogueString__from__Int32_Int32( name_0, 0, ROGUE_ARG((i1_5.value - 1)) )))));
    ROGUE_DEF_LOCAL_REF(RogueString*,after_8,(((RogueString__from__Int32( name_0, ROGUE_ARG((i2_6.value + 2)) )))));
    ROGUE_DEF_LOCAL_REF(RogueString*,middle_9,(((RogueString__from__Int32_Int32( name_0, ROGUE_ARG((i1_5.value + 2)), ROGUE_ARG((i2_6.value - 1)) )))));
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], before_7 )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], middle_9 )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], after_8 )))) )))) ))));
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[172], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  _auto_444:;
  i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[158], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (i1_5.exists)
  {
    name_0 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32_Int32( name_0, 0, ROGUE_ARG((i1_5.value - 1)) )))) )))) )))), Rogue_literal_strings[563] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__from__Int32( name_0, ROGUE_ARG((i1_5.value + 2)) )))) )))) )))) ))));
    i1_5 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( name_0, Rogue_literal_strings[158], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  RogueStringBuilder__clear( ROGUE_ARG(THIS->string_buffer) );
  if (begins_with_code_prefix_1)
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->code_prefix) );
  }
  RogueInt32 count_10 = (name_0->character_count);
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_445_12,(name_0));
    RogueInt32 i_13 = (0);
    for (;i_13 < _auto_445_12->character_count;++i_13)
    {
      RogueCharacter ch_11 = (RogueString_character_at(name_0,i_13));
      if ((((RogueCharacter__is_alphanumeric( ch_11 ))) || ch_11 == (RogueCharacter)'$'))
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), ch_11, true );
      }
      else
      {
        switch (ch_11)
        {
          case (RogueCharacter)'!':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[564] );
            break;
          }
          case (RogueCharacter)'%':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[565] );
            break;
          }
          case (RogueCharacter)'&':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[566] );
            break;
          }
          case (RogueCharacter)'*':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[567] );
            break;
          }
          case (RogueCharacter)'+':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[568] );
            break;
          }
          case (RogueCharacter)'-':
          {
            if ((i_13 + 1) < name_0->character_count)
            {
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'>':
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[562] );
                  ++i_13;
                  break;
                }
                default:
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[569] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'.':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[313] );
            break;
          }
          case (RogueCharacter)'/':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[570] );
            break;
          }
          case (RogueCharacter)'<':
          {
            if ((i_13 + 1) < name_0->character_count)
            {
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'=':
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[571] );
                  ++i_13;
                  break;
                }
                default:
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[572] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'=':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[573] );
            break;
          }
          case (RogueCharacter)'>':
          {
            if ((i_13 + 1) < name_0->character_count)
            {
              switch (RogueString_character_at(name_0,(i_13 + 1)))
              {
                case (RogueCharacter)'=':
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[574] );
                  ++i_13;
                  break;
                }
                default:
                {
                  RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[575] );
                }
              }
            }
            break;
          }
          case (RogueCharacter)'^':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[576] );
            break;
          }
          case (RogueCharacter)'|':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[577] );
            break;
          }
          case (RogueCharacter)'~':
          {
            RogueStringBuilder__print__String( ROGUE_ARG(THIS->string_buffer), Rogue_literal_strings[578] );
            break;
          }
          default:
          {
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->string_buffer), (RogueCharacter)'_', true );
          }
        }
      }
    }
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->string_buffer) ))));
}

RogueOptionalInt32 RogueProgram__locate_matching_close_specialize__String_OptionalInt32( RogueClassProgram* THIS, RogueString* st_0, RogueOptionalInt32 i1_1 )
{
  RogueInt32 nesting_level_2 = (1);
  {
    RogueInt32 i_3 = ((i1_1.value + 2));
    RogueInt32 _auto_247_4 = ((st_0->character_count - 2));
    for (;i_3 <= _auto_247_4;++i_3)
    {
      if ((RogueString_character_at(st_0,i_3) == (RogueCharacter)'<' && RogueString_character_at(st_0,(i_3 + 1)) == (RogueCharacter)'<'))
      {
        ++nesting_level_2;
        ++i_3;
      }
      else if ((RogueString_character_at(st_0,i_3) == (RogueCharacter)'>' && RogueString_character_at(st_0,(i_3 + 1)) == (RogueCharacter)'>'))
      {
        --nesting_level_2;
        if (nesting_level_2 == 0)
        {
          return (RogueOptionalInt32)(RogueOptionalInt32( i_3, true ));
        }
        ++i_3;
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

void RogueProgram__write_cpp__String( RogueClassProgram* THIS, RogueString* filepath_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_446_28,(THIS->type_list));
    RogueInt32 _auto_447_29 = (0);
    for (;_auto_447_29 < _auto_446_28->count;++_auto_447_29)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_30,(((RogueClassType*)(_auto_446_28->data->as_objects[_auto_447_29]))));
      RogueType__assign_cpp_name( type_30 );
    }
  }
  THIS->type_NativeArray->cpp_class_name = Rogue_literal_strings[579];
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_448_31,(THIS->type_list));
    RogueInt32 _auto_449_32 = (0);
    for (;_auto_449_32 < _auto_448_31->count;++_auto_449_32)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_33,(((RogueClassType*)(_auto_448_31->data->as_objects[_auto_449_32]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_450_34,(type_33->global_method_list));
        RogueInt32 _auto_451_35 = (0);
        for (;_auto_451_35 < _auto_450_34->count;++_auto_451_35)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_36,(((RogueClassMethod*)(_auto_450_34->data->as_objects[_auto_451_35]))));
          RogueMethod__assign_cpp_name( r_36 );
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_452_37,(type_33->method_list));
        RogueInt32 _auto_453_38 = (0);
        for (;_auto_453_38 < _auto_452_37->count;++_auto_453_38)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_39,(((RogueClassMethod*)(_auto_452_37->data->as_objects[_auto_453_38]))));
          RogueMethod__assign_cpp_name( m_39 );
        }
      }
    }
  }
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[583] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[584] )))) )))) );
  ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,writer_1,(((RogueCPPWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCPPWriter*,ROGUE_CREATE_OBJECT(CPPWriter))), ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[585] )))) )))));
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[586] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[587] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[586] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[588] );
  {
    ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_457_40,(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->plugins));
    RogueInt32 _auto_458_41 = (0);
    for (;_auto_458_41 < _auto_457_40->count;++_auto_458_41)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_42,(((RogueClassPlugin*)(_auto_457_40->data->as_objects[_auto_458_41]))));
      RoguePlugin__start_header_file__Object( plugin_42, ROGUE_ARG(((RogueObject*)(writer_1))) );
    }
  }
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[589] );
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 0))) ? (ROGUE_ARG(Rogue_literal_strings[590])) : ROGUE_ARG(Rogue_literal_strings[591]))) );
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[592] );
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 1))) ? (ROGUE_ARG(Rogue_literal_strings[590])) : ROGUE_ARG(Rogue_literal_strings[591]))) );
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[593] );
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((((((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_mode == 2))) ? (ROGUE_ARG(Rogue_literal_strings[590])) : ROGUE_ARG(Rogue_literal_strings[591]))) );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[594] );
  RogueCPPWriter__println__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[595] )))), ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->gc_threshold) );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[596] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[597] );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_459_43,(THIS->native_header));
    RogueInt32 _auto_460_44 = (0);
    for (;_auto_460_44 < _auto_459_43->count;++_auto_460_44)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_45,(((RogueString*)(_auto_459_43->data->as_objects[_auto_460_44]))));
      RogueCPPWriter__println__String( writer_1, line_45 );
    }
  }
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[598] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[599] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_461_46,(THIS->type_list));
    RogueInt32 _auto_462_47 = (0);
    for (;_auto_462_47 < _auto_461_46->count;++_auto_462_47)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_48,(((RogueClassType*)(_auto_461_46->data->as_objects[_auto_462_47]))));
      if ((!(((RogueType__omit_output( type_48 )))) && !(((RogueType__is_primitive( type_48 ))))))
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[600] )))), ROGUE_ARG(type_48->cpp_class_name) )))), Rogue_literal_strings[601] )))), ROGUE_ARG(type_48->name) );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[602] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_463_49,(THIS->type_list));
    RogueInt32 _auto_464_50 = (0);
    for (;_auto_464_50 < _auto_463_49->count;++_auto_464_50)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_51,(((RogueClassType*)(_auto_463_49->data->as_objects[_auto_464_50]))));
      if ((((RogueType__is_compound( type_51 ))) && !(((RogueType__omit_output( type_51 ))))))
      {
        RogueType__print_data_definition__CPPWriter( type_51, writer_1 );
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[641] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_465_52,(THIS->type_list));
    RogueInt32 _auto_466_53 = (0);
    for (;_auto_466_53 < _auto_465_52->count;++_auto_466_53)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_54,(((RogueClassType*)(_auto_465_52->data->as_objects[_auto_466_53]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_467_55,(type_54->global_list));
        RogueInt32 _auto_468_56 = (0);
        for (;_auto_468_56 < _auto_467_55->count;++_auto_468_56)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_57,(((RogueClassProperty*)(_auto_467_55->data->as_objects[_auto_468_56]))));
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[642] )))), ROGUE_ARG(g_57->_type) )))), Rogue_literal_strings[643] );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_54->cpp_name) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(g_57->cpp_name) )))), Rogue_literal_strings[179] );
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[644] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_469_58,(THIS->type_list));
    RogueInt32 _auto_470_59 = (0);
    for (;_auto_470_59 < _auto_469_58->count;++_auto_470_59)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_60,(((RogueClassType*)(_auto_469_58->data->as_objects[_auto_470_59]))));
      if ((!(((RogueType__is_compound( type_60 )))) && !(((RogueType__omit_output( type_60 ))))))
      {
        RogueType__print_data_definition__CPPWriter( type_60, writer_1 );
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[645] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_471_61,(THIS->type_list));
    RogueInt32 _auto_472_62 = (0);
    for (;_auto_472_62 < _auto_471_61->count;++_auto_472_62)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_63,(((RogueClassType*)(_auto_471_61->data->as_objects[_auto_472_62]))));
      if ((!(((RogueType__omit_output( type_63 )))) || (((RogueType__is_native( type_63 ))) && !(type_63->is_array))))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[646] );
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_63->cpp_name) )))), Rogue_literal_strings[179] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[647] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_473_64,(THIS->type_list));
    RogueInt32 _auto_474_65 = (0);
    for (;_auto_474_65 < _auto_473_64->count;++_auto_474_65)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_66,(((RogueClassType*)(_auto_473_64->data->as_objects[_auto_474_65]))));
      RogueType__print_global_method_prototypes__CPPWriter( type_66, writer_1 );
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[649] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_475_67,(THIS->type_list));
    RogueInt32 _auto_476_68 = (0);
    for (;_auto_476_68 < _auto_475_67->count;++_auto_476_68)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_69,(((RogueClassType*)(_auto_475_67->data->as_objects[_auto_476_68]))));
      RogueType__print_method_prototypes__CPPWriter( type_69, writer_1 );
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[650] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[651] );
  RogueCPPWriter__println( writer_1 );
  ROGUE_DEF_LOCAL_REF(RogueString_List*,native_method_signature_list_2,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassTable_String_Method_*,native_method_signature_lookup_3,(((RogueTable_String_Method___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Method_*,ROGUE_CREATE_OBJECT(Table_String_Method_))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_477_70,(THIS->type_list));
    RogueInt32 _auto_478_71 = (0);
    for (;_auto_478_71 < _auto_477_70->count;++_auto_478_71)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_72,(((RogueClassType*)(_auto_477_70->data->as_objects[_auto_478_71]))));
      if (type_72->is_used)
      {
        RogueType__determine_cpp_method_typedefs__String_List_Table_String_Method_( type_72, native_method_signature_list_2, native_method_signature_lookup_3 );
      }
    }
  }
  if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->all_methods_callable_dynamically)
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_479_73,(native_method_signature_list_2));
      RogueInt32 _auto_480_74 = (0);
      for (;_auto_480_74 < _auto_479_73->count;++_auto_480_74)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,sig_75,(((RogueString*)(_auto_479_73->data->as_objects[_auto_480_74]))));
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_4,(((RogueTable_String_Method___get__String( native_method_signature_lookup_3, sig_75 )))));
        if ((m_4->called_dynamically || ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->all_methods_callable_dynamically))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[642] )))), ROGUE_ARG(m_4->_return_type) )))), Rogue_literal_strings[654] )))), ROGUE_ARG(m_4->cpp_typedef) );
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[655] )))), ROGUE_ARG(m_4->type_context) )))), Rogue_literal_strings[648] );
          {
            ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_481_76,(m_4->parameters));
            RogueInt32 i_77 = (0);
            for (;i_77 < _auto_481_76->count;++i_77)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_5,(((RogueClassLocal*)(m_4->parameters->data->as_objects[i_77]))));
              RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[625] )))), ROGUE_ARG(p_5->_type) )))), Rogue_literal_strings[656] )))), i_77 );
            }
          }
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[657] );
        }
      }
    }
    RogueCPPWriter__println( writer_1 );
  }
  {
    ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_482_78,(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->plugins));
    RogueInt32 _auto_483_79 = (0);
    for (;_auto_483_79 < _auto_482_78->count;++_auto_483_79)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_80,(((RogueClassPlugin*)(_auto_482_78->data->as_objects[_auto_483_79]))));
      RoguePlugin__finish_header_file__Object( plugin_80, ROGUE_ARG(((RogueObject*)(writer_1))) );
    }
  }
  RogueCPPWriter__close( writer_1 );
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[583] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[658] )))) )))) );
  writer_1 = ((RogueClassCPPWriter*)((RogueCPPWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCPPWriter*,ROGUE_CREATE_OBJECT(CPPWriter))), ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[560] )))) ))));
  ROGUE_DEF_LOCAL_REF(RogueString*,base_filename_6,(filepath_0));
  if (((RogueString__contains__Character( base_filename_6, (RogueCharacter)'/' ))))
  {
    base_filename_6 = ((RogueString*)((RogueString__after_last__Character( base_filename_6, (RogueCharacter)'/' ))));
  }
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[659] );
  RogueCPPWriter__println__String( writer_1, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[660] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_filename_6 )))) )))), Rogue_literal_strings[661] )))) )))) );
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_484_81,(THIS->native_code));
    RogueInt32 _auto_485_82 = (0);
    for (;_auto_485_82 < _auto_484_81->count;++_auto_485_82)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_83,(((RogueString*)(_auto_484_81->data->as_objects[_auto_485_82]))));
      RogueCPPWriter__println__String( writer_1, line_83 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_486_84,(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->plugins));
    RogueInt32 _auto_487_85 = (0);
    for (;_auto_487_85 < _auto_486_84->count;++_auto_487_85)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_86,(((RogueClassPlugin*)(_auto_486_84->data->as_objects[_auto_487_85]))));
      RoguePlugin__start_code_file__Object( plugin_86, ROGUE_ARG(((RogueObject*)(writer_1))) );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_488_87,(native_method_signature_list_2));
    RogueInt32 _auto_489_88 = (0);
    for (;_auto_489_88 < _auto_488_87->count;++_auto_489_88)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,sig_89,(((RogueString*)(_auto_488_87->data->as_objects[_auto_489_88]))));
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[662] )))), ROGUE_ARG(((RogueString__before_first__String( sig_89, Rogue_literal_strings[663] )))) )))), Rogue_literal_strings[664] );
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueTable_String_Method___get__String( native_method_signature_lookup_3, sig_89 )))->cpp_typedef) )))), Rogue_literal_strings[12] );
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueString__after_first__String( sig_89, Rogue_literal_strings[663] )))) )))), Rogue_literal_strings[179] );
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_490_90,(native_method_signature_list_2));
    RogueInt32 _auto_491_91 = (0);
    for (;_auto_491_91 < _auto_490_90->count;++_auto_491_91)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,sig_92,(((RogueString*)(_auto_490_90->data->as_objects[_auto_491_91]))));
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_7,(((RogueTable_String_Method___get__String( native_method_signature_lookup_3, sig_92 )))));
      if ((m_7->called_dynamically || ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->all_methods_callable_dynamically))
      {
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(m_7->_return_type) )))), Rogue_literal_strings[654] )))), ROGUE_ARG(m_7->cpp_typedef) );
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[655] )))), ROGUE_ARG(m_7->type_context) )))), Rogue_literal_strings[648] );
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_492_93,(m_7->parameters));
          RogueInt32 i_94 = (0);
          for (;i_94 < _auto_492_93->count;++i_94)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_8,(((RogueClassLocal*)(m_7->parameters->data->as_objects[i_94]))));
            RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[625] )))), ROGUE_ARG(p_8->_type) )))), Rogue_literal_strings[656] )))), i_94 );
          }
        }
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[628] );
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[336] );
        if (!!(m_7->_return_type))
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[665] );
        }
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[666] )))), ROGUE_ARG(m_7->cpp_typedef) );
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[667] );
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_493_95,(m_7->parameters));
          RogueInt32 i_96 = (0);
          for (;i_96 < _auto_493_95->count;++i_96)
          {
            RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[668] )))), i_96 );
          }
        }
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[657] );
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[72] );
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[641] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_494_97,(THIS->type_list));
    RogueInt32 _auto_495_98 = (0);
    for (;_auto_495_98 < _auto_494_97->count;++_auto_495_98)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_99,(((RogueClassType*)(_auto_494_97->data->as_objects[_auto_495_98]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_496_100,(type_99->global_list));
        RogueInt32 _auto_497_101 = (0);
        for (;_auto_497_101 < _auto_496_100->count;++_auto_497_101)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_102,(((RogueClassProperty*)(_auto_496_100->data->as_objects[_auto_497_101]))));
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(g_102->_type) )))), Rogue_literal_strings[643] );
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_99->cpp_name) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(g_102->cpp_name) );
          RogueCPPWriter__print_default_value__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[632] )))), ROGUE_ARG(g_102->_type) );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[179] );
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_498_103,(THIS->type_list));
    RogueInt32 _auto_499_104 = (0);
    for (;_auto_499_104 < _auto_498_103->count;++_auto_499_104)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_105,(((RogueClassType*)(_auto_498_103->data->as_objects[_auto_499_104]))));
      if (((((RogueType__has_object_references( type_105 ))) && !(((RogueType__is_reference_array( type_105 ))))) && !(((RogueType__is_aspect( type_105 ))))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_9,(type_105->cpp_name));
        if ((type_105->is_array && ((RogueType__is_compound( ROGUE_ARG(type_105->_element_type) )))))
        {
          trace_name_9 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_105->name) ))));
        }
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[669] )))), trace_name_9 )))), Rogue_literal_strings[670] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_500_106,(THIS->type_list));
    RogueInt32 _auto_501_107 = (0);
    for (;_auto_501_107 < _auto_500_106->count;++_auto_501_107)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_108,(((RogueClassType*)(_auto_500_106->data->as_objects[_auto_501_107]))));
      if (((((RogueType__has_object_references( type_108 ))) && !(((RogueType__is_reference_array( type_108 ))))) && !(((RogueType__is_aspect( type_108 ))))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_10,(type_108->cpp_name));
        if ((type_108->is_array && ((RogueType__is_compound( ROGUE_ARG(type_108->_element_type) )))))
        {
          trace_name_10 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_108->name) ))));
        }
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[669] )))), trace_name_10 )))), Rogue_literal_strings[671] );
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
        writer_1->indent += 2;
        if (((RogueType__is_compound( type_108 ))))
        {
          RogueLogical uses_link_11 = (false);
          {
            ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_502_109,(type_108->property_list));
            RogueInt32 _auto_503_110 = (0);
            for (;_auto_503_110 < _auto_502_109->count;++_auto_503_110)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_111,(((RogueClassProperty*)(_auto_502_109->data->as_objects[_auto_503_110]))));
              if (((RogueType__is_reference( ROGUE_ARG(p_111->_type) ))))
              {
                uses_link_11 = ((RogueLogical)true);
                goto _auto_504;
              }
            }
          }
          _auto_504:;
          if (uses_link_11)
          {
            RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[672] );
          }
          RogueProgram__print_property_trace_code__Type_CPPWriter( ROGUE_ARG(THIS), type_108, writer_1 );
        }
        else if (type_108->is_array)
        {
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[680] );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_1, ROGUE_ARG(type_108->_element_type) )))), Rogue_literal_strings[681] );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[682] );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[683] )))), ROGUE_ARG(type_108->_element_type->cpp_class_name) )))), Rogue_literal_strings[684] );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[685] );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[686] )))), ROGUE_ARG(type_108->_element_type->cpp_name) )))), Rogue_literal_strings[687] );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[72] );
        }
        else
        {
          RogueLogical uses_link_12 = (false);
          {
            ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_505_112,(type_108->property_list));
            RogueInt32 _auto_506_113 = (0);
            for (;_auto_506_113 < _auto_505_112->count;++_auto_506_113)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_114,(((RogueClassProperty*)(_auto_505_112->data->as_objects[_auto_506_113]))));
              if (((RogueType__is_reference( ROGUE_ARG(p_114->_type) ))))
              {
                uses_link_12 = ((RogueLogical)true);
                goto _auto_507;
              }
            }
          }
          _auto_507:;
          if (uses_link_12)
          {
            RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[672] );
          }
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[688] );
          RogueProgram__print_property_trace_code__Type_CPPWriter( ROGUE_ARG(THIS), type_108, writer_1 );
        }
        writer_1->indent -= 2;
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[72] );
        RogueCPPWriter__println( writer_1 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[689] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_508_115,(THIS->type_list));
    RogueInt32 i_116 = (0);
    for (;i_116 < _auto_508_115->count;++i_116)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_13,(((RogueClassType*)(THIS->type_list->data->as_objects[i_116]))));
      if (i_116 > 0)
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[7] );
        if ((i_116 & 15) == 0)
        {
          RogueCPPWriter__println( writer_1 );
        }
      }
      RogueCPPWriter__print__Int32( writer_1, ROGUE_ARG(((RogueProgram__add_literal_string__String( ROGUE_ARG(THIS), ROGUE_ARG(type_13->name) )))) );
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[690] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  RogueLogical first_14 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_509_117,(THIS->type_list));
    RogueInt32 _auto_510_118 = (0);
    for (;_auto_510_118 < _auto_509_117->count;++_auto_510_118)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_119,(((RogueClassType*)(_auto_509_117->data->as_objects[_auto_510_118]))));
      if (first_14)
      {
        first_14 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
      }
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_15,(((RogueType__find_method__String( type_119, Rogue_literal_strings[467] )))));
      if ((((!!(m_15) && !(((RogueType__omit_output( type_119 ))))) && m_15->is_used) && m_15->statements->count > 1))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[691] );
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_15->cpp_name) );
      }
      else
      {
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[692] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  first_14 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_511_120,(THIS->type_list));
    RogueInt32 _auto_512_121 = (0);
    for (;_auto_512_121 < _auto_511_120->count;++_auto_512_121)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_122,(((RogueClassType*)(_auto_511_120->data->as_objects[_auto_512_121]))));
      if (first_14)
      {
        first_14 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
      }
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_16,(((RogueType__find_method__String( type_122, Rogue_literal_strings[553] )))));
      if ((((!!(m_16) && !(((RogueType__omit_output( type_122 ))))) && m_16->is_used) && m_16->statements->count > 1))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[691] );
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_16->cpp_name) );
      }
      else
      {
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[693] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  first_14 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_513_123,(THIS->type_list));
    RogueInt32 _auto_514_124 = (0);
    for (;_auto_514_124 < _auto_513_123->count;++_auto_514_124)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_125,(((RogueClassType*)(_auto_513_123->data->as_objects[_auto_514_124]))));
      if (first_14)
      {
        first_14 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
      }
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_17,(((RogueType__find_method__String( type_125, Rogue_literal_strings[469] )))));
      if ((((!!(m_17) && !(((RogueType__omit_output( type_125 ))))) && m_17->is_used) && !!(m_17->statements->count)))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[694] );
        RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_17->cpp_name) );
      }
      else
      {
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[695] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  first_14 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_515_126,(THIS->type_list));
    RogueInt32 _auto_516_127 = (0);
    for (;_auto_516_127 < _auto_515_126->count;++_auto_516_127)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_128,(((RogueClassType*)(_auto_515_126->data->as_objects[_auto_516_127]))));
      if (first_14)
      {
        first_14 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
      }
      if (((RogueType__is_reference( type_128 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_18,(((RogueType__find_method__String( type_128, Rogue_literal_strings[471] )))));
        if ((((!!(m_18) && !(((RogueType__omit_output( type_128 ))))) && m_18->is_used) && !!(m_18->statements->count)))
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[696] );
          RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_18->cpp_name) );
        }
        else
        {
          RogueCPPWriter__print__Int32( writer_1, 0 );
        }
      }
      else
      {
        RogueCPPWriter__print__Int32( writer_1, 0 );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[697] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  first_14 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_517_129,(THIS->type_list));
    RogueInt32 _auto_518_130 = (0);
    for (;_auto_518_130 < _auto_517_129->count;++_auto_518_130)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_131,(((RogueClassType*)(_auto_517_129->data->as_objects[_auto_518_130]))));
      if (first_14)
      {
        first_14 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
      }
      if ((((RogueType__has_object_references( type_131 ))) && !(((RogueType__is_aspect( type_131 ))))))
      {
        if (((RogueType__is_reference_array( type_131 ))))
        {
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[698] );
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,trace_name_19,(type_131->cpp_name));
          if ((type_131->is_array && ((RogueType__is_compound( ROGUE_ARG(type_131->_element_type) )))))
          {
            trace_name_19 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(type_131->name) ))));
          }
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[274] )))), trace_name_19 )))), Rogue_literal_strings[699] );
        }
      }
      else if (((RogueType__is_class( type_131 ))))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[700] );
      }
      else
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[591] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[701] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[672] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[702] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[703] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_519_132,(THIS->type_list));
    RogueInt32 _auto_520_133 = (0);
    for (;_auto_520_133 < _auto_519_132->count;++_auto_520_133)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_134,(((RogueClassType*)(_auto_519_132->data->as_objects[_auto_520_133]))));
      if (((RogueType__has_global_references( type_134 ))))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_521_135,(type_134->global_list));
          RogueInt32 _auto_522_136 = (0);
          for (;_auto_522_136 < _auto_521_135->count;++_auto_522_136)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,g_137,(((RogueClassProperty*)(_auto_521_135->data->as_objects[_auto_522_136]))));
            if ((((RogueType__is_reference( ROGUE_ARG(g_137->_type) ))) || ((RogueType__has_object_references( ROGUE_ARG(g_137->_type) )))))
            {
              if ((((RogueType__is_reference( ROGUE_ARG(g_137->_type) ))) && !(g_137->_type->is_array)))
              {
                RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[704] )))), ROGUE_ARG(type_134->cpp_name) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(g_137->cpp_name) );
                RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[675] );
              }
              else
              {
                ROGUE_DEF_LOCAL_REF(RogueString*,trace_class_name_20,(Rogue_literal_strings[10]));
                if (g_137->_type->is_array)
                {
                  if ((((RogueType__is_compound( ROGUE_ARG(g_137->_type->_element_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(g_137->_type->_element_type) )))))
                  {
                    trace_class_name_20 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(g_137->_type->name) ))));
                  }
                  else
                  {
                    trace_class_name_20 = ((RogueString*)Rogue_literal_strings[580]);
                  }
                }
                else
                {
                  trace_class_name_20 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(g_137->_type->cpp_name) ))));
                }
                RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[677] );
                if (!(((RogueType__is_reference( ROGUE_ARG(g_137->_type) )))))
                {
                  RogueCPPWriter__print__Character( writer_1, (RogueCharacter)'&' );
                }
                RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[274] )))), ROGUE_ARG(type_134->cpp_name) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(g_137->cpp_name) );
                RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[678] )))), trace_class_name_20 )))), Rogue_literal_strings[679] );
              }
            }
          }
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[705] );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[72] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[706] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  RogueInt32 table_index_21 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_523_138,(THIS->type_list));
    RogueInt32 _auto_524_139 = (0);
    for (;_auto_524_139 < _auto_523_138->count;++_auto_524_139)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_140,(((RogueClassType*)(_auto_523_138->data->as_objects[_auto_524_139]))));
      if (type_140->is_used)
      {
        table_index_21 = ((RogueInt32)((RogueType__print_dynamic_method_table_entries__Int32_CPPWriter( type_140, table_index_21, writer_1 ))));
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  ROGUE_DEF_LOCAL_REF(RogueInt32_List*,info_22,(((RogueInt32_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueInt32_List*,ROGUE_CREATE_OBJECT(Int32_List))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_530_141,(THIS->type_list));
    RogueInt32 _auto_531_142 = (0);
    for (;_auto_531_142 < _auto_530_141->count;++_auto_531_142)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_143,(((RogueClassType*)(_auto_530_141->data->as_objects[_auto_531_142]))));
      RogueType__collect_type_info__Int32_List( type_143, info_22 );
    }
  }
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[711] )))), ROGUE_ARG(info_22->count) )))), Rogue_literal_strings[712] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[713] );
  first_14 = ((RogueLogical)true);
  RogueInt32 items_23 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueInt32_List*,_auto_532_144,(info_22));
    RogueInt32 _auto_533_145 = (0);
    for (;_auto_533_145 < _auto_532_144->count;++_auto_533_145)
    {
      RogueInt32 n_146 = (_auto_532_144->data->as_int32s[_auto_533_145]);
      if (first_14)
      {
        first_14 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__print_literal_character__Character_Logical( writer_1, (RogueCharacter)',', false );
      }
      ++items_23;
      if (items_23 == 25)
      {
        RogueCPPWriter__println( writer_1 );
        items_23 = ((RogueInt32)0);
      }
      RogueCPPWriter__print__Int32( writer_1, n_146 );
    }
  }
  if (items_23 > 0)
  {
    RogueCPPWriter__println( writer_1 );
  }
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[721] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  first_14 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_534_147,(THIS->type_list));
    RogueInt32 _auto_535_148 = (0);
    for (;_auto_535_148 < _auto_534_147->count;++_auto_535_148)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_149,(((RogueClassType*)(_auto_534_147->data->as_objects[_auto_535_148]))));
      if ((((RogueType__is_class( type_149 ))) || ((RogueType__is_compound( type_149 )))))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_536_150,(type_149->global_list));
          RogueInt32 _auto_537_151 = (0);
          for (;_auto_537_151 < _auto_536_150->count;++_auto_537_151)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_152,(((RogueClassProperty*)(_auto_536_150->data->as_objects[_auto_537_151]))));
            if (first_14)
            {
              first_14 = ((RogueLogical)false);
            }
            else
            {
              RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
            }
            if (((RogueProperty__is_native( p_152 ))))
            {
              RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[591] );
            }
            else
            {
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[722] )))), ROGUE_ARG(p_152->type_context->cpp_name) )))), Rogue_literal_strings[313] );
            }
            RogueCPPWriter__print__String( writer_1, ROGUE_ARG(p_152->cpp_name) );
          }
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[723] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  first_14 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_538_153,(THIS->type_list));
    RogueInt32 _auto_539_154 = (0);
    for (;_auto_539_154 < _auto_538_153->count;++_auto_539_154)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_155,(((RogueClassType*)(_auto_538_153->data->as_objects[_auto_539_154]))));
      if ((((RogueType__is_class( type_155 ))) || ((RogueType__is_compound( type_155 )))))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_540_156,(type_155->property_list));
          RogueInt32 _auto_541_157 = (0);
          for (;_auto_541_157 < _auto_540_156->count;++_auto_541_157)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_158,(((RogueClassProperty*)(_auto_540_156->data->as_objects[_auto_541_157]))));
            if (first_14)
            {
              first_14 = ((RogueLogical)false);
            }
            else
            {
              RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
            }
            if (((RogueProperty__is_native( p_158 ))))
            {
              RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[591] );
            }
            else
            {
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[724] )))), ROGUE_ARG(type_155->cpp_class_name) )))), Rogue_literal_strings[725] )))), ROGUE_ARG(p_158->cpp_name) );
            }
          }
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[726] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[712] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  first_14 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_542_159,(THIS->type_list));
    RogueInt32 _auto_543_160 = (0);
    for (;_auto_543_160 < _auto_542_159->count;++_auto_543_160)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_161,(((RogueClassType*)(_auto_542_159->data->as_objects[_auto_543_160]))));
      if (first_14)
      {
        first_14 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
      }
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[727] )))), ROGUE_ARG(type_161->cpp_class_name) )))), Rogue_literal_strings[12] );
    }
  }
  if (items_23 > 0)
  {
    RogueCPPWriter__println( writer_1 );
  }
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[728] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[712] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  first_14 = ((RogueLogical)true);
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_544_162,(THIS->type_list));
    RogueInt32 _auto_545_163 = (0);
    for (;_auto_545_163 < _auto_544_162->count;++_auto_545_163)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_164,(((RogueClassType*)(_auto_544_162->data->as_objects[_auto_545_163]))));
      if (first_14)
      {
        first_14 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[7] );
      }
      RogueCPPWriter__print__Int32( writer_1, ROGUE_ARG(type_164->attributes->flags) );
    }
  }
  if (items_23 > 0)
  {
    RogueCPPWriter__println( writer_1 );
  }
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[640] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[729] )))), 1 )))), Rogue_literal_strings[179] );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[730] )))), 1 )))), Rogue_literal_strings[731] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[732] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[179] );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[733] )))), ROGUE_ARG(THIS->type_list->count) )))), Rogue_literal_strings[731] );
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_546_165,(THIS->type_list));
    RogueInt32 _auto_547_166 = (0);
    for (;_auto_547_166 < _auto_546_165->count;++_auto_547_166)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_167,(((RogueClassType*)(_auto_546_165->data->as_objects[_auto_547_166]))));
      if ((!(((RogueType__omit_output( type_167 )))) || (((RogueType__is_native( type_167 ))) && !(type_167->is_array))))
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[734] );
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(type_167->cpp_name) )))), Rogue_literal_strings[179] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[735] )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->count) )))), Rogue_literal_strings[179] );
  RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[736] )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->count) )))), Rogue_literal_strings[731] );
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_548_168,(THIS->type_list));
    RogueInt32 _auto_549_169 = (0);
    for (;_auto_549_169 < _auto_548_168->count;++_auto_549_169)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_170,(((RogueClassType*)(_auto_548_168->data->as_objects[_auto_549_169]))));
      RogueType__print_global_method_definitions__CPPWriter( type_170, writer_1 );
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_550_171,(THIS->type_list));
    RogueInt32 _auto_551_172 = (0);
    for (;_auto_551_172 < _auto_550_171->count;++_auto_551_172)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_173,(((RogueClassType*)(_auto_550_171->data->as_objects[_auto_551_172]))));
      RogueType__print_method_definitions__CPPWriter( type_173, writer_1 );
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[752] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[753] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_552_174,(THIS->type_list));
    RogueInt32 _auto_553_175 = (0);
    for (;_auto_553_175 < _auto_552_174->count;++_auto_553_175)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_176,(((RogueClassType*)(_auto_552_174->data->as_objects[_auto_553_175]))));
      if ((!(((RogueType__omit_output( type_176 )))) || (((RogueType__is_native( type_176 ))) && !(type_176->is_array))))
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[582] )))), ROGUE_ARG(type_176->cpp_name) )))), Rogue_literal_strings[754] )))), ROGUE_ARG(type_176->index) )))), Rogue_literal_strings[755] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_554_177,(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list));
    RogueInt32 i_178 = (0);
    for (;i_178 < _auto_554_177->count;++i_178)
    {
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[756] )))), i_178 );
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[757] );
      ROGUE_DEF_LOCAL_REF(RogueString*,st_24,(((RogueString*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->literal_string_list->data->as_objects[i_178]))));
      ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,encoded_count_25,(((RogueCPPWriter__print_literal_string__String( writer_1, st_24 )))));
      RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[625] )))), ROGUE_ARG(st_24->byte_count) );
      RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[758] );
    }
  }
  RogueCPPWriter__println( writer_1 );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[72] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[759] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[170] );
  writer_1->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_555_179,(THIS->type_list));
    RogueInt32 _auto_556_180 = (0);
    for (;_auto_556_180 < _auto_555_179->count;++_auto_556_180)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_181,(((RogueClassType*)(_auto_555_179->data->as_objects[_auto_556_180]))));
      if (type_181->is_used)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_26,(((RogueType__find_global_method__String( type_181, Rogue_literal_strings[464] )))));
        if ((!!(m_26) && ((void*)m_26->type_context) == ((void*)type_181)))
        {
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, ROGUE_ARG(m_26->cpp_name) )))), Rogue_literal_strings[760] );
        }
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[761] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[762] );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_557_182,(THIS->type_list));
    RogueInt32 _auto_558_183 = (0);
    for (;_auto_558_183 < _auto_557_182->count;++_auto_558_183)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_184,(((RogueClassType*)(_auto_557_182->data->as_objects[_auto_558_183]))));
      if (((!(((RogueType__omit_output( type_184 )))) && ((RogueType__is_singleton( type_184 )))) && ((RogueType__is_essential( type_184 )))))
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[763] )))), ROGUE_ARG(type_184->cpp_name) )))), Rogue_literal_strings[657] );
      }
    }
  }
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[764] );
  writer_1->indent -= 2;
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[72] );
  RogueCPPWriter__println( writer_1 );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[765] );
  RogueLogical uses_tasks_27 = (((RogueProgram__is_type_used__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), Rogue_literal_strings[766] ))));
  if (uses_tasks_27)
  {
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[767] );
  }
  else
  {
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[768] );
  }
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[769] );
  if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->generate_main)
  {
    RogueCPPWriter__println( writer_1 );
    RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[770] );
  }
  {
    ROGUE_DEF_LOCAL_REF(RoguePlugin_List*,_auto_559_185,(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->plugins));
    RogueInt32 _auto_560_186 = (0);
    for (;_auto_560_186 < _auto_559_185->count;++_auto_560_186)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassPlugin*,plugin_187,(((RogueClassPlugin*)(_auto_559_185->data->as_objects[_auto_560_186]))));
      RoguePlugin__finish_code_file__Object( plugin_187, ROGUE_ARG(((RogueObject*)(writer_1))) );
    }
  }
  RogueCPPWriter__close( writer_1 );
  if (((RogueTable_String_Logical___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->compile_targets), Rogue_literal_strings[267] ))))
  {
    RogueProgram__cy_write__String( ROGUE_ARG(THIS), filepath_0 );
  }
}

void RogueProgram__print_property_trace_code__Type_CPPWriter( RogueClassProgram* THIS, RogueClassType* type_0, RogueClassCPPWriter* writer_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_561_3,(type_0->property_list));
    RogueInt32 _auto_562_4 = (0);
    for (;_auto_562_4 < _auto_561_3->count;++_auto_562_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_5,(((RogueClassProperty*)(_auto_561_3->data->as_objects[_auto_562_4]))));
      if ((((RogueType__is_reference( ROGUE_ARG(p_5->_type) ))) || ((RogueType__has_object_references( ROGUE_ARG(p_5->_type) )))))
      {
        if ((((RogueType__is_reference( ROGUE_ARG(p_5->_type) ))) && !(p_5->_type->is_array)))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[673] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[674] )))), ROGUE_ARG(p_5->cpp_name) );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[675] );
        }
        else if (((RogueType__is_compound( ROGUE_ARG(p_5->_type) ))))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[274] )))), ROGUE_ARG(p_5->_type->cpp_name) )))), Rogue_literal_strings[676] );
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[666] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[674] )))), ROGUE_ARG(p_5->cpp_name) );
          RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[657] );
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,trace_class_name_2,(Rogue_literal_strings[10]));
          if (p_5->_type->is_array)
          {
            if ((((RogueType__is_compound( ROGUE_ARG(p_5->_type->_element_type) ))) && ((RogueType__has_object_references( ROGUE_ARG(p_5->_type->_element_type) )))))
            {
              trace_class_name_2 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->_type->name) ))));
            }
            else
            {
              trace_class_name_2 = ((RogueString*)Rogue_literal_strings[580]);
            }
          }
          else
          {
            trace_class_name_2 = ((RogueString*)((RogueProgram__validate_cpp_name__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(p_5->_type->cpp_name) ))));
          }
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[677] );
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[666] )))), ROGUE_ARG(type_0->cpp_class_name) )))), Rogue_literal_strings[674] )))), ROGUE_ARG(p_5->cpp_name) );
          RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[678] )))), trace_class_name_2 )))), Rogue_literal_strings[679] );
        }
      }
    }
  }
}

void RogueProgram__cy_on_header_end__Object( RogueClassProgram* THIS, RogueObject* code_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,writer_1,(((RogueClassCPPWriter*)(RogueObject_as(code_0,RogueTypeCPPWriter)))));
  if (((void*)writer_1) == ((void*)NULL))
  {
    return;
  }
  RogueProgram__cy_write_delegate_thunk_pointers__CPPWriter_String_String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCPPWriter*)(RogueObject_as(code_0,RogueTypeCPPWriter)))), Rogue_literal_strings[642], Rogue_literal_strings[179] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[1408] );
}

void RogueProgram__cy_on_code_end__Object( RogueClassProgram* THIS, RogueObject* code_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,writer_1,(((RogueClassCPPWriter*)(RogueObject_as(code_0,RogueTypeCPPWriter)))));
  if (((void*)writer_1) == ((void*)NULL))
  {
    return;
  }
  if (!(THIS->cy_first_code_file))
  {
    return;
  }
  THIS->cy_first_code_file = false;
  RogueProgram__cy_write_delegate_thunk_pointers__CPPWriter_String_String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCPPWriter*)(RogueObject_as(code_0,RogueTypeCPPWriter)))), Rogue_literal_strings[0], Rogue_literal_strings[179] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[1409] );
  RogueCPPWriter__println__String( writer_1, Rogue_literal_strings[1410] );
}

void RogueProgram__cy_write_delegate_thunk_pointers__CPPWriter_String_String( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueString* prefix_1, RogueString* suffix_2 )
{
  if (!(!!(writer_0)))
  {
    return;
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_Type_CyClass_*,_auto_569_4,(((RogueTable_Type_CyClass___value_reader( ROGUE_ARG(THIS->cy_delegates) )))));
    while (((RogueTableValueReader_Type_CyClass___has_another( _auto_569_4 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,cyclass_5,(((RogueTableValueReader_Type_CyClass___read( _auto_569_4 )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,m_3,(((RogueClassCyMethod*)(((RogueTable_String_CyMethod_List___get__String( ROGUE_ARG(cyclass_5->funcs), Rogue_literal_strings[310] )))->data->as_objects[0]))));
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], prefix_1 )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_3->cproto_return) )))) )))), Rogue_literal_strings[821] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_5->_type->base_class->cpp_name) )))) )))), Rogue_literal_strings[822] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[7], ROGUE_ARG(m_3->cproto_params) )))) )))) )))), Rogue_literal_strings[12] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], suffix_2 )))) )))) )))) );
    }
  }
}

void RogueProgram__cy_inject_rogue_classes( RogueClassProgram* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,src_0,(Rogue_literal_strings[279]));
  RogueParser__parse_elements( ROGUE_ARG(((RogueParser__init__String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), Rogue_literal_strings[290], src_0 )))) );
}

RogueLogical RogueProgram__cy_create_delegates( RogueClassProgram* THIS )
{
  if (THIS->cy_delegate_construction_pass == 0)
  {
    RogueType__make_api( ROGUE_ARG(((RogueTable_String_Type___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_lookup), Rogue_literal_strings[5] )))) );
    if (((RogueTable_String_Token_List___contains__String( ROGUE_ARG(RoguePreprocessor_definitions), Rogue_literal_strings[1373] ))))
    {
      ROGUE_THROW(RogueClassError,((RogueClassError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), Rogue_literal_strings[1374] )))));
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_576_13,(THIS->type_list));
      RogueInt32 _auto_577_14 = (0);
      for (;_auto_577_14 < _auto_576_13->count;++_auto_577_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,t_15,(((RogueClassType*)(_auto_576_13->data->as_objects[_auto_577_14]))));
        RogueType__assign_cpp_name( t_15 );
        if (((RogueString__begins_with__String( ROGUE_ARG(t_15->name), Rogue_literal_strings[1375] ))))
        {
          ROGUE_THROW(RogueClassError,((RogueClassError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), Rogue_literal_strings[1376] )))));
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_578_16,(THIS->type_list));
      RogueInt32 _auto_579_17 = (0);
      for (;_auto_579_17 < _auto_578_16->count;++_auto_579_17)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,t_18,(((RogueClassType*)(_auto_578_16->data->as_objects[_auto_579_17]))));
        if (!(t_18->is_function))
        {
          continue;
        }
        if (!(((RogueTable_String_Method_List___contains__String( ROGUE_ARG(t_18->method_lookup_by_name), Rogue_literal_strings[310] )))))
        {
          ROGUE_THROW(RogueClassError,((RogueClassError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1377] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(t_18))) )))) )))), Rogue_literal_strings[1378] )))) )))) )))));
        }
        if (((RogueTable_String_Method_List___get__String( ROGUE_ARG(t_18->method_lookup_by_name), Rogue_literal_strings[310] )))->count != 1)
        {
          ROGUE_THROW(RogueClassError,((RogueClassError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), Rogue_literal_strings[1379] )))));
        }
        if (((void*)t_18->base_class) != ((void*)THIS->type_Object))
        {
          continue;
        }
        ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,ccls_0,(((RogueCyClass__init__Type_Logical_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCyClass*,ROGUE_CREATE_OBJECT(CyClass))), t_18, true, true )))));
        if (!(((RogueTable_String_CyMethod_List___contains__String( ROGUE_ARG(ccls_0->funcs), Rogue_literal_strings[310] )))))
        {
          continue;
        }
        RogueMethod__make_essential( ROGUE_ARG(((RogueClassMethod*)(((RogueTable_String_Method_List___get__String( ROGUE_ARG(t_18->method_lookup_by_name), Rogue_literal_strings[310] )))->data->as_objects[0]))) );
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_1,(((RogueClassMethod*)(((RogueTable_String_Method_List___get__String( ROGUE_ARG(t_18->method_lookup_by_name), Rogue_literal_strings[310] )))->data->as_objects[0]))));
        ROGUE_DEF_LOCAL_REF(RogueString_List*,params_2,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
        ROGUE_DEF_LOCAL_REF(RogueString_List*,args_3,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
        RogueString_List__add__String( args_3, Rogue_literal_strings[1380] );
        RogueInt32 i_4 = (0);
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_581_19,(m_1->parameters));
          RogueInt32 _auto_582_20 = (0);
          for (;_auto_582_20 < _auto_581_19->count;++_auto_582_20)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_21,(((RogueClassLocal*)(_auto_581_19->data->as_objects[_auto_582_20]))));
            ++i_4;
            RogueString_List__add__String( params_2, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[311] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], i_4 )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_21->_type->name) )))) )))) )))) );
            RogueString_List__add__String( args_3, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], Rogue_literal_strings[219] )))) )))), Rogue_literal_strings[311] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], i_4 )))) )))) )))) );
          }
        }
        ROGUE_DEF_LOCAL_REF(RogueString*,ret_5,(Rogue_literal_strings[0]));
        ROGUE_DEF_LOCAL_REF(RogueString*,thunk_call_6,(Rogue_literal_strings[0]));
        ROGUE_DEF_LOCAL_REF(RogueString*,return_var_7,(Rogue_literal_strings[0]));
        ROGUE_DEF_LOCAL_REF(RogueString*,do_return_8,(Rogue_literal_strings[0]));
        if (!!(t_18->_callback_return_type))
        {
          ret_5 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[145], ROGUE_ARG(t_18->_callback_return_type->name) ))));
          thunk_call_6 = ((RogueString*)Rogue_literal_strings[1381]);
          return_var_7 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[1382], ROGUE_ARG(t_18->_callback_return_type->name) ))));
          do_return_8 = ((RogueString*)Rogue_literal_strings[1383]);
        }
        thunk_call_6 = ((RogueString*)((RogueString__operatorPLUS__String( thunk_call_6, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1384] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(t_18->cpp_name) )))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[7], args_3 )))) )))) )))), Rogue_literal_strings[1385] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ret_5 )))) )))) )))) ))));
        ROGUE_DEF_LOCAL_REF(RogueString*,src_9,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1386] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(t_18->cpp_type_name) )))) )))), Rogue_literal_strings[1387] )))) )))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, Rogue_literal_strings[1388] ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, Rogue_literal_strings[1389] ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, Rogue_literal_strings[1390] ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1391] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[7], params_2 )))) )))) )))), Rogue_literal_strings[12] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ret_5 )))) )))), Rogue_literal_strings[1392] )))) )))) ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1393] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], return_var_7 )))) )))) )))) ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, Rogue_literal_strings[1394] ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, Rogue_literal_strings[1395] ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1393] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], thunk_call_6 )))) )))), Rogue_literal_strings[8] )))) )))) ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, Rogue_literal_strings[1396] ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, Rogue_literal_strings[1397] ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1393] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], do_return_8 )))) )))), Rogue_literal_strings[8] )))) )))) ))));
        src_9 = ((RogueString*)((RogueString__operatorPLUS__String( src_9, Rogue_literal_strings[1398] ))));
        ROGUE_DEF_LOCAL_REF(RogueString*,filepath_10,(Rogue_literal_strings[1399]));
        RogueTable_String_Token_List___set__String_Token_List( ROGUE_ARG(RoguePreprocessor_definitions), Rogue_literal_strings[1373], ROGUE_ARG(((RogueTokenizer__tokenize__String_String( ROGUE_ARG(((RogueClassTokenizer*)((Rogue_call_ROGUEM1( 1, ROGUE_ARG(((RogueObject*)ROGUE_CREATE_REF(RogueClassTokenizer*,ROGUE_CREATE_OBJECT(Tokenizer)))) ))))), filepath_10, ROGUE_ARG(t_18->name) )))) );
        RogueParser__parse_elements( ROGUE_ARG(((RogueParser__init__String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), filepath_10, src_9 )))) );
      }
    }
    ++THIS->cy_delegate_construction_pass;
    return (RogueLogical)(true);
  }
  else if (THIS->cy_delegate_construction_pass == 1)
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_583_22,(THIS->type_list));
      RogueInt32 _auto_584_23 = (0);
      for (;_auto_584_23 < _auto_583_22->count;++_auto_584_23)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,t_24,(((RogueClassType*)(_auto_583_22->data->as_objects[_auto_584_23]))));
        if (!(((RogueString__begins_with__String( ROGUE_ARG(t_24->name), Rogue_literal_strings[1375] )))))
        {
          continue;
        }
        RogueType__assign_cpp_name( t_24 );
        ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,ccls_11,(((RogueCyClass__init__Type_Logical_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCyClass*,ROGUE_CREATE_OBJECT(CyClass))), t_24, true, true )))));
        if (!(((RogueTable_String_CyMethod_List___contains__String( ROGUE_ARG(ccls_11->funcs), Rogue_literal_strings[310] )))))
        {
          continue;
        }
        RogueTable_Type_CyClass___set__Type_CyClass( ROGUE_ARG(THIS->cy_delegates), t_24, ccls_11 );
        ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,m_12,(((RogueClassCyMethod*)(((RogueTable_String_CyMethod_List___get__String( ROGUE_ARG(ccls_11->funcs), Rogue_literal_strings[310] )))->data->as_objects[0]))));
        RogueString_List__remove_at__Int32( ROGUE_ARG(m_12->cproto_params), 0 );
        RogueString_List__insert__String_Int32( ROGUE_ARG(m_12->cproto_params), Rogue_literal_strings[1400], 0 );
        RogueTable_Type_Type___set__Type_Type( ROGUE_ARG(THIS->cy_delegate_to_pydelegate), ROGUE_ARG(t_24->base_class), t_24 );
        RogueTable_Type_Type___set__Type_Type( ROGUE_ARG(THIS->cy_delegate_to_pydelegate), t_24, t_24 );
      }
    }
    ++THIS->cy_delegate_construction_pass;
    return (RogueLogical)(false);
  }
  return (RogueLogical)(false);
}

void RogueProgram__cy_write_cy_header__CPPWriter_String( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueString* filepath_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[811] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[812] );
  RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[813] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[814] )))) )))) );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[815] );
  RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[813] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[814] )))) )))) );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[816] );
}

void RogueProgram__cy_write_cppclasses__CPPWriter_String_Type_List_Table_Type_CyClass_( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueString* filepath_1, RogueType_List* all_types_2, RogueClassTable_Type_CyClass_* wrapped_types_3 )
{
  RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[813] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_1 )))) )))), Rogue_literal_strings[814] )))) )))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_586_6,(all_types_2));
    RogueInt32 _auto_587_7 = (0);
    for (;_auto_587_7 < _auto_586_6->count;++_auto_587_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_8,(((RogueClassType*)(_auto_586_6->data->as_objects[_auto_587_7]))));
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[817] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_8->cpp_name) )))) )))) )))) );
      ROGUE_DEF_LOCAL_REF(RogueString*,base_4,(Rogue_literal_strings[0]));
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[818] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_8->cpp_class_name) )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_4 )))) )))), Rogue_literal_strings[152] )))) )))) );
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[819] )))), ROGUE_ARG(((RogueString__operatorPLUS__Logical( Rogue_literal_strings[0], ROGUE_ARG(((RogueType__is_aspect( type_8 )))) )))) )))) )))) );
      if (((RogueTable_Type_CyClass___contains__Type( wrapped_types_3, type_8 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,cls_5,(((RogueTable_Type_CyClass___get__Type( wrapped_types_3, type_8 )))));
        {
          ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_String_CyProperty_*,_auto_594_9,(((RogueTable_String_CyProperty___value_reader( ROGUE_ARG(cls_5->properties) )))));
          while (((RogueTableValueReader_String_CyProperty___has_another( _auto_594_9 ))))
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCyProperty*,p_10,(((RogueTableValueReader_String_CyProperty___read( _auto_594_9 )))));
            if (p_10->is_static)
            {
              continue;
            }
            RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[820] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_10->_ctype) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_10->prop->cpp_name) )))) )))) )))) );
          }
        }
      }
      RogueCPPWriter__println( writer_0 );
    }
  }
}

void RogueProgram__cy_write_rogue_method_prototypes__CPPWriter_String_Table_Type_CyClass_( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueString* filepath_1, RogueClassTable_Type_CyClass_* wrapped_types_2 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[838] );
  RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[813] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_1, Rogue_literal_strings[585] )))) )))) )))), Rogue_literal_strings[839] )))) )))) );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[840] );
  writer_0->indent += 2;
  ROGUE_DEF_LOCAL_REF(RogueClassSet_String_*,signatures_3,(((RogueSet_String___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassSet_String_*,ROGUE_CREATE_OBJECT(Set_String_))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_Type_CyClass_*,_auto_603_8,(((RogueTable_Type_CyClass___value_reader( wrapped_types_2 )))));
    while (((RogueTableValueReader_Type_CyClass___has_another( _auto_603_8 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,cyclass_9,(((RogueTableValueReader_Type_CyClass___read( _auto_603_8 )))));
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_String_CyMethod_List_*,_auto_610_10,(((RogueTable_String_CyMethod_List___value_reader( ROGUE_ARG(cyclass_9->funcs) )))));
        while (((RogueTableValueReader_String_CyMethod_List___has_another( _auto_610_10 ))))
        {
          ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,fi_11,(((RogueTableValueReader_String_CyMethod_List___read( _auto_610_10 )))));
          {
            ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,_auto_616_12,(fi_11));
            RogueInt32 _auto_617_13 = (0);
            for (;_auto_617_13 < _auto_616_12->count;++_auto_617_13)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,f_14,(((RogueClassCyMethod*)(_auto_616_12->data->as_objects[_auto_617_13]))));
              ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_4,(f_14->real_method));
              ROGUE_DEF_LOCAL_REF(RogueString*,sig_5,(m_4->cpp_typedef));
              if (((void*)sig_5) == ((void*)NULL))
              {
                continue;
              }
              if (((RogueSet_String___contains__String( signatures_3, sig_5 ))))
              {
                continue;
              }
              RogueSet_String___add__String( signatures_3, sig_5 );
              RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[826] );
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(m_4->_return_type) )))), Rogue_literal_strings[654] )))), ROGUE_ARG(m_4->cpp_typedef) );
              RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[655] )))), ROGUE_ARG(m_4->type_context) )))), Rogue_literal_strings[648] );
              {
                ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_619_15,(m_4->parameters));
                RogueInt32 i_16 = (0);
                for (;i_16 < _auto_619_15->count;++i_16)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_6,(((RogueClassLocal*)(m_4->parameters->data->as_objects[i_16]))));
                  RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] )))), ROGUE_ARG(p_6->_type) )))), Rogue_literal_strings[656] )))), i_16 );
                }
              }
              RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[628] );
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[841] );
            }
          }
        }
      }
    }
  }
  RogueSet_String___clear( signatures_3 );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_Type_CyClass_*,_auto_620_17,(((RogueTable_Type_CyClass___value_reader( wrapped_types_2 )))));
    while (((RogueTableValueReader_Type_CyClass___has_another( _auto_620_17 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,cyclass_18,(((RogueTableValueReader_Type_CyClass___read( _auto_620_17 )))));
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[842] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_18->_pytype) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(cyclass_18->_type))) )))) )))) )))) );
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_String_CyMethod_List_*,_auto_621_19,(((RogueTable_String_CyMethod_List___value_reader( ROGUE_ARG(cyclass_18->funcs) )))));
        while (((RogueTableValueReader_String_CyMethod_List___has_another( _auto_621_19 ))))
        {
          ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,fi_20,(((RogueTableValueReader_String_CyMethod_List___read( _auto_621_19 )))));
          {
            ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,_auto_622_21,(fi_20));
            RogueInt32 _auto_623_22 = (0);
            for (;_auto_623_22 < _auto_622_21->count;++_auto_623_22)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,f_23,(((RogueClassCyMethod*)(_auto_622_21->data->as_objects[_auto_623_22]))));
              ROGUE_DEF_LOCAL_REF(RogueString*,sig_7,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(f_23->cproto_return) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(f_23->cname) )))) )))), Rogue_literal_strings[843] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[625], ROGUE_ARG(f_23->cproto_params) )))) )))) )))), Rogue_literal_strings[844] )))) )))));
              if (((RogueSet_String___contains__String( signatures_3, sig_7 ))))
              {
                continue;
              }
              RogueCPPWriter__println__String( writer_0, sig_7 );
              RogueSet_String___add__String( signatures_3, sig_7 );
            }
          }
        }
      }
    }
  }
  writer_0->indent -= 2;
}

void RogueProgram__cy_write_rogue_global_properties__CPPWriter_String_Table_Type_CyClass_( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueString* filepath_1, RogueClassTable_Type_CyClass_* wrapped_types_2 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[845] );
  RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[813] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_1, Rogue_literal_strings[585] )))) )))) )))), Rogue_literal_strings[839] )))) )))) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_Type_CyClass_*,_auto_625_3,(((RogueTable_Type_CyClass___value_reader( wrapped_types_2 )))));
    while (((RogueTableValueReader_Type_CyClass___has_another( _auto_625_3 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,cyclass_4,(((RogueTableValueReader_Type_CyClass___read( _auto_625_3 )))));
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTable_String_CyProperty_*,_auto_626_5,(cyclass_4->properties));
        RogueInt32 _auto_627_6 = (0);
        for (;_auto_627_6 < _auto_626_5->count;++_auto_627_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCyProperty*,p_7,(((RogueTable_String_CyProperty___at__Int32( _auto_626_5, _auto_627_6 )))));
          if (!(p_7->is_static))
          {
            continue;
          }
          RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[846] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_7->_ctype) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_7->cname) )))) )))) )))) );
        }
      }
    }
  }
}

void RogueProgram__cy_write_property__CPPWriter_CyProperty( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueClassCyProperty* p_1 )
{
  if (p_1->is_static)
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[861] );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[862] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->pyname) )))) )))), Rogue_literal_strings[863] )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[740] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->read_c_code) )))) )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[146] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->pyname) )))) )))), Rogue_literal_strings[864] )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[862] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->pyname) )))) )))), Rogue_literal_strings[865] )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[866] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->cname) )))) )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[336] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->write_c_code) )))) )))) )))) );
  }
  else
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[867] );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[862] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->pyname) )))) )))), Rogue_literal_strings[868] )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[740] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->read_c_code) )))) )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[146] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->pyname) )))) )))), Rogue_literal_strings[864] )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[862] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->pyname) )))) )))), Rogue_literal_strings[869] )))) )))) );
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[336] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_1->write_c_code) )))) )))) )))) );
  }
}

RogueClassType* RogueProgram__cy_find_constructor_context__Table_Type_CyClass__CyClass( RogueClassProgram* THIS, RogueClassTable_Type_CyClass_* cyclasses_0, RogueClassCyClass* t_1 )
{
  if (((RogueTable_String_CyMethod_List___contains__String( ROGUE_ARG(t_1->funcs), Rogue_literal_strings[807] ))))
  {
    return (RogueClassType*)(t_1->_type);
  }
  ROGUE_DEF_LOCAL_REF_NULL(RogueClassType*,_auto_248_2);
  ((_auto_248_2=(t_1->_type->base_class))?_auto_248_2:ROGUE_THROW(RogueClassRequirementError,((RogueRequirementError__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRequirementError*,ROGUE_CREATE_OBJECT(RequirementError))), Rogue_literal_strings[879] )))));
  if (!(((RogueTable_Type_CyClass___contains__Type( cyclasses_0, ROGUE_ARG(t_1->_type->base_class) )))))
  {
    return (RogueClassType*)(((RogueClassType*)(NULL)));
  }
  return (RogueClassType*)(((RogueProgram__cy_find_constructor_context__Table_Type_CyClass__CyClass( ROGUE_ARG(THIS), cyclasses_0, ROGUE_ARG(((RogueTable_Type_CyClass___get__Type( cyclasses_0, ROGUE_ARG(t_1->_type->base_class) )))) ))));
}

void RogueProgram__cy_write_overload_table__CPPWriter_CyMethod_List_List_Type_List( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueCyMethod_List_List* overloads_1, RogueType_List* context_constraints_2 )
{
  RogueInt32 count_3 = (-1);
  while (true)
  {
    ++count_3;
    if (count_3 >= overloads_1->count)
    {
      goto _auto_629;
    }
    ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,funcs_4,(((RogueCyMethod_List*)(overloads_1->data->as_objects[count_3]))));
    ROGUE_DEF_LOCAL_REF(RogueClassType*,context_constraint_5,(((RogueClassType*)(context_constraints_2->data->as_objects[count_3]))));
    RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[890] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCyMethod__full_name( ROGUE_ARG(((RogueClassCyMethod*)(funcs_4->data->as_objects[0]))) )))) )))) )))), Rogue_literal_strings[891] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], count_3 )))) )))), Rogue_literal_strings[12] )))) )))) );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[892] );
    writer_0->indent += 2;
    RogueInt32 fnum_6 = (-1);
    RogueLogical first_7 = (true);
    {
      ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,_auto_630_10,(funcs_4));
      RogueInt32 _auto_631_11 = (0);
      for (;_auto_631_11 < _auto_630_10->count;++_auto_631_11)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,func_12,(((RogueClassCyMethod*)(_auto_630_10->data->as_objects[_auto_631_11]))));
        ++fnum_6;
        if ((((void*)context_constraint_5) != ((void*)NULL) && ((void*)func_12->real_method->type_context) != ((void*)context_constraint_5)))
        {
          continue;
        }
        if (!(first_7))
        {
          RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[7] );
        }
        else
        {
          first_7 = ((RogueLogical)false);
        }
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[893] );
        ROGUE_DEF_LOCAL_REF(RogueString_List*,names_8,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
        {
          ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_633_13,(func_12->py_params));
          RogueInt32 _auto_634_14 = (0);
          for (;_auto_634_14 < _auto_633_13->count;++_auto_634_14)
          {
            ROGUE_DEF_LOCAL_REF(RogueString*,n_15,(((RogueString*)(_auto_633_13->data->as_objects[_auto_634_14]))));
            RogueString_List__add__String( names_8, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[715], n_15 )))), Rogue_literal_strings[715] )))) );
          }
        }
        ROGUE_DEF_LOCAL_REF(RogueString*,fname_9,(func_12->pyname));
        if (!(((RogueString__begins_with__String( fname_9, Rogue_literal_strings[313] )))))
        {
          fname_9 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[313], fname_9 ))));
        }
        fname_9 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(func_12->pyclass) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], fname_9 )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], fnum_6 )))) )))), Rogue_literal_strings[313] )))) ))));
        RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[171] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[7], ROGUE_ARG(func_12->py_types) )))) )))) )))), Rogue_literal_strings[894] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[7], names_8 )))) )))) )))), Rogue_literal_strings[894] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[7], ROGUE_ARG(func_12->defaults) )))) )))) )))), Rogue_literal_strings[895] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], fname_9 )))) )))), Rogue_literal_strings[625] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((((func_12->is_static_method))) ? (ROGUE_ARG(Rogue_literal_strings[797])) : ROGUE_ARG(Rogue_literal_strings[798]))) )))) )))), Rogue_literal_strings[628] )))) )))) );
      }
    }
    writer_0->indent -= 2;
    RogueCPPWriter__println( writer_0 );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[896] );
  }
  _auto_629:;
}

void RogueProgram__cy_write_method__CPPWriter_CyClass_CyMethod_List_Logical( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueClassCyClass* cyclass_1, RogueCyMethod_List* fi_2, RogueLogical overloading_3 )
{
  RogueInt32 fnum_4 = (-1);
  {
    ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,_auto_635_12,(fi_2));
    RogueInt32 _auto_636_13 = (0);
    for (;_auto_636_13 < _auto_635_12->count;++_auto_636_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,f_14,(((RogueClassCyMethod*)(_auto_635_12->data->as_objects[_auto_636_13]))));
      ++fnum_4;
      ROGUE_DEF_LOCAL_REF(RogueString*,fname_5,(f_14->pyname));
      if (overloading_3)
      {
        fname_5 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], fname_5 )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], fnum_4 )))) )))), Rogue_literal_strings[313] )))) ))));
        if (!(((RogueString__begins_with__String( fname_5, Rogue_literal_strings[313] )))))
        {
          fname_5 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[313], fname_5 ))));
        }
      }
      ROGUE_DEF_LOCAL_REF(RogueString_List*,params_6,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
      if (f_14->is_static_method)
      {
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[872] );
      }
      else
      {
        RogueString_List__add__String( params_6, Rogue_literal_strings[873] );
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,cname_7,(f_14->cname));
      ROGUE_DEF_LOCAL_REF(RogueString_List*,args_8,(f_14->call_args));
      if (((RogueMethod__is_overridden( ROGUE_ARG(f_14->real_method) ))))
      {
        args_8 = ((RogueString_List*)((RogueString_List__cloned( args_8 ))));
        RogueString_List__insert__String_Int32( args_8, ROGUE_ARG(((RogueInt32__to_String( ROGUE_ARG(f_14->real_method->index) )))), 0 );
        cname_7 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[874], ROGUE_ARG(f_14->real_method->cpp_typedef) ))));
      }
      RogueInt32 i_9 = (0);
      {
        ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_637_15,(f_14->py_params));
        RogueInt32 _auto_638_16 = (0);
        for (;_auto_638_16 < _auto_637_15->count;++_auto_638_16)
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,p_17,(((RogueString*)(_auto_637_15->data->as_objects[_auto_638_16]))));
          ROGUE_DEF_LOCAL_REF(RogueString*,ptext_10,(p_17));
          if (((RogueString__operatorLTGT__String( ROGUE_ARG(((RogueString*)(f_14->defaults->data->as_objects[i_9]))), Rogue_literal_strings[793] ))) != 0)
          {
            ptext_10 = ((RogueString*)((RogueString__operatorPLUS__String( ptext_10, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[160], ROGUE_ARG(((RogueString*)(f_14->defaults->data->as_objects[i_9]))) )))) ))));
          }
          RogueString_List__add__String( params_6, ptext_10 );
          ++i_9;
        }
      }
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[862] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], fname_5 )))) )))), Rogue_literal_strings[843] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[625], params_6 )))) )))) )))), Rogue_literal_strings[829] )))) )))) );
      writer_0->indent += 2;
      {
        ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_639_18,(f_14->prologue));
        RogueInt32 _auto_640_19 = (0);
        for (;_auto_640_19 < _auto_639_18->count;++_auto_640_19)
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,s_20,(((RogueString*)(_auto_639_18->data->as_objects[_auto_640_19]))));
          RogueCPPWriter__println__String( writer_0, s_20 );
        }
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,call_code_11,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], cname_7 )))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[625], args_8 )))) )))) )))), Rogue_literal_strings[12] )))) )))));
      if (((void*)f_14->return_converter) == ((void*)NULL))
      {
        RogueCPPWriter__println__String( writer_0, call_code_11 );
      }
      else
      {
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[665], ROGUE_ARG(((RogueString__replacing__String_String( ROGUE_ARG(f_14->return_converter), Rogue_literal_strings[173], call_code_11 )))) )))) );
      }
      writer_0->indent -= 2;
      RogueCPPWriter__println( writer_0 );
    }
  }
}

void RogueProgram__cy_write_delegate_thunks__CPPWriter( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[824] );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_Type_CyClass_*,_auto_641_5,(((RogueTable_Type_CyClass___value_reader( ROGUE_ARG(THIS->cy_delegates) )))));
    while (((RogueTableValueReader_Type_CyClass___has_another( _auto_641_5 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,ccls_6,(((RogueTableValueReader_Type_CyClass___read( _auto_641_5 )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,m_1,(((RogueClassCyMethod*)(((RogueTable_String_CyMethod_List___get__String( ROGUE_ARG(ccls_6->funcs), Rogue_literal_strings[310] )))->data->as_objects[0]))));
      RogueInt32 j_2 = (0);
      ROGUE_DEF_LOCAL_REF(RogueString_List*,params_3,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
      {
        ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_642_7,(m_1->cproto_params));
        RogueInt32 _auto_643_8 = (0);
        for (;_auto_643_8 < _auto_642_7->count;++_auto_643_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,p_9,(((RogueString*)(_auto_642_7->data->as_objects[_auto_643_8]))));
          RogueString_List__add__String( params_3, ROGUE_ARG(((RogueString__operatorPLUS__Int32( ROGUE_ARG(((RogueString__operatorPLUS__String( p_9, Rogue_literal_strings[825] )))), j_2 )))) );
          ++j_2;
        }
      }
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[826] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_1->cproto_return) )))) )))), Rogue_literal_strings[827] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(ccls_6->_type->base_class->cpp_name) )))) )))), Rogue_literal_strings[828] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueString__join__String_List( Rogue_literal_strings[7], params_3 )))) )))) )))), Rogue_literal_strings[829] )))) )))) );
      j_2 = ((RogueInt32)0);
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[830] );
      while (j_2 < m_1->real_method->parameters->count)
      {
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[820], ROGUE_ARG(((RogueString__replacing__String_String( ROGUE_ARG((RogueCyClass__get_c_to_py__Type( ROGUE_ARG(((RogueClassLocal*)(m_1->real_method->parameters->data->as_objects[j_2]))->_type) ))), Rogue_literal_strings[173], ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[311], ROGUE_ARG((j_2 + 1)) )))) )))) )))), Rogue_literal_strings[7] )))) );
        ++j_2;
      }
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[831] );
      if (!!(m_1->real_method->_return_type))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,code_4,(((RogueString__replacing__String_String( ROGUE_ARG((RogueCyClass__get_py_to_c__Type( ROGUE_ARG(m_1->real_method->_return_type) ))), Rogue_literal_strings[173], Rogue_literal_strings[832] )))));
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[833], code_4 )))) );
      }
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[834] );
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[835] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(ccls_6->_type->base_class->cpp_name) )))) )))), Rogue_literal_strings[836] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(ccls_6->_type->base_class->cpp_name) )))) )))), Rogue_literal_strings[837] )))) )))) );
    }
  }
}

RogueCyClass_List* RogueProgram__cy_sort_cyclasses__Table_Type_CyClass_( RogueClassProgram* THIS, RogueClassTable_Type_CyClass_* cyclasses_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueCyClass_List*,sorted_types_1,(((RogueCyClass_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCyClass_List*,ROGUE_CREATE_OBJECT(CyClass_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassSet_Type_*,done_2,(((RogueSet_Type___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassSet_Type_*,ROGUE_CREATE_OBJECT(Set_Type_))) )))));
  RogueInt32 count_3 = (-1);
  RogueInt32 prev_4 = (-1);
  while (sorted_types_1->count < cyclasses_0->count)
  {
    if ((cyclasses_0->count - sorted_types_1->count) == prev_4)
    {
      goto _auto_644;
    }
    prev_4 = ((RogueInt32)(cyclasses_0->count - sorted_types_1->count));
    ROGUE_DEF_LOCAL_REF(RogueClassSet_Type_*,ss_5,(((RogueSet_Type___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassSet_Type_*,ROGUE_CREATE_OBJECT(Set_Type_))) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_Type_CyClass_*,_auto_645_7,(((RogueTable_Type_CyClass___value_reader( cyclasses_0 )))));
      while (((RogueTableValueReader_Type_CyClass___has_another( _auto_645_7 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,t_8,(((RogueTableValueReader_Type_CyClass___read( _auto_645_7 )))));
        RogueSet_Type___add__Type( ss_5, ROGUE_ARG(t_8->_type) );
      }
    }
    ss_5 = ((RogueClassSet_Type_*)((RogueSet_Type___difference__Set_Type_( ss_5, done_2 ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_Type_CyClass_*,_auto_646_9,(((RogueTable_Type_CyClass___value_reader( cyclasses_0 )))));
      while (((RogueTableValueReader_Type_CyClass___has_another( _auto_646_9 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,t_10,(((RogueTableValueReader_Type_CyClass___read( _auto_646_9 )))));
        if (((RogueSet_Type___contains__Type( done_2, ROGUE_ARG(t_10->_type) ))))
        {
          continue;
        }
        RogueLogical ok_6 = (false);
        if (t_10->_type->base_types->count == 0)
        {
          ok_6 = ((RogueLogical)true);
        }
        else
        {
          ok_6 = ((RogueLogical)true);
          {
            ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_648_11,(t_10->_type->base_types));
            RogueInt32 _auto_649_12 = (0);
            for (;_auto_649_12 < _auto_648_11->count;++_auto_649_12)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassType*,bt_13,(((RogueClassType*)(_auto_648_11->data->as_objects[_auto_649_12]))));
              if (!(((RogueSet_Type___contains__Type( done_2, bt_13 )))))
              {
                ok_6 = ((RogueLogical)false);
                goto _auto_650;
              }
            }
          }
          _auto_650:;
        }
        if (ok_6)
        {
          RogueSet_Type___add__Type( done_2, ROGUE_ARG(t_10->_type) );
          RogueCyClass_List__add__CyClass( sorted_types_1, t_10 );
        }
      }
    }
  }
  _auto_644:;
  return (RogueCyClass_List*)(sorted_types_1);
}

void RogueProgram__cy_write_classes__CPPWriter_Table_Type_CyClass_( RogueClassProgram* THIS, RogueClassCPPWriter* writer_0, RogueClassTable_Type_CyClass_* cyclasses_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueCyMethod_List_List*,overloads_2,(((RogueCyMethod_List_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCyMethod_List_List*,ROGUE_CREATE_OBJECT(CyMethod_List_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueType_List*,overload_constraints_3,(((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueString_List*,pydelegates_4,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCyClass_List*,_auto_651_14,(((RogueProgram__cy_sort_cyclasses__Table_Type_CyClass_( ROGUE_ARG(THIS), cyclasses_1 )))));
    RogueInt32 _auto_652_15 = (0);
    for (;_auto_652_15 < _auto_651_14->count;++_auto_652_15)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,cyclass_16,(((RogueClassCyClass*)(_auto_651_14->data->as_objects[_auto_652_15]))));
      if (!(cyclass_16->is_routine))
      {
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[847] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[848] )))) )))) );
        ROGUE_DEF_LOCAL_REF(RogueString_List*,bases_5,(((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )))));
        {
          ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_653_17,(cyclass_16->_type->base_types));
          RogueInt32 _auto_654_18 = (0);
          for (;_auto_654_18 < _auto_653_17->count;++_auto_654_18)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassType*,b_19,(((RogueClassType*)(_auto_653_17->data->as_objects[_auto_654_18]))));
            if (((RogueTable_Type_CyClass___contains__Type( cyclasses_1, b_19 ))))
            {
              RogueString_List__add__String( bases_5, ROGUE_ARG(((RogueTable_Type_CyClass___get__Type( cyclasses_1, b_19 )))->_pytype) );
            }
          }
        }
        if (bases_5->count == 0)
        {
          RogueString_List__add__String( bases_5, Rogue_literal_strings[849] );
        }
        if (cyclass_16->_type->is_function)
        {
          RogueString_List__add__String( bases_5, Rogue_literal_strings[850] );
        }
        ROGUE_DEF_LOCAL_REF(RogueString*,base_6,(((RogueString__join__String_List( Rogue_literal_strings[625], bases_5 )))));
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[851] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[843] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_6 )))) )))), Rogue_literal_strings[829] )))) )))) );
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[852] );
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[853] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_type->cpp_name) )))) )))), Rogue_literal_strings[854] )))) )))) );
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[855] );
        if (cyclass_16->_type->is_function)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,pydelegate_7,(((RogueTable_Type_Type___get__Type( ROGUE_ARG(THIS->cy_delegate_to_pydelegate), ROGUE_ARG(cyclass_16->_type) )))));
          if (((void*)pydelegate_7) != ((void*)NULL))
          {
            RogueString_List__add__String( pydelegates_4, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[856] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTable_Type_CyClass___get__Type( ROGUE_ARG(THIS->cy_delegates), pydelegate_7 )))->_pytype) )))) )))) )))) );
          }
          else
          {
          }
        }
        writer_0->indent += 2;
        if (((RogueType__is_singleton( ROGUE_ARG(cyclass_16->_type) ))))
        {
          RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[857] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[858] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_type->cpp_name) )))) )))), Rogue_literal_strings[859] )))) )))) );
        }
        if (!(((RogueType__is_aspect( ROGUE_ARG(cyclass_16->_type) )))))
        {
          RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[860] );
          {
            ROGUE_DEF_LOCAL_REF(RogueClassTable_String_CyProperty_*,_auto_655_20,(cyclass_16->properties));
            RogueInt32 _auto_656_21 = (0);
            for (;_auto_656_21 < _auto_655_20->count;++_auto_656_21)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCyProperty*,p_22,(((RogueTable_String_CyProperty___at__Int32( _auto_655_20, _auto_656_21 )))));
              RogueProgram__cy_write_property__CPPWriter_CyProperty( ROGUE_ARG(THIS), writer_0, p_22 );
            }
          }
        }
        RogueCPPWriter__println( writer_0 );
      }
      else
      {
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[870] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[848] )))) )))) );
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[851] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[871] )))) )))) );
        writer_0->indent += 2;
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueClassTableValueReader_String_CyMethod_List_*,_auto_657_23,(((RogueTable_String_CyMethod_List___value_reader( ROGUE_ARG(cyclass_16->funcs) )))));
        while (((RogueTableValueReader_String_CyMethod_List___has_another( _auto_657_23 ))))
        {
          ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,fi_24,(((RogueTableValueReader_String_CyMethod_List___read( _auto_657_23 )))));
          RogueLogical constructor_8 = (((RogueClassCyMethod*)(fi_24->data->as_objects[0]))->is_initializer);
          RogueLogical overloading_9 = ((fi_24->count > 1 || constructor_8));
          RogueLogical must_write_10 = (false);
          {
            ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,_auto_658_25,(fi_24));
            RogueInt32 _auto_659_26 = (0);
            for (;_auto_659_26 < _auto_658_25->count;++_auto_659_26)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,f_27,(((RogueClassCyMethod*)(_auto_658_25->data->as_objects[_auto_659_26]))));
              ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(f_27->real_method));
              if (((void*)cyclass_16->_type) == ((void*)m_11->type_context))
              {
                must_write_10 = ((RogueLogical)true);
                goto _auto_660;
              }
            }
          }
          _auto_660:;
          if (must_write_10)
          {
            RogueProgram__cy_write_method__CPPWriter_CyClass_CyMethod_List_Logical( ROGUE_ARG(THIS), writer_0, cyclass_16, fi_24, overloading_9 );
            if (overloading_9)
            {
              RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[875] );
              RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[862] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueClassCyMethod*)(fi_24->data->as_objects[0]))->pyname) )))) )))), Rogue_literal_strings[876] )))) )))) );
              RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[877] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(overloads_2->count) )))) )))), Rogue_literal_strings[878] )))) )))) );
              RogueCPPWriter__println( writer_0 );
              RogueCyMethod_List_List__add__CyMethod_List( overloads_2, fi_24 );
              if (constructor_8)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassType*,constraint_12,(((RogueProgram__cy_find_constructor_context__Table_Type_CyClass__CyClass( ROGUE_ARG(THIS), cyclasses_1, cyclass_16 )))));
                ROGUE_DEF_LOCAL_REF_NULL(RogueClassType*,_auto_249_13);
                ((_auto_249_13=(constraint_12))?_auto_249_13:ROGUE_THROW(RogueClassRequirementError,((RogueRequirementError__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRequirementError*,ROGUE_CREATE_OBJECT(RequirementError))), Rogue_literal_strings[880] )))));
                RogueType_List__add__Type( overload_constraints_3, constraint_12 );
              }
              else
              {
                RogueType_List__add__Type( overload_constraints_3, ROGUE_ARG(((RogueClassType*)(NULL))) );
              }
            }
          }
          else
          {
            RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[881] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueClassCyMethod*)(fi_24->data->as_objects[0]))->real_method->name) )))) )))) )))) );
          }
        }
      }
      if (!(cyclass_16->is_routine))
      {
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[872] );
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[882] );
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[883] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_type->cpp_name) )))) )))) )))) );
        if (cyclass_16->_type->is_function)
        {
          if (((RogueTable_String_CyMethod_List___contains__String( ROGUE_ARG(cyclass_16->funcs), Rogue_literal_strings[310] ))))
          {
            RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[884] );
          }
        }
        writer_0->indent -= 2;
      }
      else
      {
        RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[885] );
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[886] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[887] )))) )))) );
        writer_0->indent -= 2;
        RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[632] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))), Rogue_literal_strings[348] )))) )))) );
      }
      RogueCPPWriter__println__String( writer_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[888] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_type->index) )))) )))), Rogue_literal_strings[889] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(cyclass_16->_pytype) )))) )))) )))) );
    }
  }
  RogueProgram__cy_write_overload_table__CPPWriter_CyMethod_List_List_Type_List( ROGUE_ARG(THIS), writer_0, overloads_2, overload_constraints_3 );
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,_auto_661_28,(pydelegates_4));
    RogueInt32 _auto_662_29 = (0);
    for (;_auto_662_29 < _auto_661_28->count;++_auto_662_29)
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,d_30,(((RogueString*)(_auto_661_28->data->as_objects[_auto_662_29]))));
      RogueCPPWriter__println__String( writer_0, d_30 );
    }
  }
}

void RogueProgram__cy_write__String( RogueClassProgram* THIS, RogueString* filepath_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueType_List*,all_type_list_1,(((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_663_5,(THIS->type_list));
    RogueInt32 _auto_664_6 = (0);
    for (;_auto_664_6 < _auto_663_5->count;++_auto_664_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,t_7,(((RogueClassType*)(_auto_663_5->data->as_objects[_auto_664_6]))));
      if (!(((RogueType__is_reference( t_7 )))))
      {
        continue;
      }
      if ((((RogueType__omit_output( t_7 ))) && !(((RogueType__is_native( t_7 ))))))
      {
        continue;
      }
      RogueType_List__add__Type( all_type_list_1, t_7 );
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTable_Type_CyClass_*,cyclasses_2,(((RogueTable_Type_CyClass___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_Type_CyClass_*,ROGUE_CREATE_OBJECT(Table_Type_CyClass_))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_666_8,(all_type_list_1));
    RogueInt32 _auto_667_9 = (0);
    for (;_auto_667_9 < _auto_666_8->count;++_auto_667_9)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,type_10,(((RogueClassType*)(_auto_666_8->data->as_objects[_auto_667_9]))));
      ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,cyclass_3,(((RogueCyClass__init__Type_Logical_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCyClass*,ROGUE_CREATE_OBJECT(CyClass))), type_10, false, true )))));
      if (((RogueString__operatorLTGT__String( ROGUE_ARG(cyclass_3->_pytype), Rogue_literal_strings[0] ))) != 0)
      {
        RogueTable_Type_CyClass___set__Type_CyClass( cyclasses_2, ROGUE_ARG(cyclass_3->_type), cyclass_3 );
      }
    }
  }
  if (cyclasses_2->count == 0)
  {
    return;
  }
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[583] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[809] )))) )))) );
  ROGUE_DEF_LOCAL_REF(RogueClassCPPWriter*,writer_4,(((RogueCPPWriter__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCPPWriter*,ROGUE_CREATE_OBJECT(CPPWriter))), ROGUE_ARG(((RogueString__operatorPLUS__String( filepath_0, Rogue_literal_strings[810] )))) )))));
  RogueProgram__cy_write_cy_header__CPPWriter_String( ROGUE_ARG(THIS), writer_4, filepath_0 );
  RogueProgram__cy_write_cppclasses__CPPWriter_String_Type_List_Table_Type_CyClass_( ROGUE_ARG(THIS), writer_4, filepath_0, all_type_list_1, cyclasses_2 );
  RogueCPPWriter__println__String( writer_4, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[813] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], filepath_0 )))) )))), Rogue_literal_strings[814] )))) )))) );
  RogueProgram__cy_write_delegate_thunk_pointers__CPPWriter_String_String( ROGUE_ARG(THIS), writer_4, Rogue_literal_strings[823], Rogue_literal_strings[0] );
  RogueProgram__cy_write_delegate_thunks__CPPWriter( ROGUE_ARG(THIS), writer_4 );
  RogueProgram__cy_write_rogue_method_prototypes__CPPWriter_String_Table_Type_CyClass_( ROGUE_ARG(THIS), writer_4, filepath_0, cyclasses_2 );
  RogueProgram__cy_write_rogue_global_properties__CPPWriter_String_Table_Type_CyClass_( ROGUE_ARG(THIS), writer_4, filepath_0, cyclasses_2 );
  RogueProgram__cy_write_classes__CPPWriter_Table_Type_CyClass_( ROGUE_ARG(THIS), writer_4, cyclasses_2 );
  RogueCPPWriter__close( writer_4 );
}

RogueTemplate_List* RogueTemplate_List__init_object( RogueTemplate_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueTemplate_List*)(THIS);
}

RogueTemplate_List* RogueTemplate_List__init( RogueTemplate_List* THIS )
{
  RogueTemplate_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueTemplate_List*)(THIS);
}

RogueString* RogueTemplate_List__to_String( RogueTemplate_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueTemplate_List*,_auto_2537_2,(THIS));
    RogueInt32 _auto_2538_3 = (0);
    for (;_auto_2538_3 < _auto_2537_2->count;++_auto_2538_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,value_4,(((RogueClassTemplate*)(_auto_2537_2->data->as_objects[_auto_2538_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueTemplate_List__type_name( RogueTemplate_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1043]);
}

RogueTemplate_List* RogueTemplate_List__init__Int32( RogueTemplate_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassTemplate*), true );
  }
  return (RogueTemplate_List*)(THIS);
}

RogueTemplate_List* RogueTemplate_List__add__Template( RogueTemplate_List* THIS, RogueClassTemplate* value_0 )
{
  ((RogueTemplate_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueTemplate_List*)(THIS);
}

RogueInt32 RogueTemplate_List__capacity( RogueTemplate_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueTemplate_List* RogueTemplate_List__reserve__Int32( RogueTemplate_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassTemplate*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueTemplate_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassTemplate*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueTemplate_List*)(THIS);
}

RogueString* RogueArray_Template___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1078]);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init_object( RogueClassTable_String_Template_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init( RogueClassTable_String_Template_* THIS )
{
  RogueTable_String_Template___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueString* RogueTable_String_Template___to_String( RogueClassTable_String_Template_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Template___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Template___type_name( RogueClassTable_String_Template_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[962]);
}

RogueClassTable_String_Template_* RogueTable_String_Template___init__Int32( RogueClassTable_String_Template_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Template_*), true );
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueClassTableEntry_String_Template_* RogueTable_String_Template___find__String( RogueClassTable_String_Template_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_2,(((RogueClassTableEntry_String_Template_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Template_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Template_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Template_*)(((RogueClassTableEntry_String_Template_*)(NULL)));
}

RogueClassTemplate* RogueTable_String_Template___get__String( RogueClassTable_String_Template_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_1,(((RogueTable_String_Template___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassTemplate*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,default_value_2,0);
    return (RogueClassTemplate*)(default_value_2);
  }
}

RogueClassTable_String_Template_* RogueTable_String_Template___set__String_Template( RogueClassTable_String_Template_* THIS, RogueString* key_0, RogueClassTemplate* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,entry_2,(((RogueTable_String_Template___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Template_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Template____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Template_*)((RogueTableEntry_String_Template___init__String_Template_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Template_*,ROGUE_CREATE_OBJECT(TableEntry_String_Template_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Template_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Template_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Template___print_to__StringBuilder( RogueClassTable_String_Template_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Template_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Template____grow( RogueClassTable_String_Template_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Template_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Template_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Template_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Template_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Template____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1108]);
}

RogueClassTableEntry_String_Template_* RogueTableEntry_String_Template___init_object( RogueClassTableEntry_String_Template_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Template_*)(THIS);
}

RogueString* RogueTableEntry_String_Template___to_String( RogueClassTableEntry_String_Template_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Template___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Template___type_name( RogueClassTableEntry_String_Template_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[929]);
}

RogueClassTableEntry_String_Template_* RogueTableEntry_String_Template___init__String_Template_Int32( RogueClassTableEntry_String_Template_* THIS, RogueString* _key_0, RogueClassTemplate* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Template_*)(THIS);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init_object( RogueClassTable_String_Augment_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init( RogueClassTable_String_Augment_List_* THIS )
{
  RogueTable_String_Augment_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueString* RogueTable_String_Augment_List___to_String( RogueClassTable_String_Augment_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Augment_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Augment_List___type_name( RogueClassTable_String_Augment_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[963]);
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___init__Int32( RogueClassTable_String_Augment_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Augment_List_*), true );
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueClassTableEntry_String_Augment_List_* RogueTable_String_Augment_List___find__String( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_2,(((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Augment_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Augment_List_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Augment_List_*)(((RogueClassTableEntry_String_Augment_List_*)(NULL)));
}

RogueAugment_List* RogueTable_String_Augment_List___get__String( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_1,(((RogueTable_String_Augment_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueAugment_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,default_value_2,0);
    return (RogueAugment_List*)(default_value_2);
  }
}

RogueClassTable_String_Augment_List_* RogueTable_String_Augment_List___set__String_Augment_List( RogueClassTable_String_Augment_List_* THIS, RogueString* key_0, RogueAugment_List* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,entry_2,(((RogueTable_String_Augment_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Augment_List_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Augment_List____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Augment_List_*)((RogueTableEntry_String_Augment_List___init__String_Augment_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Augment_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Augment_List_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Augment_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Augment_List___print_to__StringBuilder( RogueClassTable_String_Augment_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Augment_List_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Augment_List____grow( RogueClassTable_String_Augment_List_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Augment_List_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Augment_List_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Augment_List_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Augment_List_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Augment_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1109]);
}

RogueClassTableEntry_String_Augment_List_* RogueTableEntry_String_Augment_List___init_object( RogueClassTableEntry_String_Augment_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Augment_List_*)(THIS);
}

RogueString* RogueTableEntry_String_Augment_List___to_String( RogueClassTableEntry_String_Augment_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Augment_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Augment_List___type_name( RogueClassTableEntry_String_Augment_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[930]);
}

RogueClassTableEntry_String_Augment_List_* RogueTableEntry_String_Augment_List___init__String_Augment_List_Int32( RogueClassTableEntry_String_Augment_List_* THIS, RogueString* _key_0, RogueAugment_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Augment_List_*)(THIS);
}

RogueAugment_List* RogueAugment_List__init_object( RogueAugment_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueAugment_List*)(THIS);
}

RogueAugment_List* RogueAugment_List__init( RogueAugment_List* THIS )
{
  RogueAugment_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueAugment_List*)(THIS);
}

RogueString* RogueAugment_List__to_String( RogueAugment_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueAugment_List*,_auto_2615_2,(THIS));
    RogueInt32 _auto_2616_3 = (0);
    for (;_auto_2616_3 < _auto_2615_2->count;++_auto_2616_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassAugment*,value_4,(((RogueClassAugment*)(_auto_2615_2->data->as_objects[_auto_2616_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueAugment_List__type_name( RogueAugment_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1063]);
}

RogueAugment_List* RogueAugment_List__init__Int32( RogueAugment_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassAugment*), true );
  }
  return (RogueAugment_List*)(THIS);
}

RogueAugment_List* RogueAugment_List__add__Augment( RogueAugment_List* THIS, RogueClassAugment* value_0 )
{
  ((RogueAugment_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueAugment_List*)(THIS);
}

RogueInt32 RogueAugment_List__capacity( RogueAugment_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueAugment_List* RogueAugment_List__reserve__Int32( RogueAugment_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassAugment*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueAugment_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassAugment*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueAugment_List*)(THIS);
}

RogueClassAugment* RogueAugment__init_object( RogueClassAugment* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->base_types = ((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) )));
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  return (RogueClassAugment*)(THIS);
}

RogueString* RogueAugment__type_name( RogueClassAugment* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1019]);
}

RogueClassAugment* RogueAugment__init__Token_String( RogueClassAugment* THIS, RogueClassToken* _auto_703_0, RogueString* _auto_704_1 )
{
  THIS->name = _auto_704_1;
  THIS->t = _auto_703_0;
  return (RogueClassAugment*)(THIS);
}

RogueString* RogueArray_Augment___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1110]);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init_object( RogueClassTable_String_Type_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init( RogueClassTable_String_Type_* THIS )
{
  RogueTable_String_Type___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueString* RogueTable_String_Type___to_String( RogueClassTable_String_Type_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Type___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Type___type_name( RogueClassTable_String_Type_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[967]);
}

RogueClassTable_String_Type_* RogueTable_String_Type___init__Int32( RogueClassTable_String_Type_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Type_*), true );
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueClassType* RogueTable_String_Type___at__Int32( RogueClassTable_String_Type_* THIS, RogueInt32 index_0 )
{
  {
    {
      {
        if ( !(THIS->count) ) goto _auto_2665;
        if (!(!!(THIS->cur_entry)))
        {
          if (index_0 <= (THIS->count / 2))
          {
            THIS->cur_entry = THIS->first_entry;
            THIS->cur_entry_index = 0;
          }
          else
          {
            THIS->cur_entry = THIS->last_entry;
            THIS->cur_entry_index = (THIS->count - 1);
          }
        }
        while (THIS->cur_entry_index < index_0)
        {
          ++THIS->cur_entry_index;
          THIS->cur_entry = THIS->cur_entry->next_entry;
          if ( !(THIS->cur_entry) ) goto _auto_2665;
        }
        while (THIS->cur_entry_index > index_0)
        {
          --THIS->cur_entry_index;
          THIS->cur_entry = THIS->cur_entry->previous_entry;
          if ( !(THIS->cur_entry) ) goto _auto_2665;
        }
        return (RogueClassType*)(THIS->cur_entry->value);
        }
    }
    _auto_2665:;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,default_value_1,0);
      return (RogueClassType*)(default_value_1);
      }
  }
}

RogueClassTableEntry_String_Type_* RogueTable_String_Type___find__String( RogueClassTable_String_Type_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_2,(((RogueClassTableEntry_String_Type_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Type_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Type_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Type_*)(((RogueClassTableEntry_String_Type_*)(NULL)));
}

RogueClassType* RogueTable_String_Type___get__String( RogueClassTable_String_Type_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_1,(((RogueTable_String_Type___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassType*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,default_value_2,0);
    return (RogueClassType*)(default_value_2);
  }
}

RogueClassTable_String_Type_* RogueTable_String_Type___set__String_Type( RogueClassTable_String_Type_* THIS, RogueString* key_0, RogueClassType* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,entry_2,(((RogueTable_String_Type___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Type_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Type____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Type_*)((RogueTableEntry_String_Type___init__String_Type_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Type_*,ROGUE_CREATE_OBJECT(TableEntry_String_Type_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Type_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Type_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Type___print_to__StringBuilder( RogueClassTable_String_Type_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Type_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Type____grow( RogueClassTable_String_Type_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Type_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Type_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Type_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Type_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Type____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1111]);
}

RogueClassTableEntry_String_Type_* RogueTableEntry_String_Type___init_object( RogueClassTableEntry_String_Type_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Type_*)(THIS);
}

RogueString* RogueTableEntry_String_Type___to_String( RogueClassTableEntry_String_Type_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Type___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Type___type_name( RogueClassTableEntry_String_Type_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[931]);
}

RogueClassTableEntry_String_Type_* RogueTableEntry_String_Type___init__String_Type_Int32( RogueClassTableEntry_String_Type_* THIS, RogueString* _key_0, RogueClassType* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Type_*)(THIS);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init_object( RogueClassTable_String_Int32_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init( RogueClassTable_String_Int32_* THIS )
{
  RogueTable_String_Int32___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueString* RogueTable_String_Int32___to_String( RogueClassTable_String_Int32_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Int32___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Int32___type_name( RogueClassTable_String_Int32_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[968]);
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___init__Int32( RogueClassTable_String_Int32_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Int32_*), true );
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueClassTableEntry_String_Int32_* RogueTable_String_Int32___find__String( RogueClassTable_String_Int32_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_2,(((RogueClassTableEntry_String_Int32_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Int32_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Int32_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Int32_*)(((RogueClassTableEntry_String_Int32_*)(NULL)));
}

RogueClassTable_String_Int32_* RogueTable_String_Int32___set__String_Int32( RogueClassTable_String_Int32_* THIS, RogueString* key_0, RogueInt32 value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,entry_2,(((RogueTable_String_Int32___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Int32_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Int32____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Int32_*)((RogueTableEntry_String_Int32___init__String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Int32_*,ROGUE_CREATE_OBJECT(TableEntry_String_Int32_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Int32_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Int32_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Int32___print_to__StringBuilder( RogueClassTable_String_Int32_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Int32( buffer_0, ROGUE_ARG(cur_1->value) );
    cur_1 = ((RogueClassTableEntry_String_Int32_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Int32____grow( RogueClassTable_String_Int32_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Int32_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Int32_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Int32_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Int32_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Int32____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1112]);
}

RogueClassTableEntry_String_Int32_* RogueTableEntry_String_Int32___init_object( RogueClassTableEntry_String_Int32_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Int32_*)(THIS);
}

RogueString* RogueTableEntry_String_Int32___to_String( RogueClassTableEntry_String_Int32_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Int32___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Int32___type_name( RogueClassTableEntry_String_Int32_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[908]);
}

RogueClassTableEntry_String_Int32_* RogueTableEntry_String_Int32___init__String_Int32_Int32( RogueClassTableEntry_String_Int32_* THIS, RogueString* _key_0, RogueInt32 _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Int32_*)(THIS);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init_object( RogueClassTable_String_String_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init( RogueClassTable_String_String_List_* THIS )
{
  RogueTable_String_String_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueString* RogueTable_String_String_List___to_String( RogueClassTable_String_String_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_String_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_String_List___type_name( RogueClassTable_String_String_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[969]);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___init__Int32( RogueClassTable_String_String_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_String_List_*), true );
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueClassTableEntry_String_String_List_* RogueTable_String_String_List___find__String( RogueClassTable_String_String_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_2,(((RogueClassTableEntry_String_String_List_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_String_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_String_List_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_String_List_*)(((RogueClassTableEntry_String_String_List_*)(NULL)));
}

RogueString_List* RogueTable_String_String_List___get__String( RogueClassTable_String_String_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_1,(((RogueTable_String_String_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueString_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueString_List*,default_value_2,0);
    return (RogueString_List*)(default_value_2);
  }
}

RogueString_List* RogueTable_String_String_List___keys( RogueClassTable_String_String_List_* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString_List*,result_0,(((RogueString_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))), ROGUE_ARG(THIS->count) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,cur_1,(THIS->first_entry));
  while (!!(cur_1))
  {
    RogueString_List__add__String( result_0, ROGUE_ARG(cur_1->key) );
    cur_1 = ((RogueClassTableEntry_String_String_List_*)cur_1->next_entry);
  }
  return (RogueString_List*)(result_0);
}

RogueClassTable_String_String_List_* RogueTable_String_String_List___set__String_String_List( RogueClassTable_String_String_List_* THIS, RogueString* key_0, RogueString_List* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,entry_2,(((RogueTable_String_String_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_String_List_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_String_List____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_String_List_*)((RogueTableEntry_String_String_List___init__String_String_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_String_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_String_List_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_String_List_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_String_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_String_List___print_to__StringBuilder( RogueClassTable_String_String_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_String_List_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_String_List____grow( RogueClassTable_String_String_List_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_String_List_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_String_List_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_String_List_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_String_List_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_String_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1113]);
}

RogueClassTableEntry_String_String_List_* RogueTableEntry_String_String_List___init_object( RogueClassTableEntry_String_String_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_String_List_*)(THIS);
}

RogueString* RogueTableEntry_String_String_List___to_String( RogueClassTableEntry_String_String_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_String_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_String_List___type_name( RogueClassTableEntry_String_String_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[932]);
}

RogueClassTableEntry_String_String_List_* RogueTableEntry_String_String_List___init__String_String_List_Int32( RogueClassTableEntry_String_String_List_* THIS, RogueString* _key_0, RogueString_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_String_List_*)(THIS);
}

RogueClassTable_Type_CyClass_* RogueTable_Type_CyClass___init_object( RogueClassTable_Type_CyClass_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_Type_CyClass_*)(THIS);
}

RogueClassTable_Type_CyClass_* RogueTable_Type_CyClass___init( RogueClassTable_Type_CyClass_* THIS )
{
  RogueTable_Type_CyClass___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_Type_CyClass_*)(THIS);
}

RogueString* RogueTable_Type_CyClass___to_String( RogueClassTable_Type_CyClass_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_Type_CyClass___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_Type_CyClass___type_name( RogueClassTable_Type_CyClass_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[970]);
}

RogueClassTable_Type_CyClass_* RogueTable_Type_CyClass___init__Int32( RogueClassTable_Type_CyClass_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_Type_CyClass_*), true );
  return (RogueClassTable_Type_CyClass_*)(THIS);
}

RogueLogical RogueTable_Type_CyClass___contains__Type( RogueClassTable_Type_CyClass_* THIS, RogueClassType* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_Type_CyClass___find__Type( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_Type_CyClass_* RogueTable_Type_CyClass___find__Type( RogueClassTable_Type_CyClass_* THIS, RogueClassType* key_0 )
{
  RogueInt32 hash_1 = ((Rogue_call_ROGUEM2( 3, ((RogueObject*)key_0) )));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_CyClass_*,entry_2,(((RogueClassTableEntry_Type_CyClass_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && (Rogue_call_ROGUEM3( 6, ROGUE_ARG(((RogueObject*)entry_2->key)), ROGUE_ARG(((RogueObject*)(key_0))) ))))
    {
      return (RogueClassTableEntry_Type_CyClass_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_Type_CyClass_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_Type_CyClass_*)(((RogueClassTableEntry_Type_CyClass_*)(NULL)));
}

RogueClassCyClass* RogueTable_Type_CyClass___get__Type( RogueClassTable_Type_CyClass_* THIS, RogueClassType* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_CyClass_*,entry_1,(((RogueTable_Type_CyClass___find__Type( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassCyClass*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,default_value_2,0);
    return (RogueClassCyClass*)(default_value_2);
  }
}

RogueClassTable_Type_CyClass_* RogueTable_Type_CyClass___set__Type_CyClass( RogueClassTable_Type_CyClass_* THIS, RogueClassType* key_0, RogueClassCyClass* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_CyClass_*,entry_2,(((RogueTable_Type_CyClass___find__Type( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_Type_CyClass_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_Type_CyClass____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = ((Rogue_call_ROGUEM2( 3, ((RogueObject*)key_0) )));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_Type_CyClass_*)((RogueTableEntry_Type_CyClass___init__Type_CyClass_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_Type_CyClass_*,ROGUE_CREATE_OBJECT(TableEntry_Type_CyClass_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_Type_CyClass_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_Type_CyClass_*)(THIS);
}

RogueStringBuilder* RogueTable_Type_CyClass___print_to__StringBuilder( RogueClassTable_Type_CyClass_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_CyClass_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->key))) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_Type_CyClass_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTableValueReader_Type_CyClass_* RogueTable_Type_CyClass___value_reader( RogueClassTable_Type_CyClass_* THIS )
{
  return (RogueClassTableValueReader_Type_CyClass_*)(((RogueTableValueReader_Type_CyClass___init__Table_Type_CyClass_( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableValueReader_Type_CyClass_*,ROGUE_CREATE_OBJECT(TableValueReader_Type_CyClass_))), ROGUE_ARG(THIS) ))));
}

void RogueTable_Type_CyClass____grow( RogueClassTable_Type_CyClass_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_Type_CyClass_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_CyClass_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_Type_CyClass_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_Type_CyClass_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_Type_CyClass____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1114]);
}

RogueClassTableEntry_Type_CyClass_* RogueTableEntry_Type_CyClass___init_object( RogueClassTableEntry_Type_CyClass_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_Type_CyClass_*)(THIS);
}

RogueString* RogueTableEntry_Type_CyClass___to_String( RogueClassTableEntry_Type_CyClass_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_Type_CyClass___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->key))) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_Type_CyClass___type_name( RogueClassTableEntry_Type_CyClass_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[933]);
}

RogueClassTableEntry_Type_CyClass_* RogueTableEntry_Type_CyClass___init__Type_CyClass_Int32( RogueClassTableEntry_Type_CyClass_* THIS, RogueClassType* _key_0, RogueClassCyClass* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_Type_CyClass_*)(THIS);
}

RogueClassCyClass* RogueCyClass__init_object( RogueClassCyClass* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->funcs = ((RogueTable_String_CyMethod_List___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_CyMethod_List_*,ROGUE_CREATE_OBJECT(Table_String_CyMethod_List_))) )));
  THIS->properties = ((RogueTable_String_CyProperty___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_CyProperty_*,ROGUE_CREATE_OBJECT(Table_String_CyProperty_))) )));
  return (RogueClassCyClass*)(THIS);
}

RogueString* RogueCyClass__to_String( RogueClassCyClass* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCyClass__type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->_type))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueCyClass__type_name( RogueClassCyClass* THIS )
{
  return (RogueString*)(Rogue_literal_strings[913]);
}

RogueClassCyClass* RogueCyClass__init__Type_Logical_Logical( RogueClassCyClass* THIS, RogueClassType* _auto_575_0, RogueLogical force_1, RogueLogical do_properties_2 )
{
  THIS->_type = _auto_575_0;
  RogueCyClass__initialize();
  if (((!(((RogueType__is_class( ROGUE_ARG(THIS->_type) )))) && !(((RogueType__is_aspect( ROGUE_ARG(THIS->_type) ))))) && !(force_1)))
  {
    return (RogueClassCyClass*)(THIS);
  }
  THIS->is_routine = ((RogueType__is_routine( ROGUE_ARG(THIS->_type) )));
  THIS->_pytype = (RogueCyClass__get_p_type__Type( ROGUE_ARG(THIS->_type) ));
  if (((void*)THIS->_pytype) == ((void*)NULL))
  {
    return (RogueClassCyClass*)(THIS);
  }
  THIS->_type = THIS->_type;
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2723_9,(THIS->_type->global_method_list));
    RogueInt32 _auto_2724_10 = (0);
    for (;_auto_2724_10 < _auto_2723_9->count;++_auto_2724_10)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueClassMethod*)(_auto_2723_9->data->as_objects[_auto_2724_10]))));
      ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,f_3,(((RogueCyMethod__init__CyClass_Type_Method_Logical_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCyMethod*,ROGUE_CREATE_OBJECT(CyMethod))), ROGUE_ARG(THIS), ROGUE_ARG(THIS->_type), m_11, true, force_1 )))));
      if (f_3->is_initializer)
      {
        continue;
      }
      if (!(f_3->valid))
      {
        continue;
      }
      if (f_3->is_routine != THIS->is_routine)
      {
        ROGUE_THROW(RogueClassError,((RogueClassError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[806] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_type->name) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_11->name) )))) )))) )))) )))));
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,dname_4,(f_3->pyname));
      if (!(((RogueTable_String_CyMethod_List___contains__String( ROGUE_ARG(THIS->funcs), dname_4 )))))
      {
        RogueTable_String_CyMethod_List___set__String_CyMethod_List( ROGUE_ARG(THIS->funcs), dname_4, ROGUE_ARG(((RogueCyMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCyMethod_List*,ROGUE_CREATE_OBJECT(CyMethod_List))) )))) );
      }
      RogueCyMethod_List__add__CyMethod( ROGUE_ARG(((RogueTable_String_CyMethod_List___get__String( ROGUE_ARG(THIS->funcs), dname_4 )))), f_3 );
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2726_12,(THIS->_type->method_list));
    RogueInt32 _auto_2727_13 = (0);
    for (;_auto_2727_13 < _auto_2726_12->count;++_auto_2727_13)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueClassMethod*)(_auto_2726_12->data->as_objects[_auto_2727_13]))));
      ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,f_5,(((RogueCyMethod__init__CyClass_Type_Method_Logical_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCyMethod*,ROGUE_CREATE_OBJECT(CyMethod))), ROGUE_ARG(THIS), ROGUE_ARG(THIS->_type), m_14, false, force_1 )))));
      if (!(f_5->valid))
      {
        continue;
      }
      if (f_5->is_routine != THIS->is_routine)
      {
        ROGUE_THROW(RogueClassError,((RogueClassError*)((Rogue_call_ROGUEM22( 17, ROGUE_ARG(((RogueException*)ROGUE_CREATE_REF(RogueClassError*,ROGUE_CREATE_OBJECT(Error)))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[806] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_type->name) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_14->name) )))) )))) )))) )))));
      }
      if (f_5->is_initializer)
      {
        f_5->pyname = Rogue_literal_strings[807];
      }
      ROGUE_DEF_LOCAL_REF(RogueString*,dname_6,(f_5->pyname));
      if (!(((RogueTable_String_CyMethod_List___contains__String( ROGUE_ARG(THIS->funcs), dname_6 )))))
      {
        RogueTable_String_CyMethod_List___set__String_CyMethod_List( ROGUE_ARG(THIS->funcs), dname_6, ROGUE_ARG(((RogueCyMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCyMethod_List*,ROGUE_CREATE_OBJECT(CyMethod_List))) )))) );
      }
      RogueCyMethod_List__add__CyMethod( ROGUE_ARG(((RogueTable_String_CyMethod_List___get__String( ROGUE_ARG(THIS->funcs), dname_6 )))), f_5 );
    }
  }
  if (do_properties_2)
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_2729_15,(THIS->_type->property_list));
      RogueInt32 _auto_2730_16 = (0);
      for (;_auto_2730_16 < _auto_2729_15->count;++_auto_2730_16)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_17,(((RogueClassProperty*)(_auto_2729_15->data->as_objects[_auto_2730_16]))));
        ROGUE_DEF_LOCAL_REF(RogueClassCyProperty*,prop_7,(((RogueCyProperty__init__CyClass_Type_Property_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCyProperty*,ROGUE_CREATE_OBJECT(CyProperty))), ROGUE_ARG(THIS), ROGUE_ARG(THIS->_type), p_17, false )))));
        if (prop_7->valid)
        {
          RogueTable_String_CyProperty___set__String_CyProperty( ROGUE_ARG(THIS->properties), ROGUE_ARG(prop_7->pyname), prop_7 );
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_2731_18,(THIS->_type->global_list));
      RogueInt32 _auto_2732_19 = (0);
      for (;_auto_2732_19 < _auto_2731_18->count;++_auto_2732_19)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_20,(((RogueClassProperty*)(_auto_2731_18->data->as_objects[_auto_2732_19]))));
        ROGUE_DEF_LOCAL_REF(RogueClassCyProperty*,prop_8,(((RogueCyProperty__init__CyClass_Type_Property_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCyProperty*,ROGUE_CREATE_OBJECT(CyProperty))), ROGUE_ARG(THIS), ROGUE_ARG(THIS->_type), p_20, true )))));
        if (prop_8->valid)
        {
          RogueTable_String_CyProperty___set__String_CyProperty( ROGUE_ARG(THIS->properties), ROGUE_ARG(prop_8->pyname), prop_8 );
        }
      }
    }
  }
  return (RogueClassCyClass*)(THIS);
}

RogueClassTable_String_CyMethod_List_* RogueTable_String_CyMethod_List___init_object( RogueClassTable_String_CyMethod_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_CyMethod_List_*)(THIS);
}

RogueClassTable_String_CyMethod_List_* RogueTable_String_CyMethod_List___init( RogueClassTable_String_CyMethod_List_* THIS )
{
  RogueTable_String_CyMethod_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_CyMethod_List_*)(THIS);
}

RogueString* RogueTable_String_CyMethod_List___to_String( RogueClassTable_String_CyMethod_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_CyMethod_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_CyMethod_List___type_name( RogueClassTable_String_CyMethod_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[994]);
}

RogueClassTable_String_CyMethod_List_* RogueTable_String_CyMethod_List___init__Int32( RogueClassTable_String_CyMethod_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_CyMethod_List_*), true );
  return (RogueClassTable_String_CyMethod_List_*)(THIS);
}

RogueLogical RogueTable_String_CyMethod_List___contains__String( RogueClassTable_String_CyMethod_List_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_CyMethod_List___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_CyMethod_List_* RogueTable_String_CyMethod_List___find__String( RogueClassTable_String_CyMethod_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyMethod_List_*,entry_2,(((RogueClassTableEntry_String_CyMethod_List_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_CyMethod_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_CyMethod_List_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_CyMethod_List_*)(((RogueClassTableEntry_String_CyMethod_List_*)(NULL)));
}

RogueCyMethod_List* RogueTable_String_CyMethod_List___get__String( RogueClassTable_String_CyMethod_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyMethod_List_*,entry_1,(((RogueTable_String_CyMethod_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueCyMethod_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,default_value_2,0);
    return (RogueCyMethod_List*)(default_value_2);
  }
}

RogueClassTable_String_CyMethod_List_* RogueTable_String_CyMethod_List___set__String_CyMethod_List( RogueClassTable_String_CyMethod_List_* THIS, RogueString* key_0, RogueCyMethod_List* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyMethod_List_*,entry_2,(((RogueTable_String_CyMethod_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_CyMethod_List_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_CyMethod_List____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_CyMethod_List_*)((RogueTableEntry_String_CyMethod_List___init__String_CyMethod_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_CyMethod_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_CyMethod_List_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_CyMethod_List_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_CyMethod_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_CyMethod_List___print_to__StringBuilder( RogueClassTable_String_CyMethod_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyMethod_List_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_CyMethod_List_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTableValueReader_String_CyMethod_List_* RogueTable_String_CyMethod_List___value_reader( RogueClassTable_String_CyMethod_List_* THIS )
{
  return (RogueClassTableValueReader_String_CyMethod_List_*)(((RogueTableValueReader_String_CyMethod_List___init__Table_String_CyMethod_List_( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableValueReader_String_CyMethod_List_*,ROGUE_CREATE_OBJECT(TableValueReader_String_CyMethod_List_))), ROGUE_ARG(THIS) ))));
}

void RogueTable_String_CyMethod_List____grow( RogueClassTable_String_CyMethod_List_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_CyMethod_List_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyMethod_List_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_CyMethod_List_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_CyMethod_List_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_CyMethod_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1115]);
}

RogueClassTableEntry_String_CyMethod_List_* RogueTableEntry_String_CyMethod_List___init_object( RogueClassTableEntry_String_CyMethod_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_CyMethod_List_*)(THIS);
}

RogueString* RogueTableEntry_String_CyMethod_List___to_String( RogueClassTableEntry_String_CyMethod_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_CyMethod_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_CyMethod_List___type_name( RogueClassTableEntry_String_CyMethod_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[934]);
}

RogueClassTableEntry_String_CyMethod_List_* RogueTableEntry_String_CyMethod_List___init__String_CyMethod_List_Int32( RogueClassTableEntry_String_CyMethod_List_* THIS, RogueString* _key_0, RogueCyMethod_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_CyMethod_List_*)(THIS);
}

RogueCyMethod_List* RogueCyMethod_List__init_object( RogueCyMethod_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCyMethod_List*)(THIS);
}

RogueCyMethod_List* RogueCyMethod_List__init( RogueCyMethod_List* THIS )
{
  RogueCyMethod_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCyMethod_List*)(THIS);
}

RogueString* RogueCyMethod_List__to_String( RogueCyMethod_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,_auto_2744_2,(THIS));
    RogueInt32 _auto_2745_3 = (0);
    for (;_auto_2745_3 < _auto_2744_2->count;++_auto_2745_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyMethod*,value_4,(((RogueClassCyMethod*)(_auto_2744_2->data->as_objects[_auto_2745_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueCyMethod__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCyMethod_List__type_name( RogueCyMethod_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1055]);
}

RogueCyMethod_List* RogueCyMethod_List__init__Int32( RogueCyMethod_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCyMethod*), true );
  }
  return (RogueCyMethod_List*)(THIS);
}

RogueCyMethod_List* RogueCyMethod_List__add__CyMethod( RogueCyMethod_List* THIS, RogueClassCyMethod* value_0 )
{
  ((RogueCyMethod_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCyMethod_List*)(THIS);
}

RogueInt32 RogueCyMethod_List__capacity( RogueCyMethod_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCyMethod_List* RogueCyMethod_List__reserve__Int32( RogueCyMethod_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCyMethod*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCyMethod_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCyMethod*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCyMethod_List*)(THIS);
}

RogueClassCyMethod* RogueCyMethod__init_object( RogueClassCyMethod* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->return_converter = Rogue_literal_strings[0];
  THIS->call_args = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->cproto_params = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->py_params = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->defaults = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->py_types = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  THIS->prologue = ((RogueString_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueString_List*,ROGUE_CREATE_OBJECT(String_List))) )));
  return (RogueClassCyMethod*)(THIS);
}

RogueInt32 RogueCyMethod__hash_code( RogueClassCyMethod* THIS )
{
  return (RogueInt32)(((RogueString__hash_code( ROGUE_ARG(((RogueCyMethod__to_String( ROGUE_ARG(THIS) )))) ))));
}

RogueString* RogueCyMethod__to_String( RogueClassCyMethod* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCyMethod__full_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->cproto_params))) )))) )))), Rogue_literal_strings[907] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->cproto_return) )))) )))) ))));
}

RogueString* RogueCyMethod__type_name( RogueClassCyMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[995]);
}

RogueString* RogueCyMethod__get_param_name__Local( RogueClassCyMethod* THIS, RogueClassLocal* param_0 )
{
  if (((RogueString__begins_with__String( ROGUE_ARG(param_0->original_name), Rogue_literal_strings[146] ))))
  {
    return (RogueString*)(((RogueString__after__Int32( ROGUE_ARG(param_0->original_name), 0 ))));
  }
  return (RogueString*)(param_0->original_name);
}

RogueString* RogueCyMethod__full_name( RogueClassCyMethod* THIS )
{
  if (!!(THIS->pyclass))
  {
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->pyclass) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->pyname) )))) )))) ))));
  }
  return (RogueString*)(THIS->pyname);
}

RogueClassCyMethod* RogueCyMethod__init__CyClass_Type_Method_Logical_Logical( RogueClassCyMethod* THIS, RogueClassCyClass* builder_0, RogueClassType* context_1, RogueClassMethod* m_2, RogueLogical static_dispatch_3, RogueLogical force_4 )
{
  if (((RogueMethod__is_macro( m_2 ))))
  {
    return (RogueClassCyMethod*)(THIS);
  }
  if (((RogueMethod__is_task( m_2 ))))
  {
    return (RogueClassCyMethod*)(THIS);
  }
  if (((RogueMethod__is_abstract( m_2 ))))
  {
    return (RogueClassCyMethod*)(THIS);
  }
  if (((RogueMethod__is_task_conversion( m_2 ))))
  {
    return (RogueClassCyMethod*)(THIS);
  }
  if ((((RogueMethod__omit_output( m_2 ))) && !(force_4)))
  {
    return (RogueClassCyMethod*)(THIS);
  }
  if (((RogueType__is_routine( context_1 ))))
  {
    THIS->pyname = context_1->name;
    if (((RogueString__operatorLTGT__String( ROGUE_ARG(m_2->name), Rogue_literal_strings[310] ))) != 0)
    {
      return (RogueClassCyMethod*)(THIS);
    }
    THIS->pyclass = Rogue_literal_strings[0];
  }
  else
  {
    THIS->pyname = m_2->name;
    THIS->pyclass = (RogueCyClass__get_p_type__Type( context_1 ));
  }
  if (((((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_2->name), Rogue_literal_strings[466] ))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_2->name), Rogue_literal_strings[772] )))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_2->name), Rogue_literal_strings[468] )))))
  {
    return (RogueClassCyMethod*)(THIS);
  }
  THIS->cname = m_2->cpp_name;
  THIS->is_initializer = ((RogueMethod__is_initializer( m_2 )));
  THIS->is_routine = ((RogueType__is_routine( context_1 )));
  THIS->pyname = (RogueCyClass__fix_name__String( ROGUE_ARG(THIS->pyname) ));
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->pyname), Rogue_literal_strings[0] ))))
  {
    return (RogueClassCyMethod*)(THIS);
  }
  if (static_dispatch_3)
  {
  }
  else if ((!(THIS->is_routine) || m_2->called_dynamically))
  {
    RogueString_List__add__String( ROGUE_ARG(THIS->call_args), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[789] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_2->type_context->cpp_class_name) )))) )))), Rogue_literal_strings[790] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(builder_0->_pytype) )))) )))), Rogue_literal_strings[611] )))) )))) );
    RogueString_List__add__String( ROGUE_ARG(THIS->cproto_params), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(context_1->cpp_class_name), Rogue_literal_strings[188] )))) );
  }
  if (!(THIS->is_routine))
  {
    if (static_dispatch_3)
    {
      THIS->is_static_method = true;
    }
  }
  THIS->return_converter = Rogue_literal_strings[173];
  if (!(!!(m_2->_return_type)))
  {
    THIS->cproto_return = Rogue_literal_strings[604];
    THIS->return_converter = ((RogueString*)(NULL));
  }
  else
  {
    THIS->return_converter = (RogueCyClass__get_c_to_py__Type( ROGUE_ARG(m_2->_return_type) ));
    if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->return_converter), Rogue_literal_strings[0] ))))
    {
      return (RogueClassCyMethod*)(THIS);
    }
    THIS->cproto_return = (RogueCyClass__get_c_type__Type( ROGUE_ARG(m_2->_return_type) ));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2792_15,(m_2->parameters));
    RogueInt32 _auto_2793_16 = (0);
    for (;_auto_2793_16 < _auto_2792_15->count;++_auto_2793_16)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_17,(((RogueClassLocal*)(_auto_2792_15->data->as_objects[_auto_2793_16]))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,default_5,(param_17->initial_value));
      RogueLogical negate_6 = ((!!(default_5) && RogueObject_instance_of(default_5,RogueTypeCmdNegate)));
      if (negate_6)
      {
        default_5 = ((RogueClassCmd*)((RogueClassCmdNegate*)(RogueObject_as(default_5,RogueTypeCmdNegate)))->operand);
      }
      RogueLogical negatable_7 = (false);
      if (((void*)default_5) == ((void*)NULL))
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), Rogue_literal_strings[793] );
      }
      else if (RogueObject_instance_of(default_5,RogueTypeCmdLiteralReal64))
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), ROGUE_ARG(((RogueReal64__to_String( ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(default_5,RogueTypeCmdLiteralReal64)))->value) )))) );
        negatable_7 = ((RogueLogical)true);
      }
      else if (RogueObject_instance_of(default_5,RogueTypeCmdLiteralString))
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[796], ROGUE_ARG(((RogueClassCmdLiteralString*)(RogueObject_as(default_5,RogueTypeCmdLiteralString)))->value) )))), Rogue_literal_strings[796] )))) );
      }
      else if (RogueObject_instance_of(default_5,RogueTypeCmdLiteralInt32))
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), ROGUE_ARG(((RogueInt32__to_String( ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(default_5,RogueTypeCmdLiteralInt32)))->value) )))) );
        negatable_7 = ((RogueLogical)true);
      }
      else if (RogueObject_instance_of(default_5,RogueTypeCmdLiteralInt64))
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), ROGUE_ARG(((RogueInt64__to_String( ROGUE_ARG(((RogueClassCmdLiteralInt64*)(RogueObject_as(default_5,RogueTypeCmdLiteralInt64)))->value) )))) );
        negatable_7 = ((RogueLogical)true);
      }
      else if (RogueObject_instance_of(default_5,RogueTypeCmdLiteralLogical))
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), ROGUE_ARG(((((((RogueClassCmdLiteralLogical*)(RogueObject_as(default_5,RogueTypeCmdLiteralLogical)))->value))) ? (ROGUE_ARG(Rogue_literal_strings[797])) : ROGUE_ARG(Rogue_literal_strings[798]))) );
      }
      else if (RogueObject_instance_of(default_5,RogueTypeCmdLiteralNull))
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), Rogue_literal_strings[799] );
      }
      else if (RogueObject_instance_of(default_5,RogueTypeCmdLiteralCharacter))
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), ROGUE_ARG(((RogueInt32__to_String( ROGUE_ARG(((RogueInt32)(((RogueClassCmdLiteralCharacter*)(RogueObject_as(default_5,RogueTypeCmdLiteralCharacter)))->value))) )))) );
      }
      else if (RogueObject_instance_of(default_5,RogueTypeCmdAccess))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_8,(((RogueCmdAccess__resolve__Scope_Logical( ROGUE_ARG(((RogueClassCmdAccess*)(RogueObject_as(default_5,RogueTypeCmdAccess)))), ROGUE_ARG(((RogueScope__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassScope*,ROGUE_CREATE_OBJECT(Scope))), context_1, m_2 )))), true )))));
        if ((RogueObject_instance_of(cmd_8,RogueTypeCmdReadProperty) && (Rogue_call_ROGUEM3( 6, ROGUE_ARG(((RogueObject*)((RogueClassCmdReadProperty*)(RogueObject_as(cmd_8,RogueTypeCmdReadProperty)))->property_info->type_context)), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global))) ))))
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdReadProperty*,rp_9,(((RogueClassCmdReadProperty*)(RogueObject_as(cmd_8,RogueTypeCmdReadProperty)))));
          RogueString_List__add__String( ROGUE_ARG(THIS->defaults), Rogue_literal_strings[800] );
          RogueString_List__add__String( ROGUE_ARG(THIS->prologue), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[801] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(param_17->name) )))) )))), Rogue_literal_strings[802] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(param_17->name) )))) )))), Rogue_literal_strings[803] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(rp_9->property_info->name) )))) )))) )))) );
        }
        else
        {
          RogueString_List__add__String( ROGUE_ARG(THIS->defaults), Rogue_literal_strings[793] );
        }
      }
      else
      {
        RogueString_List__add__String( ROGUE_ARG(THIS->defaults), Rogue_literal_strings[793] );
      }
      if (negate_6)
      {
        if (negatable_7)
        {
          THIS->defaults->data->as_objects[(THIS->defaults->count - 1)] = ((RogueString__operatorPLUS__String( Rogue_literal_strings[167], ROGUE_ARG(((RogueString*)(THIS->defaults->data->as_objects[(THIS->defaults->count - 1)]))) )));
        }
        else
        {
          THIS->defaults->data->as_objects[(THIS->defaults->count - 1)] = Rogue_literal_strings[793];
        }
      }
      RogueString_List__add__String( ROGUE_ARG(THIS->py_types), ROGUE_ARG((RogueCyClass__get_p_type__Type( ROGUE_ARG(param_17->_type) ))) );
      RogueString_List__add__String( ROGUE_ARG(THIS->py_params), ROGUE_ARG(((RogueCyMethod__get_param_name__Local( ROGUE_ARG(THIS), param_17 )))) );
      RogueString_List__add__String( ROGUE_ARG(THIS->cproto_params), ROGUE_ARG((RogueCyClass__get_c_type__Type( ROGUE_ARG(param_17->_type) ))) );
      ROGUE_DEF_LOCAL_REF(RogueString*,a_10,((RogueCyClass__get_py_to_c__Type( ROGUE_ARG(param_17->_type) ))));
      if (((RogueString__operatorEQUALSEQUALS__String( a_10, Rogue_literal_strings[0] ))))
      {
        return (RogueClassCyMethod*)(THIS);
      }
      RogueString_List__add__String( ROGUE_ARG(THIS->call_args), ROGUE_ARG(((RogueString__replacing__String_String( a_10, Rogue_literal_strings[173], ROGUE_ARG(((RogueCyMethod__get_param_name__Local( ROGUE_ARG(THIS), param_17 )))) )))) );
    }
  }
  if (!!(THIS->defaults->count))
  {
    RogueLogical no_defaults_11 = (false);
    {
      RogueInt32 i_12 = (1);
      RogueInt32 _auto_265_13 = (THIS->defaults->count);
      for (;i_12 <= _auto_265_13;++i_12)
      {
        RogueInt32 j_14 = ((THIS->defaults->count - i_12));
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(((RogueString*)(THIS->defaults->data->as_objects[j_14]))), Rogue_literal_strings[793] ))))
        {
          no_defaults_11 = ((RogueLogical)true);
        }
        else if (no_defaults_11)
        {
          THIS->defaults->data->as_objects[j_14] = Rogue_literal_strings[793];
        }
      }
    }
  }
  THIS->real_method = m_2;
  THIS->valid = true;
  return (RogueClassCyMethod*)(THIS);
}

RogueString* RogueArray_CyMethod___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1081]);
}

RogueClassTable_String_CyProperty_* RogueTable_String_CyProperty___init_object( RogueClassTable_String_CyProperty_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_CyProperty_*)(THIS);
}

RogueClassTable_String_CyProperty_* RogueTable_String_CyProperty___init( RogueClassTable_String_CyProperty_* THIS )
{
  RogueTable_String_CyProperty___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_CyProperty_*)(THIS);
}

RogueString* RogueTable_String_CyProperty___to_String( RogueClassTable_String_CyProperty_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_CyProperty___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_CyProperty___type_name( RogueClassTable_String_CyProperty_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[996]);
}

RogueClassTable_String_CyProperty_* RogueTable_String_CyProperty___init__Int32( RogueClassTable_String_CyProperty_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_CyProperty_*), true );
  return (RogueClassTable_String_CyProperty_*)(THIS);
}

RogueClassCyProperty* RogueTable_String_CyProperty___at__Int32( RogueClassTable_String_CyProperty_* THIS, RogueInt32 index_0 )
{
  {
    {
      {
        if ( !(THIS->count) ) goto _auto_2796;
        if (!(!!(THIS->cur_entry)))
        {
          if (index_0 <= (THIS->count / 2))
          {
            THIS->cur_entry = THIS->first_entry;
            THIS->cur_entry_index = 0;
          }
          else
          {
            THIS->cur_entry = THIS->last_entry;
            THIS->cur_entry_index = (THIS->count - 1);
          }
        }
        while (THIS->cur_entry_index < index_0)
        {
          ++THIS->cur_entry_index;
          THIS->cur_entry = THIS->cur_entry->next_entry;
          if ( !(THIS->cur_entry) ) goto _auto_2796;
        }
        while (THIS->cur_entry_index > index_0)
        {
          --THIS->cur_entry_index;
          THIS->cur_entry = THIS->cur_entry->previous_entry;
          if ( !(THIS->cur_entry) ) goto _auto_2796;
        }
        return (RogueClassCyProperty*)(THIS->cur_entry->value);
        }
    }
    _auto_2796:;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyProperty*,default_value_1,0);
      return (RogueClassCyProperty*)(default_value_1);
      }
  }
}

RogueClassTableEntry_String_CyProperty_* RogueTable_String_CyProperty___find__String( RogueClassTable_String_CyProperty_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyProperty_*,entry_2,(((RogueClassTableEntry_String_CyProperty_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_CyProperty_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_CyProperty_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_CyProperty_*)(((RogueClassTableEntry_String_CyProperty_*)(NULL)));
}

RogueClassTable_String_CyProperty_* RogueTable_String_CyProperty___set__String_CyProperty( RogueClassTable_String_CyProperty_* THIS, RogueString* key_0, RogueClassCyProperty* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyProperty_*,entry_2,(((RogueTable_String_CyProperty___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_CyProperty_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_CyProperty____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_CyProperty_*)((RogueTableEntry_String_CyProperty___init__String_CyProperty_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_CyProperty_*,ROGUE_CREATE_OBJECT(TableEntry_String_CyProperty_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_CyProperty_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_CyProperty_*)(THIS);
}

RogueStringBuilder* RogueTable_String_CyProperty___print_to__StringBuilder( RogueClassTable_String_CyProperty_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyProperty_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_CyProperty_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTableValueReader_String_CyProperty_* RogueTable_String_CyProperty___value_reader( RogueClassTable_String_CyProperty_* THIS )
{
  return (RogueClassTableValueReader_String_CyProperty_*)(((RogueTableValueReader_String_CyProperty___init__Table_String_CyProperty_( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableValueReader_String_CyProperty_*,ROGUE_CREATE_OBJECT(TableValueReader_String_CyProperty_))), ROGUE_ARG(THIS) ))));
}

void RogueTable_String_CyProperty____grow( RogueClassTable_String_CyProperty_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_CyProperty_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_CyProperty_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_CyProperty_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_CyProperty_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_CyProperty____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1116]);
}

RogueClassTableEntry_String_CyProperty_* RogueTableEntry_String_CyProperty___init_object( RogueClassTableEntry_String_CyProperty_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_CyProperty_*)(THIS);
}

RogueString* RogueTableEntry_String_CyProperty___to_String( RogueClassTableEntry_String_CyProperty_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_CyProperty___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_CyProperty___type_name( RogueClassTableEntry_String_CyProperty_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[935]);
}

RogueClassTableEntry_String_CyProperty_* RogueTableEntry_String_CyProperty___init__String_CyProperty_Int32( RogueClassTableEntry_String_CyProperty_* THIS, RogueString* _key_0, RogueClassCyProperty* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_CyProperty_*)(THIS);
}

RogueClassCyProperty* RogueCyProperty__init_object( RogueClassCyProperty* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->valid = false;
  THIS->pyname = Rogue_literal_strings[0];
  THIS->is_static = false;
  THIS->_ctype = Rogue_literal_strings[0];
  THIS->cname = Rogue_literal_strings[0];
  THIS->read_c_code = Rogue_literal_strings[0];
  THIS->write_c_code = Rogue_literal_strings[0];
  return (RogueClassCyProperty*)(THIS);
}

RogueString* RogueCyProperty__type_name( RogueClassCyProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[998]);
}

RogueClassCyProperty* RogueCyProperty__init__CyClass_Type_Property_Logical( RogueClassCyProperty* THIS, RogueClassCyClass* pycls_0, RogueClassType* _auto_600_1, RogueClassProperty* p_2, RogueLogical _auto_601_3 )
{
  THIS->is_static = _auto_601_3;
  THIS->context = _auto_600_1;
  THIS->pyname = (RogueCyClass__fix_name__String( ROGUE_ARG(p_2->name) ));
  if ((!(!!(THIS->pyname)) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->pyname), Rogue_literal_strings[0] )))))
  {
    return (RogueClassCyProperty*)(THIS);
  }
  THIS->prop = p_2;
  THIS->_ctype = (RogueCyClass__get_c_type__Type( ROGUE_ARG(p_2->_type) ));
  THIS->cname = ((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[274] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->context->cpp_name) )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_2->cpp_name) )))) )))) )));
  ROGUE_DEF_LOCAL_REF(RogueString*,access_4,0);
  if (THIS->is_static)
  {
    access_4 = ((RogueString*)THIS->cname);
  }
  else
  {
    access_4 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[789] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->context->cpp_class_name) )))) )))), Rogue_literal_strings[790] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(pycls_0->_pytype) )))) )))), Rogue_literal_strings[808] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(p_2->cpp_name) )))) )))) ))));
    THIS->cname = p_2->cpp_name;
  }
  THIS->read_c_code = ((RogueString__replacing__String_String( ROGUE_ARG((RogueCyClass__get_c_to_py__Type( ROGUE_ARG(p_2->_type) ))), Rogue_literal_strings[173], access_4 )));
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->read_c_code), Rogue_literal_strings[0] ))))
  {
    return (RogueClassCyProperty*)(THIS);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,call_code_5,(((RogueString__replacing__String_String( ROGUE_ARG((RogueCyClass__get_py_to_c__Type( ROGUE_ARG(p_2->_type) ))), Rogue_literal_strings[173], Rogue_literal_strings[312] )))));
  if (((RogueString__operatorEQUALSEQUALS__String( call_code_5, Rogue_literal_strings[0] ))))
  {
    return (RogueClassCyProperty*)(THIS);
  }
  THIS->write_c_code = ((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], access_4 )))) )))), Rogue_literal_strings[632] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], call_code_5 )))) )))) )));
  if (((RogueProperty__is_native( p_2 ))))
  {
    return (RogueClassCyProperty*)(THIS);
  }
  THIS->valid = true;
  return (RogueClassCyProperty*)(THIS);
}

RogueClassTable_Type_Type_* RogueTable_Type_Type___init_object( RogueClassTable_Type_Type_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_Type_Type_*)(THIS);
}

RogueClassTable_Type_Type_* RogueTable_Type_Type___init( RogueClassTable_Type_Type_* THIS )
{
  RogueTable_Type_Type___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_Type_Type_*)(THIS);
}

RogueString* RogueTable_Type_Type___to_String( RogueClassTable_Type_Type_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_Type_Type___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_Type_Type___type_name( RogueClassTable_Type_Type_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[971]);
}

RogueClassTable_Type_Type_* RogueTable_Type_Type___init__Int32( RogueClassTable_Type_Type_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_Type_Type_*), true );
  return (RogueClassTable_Type_Type_*)(THIS);
}

RogueClassTableEntry_Type_Type_* RogueTable_Type_Type___find__Type( RogueClassTable_Type_Type_* THIS, RogueClassType* key_0 )
{
  RogueInt32 hash_1 = ((Rogue_call_ROGUEM2( 3, ((RogueObject*)key_0) )));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Type_*,entry_2,(((RogueClassTableEntry_Type_Type_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && (Rogue_call_ROGUEM3( 6, ROGUE_ARG(((RogueObject*)entry_2->key)), ROGUE_ARG(((RogueObject*)(key_0))) ))))
    {
      return (RogueClassTableEntry_Type_Type_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_Type_Type_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_Type_Type_*)(((RogueClassTableEntry_Type_Type_*)(NULL)));
}

RogueClassType* RogueTable_Type_Type___get__Type( RogueClassTable_Type_Type_* THIS, RogueClassType* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Type_*,entry_1,(((RogueTable_Type_Type___find__Type( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassType*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,default_value_2,0);
    return (RogueClassType*)(default_value_2);
  }
}

RogueClassTable_Type_Type_* RogueTable_Type_Type___set__Type_Type( RogueClassTable_Type_Type_* THIS, RogueClassType* key_0, RogueClassType* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Type_*,entry_2,(((RogueTable_Type_Type___find__Type( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_Type_Type_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_Type_Type____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = ((Rogue_call_ROGUEM2( 3, ((RogueObject*)key_0) )));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_Type_Type_*)((RogueTableEntry_Type_Type___init__Type_Type_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_Type_Type_*,ROGUE_CREATE_OBJECT(TableEntry_Type_Type_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_Type_Type_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_Type_Type_*)(THIS);
}

RogueStringBuilder* RogueTable_Type_Type___print_to__StringBuilder( RogueClassTable_Type_Type_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Type_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->key))) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_Type_Type_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_Type_Type____grow( RogueClassTable_Type_Type_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_Type_Type_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Type_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_Type_Type_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_Type_Type_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_Type_Type____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1117]);
}

RogueClassTableEntry_Type_Type_* RogueTableEntry_Type_Type___init_object( RogueClassTableEntry_Type_Type_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_Type_Type_*)(THIS);
}

RogueString* RogueTableEntry_Type_Type___to_String( RogueClassTableEntry_Type_Type_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_Type_Type___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->key))) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_Type_Type___type_name( RogueClassTableEntry_Type_Type_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[936]);
}

RogueClassTableEntry_Type_Type_* RogueTableEntry_Type_Type___init__Type_Type_Int32( RogueClassTableEntry_Type_Type_* THIS, RogueClassType* _key_0, RogueClassType* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_Type_Type_*)(THIS);
}

RogueClassError* RogueError__init_object( RogueClassError* THIS )
{
  RogueException__init_object( ROGUE_ARG(((RogueException*)THIS)) );
  return (RogueClassError*)(THIS);
}

RogueString* RogueError__type_name( RogueClassError* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1133]);
}

RogueClassRogueError* RogueRogueError__init_object( RogueClassRogueError* THIS )
{
  RogueError__init_object( ROGUE_ARG(((RogueClassError*)THIS)) );
  return (RogueClassRogueError*)(THIS);
}

RogueString* RogueRogueError__to_String( RogueClassRogueError* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,builder_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,m_1,(((RogueString_List__joined__String( ROGUE_ARG(((RogueString__word_wrapped__Int32_String( ROGUE_ARG(THIS->message), 79, Rogue_literal_strings[7] )))), Rogue_literal_strings[8] )))));
  if (!!(THIS->filepath))
  {
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[6] );
    RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[15] )))), ROGUE_ARG((RogueFile__filename__String( ROGUE_ARG(THIS->filepath) ))) );
    RogueStringBuilder__println__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Int32( ROGUE_ARG(((RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[16] )))), ROGUE_ARG(THIS->line) )))), Rogue_literal_strings[18] )))), ROGUE_ARG(THIS->column) );
    RogueStringBuilder__println( builder_0 );
    RogueStringBuilder__println__String( builder_0, m_1 );
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[6] );
  }
  else
  {
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[6] );
    RogueStringBuilder__print__String( builder_0, Rogue_literal_strings[19] );
    RogueStringBuilder__println( builder_0 );
    RogueStringBuilder__println__String( builder_0, m_1 );
    RogueStringBuilder__println__String( builder_0, Rogue_literal_strings[6] );
  }
  return (RogueString*)(((RogueStringBuilder__to_String( builder_0 ))));
}

RogueString* RogueRogueError__type_name( RogueClassRogueError* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1411]);
}

RogueClassRogueError* RogueRogueError__init__String_String_Int32_Int32( RogueClassRogueError* THIS, RogueString* _auto_284_0, RogueString* _auto_285_1, RogueInt32 _auto_286_2, RogueInt32 _auto_287_3 )
{
  THIS->column = _auto_287_3;
  THIS->line = _auto_286_2;
  THIS->filepath = _auto_285_1;
  THIS->message = _auto_284_0;
  return (RogueClassRogueError*)(THIS);
}

RogueClassPreprocessor* RoguePreprocessor__init_object( RogueClassPreprocessor* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassPreprocessor*)(THIS);
}

RogueString* RoguePreprocessor__type_name( RogueClassPreprocessor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[977]);
}

RogueClassPreprocessor* RoguePreprocessor__init__Parser( RogueClassPreprocessor* THIS, RogueClassParser* _auto_295_0 )
{
  THIS->parser = _auto_295_0;
  return (RogueClassPreprocessor*)(THIS);
}

RogueToken_List* RoguePreprocessor__process__Token_List( RogueClassPreprocessor* THIS, RogueToken_List* _auto_296_0 )
{
  THIS->tokens = _auto_296_0;
  THIS->reader = ((RoguePreprocessorTokenReader__init__Token_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassPreprocessorTokenReader*,ROGUE_CREATE_OBJECT(PreprocessorTokenReader))), ROGUE_ARG(THIS->tokens) )));
  THIS->tokens = ((RogueToken_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))), ROGUE_ARG(((RogueInt32)((((RogueReal64)(THIS->tokens->count)) * 1.1)))) )));
  RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), true, 0, false );
  return (RogueToken_List*)(THIS->tokens);
}

RogueLogical RoguePreprocessor__consume__TokenType( RogueClassPreprocessor* THIS, RogueClassTokenType* type_0 )
{
  if (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) != ((void*)type_0))
  {
    return (RogueLogical)(false);
  }
  RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
  return (RogueLogical)(true);
}

void RoguePreprocessor__process__Logical_Int32_Logical( RogueClassPreprocessor* THIS, RogueLogical keep_tokens_0, RogueInt32 depth_1, RogueLogical stop_on_eol_2 )
{
  ++depth_1;
  while (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_3,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
    if (((RogueToken__is_directive( t_3 ))))
    {
      if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_define))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,defined_word_4,(((RoguePreprocessorTokenReader__read_identifier( ROGUE_ARG(THIS->reader) )))));
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,defined_tokens_5,(((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )))));
        while (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) ))))
        {
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,def_t_6,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
          if (((void*)def_t_6->_type) == ((void*)RogueTokenType_eol))
          {
            goto _auto_330;
          }
          RogueToken_List__add__Token( defined_tokens_5, def_t_6 );
        }
        _auto_330:;
        if (keep_tokens_0)
        {
          RoguePreprocessor__define__String_Token_List( defined_word_4, defined_tokens_5 );
        }
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_include))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassToken*,filepath_t_7,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
        if (keep_tokens_0)
        {
          if (((void*)filepath_t_7->_type) != ((void*)RogueTokenType_literal_string))
          {
            ROGUE_THROW(RogueClassError,((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[283] ))));
          }
          RogueRogueC__include_source__Token_String_Logical( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), t_3, ROGUE_ARG((Rogue_call_ROGUEM101( 11, filepath_t_7 ))), false );
        }
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_elseIf))
      {
        if (depth_1 == 1)
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_3, Rogue_literal_strings[285] ))));
        }
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_else))
      {
        if (depth_1 == 1)
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_3, Rogue_literal_strings[286] ))));
        }
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_endIf))
      {
        if (depth_1 == 1)
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_3, Rogue_literal_strings[287] ))));
        }
        RoguePreprocessorTokenReader__push__Token( ROGUE_ARG(THIS->reader), t_3 );
        return;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_if))
      {
        RogueLogical found_true_8 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
        RogueLogical single_line_9 = (!(((RoguePreprocessorTokenReader__next_is__TokenType( ROGUE_ARG(THIS->reader), ROGUE_ARG(RogueTokenType_eol) )))));
        if (found_true_8)
        {
          RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_9 );
        }
        else
        {
          RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_9 );
        }
        while (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_directive_elseIf))
        {
          RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
          RogueLogical value_10 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
          if (found_true_8)
          {
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_9 );
          }
          else
          {
            found_true_8 = ((RogueLogical)value_10);
            if (value_10)
            {
              RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_9 );
            }
            else
            {
              RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_9 );
            }
          }
        }
        if (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_directive_else))
        {
          RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) );
          if (found_true_8)
          {
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), false, depth_1, single_line_9 );
          }
          else
          {
            RoguePreprocessor__process__Logical_Int32_Logical( ROGUE_ARG(THIS), keep_tokens_0, depth_1, single_line_9 );
          }
        }
        if (!(single_line_9))
        {
          RoguePreprocessor__must_consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_endIf) );
        }
        continue;
      }
      else if (((void*)t_3->_type) == ((void*)RogueTokenType_directive_module))
      {
        if (keep_tokens_0)
        {
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))) );
        }
        THIS->cur_module = ((RoguePreprocessorTokenReader__read_identifier( ROGUE_ARG(THIS->reader) )));
        continue;
      }
    }
    if ((((void*)t_3->_type) == ((void*)RogueTokenType_keyword_class) || ((void*)t_3->_type) == ((void*)RogueTokenType_keyword_routine)))
    {
      if ((!!(THIS->cur_module) && ((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_identifier)))
      {
        if (keep_tokens_0)
        {
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
        }
        t_3 = ((RogueClassToken*)((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) ))));
        ROGUE_DEF_LOCAL_REF(RogueString*,class_name_11,((Rogue_call_ROGUEM101( 11, t_3 ))));
        RogueProgram__add_module_id__String_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->cur_module), class_name_11 );
        if (keep_tokens_0)
        {
          RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((Rogue_call_ROGUEM111( 25, ROGUE_ARG(t_3->_type), t_3, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->cur_module) )))) )))), Rogue_literal_strings[195] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], class_name_11 )))) )))) )))) ))) );
        }
        continue;
      }
    }
    if (((void*)t_3->_type) == ((void*)RogueTokenType_literal_string))
    {
      while (((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))->_type) == ((void*)RogueTokenType_literal_string))
      {
        t_3 = ((RogueClassToken*)(Rogue_call_ROGUEM111( 25, ROGUE_ARG(t_3->_type), t_3, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_3 ))), ROGUE_ARG((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))) )))) )));
      }
    }
    if (keep_tokens_0)
    {
      RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), t_3 );
    }
    if ((stop_on_eol_2 && ((void*)t_3->_type) == ((void*)RogueTokenType_eol)))
    {
      return;
    }
  }
}

void RoguePreprocessor__must_consume__TokenType( RogueClassPreprocessor* THIS, RogueClassTokenType* type_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,message_1,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[288] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(type_0->name) )))) )))), Rogue_literal_strings[225] )))) )))));
  if (!(((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_1, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))));
  if (((void*)t_2->_type) != ((void*)type_0))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_2, message_1 ))));
  }
}

RogueLogical RoguePreprocessor__parse_logical_expression( RogueClassPreprocessor* THIS )
{
  return (RogueLogical)(((RoguePreprocessor__parse_logical_or( ROGUE_ARG(THIS) ))));
}

RogueLogical RoguePreprocessor__parse_logical_or( RogueClassPreprocessor* THIS )
{
  return (RogueLogical)(((RoguePreprocessor__parse_logical_or__Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__parse_logical_and( ROGUE_ARG(THIS) )))) ))));
}

RogueLogical RoguePreprocessor__parse_logical_or__Logical( RogueClassPreprocessor* THIS, RogueLogical lhs_0 )
{
  if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_or) ))))
  {
    return (RogueLogical)(((RoguePreprocessor__parse_logical_or__Logical( ROGUE_ARG(THIS), ROGUE_ARG((((RoguePreprocessor__parse_logical_and( ROGUE_ARG(THIS) ))) || lhs_0)) ))));
  }
  return (RogueLogical)(lhs_0);
}

RogueLogical RoguePreprocessor__parse_logical_and( RogueClassPreprocessor* THIS )
{
  return (RogueLogical)(((RoguePreprocessor__parse_logical_and__Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) )))) ))));
}

RogueLogical RoguePreprocessor__parse_logical_and__Logical( RogueClassPreprocessor* THIS, RogueLogical lhs_0 )
{
  if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_and) ))))
  {
    return (RogueLogical)(((RoguePreprocessor__parse_logical_and__Logical( ROGUE_ARG(THIS), ROGUE_ARG((((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) ))) && lhs_0)) ))));
  }
  return (RogueLogical)(lhs_0);
}

RogueLogical RoguePreprocessor__parse_logical_term( RogueClassPreprocessor* THIS )
{
  for (;;)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_0,(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))));
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_not) ))))
    {
      return (RogueLogical)(!(((RoguePreprocessor__parse_logical_term( ROGUE_ARG(THIS) )))));
    }
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_open_paren) ))))
    {
      RogueLogical result_1 = (((RoguePreprocessor__parse_logical_expression( ROGUE_ARG(THIS) ))));
      RoguePreprocessor__must_consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_symbol_close_paren) );
      return (RogueLogical)(result_1);
    }
    if (((void*)t_0->_type) == ((void*)RogueTokenType_literal_string))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,target_2,((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS->reader) )))) ))));
      return (RogueLogical)(((RogueTable_String_Logical___get__String( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->compile_targets), target_2 ))));
    }
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) ))))
    {
      return (RogueLogical)(false);
    }
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_true) ))))
    {
      return (RogueLogical)(true);
    }
    if (((RoguePreprocessor__consume__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_false) ))))
    {
      return (RogueLogical)(false);
    }
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[289] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS->reader) )))))) )))) )))), Rogue_literal_strings[225] )))) )))) ))));
  }
}

RogueToken_List* RoguePreprocessor__reprocess__Token_List( RogueClassPreprocessor* THIS, RogueToken_List* _auto_297_0 )
{
  THIS->tokens = _auto_297_0;
  ROGUE_DEF_LOCAL_REF(RogueClassListRewriter_Token_*,rewriter_1,(((RogueToken_List__rewriter( ROGUE_ARG(THIS->tokens) )))));
  while (((RogueListRewriter_Token___has_another( rewriter_1 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(((RogueListRewriter_Token___read( rewriter_1 )))));
    while (((((void*)t_2->_type) == ((void*)RogueTokenType_literal_string) && ((RogueListRewriter_Token___has_another( rewriter_1 )))) && ((void*)((RogueListRewriter_Token___peek__Int32( rewriter_1, 0 )))->_type) == ((void*)RogueTokenType_literal_string)))
    {
      t_2 = ((RogueClassToken*)(Rogue_call_ROGUEM111( 25, ROGUE_ARG(t_2->_type), t_2, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_2 ))), ROGUE_ARG((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RogueListRewriter_Token___read( rewriter_1 )))) ))) )))) )));
    }
    RogueListRewriter_Token___write__Token( rewriter_1, t_2 );
  }
  return (RogueToken_List*)(THIS->tokens);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init_object( RogueClassTable_String_Token_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init( RogueClassTable_String_Token_List_* THIS )
{
  RogueTable_String_Token_List___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueString* RogueTable_String_Token_List___to_String( RogueClassTable_String_Token_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Token_List___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Token_List___type_name( RogueClassTable_String_Token_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[980]);
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___init__Int32( RogueClassTable_String_Token_List_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Token_List_*), true );
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueLogical RogueTable_String_Token_List___contains__String( RogueClassTable_String_Token_List_* THIS, RogueString* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_String_Token_List___find__String( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_String_Token_List_* RogueTable_String_Token_List___find__String( RogueClassTable_String_Token_List_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_2,(((RogueClassTableEntry_String_Token_List_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Token_List_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Token_List_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Token_List_*)(((RogueClassTableEntry_String_Token_List_*)(NULL)));
}

RogueToken_List* RogueTable_String_Token_List___get__String( RogueClassTable_String_Token_List_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_1,(((RogueTable_String_Token_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueToken_List*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List*,default_value_2,0);
    return (RogueToken_List*)(default_value_2);
  }
}

RogueClassTable_String_Token_List_* RogueTable_String_Token_List___set__String_Token_List( RogueClassTable_String_Token_List_* THIS, RogueString* key_0, RogueToken_List* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_2,(((RogueTable_String_Token_List___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Token_List_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Token_List____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Token_List_*)((RogueTableEntry_String_Token_List___init__String_Token_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Token_List_*,ROGUE_CREATE_OBJECT(TableEntry_String_Token_List_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Token_List_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Token_List_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Token_List___print_to__StringBuilder( RogueClassTable_String_Token_List_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Token_List_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Token_List____grow( RogueClassTable_String_Token_List_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Token_List_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Token_List_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Token_List_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Token_List____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1118]);
}

RogueClassTableEntry_String_Token_List_* RogueTableEntry_String_Token_List___init_object( RogueClassTableEntry_String_Token_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Token_List_*)(THIS);
}

RogueString* RogueTableEntry_String_Token_List___to_String( RogueClassTableEntry_String_Token_List_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Token_List___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Token_List___type_name( RogueClassTableEntry_String_Token_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[937]);
}

RogueClassTableEntry_String_Token_List_* RogueTableEntry_String_Token_List___init__String_Token_List_Int32( RogueClassTableEntry_String_Token_List_* THIS, RogueString* _key_0, RogueToken_List* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Token_List_*)(THIS);
}

RogueClassPreprocessorTokenReader* RoguePreprocessorTokenReader__init_object( RogueClassPreprocessorTokenReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->queue = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  return (RogueClassPreprocessorTokenReader*)(THIS);
}

RogueString* RoguePreprocessorTokenReader__type_name( RogueClassPreprocessorTokenReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[982]);
}

RogueClassPreprocessorTokenReader* RoguePreprocessorTokenReader__init__Token_List( RogueClassPreprocessorTokenReader* THIS, RogueToken_List* _auto_315_0 )
{
  THIS->tokens = _auto_315_0;
  THIS->count = THIS->tokens->count;
  return (RogueClassPreprocessorTokenReader*)(THIS);
}

RogueClassError* RoguePreprocessorTokenReader__error__String( RogueClassPreprocessorTokenReader* THIS, RogueString* message_0 )
{
  if (((RoguePreprocessorTokenReader__has_another( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))), message_0 ))))));
  }
  if (!!(THIS->count))
  {
    return (RogueClassError*)(((RogueClassError*)(((RogueToken__error__String( ROGUE_ARG(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) )))), message_0 ))))));
  }
  return (RogueClassError*)(((RogueClassError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))))));
}

void RoguePreprocessorTokenReader__expand_definition__Token( RogueClassPreprocessorTokenReader* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Token_List_*,entry_1,(((RogueTable_String_Token_List___find__String( ROGUE_ARG(RoguePreprocessor_definitions), ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_0 ))) )))));
  if (!!(entry_1))
  {
    if (!!(entry_1->value))
    {
      ROGUE_DEF_LOCAL_REF(RogueToken_List*,def_tokens_2,(entry_1->value));
      entry_1->value = ((RogueToken_List*)(NULL));
      {
        ROGUE_DEF_LOCAL_REF(RogueToken_List*,_auto_2835_3,(def_tokens_2));
        RogueInt32 _auto_2836_4 = ((_auto_2835_3->count - 1));
        for (;_auto_2836_4 >= 0;--_auto_2836_4)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassToken*,def_t_5,(((RogueClassToken*)(_auto_2835_3->data->as_objects[_auto_2836_4]))));
          if (((void*)t_0->_type) == ((void*)RogueTokenType_identifier))
          {
            RoguePreprocessorTokenReader__expand_definition__Token( ROGUE_ARG(THIS), def_t_5 );
          }
          else
          {
            RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
          }
        }
      }
      entry_1->value = def_tokens_2;
      return;
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[280] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM101( 11, t_0 ))) )))) )))), Rogue_literal_strings[235] )))) )))) ))));
    }
  }
  else
  {
    RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
  }
}

RogueLogical RoguePreprocessorTokenReader__has_another( RogueClassPreprocessorTokenReader* THIS )
{
  RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) );
  return (RogueLogical)((RogueLogical__create__Int32( ROGUE_ARG(THIS->queue->count) )));
}

RogueLogical RoguePreprocessorTokenReader__next_is__TokenType( RogueClassPreprocessorTokenReader* THIS, RogueClassTokenType* type_0 )
{
  if ((THIS->position == THIS->count && THIS->queue->count == 0))
  {
    return (RogueLogical)(false);
  }
  return (RogueLogical)(((void*)((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))->_type) == ((void*)type_0));
}

RogueClassToken* RoguePreprocessorTokenReader__peek( RogueClassPreprocessorTokenReader* THIS )
{
  if (!!(THIS->queue->count))
  {
    return (RogueClassToken*)(((RogueToken_List__last( ROGUE_ARG(THIS->queue) ))));
  }
  return (RogueClassToken*)(((RoguePreprocessorTokenReader__peek__Int32( ROGUE_ARG(THIS), 0 ))));
}

RogueClassToken* RoguePreprocessorTokenReader__peek__Int32( RogueClassPreprocessorTokenReader* THIS, RogueInt32 num_ahead_0 )
{
  if ((THIS->position + num_ahead_0) >= (THIS->count + THIS->queue->count))
  {
    return (RogueClassToken*)(((RogueTokenType__create_token__Token( ROGUE_ARG(RogueTokenType_eoi), ROGUE_ARG(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))) ))));
  }
  while (THIS->queue->count <= num_ahead_0)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_1,(((RogueClassToken*)(THIS->tokens->data->as_objects[THIS->position]))));
    ++THIS->position;
    if (((void*)t_1->_type) == ((void*)RogueTokenType_identifier))
    {
      RoguePreprocessorTokenReader__expand_definition__Token( ROGUE_ARG(THIS), t_1 );
    }
    else
    {
      RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_1 );
    }
  }
  return (RogueClassToken*)(((RogueClassToken*)(THIS->queue->data->as_objects[((THIS->queue->count - num_ahead_0) - 1)])));
}

void RoguePreprocessorTokenReader__push__Token( RogueClassPreprocessorTokenReader* THIS, RogueClassToken* t_0 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->queue), t_0 );
}

RogueClassToken* RoguePreprocessorTokenReader__read( RogueClassPreprocessorTokenReader* THIS )
{
  RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) );
  if (THIS->queue->count == 0)
  {
    ROGUE_THROW(RogueClassError,((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[281] ))));
  }
  return (RogueClassToken*)(((RogueToken_List__remove_last( ROGUE_ARG(THIS->queue) ))));
}

RogueString* RoguePreprocessorTokenReader__read_identifier( RogueClassPreprocessorTokenReader* THIS )
{
  if (!(((RoguePreprocessorTokenReader__next_is__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier) )))))
  {
    ROGUE_THROW(RogueClassError,((RoguePreprocessorTokenReader__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[282] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM101( 23, ROGUE_ARG(((RoguePreprocessorTokenReader__peek( ROGUE_ARG(THIS) )))) ))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
  }
  return (RogueString*)((Rogue_call_ROGUEM101( 11, ROGUE_ARG(((RoguePreprocessorTokenReader__read( ROGUE_ARG(THIS) )))) )));
}

RogueClassTokenizer* RogueTokenizer__init_object( RogueClassTokenizer* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->tokens = ((RogueToken_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueToken_List*,ROGUE_CREATE_OBJECT(Token_List))) )));
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  return (RogueClassTokenizer*)(THIS);
}

RogueString* RogueTokenizer__type_name( RogueClassTokenizer* THIS )
{
  return (RogueString*)(Rogue_literal_strings[978]);
}

RogueToken_List* RogueTokenizer__tokenize__String( RogueClassTokenizer* THIS, RogueString* _auto_302_0 )
{
  THIS->filepath = _auto_302_0;
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__init__File_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), ROGUE_ARG(((RogueFile__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFile*,ROGUE_CREATE_OBJECT(File))), ROGUE_ARG(THIS->filepath) )))), 2 )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__String_String( RogueClassTokenizer* THIS, RogueString* _auto_303_0, RogueString* content_1 )
{
  THIS->filepath = _auto_303_0;
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__init__String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), content_1, 2 )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__Token_String_String( RogueClassTokenizer* THIS, RogueClassToken* reference_t_0, RogueString* _auto_304_1, RogueString* data_2 )
{
  THIS->filepath = _auto_304_1;
  ROGUE_DEF_LOCAL_REF(RogueCharacter_List*,characters_3,(((RogueCharacter_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCharacter_List*,ROGUE_CREATE_OBJECT(Character_List))), ROGUE_ARG(data_2->character_count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2837_4,(data_2));
    RogueInt32 _auto_2838_5 = (0);
    for (;_auto_2838_5 < _auto_2837_4->character_count;++_auto_2838_5)
    {
      RogueCharacter ch_6 = (RogueString_character_at(_auto_2837_4,_auto_2838_5));
      RogueCharacter_List__add__Character( characters_3, ch_6 );
    }
  }
  return (RogueToken_List*)(((RogueTokenizer__tokenize__ParseReader( ROGUE_ARG(THIS), ROGUE_ARG(((RogueParseReader__set_location__Int32_Int32( ROGUE_ARG(((RogueParseReader__init__Character_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParseReader*,ROGUE_CREATE_OBJECT(ParseReader))), characters_3, 2 )))), ROGUE_ARG(reference_t_0->line), ROGUE_ARG(reference_t_0->column) )))) ))));
}

RogueToken_List* RogueTokenizer__tokenize__ParseReader( RogueClassTokenizer* THIS, RogueClassParseReader* _auto_305_0 )
{
  THIS->reader = _auto_305_0;
  RogueTable_String_ParseReader___set__String_ParseReader( ROGUE_ARG(((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->parsereaders_by_filepath), ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->reader) );
  RogueTokenizer__configure_token_types( ROGUE_ARG(THIS) );
  while (((RogueTokenizer__tokenize_another( ROGUE_ARG(THIS) ))))
  {
  }
  if (THIS->tokens->count == 0)
  {
    if ((THIS->tokens->count == 0 || ((void*)((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))->_type) != ((void*)RogueTokenType_eol)))
    {
      RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) );
    }
  }
  return (RogueToken_List*)(THIS->tokens);
}

RogueLogical RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  if ((THIS->buffer->count == 1 && terminator_0 == (RogueCharacter)'\''))
  {
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Character( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_character), ROGUE_ARG(((RogueStringBuilder__get__Int32( ROGUE_ARG(THIS->buffer), 0 )))) ))));
  }
  else
  {
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) ))));
  }
}

RogueLogical RogueTokenizer__add_new_token__TokenType( RogueClassTokenizer* THIS, RogueClassTokenType* type_0 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((Rogue_call_ROGUEM109( 18, type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column) ))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Character( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueCharacter value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Character( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Int64( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueInt64 value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Int64( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Int32( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueInt32 value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Int32( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_Real64( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueReal64 value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG(((RogueTokenType__create_token__String_Int32_Int32_Real64( type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 )))) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__add_new_token__TokenType_String( RogueClassTokenizer* THIS, RogueClassTokenType* type_0, RogueString* value_1 )
{
  RogueToken_List__add__Token( ROGUE_ARG(THIS->tokens), ROGUE_ARG((Rogue_call_ROGUEM110( 23, type_0, ROGUE_ARG(THIS->next_filepath), ROGUE_ARG(THIS->next_line), ROGUE_ARG(THIS->next_column), value_1 ))) );
  return (RogueLogical)(true);
}

void RogueTokenizer__configure_token_types( RogueClassTokenizer* THIS )
{
  if (!!(RogueTokenType_lookup))
  {
    return;
  }
  RogueTokenType_lookup = ((RogueTable_String_TokenType___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_TokenType_*,ROGUE_CREATE_OBJECT(Table_String_TokenType_))) )));
  RogueTokenType_directive_define = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[26] )))))))) )));
  RogueTokenType_directive_include = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[27] )))))))) )));
  RogueTokenType_directive_if = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[28] )))))))) )));
  RogueTokenType_directive_elseIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[29] )))))))) )));
  RogueTokenType_directive_else = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[30] )))))))) )));
  RogueTokenType_directive_endIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[31] )))))))) )));
  RogueTokenType_directive_essential = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassDirectiveTokenType*,ROGUE_CREATE_OBJECT(DirectiveTokenType)))), Rogue_literal_strings[32] )))))))) )));
  RogueTokenType_directive_module = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructuralDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructuralDirectiveTokenType*,ROGUE_CREATE_OBJECT(StructuralDirectiveTokenType)))), Rogue_literal_strings[33] )))))))) )));
  RogueTokenType_directive_using = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructuralDirectiveTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructuralDirectiveTokenType*,ROGUE_CREATE_OBJECT(StructuralDirectiveTokenType)))), Rogue_literal_strings[34] )))))))) )));
  RogueTokenType_placeholder_id = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[35] )))) )));
  RogueTokenType_eol = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_end_command( ROGUE_ARG(((RogueClassTokenType*)((RogueClassEOLTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassEOLTokenType*,ROGUE_CREATE_OBJECT(EOLTokenType)))), Rogue_literal_strings[36] ))))))) )))) )));
  RogueTokenType_eoi = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[37] ))))))) )))) )));
  RogueTokenType_begin_augment_tokens = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[38] ))))))) )))) )));
  RogueTokenType_keyword_augment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[39] ))))))) )))) )));
  RogueTokenType_keyword_case = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[40] )))))))) )));
  RogueTokenType_keyword_catch = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[41] )))))))) )));
  RogueTokenType_keyword_class = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[42] ))))))) )))) )));
  RogueTokenType_keyword_DEFINITIONS = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[43] ))))))) )))) )));
  RogueTokenType_keyword_DEPENDENCIES = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[44] ))))))) )))) )));
  RogueTokenType_keyword_else = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[45] )))))))) )));
  RogueTokenType_keyword_elseIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[46] )))))))) )));
  RogueTokenType_keyword_endAugment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[47] ))))))) )))) )));
  RogueTokenType_keyword_endBlock = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[48] )))))))) )));
  RogueTokenType_keyword_endClass = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[49] ))))))) )))) )));
  RogueTokenType_keyword_endContingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[50] )))))))) )));
  RogueTokenType_keyword_endForEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[51] )))))))) )));
  RogueTokenType_keyword_endFunction = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[52] )))))))) )));
  RogueTokenType_keyword_endIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[53] )))))))) )));
  RogueTokenType_keyword_endInstance = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[54] )))))))) )));
  RogueTokenType_keyword_endLoop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[55] )))))))) )));
  RogueTokenType_keyword_endRoutine = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[56] ))))))) )))) )));
  RogueTokenType_keyword_endTry = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[57] )))))))) )));
  RogueTokenType_keyword_endUnitTest = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[58] )))))))) )));
  RogueTokenType_keyword_endWhich = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[59] )))))))) )));
  RogueTokenType_keyword_endWhile = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[60] )))))))) )));
  RogueTokenType_keyword_ENUMERATE = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[61] ))))))) )))) )));
  RogueTokenType_keyword_GLOBAL = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[62] ))))))) )))) )));
  RogueTokenType_keyword_instance = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[63] )))))))) )));
  RogueTokenType_keyword_method = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[64] ))))))) )))) )));
  RogueTokenType_keyword_METHODS = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[65] ))))))) )))) )));
  RogueTokenType_keyword_others = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[66] )))))))) )));
  RogueTokenType_keyword_PROPERTIES = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[67] ))))))) )))) )));
  RogueTokenType_keyword_routine = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_non_method( ROGUE_ARG(((RogueClassTokenType*)((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[68] ))))))) )))) )));
  RogueTokenType_keyword_satisfied = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[69] )))))))) )));
  RogueTokenType_keyword_unsatisfied = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[70] )))))))) )));
  RogueTokenType_keyword_with = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[71] )))))))) )));
  RogueTokenType_symbol_close_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[72] )))))))) )));
  RogueTokenType_symbol_close_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[73] )))))))) )));
  RogueTokenType_symbol_close_comment = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[74] )))))))) )));
  RogueTokenType_symbol_close_paren = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[12] )))))))) )));
  RogueTokenType_symbol_close_specialize = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassStructureTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassStructureTokenType*,ROGUE_CREATE_OBJECT(StructureTokenType)))), Rogue_literal_strings[75] )))))))) )));
  RogueTokenType_keyword_assert = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[76] )))) )));
  RogueTokenType_keyword_await = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[77] )))) )));
  RogueTokenType_keyword_block = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[78] )))) )));
  RogueTokenType_keyword_contingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[79] )))) )));
  RogueTokenType_keyword_ensure = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[80] )))) )));
  RogueTokenType_keyword_escapeBlock = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[81] )))) )));
  RogueTokenType_keyword_escapeContingent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[82] )))) )));
  RogueTokenType_keyword_escapeForEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[83] )))) )));
  RogueTokenType_keyword_escapeIf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[84] )))) )));
  RogueTokenType_keyword_escapeLoop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[85] )))) )));
  RogueTokenType_keyword_escapeTry = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[86] )))) )));
  RogueTokenType_keyword_escapeWhich = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[87] )))) )));
  RogueTokenType_keyword_escapeWhile = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[88] )))) )));
  RogueTokenType_keyword_forEach = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[89] )))) )));
  RogueTokenType_keyword_function = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[90] )))) )));
  RogueTokenType_keyword_global = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[91] )))) )));
  RogueTokenType_keyword_if = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[92] )))) )));
  RogueTokenType_keyword_in = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[93] )))) )));
  RogueTokenType_keyword_includeNativeCode = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[94] )))) )));
  RogueTokenType_keyword_includeNativeHeader = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[95] )))) )));
  RogueTokenType_keyword_is = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[96] )))) )));
  RogueTokenType_keyword_isReference = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[97] )))) )));
  RogueTokenType_keyword_local = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[98] )))) )));
  RogueTokenType_keyword_loop = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[99] )))) )));
  RogueTokenType_keyword_native = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[100] )))) )));
  RogueTokenType_keyword_nativeCode = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassNativeCodeTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassNativeCodeTokenType*,ROGUE_CREATE_OBJECT(NativeCodeTokenType)))), Rogue_literal_strings[101] )))))))) )));
  RogueTokenType_keyword_nativeHeader = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassNativeCodeTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassNativeCodeTokenType*,ROGUE_CREATE_OBJECT(NativeCodeTokenType)))), Rogue_literal_strings[102] )))))))) )));
  RogueTokenType_keyword_necessary = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[103] )))) )));
  RogueTokenType_keyword_noAction = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[104] )))) )));
  RogueTokenType_keyword_null = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[1] )))) )));
  RogueTokenType_keyword_of = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[105] )))) )));
  RogueTokenType_keyword_require = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[106] )))) )));
  RogueTokenType_keyword_return = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[107] )))) )));
  RogueTokenType_keyword_select = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[108] )))) )));
  RogueTokenType_keyword_nextIteration = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[109] )))) )));
  RogueTokenType_keyword_step = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[110] )))) )));
  RogueTokenType_keyword_sufficient = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[111] )))) )));
  RogueTokenType_keyword_throw = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[112] )))) )));
  RogueTokenType_keyword_trace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[113] )))) )));
  RogueTokenType_keyword_trace_args_only = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[114] )))) )));
  RogueTokenType_keyword_try = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[115] )))) )));
  RogueTokenType_keyword_unitTest = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[116] )))) )));
  RogueTokenType_keyword_which = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[117] )))) )));
  RogueTokenType_keyword_while = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[118] )))) )));
  RogueTokenType_keyword_yield = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[119] )))) )));
  RogueTokenType_identifier = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[120] )));
  RogueTokenType_type_identifier = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[121] )));
  RogueTokenType_literal_character = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[122] )));
  RogueTokenType_literal_integer = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[123] )));
  RogueTokenType_literal_long = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[124] )));
  RogueTokenType_literal_real = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[125] )));
  RogueTokenType_literal_string = ((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[126] )));
  RogueTokenType_keyword_and = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[127] )))) )));
  RogueTokenType_keyword_as = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[128] )))) )));
  RogueTokenType_keyword_downTo = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[129] )))) )));
  RogueTokenType_keyword_false = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[130] )))) )));
  RogueTokenType_keyword_instanceOf = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[131] )))) )));
  RogueTokenType_keyword_infinity = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[132] )))) )));
  RogueTokenType_keyword_meta = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[133] )))) )));
  RogueTokenType_keyword_NaN = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[134] )))) )));
  RogueTokenType_keyword_not = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[135] )))) )));
  RogueTokenType_keyword_or = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[136] )))) )));
  RogueTokenType_keyword_pi = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[137] )))) )));
  RogueTokenType_keyword_prior = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[138] )))) )));
  RogueTokenType_keyword_this = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[139] )))) )));
  RogueTokenType_keyword_true = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[140] )))) )));
  RogueTokenType_keyword_xor = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[141] )))) )));
  RogueTokenType_symbol_ampersand = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[142] )))) )));
  RogueTokenType_symbol_ampersand_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[143] )))))))) )));
  RogueTokenType_symbol_double_ampersand = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[144] )))) )));
  RogueTokenType_symbol_arrow = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[145] )))) )));
  RogueTokenType_symbol_at = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[146] )))) )));
  RogueTokenType_symbol_at_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[147] )))) )));
  RogueTokenType_symbol_at_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[148] )))) )));
  RogueTokenType_symbol_backslash = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[149] )))) )));
  RogueTokenType_symbol_caret = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[150] )))) )));
  RogueTokenType_symbol_caret_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[151] )))))))) )));
  RogueTokenType_symbol_colon = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[152] )))) )));
  RogueTokenType_symbol_comma = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[7] )))) )));
  RogueTokenType_symbol_compare = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[153] )))) )));
  RogueTokenType_symbol_dot = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[154] )))) )));
  RogueTokenType_symbol_dot_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[155] )))))))) )));
  RogueTokenType_symbol_downToGreaterThan = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[156] )))) )));
  RogueTokenType_symbol_empty_braces = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[157] )))) )));
  RogueTokenType_symbol_empty_brackets = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[158] )))) )));
  RogueTokenType_symbol_eq = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[159] )))) )));
  RogueTokenType_symbol_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[160] )))) )));
  RogueTokenType_symbol_exclamation_point = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[161] )))) )));
  RogueTokenType_symbol_fat_arrow = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[162] )))) )));
  RogueTokenType_symbol_ge = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[163] )))) )));
  RogueTokenType_symbol_gt = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[164] )))) )));
  RogueTokenType_symbol_le = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[165] )))) )));
  RogueTokenType_symbol_lt = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[166] )))) )));
  RogueTokenType_symbol_minus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[167] )))) )));
  RogueTokenType_symbol_minus_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[168] )))))))) )));
  RogueTokenType_symbol_minus_minus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[3] )))) )));
  RogueTokenType_symbol_ne = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[169] )))) )));
  RogueTokenType_symbol_open_brace = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[170] )))) )));
  RogueTokenType_symbol_open_bracket = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[171] )))) )));
  RogueTokenType_symbol_open_paren = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[9] )))) )));
  RogueTokenType_symbol_open_specialize = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[172] )))) )));
  RogueTokenType_symbol_percent = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[173] )))) )));
  RogueTokenType_symbol_percent_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[174] )))))))) )));
  RogueTokenType_symbol_plus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[175] )))) )));
  RogueTokenType_symbol_plus_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[176] )))))))) )));
  RogueTokenType_symbol_plus_plus = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[177] )))) )));
  RogueTokenType_symbol_question_mark = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[178] )))) )));
  RogueTokenType_symbol_semicolon = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__mark_end_command( ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[179] )))) )))) )));
  RogueTokenType_symbol_shift_left = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[180] )))) )));
  RogueTokenType_symbol_shift_right = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[181] )))) )));
  RogueTokenType_symbol_shift_right_x = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[182] )))) )));
  RogueTokenType_symbol_slash = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[183] )))) )));
  RogueTokenType_symbol_slash_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[184] )))))))) )));
  RogueTokenType_symbol_slash_slash = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[185] )))) )));
  RogueTokenType_symbol_tilde = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[186] )))) )));
  RogueTokenType_symbol_tilde_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[187] )))))))) )));
  RogueTokenType_symbol_times = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[188] )))) )));
  RogueTokenType_symbol_times_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[189] )))))))) )));
  RogueTokenType_symbol_upTo = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[190] )))) )));
  RogueTokenType_symbol_upToLessThan = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[191] )))) )));
  RogueTokenType_symbol_vertical_bar = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[192] )))) )));
  RogueTokenType_symbol_vertical_bar_equals = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassTokenType*)(((RogueClassModifyAndAssignTokenType*)(((RogueTokenType__init__String( ROGUE_ARG(((RogueClassTokenType*)ROGUE_CREATE_REF(RogueClassModifyAndAssignTokenType*,ROGUE_CREATE_OBJECT(ModifyAndAssignTokenType)))), Rogue_literal_strings[193] )))))))) )));
  RogueTokenType_symbol_double_vertical_bar = ((RogueTokenizer__define__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(((RogueTokenType__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTokenType*,ROGUE_CREATE_OBJECT(TokenType))), Rogue_literal_strings[194] )))) )));
}

RogueLogical RogueTokenizer__consume__Character( RogueClassTokenizer* THIS, RogueCharacter ch_0 )
{
  if (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))) != ch_0)
  {
    return (RogueLogical)(false);
  }
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__consume__String( RogueClassTokenizer* THIS, RogueString* st_0 )
{
  return (RogueLogical)(((RogueParseReader__consume__String( ROGUE_ARG(THIS->reader), st_0 ))));
}

RogueLogical RogueTokenizer__consume_id__String( RogueClassTokenizer* THIS, RogueString* st_0 )
{
  return (RogueLogical)(((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), st_0 ))));
}

RogueLogical RogueTokenizer__consume_spaces( RogueClassTokenizer* THIS )
{
  if (!(((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' )))))
  {
    return (RogueLogical)(false);
  }
  while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
  {
  }
  return (RogueLogical)(true);
}

RogueClassTokenType* RogueTokenizer__define__TokenType( RogueClassTokenizer* THIS, RogueClassTokenType* type_0 )
{
  RogueTable_String_TokenType___set__String_TokenType( ROGUE_ARG(RogueTokenType_lookup), ROGUE_ARG(type_0->name), type_0 );
  return (RogueClassTokenType*)(type_0);
}

RogueClassRogueError* RogueTokenizer__error__String( RogueClassTokenizer* THIS, RogueString* message_0 )
{
  return (RogueClassRogueError*)(((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), message_0, ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->reader->line), ROGUE_ARG(THIS->reader->column) ))));
}

RogueClassTokenType* Rogue_Tokenizer__get_symbol_token_type( RogueClassTokenizer* THIS )
{
  RogueCharacter ch_0 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
  if (ch_0 == (RogueCharacter)'!')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ne);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_exclamation_point);
    }
  }
  else if (ch_0 == (RogueCharacter)'$')
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,id_1,(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))));
    {
      if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[216] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_define) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[217] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_include) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[92] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_if) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[46] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_elseIf) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[45] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_else) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[53] ))))
      {
        RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_endIf) );
      }
      else if (((RogueString__operatorEQUALSEQUALS__String( id_1, Rogue_literal_strings[218] ))))
      {
        RogueTokenizer__scan_essential_directive( ROGUE_ARG(THIS) );
        return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
      }
      else
      {
        RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_placeholder_id), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[219], id_1 )))) );
      }
    }
    return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
  }
  else if (ch_0 == (RogueCharacter)'%')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_percent_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_percent);
    }
  }
  else if (ch_0 == (RogueCharacter)'&')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'&' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_double_ampersand);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ampersand_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ampersand);
    }
  }
  else if (ch_0 == (RogueCharacter)'(')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_paren);
  }
  else if (ch_0 == (RogueCharacter)')')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_close_paren);
  }
  else if (ch_0 == (RogueCharacter)'*')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_times_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_times);
    }
  }
  else if (ch_0 == (RogueCharacter)'+')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus_equals);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'+' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus_plus);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_plus);
    }
  }
  else if (ch_0 == (RogueCharacter)',')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_comma);
  }
  else if (ch_0 == (RogueCharacter)'-')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus_equals);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus_minus);
    }
    else if ((((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 0 ))) == (RogueCharacter)'>' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'>'))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_arrow);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_minus);
    }
  }
  else if (ch_0 == (RogueCharacter)'.')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'.' ))))
    {
      if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'.' ))))
      {
        while (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)' ' ))))
        {
        }
        if (!(((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)10 )))))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[220] ))));
        }
        return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
      }
      else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'<' ))))
      {
        return (RogueClassTokenType*)(RogueTokenType_symbol_upToLessThan);
      }
      else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
      {
        return (RogueClassTokenType*)(RogueTokenType_symbol_downToGreaterThan);
      }
      else
      {
        return (RogueClassTokenType*)(RogueTokenType_symbol_upTo);
      }
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_dot_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_dot);
    }
  }
  else if (ch_0 == (RogueCharacter)'/')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'/' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_slash_slash);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_slash_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_slash);
    }
  }
  else if (ch_0 == (RogueCharacter)':')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)':' ))))
    {
      RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[195], ROGUE_ARG(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))) )))) );
      return (RogueClassTokenType*)(((RogueClassTokenType*)(NULL)));
    }
    if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[221] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_left);
    }
    else if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[222] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_right);
    }
    else if (((RogueTokenizer__consume__String( ROGUE_ARG(THIS), Rogue_literal_strings[223] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_shift_right_x);
    }
    return (RogueClassTokenType*)(RogueTokenType_symbol_colon);
  }
  else if (ch_0 == (RogueCharacter)';')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_semicolon);
  }
  else if (ch_0 == (RogueCharacter)'<')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'<' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_open_specialize);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_le);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_compare);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_lt);
    }
  }
  else if (ch_0 == (RogueCharacter)'=')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_eq);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_fat_arrow);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_equals);
    }
  }
  else if (ch_0 == (RogueCharacter)'>')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_ge);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'>' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_specialize);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_gt);
    }
  }
  else if (ch_0 == (RogueCharacter)'?')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_question_mark);
  }
  else if (ch_0 == (RogueCharacter)'@')
  {
    if (((RogueTokenizer__consume_id__String( ROGUE_ARG(THIS), Rogue_literal_strings[113] ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_keyword_trace_args_only);
    }
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_at_brace);
    }
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'[' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_at_bracket);
    }
    return (RogueClassTokenType*)(RogueTokenType_symbol_at);
  }
  else if (ch_0 == (RogueCharacter)'[')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)']' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_empty_brackets);
    }
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_bracket);
  }
  else if (ch_0 == (RogueCharacter)'\\')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_backslash);
  }
  else if (ch_0 == (RogueCharacter)']')
  {
    return (RogueClassTokenType*)(RogueTokenType_symbol_close_bracket);
  }
  else if (ch_0 == (RogueCharacter)'^')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_caret_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_caret);
    }
  }
  else if (ch_0 == (RogueCharacter)'{')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'}' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_empty_braces);
    }
    return (RogueClassTokenType*)(RogueTokenType_symbol_open_brace);
  }
  else if (ch_0 == (RogueCharacter)'|')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'|' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_double_vertical_bar);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_vertical_bar_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_vertical_bar);
    }
  }
  else if (ch_0 == (RogueCharacter)'}')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'#' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_comment);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_close_brace);
    }
  }
  else if (ch_0 == (RogueCharacter)'~')
  {
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'=' ))))
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_tilde_equals);
    }
    else
    {
      return (RogueClassTokenType*)(RogueTokenType_symbol_tilde);
    }
  }
  else
  {
    ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[224], ch_0 )))), Rogue_literal_strings[225] )))) ))));
  }
}

RogueLogical RogueTokenizer__next_is_hex_digit( RogueClassTokenizer* THIS )
{
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  return (RogueLogical)((((ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9') || (ch_0 >= (RogueCharacter)'a' && ch_0 <= (RogueCharacter)'f')) || (ch_0 >= (RogueCharacter)'A' && ch_0 <= (RogueCharacter)'F')));
}

void RogueTokenizer__read_character( RogueClassTokenizer* THIS )
{
  if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[201] ))));
  }
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  if (ch_0 == (RogueCharacter)10)
  {
    ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[202] ))));
  }
  if (ch_0 == (RogueCharacter)'\\')
  {
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[203] ))));
    }
    RogueInt32 value_1 = 0;
    if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'b' ))))
    {
      value_1 = ((RogueInt32)8);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'f' ))))
    {
      value_1 = ((RogueInt32)12);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'n' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)10)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'r' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)13)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'t' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)9)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'v' ))))
    {
      value_1 = ((RogueInt32)11);
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'0' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)0)));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'/' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'/')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'\'')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'\\' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'\\')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'"' ))))
    {
      value_1 = ((RogueInt32)((RogueInt32)((RogueCharacter)'"')));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'x' ))))
    {
      value_1 = ((RogueInt32)((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 2, false ))));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'u' ))))
    {
      value_1 = ((RogueInt32)((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 4, false ))));
    }
    else if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'[' ))))
    {
      RogueTokenizer__read_hex_sequence( ROGUE_ARG(THIS) );
      return;
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[208], Rogue_literal_strings[209] )))), Rogue_literal_strings[210] )))) ))));
    }
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(value_1))), true );
  }
  else
  {
    RogueInt32 value_2 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
    if ((value_2 & 128) != 0)
    {
      RogueInt32 ch2_3 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
      if ((value_2 & 32) == 0)
      {
        value_2 = ((RogueInt32)(value_2 & 31));
        ch2_3 = ((RogueInt32)(value_2 & 63));
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(((value_2 << 6) | ch2_3)))), true );
      }
      else
      {
        RogueInt32 ch3_4 = (((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))));
        value_2 = ((RogueInt32)(value_2 & 15));
        ch2_3 = ((RogueInt32)(ch2_3 & 63));
        ch3_4 = ((RogueInt32)(ch3_4 & 63));
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)((((value_2 << 2) | (ch2_3 << 6)) | ch3_4)))), true );
      }
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueCharacter)(value_2))), true );
    }
  }
}

RogueInt32 RogueTokenizer__read_hex_value__Int32_Logical( RogueClassTokenizer* THIS, RogueInt32 digits_0, RogueLogical variable_length_1 )
{
  RogueInt32 value_2 = (0);
  RogueInt32 i_3 = (1);
  while (i_3 <= digits_0)
  {
    if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], digits_0 )))), Rogue_literal_strings[204] )))) ))));
    }
    if (!(((RogueTokenizer__next_is_hex_digit( ROGUE_ARG(THIS) )))))
    {
      if (variable_length_1)
      {
        return (RogueInt32)(value_2);
      }
      RogueCharacter ch_4 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,error_buffer_5,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      RogueStringBuilder__print__String( error_buffer_5, Rogue_literal_strings[205] );
      if ((ch_4 < (RogueCharacter)' ' || ((RogueInt32)(ch_4)) == 127))
      {
        RogueStringBuilder__print__Int32( error_buffer_5, ROGUE_ARG(((RogueInt32)(ch_4))) );
      }
      else
      {
        RogueStringBuilder__print__String( error_buffer_5, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[206], ch_4 )))), Rogue_literal_strings[206] )))) );
      }
      RogueStringBuilder__print__Character_Logical( error_buffer_5, (RogueCharacter)'.', true );
      ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( error_buffer_5 )))) ))));
    }
    RogueInt32 intval_6 = (((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), 16 ))));
    value_2 = ((RogueInt32)((value_2 << 4) + intval_6));
    ++i_3;
  }
  return (RogueInt32)(value_2);
}

void RogueTokenizer__read_hex_sequence( RogueClassTokenizer* THIS )
{
  RogueLogical first_0 = (true);
  while ((first_0 || ((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)',' )))))
  {
    first_0 = ((RogueLogical)false);
    RogueCharacter ch_1 = (((RogueCharacter)(((RogueTokenizer__read_hex_value__Int32_Logical( ROGUE_ARG(THIS), 6, true ))))));
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_1, true );
  }
  if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)']' ))))
  {
    return;
  }
  ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[207] ))));
}

RogueString* RogueTokenizer__read_identifier( RogueClassTokenizer* THIS )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  while (((((ch_0 >= (RogueCharacter)'a' && ch_0 <= (RogueCharacter)'z') || (ch_0 >= (RogueCharacter)'A' && ch_0 <= (RogueCharacter)'Z')) || (ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9')) || ch_0 == (RogueCharacter)'_'))
  {
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    ch_0 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    while ((ch_0 == (RogueCharacter)':' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)':'))
    {
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[195] );
      ch_0 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    }
  }
  if (THIS->buffer->count == 0)
  {
    ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[196] ))));
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
}

RogueLogical RogueTokenizer__tokenize_alternate_string__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    if (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
      if (ch_1 == terminator_0)
      {
        RogueParseReader__read( ROGUE_ARG(THIS->reader) );
        ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
        if (ch_1 == terminator_0)
        {
          RogueParseReader__read( ROGUE_ARG(THIS->reader) );
          return (RogueLogical)(((RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCharacter)(0))) ))));
        }
        else
        {
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), terminator_0, true );
        }
      }
      else
      {
        RogueTokenizer__read_character( ROGUE_ARG(THIS) );
      }
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[211] ))));
}

RogueLogical RogueTokenizer__tokenize_another( RogueClassTokenizer* THIS )
{
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  THIS->next_filepath = THIS->filepath;
  THIS->next_line = THIS->reader->line;
  THIS->next_column = THIS->reader->column;
  if (!(((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) )))))
  {
    return (RogueLogical)(false);
  }
  RogueCharacter ch_0 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  if (ch_0 == (RogueCharacter)10)
  {
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))));
  }
  if ((((RogueCharacter__is_letter( ch_0 ))) || ch_0 == (RogueCharacter)'_'))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,id_1,(((RogueTokenizer__read_identifier( ROGUE_ARG(THIS) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,keyword_type_2,(((RogueTable_String_TokenType___get__String( ROGUE_ARG(RogueTokenType_lookup), id_1 )))));
    if (!!(keyword_type_2))
    {
      if (((void*)keyword_type_2) == ((void*)RogueTokenType_keyword_nativeCode))
      {
        return (RogueLogical)(((RogueTokenizer__scan_native_code( ROGUE_ARG(THIS) ))));
      }
      else if (((void*)keyword_type_2) == ((void*)RogueTokenType_keyword_nativeHeader))
      {
        return (RogueLogical)(((RogueTokenizer__scan_native_header( ROGUE_ARG(THIS) ))));
      }
      else if (((void*)keyword_type_2) == ((void*)RogueTokenType_directive_essential))
      {
        return (RogueLogical)(((RogueTokenizer__scan_essential_directive( ROGUE_ARG(THIS) ))));
      }
      else
      {
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), keyword_type_2 ))));
      }
    }
    else
    {
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_identifier), id_1 ))));
    }
    return (RogueLogical)(true);
  }
  else if (ch_0 == (RogueCharacter)'\'')
  {
    if (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'\'')
    {
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      return (RogueLogical)(((RogueTokenizer__tokenize_alternate_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))));
    }
    else
    {
      return (RogueLogical)(((RogueTokenizer__tokenize_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'\'' ))));
    }
  }
  else if (ch_0 == (RogueCharacter)'"')
  {
    return (RogueLogical)(((RogueTokenizer__tokenize_string__Character( ROGUE_ARG(THIS), (RogueCharacter)'"' ))));
  }
  else if (ch_0 == (RogueCharacter)'#')
  {
    return (RogueLogical)(((RogueTokenizer__tokenize_comment( ROGUE_ARG(THIS) ))));
  }
  else if ((ch_0 >= (RogueCharacter)'0' && ch_0 <= (RogueCharacter)'9'))
  {
    switch (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))))
    {
      case (RogueCharacter)'b':
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 2 ))));
        break;
      }
      case (RogueCharacter)'c':
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 8 ))));
        break;
      }
      case (RogueCharacter)'x':
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_integer_in_base__Int32( ROGUE_ARG(THIS), 16 ))));
        break;
      }
      default:
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_number( ROGUE_ARG(THIS) ))));
      }
    }
  }
  else if ((ch_0 == (RogueCharacter)'@' && ((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))) == (RogueCharacter)'|'))
  {
    return (RogueLogical)(((RogueTokenizer__tokenize_verbatim_string( ROGUE_ARG(THIS) ))));
  }
  else
  {
    if (ch_0 == (RogueCharacter)'.')
    {
      RogueCharacter next_3 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))));
      if ((next_3 >= (RogueCharacter)'0' && next_3 <= (RogueCharacter)'9'))
      {
        return (RogueLogical)(((RogueTokenizer__tokenize_number( ROGUE_ARG(THIS) ))));
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,token_type_4,(((Rogue_Tokenizer__get_symbol_token_type( ROGUE_ARG(THIS) )))));
    if (((void*)token_type_4) == ((void*)NULL))
    {
      return (RogueLogical)(true);
    }
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), token_type_4 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,name_5,(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[206] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ch_0 )))) )))), Rogue_literal_strings[206] )))) )))));
  if (((RogueInt32)(ch_0)) == 10)
  {
    name_5 = ((RogueString*)Rogue_literal_strings[226]);
  }
  else if ((((RogueInt32)(ch_0)) < 32 || ((RogueInt32)(ch_0)) > 126))
  {
    name_5 = ((RogueString*)((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[227] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((RogueInt32)(ch_0))) )))) )))), Rogue_literal_strings[12] )))) ))));
  }
  ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[228] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_5 )))) )))), Rogue_literal_strings[154] )))) )))) ))));
}

RogueLogical RogueTokenizer__tokenize_comment( RogueClassTokenizer* THIS )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
  {
    RogueInt32 nesting_count_0 = (1);
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      RogueCharacter ch_1 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
      switch (ch_1)
      {
        case (RogueCharacter)'#':
        {
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'#', true );
          if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'{' ))))
          {
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'{', true );
            ++nesting_count_0;
          }
          break;
        }
        case (RogueCharacter)'}':
        {
          if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'#' ))))
          {
            --nesting_count_0;
            if (nesting_count_0 == 0)
            {
              goto _auto_2839;
            }
            else
            {
              RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'}', true );
              RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'#', true );
            }
          }
          else
          {
            RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)'}', true );
          }
          break;
        }
        default:
        {
          RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_1, true );
        }
      }
    }
    _auto_2839:;
  }
  else
  {
    while ((((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))) && ((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))) != (RogueCharacter)10))
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
  }
  if ((!!(THIS->tokens->count) && ((void*)((RogueToken_List__last( ROGUE_ARG(THIS->tokens) )))->_type) == ((void*)RogueTokenType_eol)))
  {
    ((RogueClassEOLToken*)(RogueObject_as(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) ))),RogueTypeEOLToken)))->comment = ((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueClassEOLToken*)(RogueObject_as(((RogueToken_List__last( ROGUE_ARG(THIS->tokens) ))),RogueTypeEOLToken)))->comment), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) )));
  }
  return (RogueLogical)(true);
}

RogueLogical RogueTokenizer__tokenize_integer_in_base__Int32( RogueClassTokenizer* THIS, RogueInt32 base_0 )
{
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  RogueInt32 count_1 = (0);
  RogueInt64 n_2 = (((RogueInt64)(0)));
  RogueInt32 digit_3 = (((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__peek( ROGUE_ARG(THIS->reader) )))), base_0 ))));
  while ((((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))) && digit_3 != -1))
  {
    if (digit_3 >= base_0)
    {
      ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[213], base_0 )))), Rogue_literal_strings[154] )))) ))));
    }
    ++count_1;
    n_2 = ((RogueInt64)((n_2 * ((RogueInt64)(base_0))) + ((RogueInt64)(digit_3))));
    RogueParseReader__read( ROGUE_ARG(THIS->reader) );
    digit_3 = ((RogueInt32)((RogueCharacter__to_number__Int32( ROGUE_ARG(((RogueParseReader__peek( ROGUE_ARG(THIS->reader) )))), base_0 ))));
  }
  if (count_1 == 0)
  {
    ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[214] ))));
  }
  if ((((base_0 == 2 && count_1 > 32) || (base_0 == 8 && count_1 > 11)) || (base_0 == 16 && count_1 > 8)))
  {
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long), n_2 ))));
  }
  else
  {
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), n_2 ))));
  }
}

RogueLogical RogueTokenizer__tokenize_number( RogueClassTokenizer* THIS )
{
  RogueLogical is_negative_0 = (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))));
  RogueInt32 i_1 = (0);
  while ((((RogueParseReader__has_another__Int32( ROGUE_ARG(THIS->reader), ROGUE_ARG((i_1 + 1)) ))) && ((RogueCharacter__is_number__Int32( ROGUE_ARG(((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), i_1 )))), 10 )))))
  {
    ++i_1;
  }
  RogueCharacter ch_2 = (((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), i_1 ))));
  RogueLogical is_real_3 = ((((ch_2 == (RogueCharacter)'.' && ((RogueCharacter__is_number__Int32( ROGUE_ARG(((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), ROGUE_ARG((i_1 + 1)) )))), 10 )))) || ch_2 == (RogueCharacter)'e') || ch_2 == (RogueCharacter)'E'));
  if (is_real_3)
  {
    RogueReal64 n_4 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
    ch_2 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    if (ch_2 == (RogueCharacter)'.')
    {
      ch_2 = ((RogueCharacter)((RogueParseReader__peek__Int32( ROGUE_ARG(THIS->reader), 1 ))));
      if ((ch_2 >= (RogueCharacter)'0' && ch_2 <= (RogueCharacter)'9'))
      {
        RogueParseReader__read( ROGUE_ARG(THIS->reader) );
        RogueInt32 start_pos_5 = (THIS->reader->position);
        RogueReal64 fraction_6 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
        n_4 += (fraction_6 / ((RogueReal64) pow((double)10.0, (double)((RogueReal64)((THIS->reader->position - start_pos_5))))));
      }
      else if (ch_2 == (RogueCharacter)'.')
      {
        if (is_negative_0)
        {
          n_4 = ((RogueReal64)(-(n_4)));
        }
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_4))) ))));
      }
      else if ((((ch_2 >= (RogueCharacter)'a' && ch_2 <= (RogueCharacter)'z') || (ch_2 >= (RogueCharacter)'A' && ch_2 <= (RogueCharacter)'Z')) || ch_2 == (RogueCharacter)'_'))
      {
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_4))) ))));
      }
      else
      {
        if (is_negative_0)
        {
          n_4 = ((RogueReal64)(-(n_4)));
        }
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Real64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real), n_4 ))));
      }
    }
    if ((((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'E' ))) || ((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'e' )))))
    {
      RogueLogical negative_exponent_7 = (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'-' ))));
      if (!(negative_exponent_7))
      {
        RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'+' );
      }
      RogueReal64 power_8 = (((RogueTokenizer__scan_real( ROGUE_ARG(THIS) ))));
      if (negative_exponent_7)
      {
        n_4 /= ((RogueReal64) pow((double)10.0, (double)power_8));
      }
      else
      {
        n_4 *= ((RogueReal64) pow((double)10.0, (double)power_8));
      }
    }
    if (is_negative_0)
    {
      n_4 = ((RogueReal64)(-(n_4)));
    }
    return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Real64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_real), n_4 ))));
  }
  else
  {
    RogueInt64 n_9 = (((RogueTokenizer__scan_long( ROGUE_ARG(THIS) ))));
    if (is_negative_0)
    {
      n_9 = ((RogueInt64)(-(n_9)));
    }
    if (n_9 == ((RogueInt64)(((RogueInt32)(n_9)))))
    {
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int32( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_integer), ROGUE_ARG(((RogueInt32)(n_9))) ))));
    }
    else
    {
      return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_Int64( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_long), n_9 ))));
    }
  }
}

RogueReal64 RogueTokenizer__scan_real( RogueClassTokenizer* THIS )
{
  RogueReal64 n_0 = (0.0);
  RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  while ((ch_1 >= (RogueCharacter)'0' && ch_1 <= (RogueCharacter)'9'))
  {
    RogueInt32 intval_2 = ((((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))) - ((RogueInt32)((RogueCharacter)'0'))));
    n_0 = ((RogueReal64)((n_0 * 10.0) + ((RogueReal64)(intval_2))));
    ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  }
  return (RogueReal64)(n_0);
}

RogueInt64 RogueTokenizer__scan_long( RogueClassTokenizer* THIS )
{
  RogueInt64 n_0 = (((RogueInt64)(0)));
  RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  while ((ch_1 >= (RogueCharacter)'0' && ch_1 <= (RogueCharacter)'9'))
  {
    RogueInt32 intval_2 = ((((RogueInt32)(((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))))) - ((RogueInt32)((RogueCharacter)'0'))));
    n_0 = ((RogueInt64)((n_0 * ((RogueInt64)(10))) + ((RogueInt64)(intval_2))));
    ch_1 = ((RogueCharacter)((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
  }
  return (RogueInt64)(n_0);
}

RogueLogical RogueTokenizer__scan_native_code( RogueClassTokenizer* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
  {
    RogueLogical found_end_1 = (false);
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      if (THIS->reader->column == 1)
      {
        RogueInt32 spaces_2 = (0);
        while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
        {
          ++spaces_2;
        }
        if (((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[197] ))))
        {
          found_end_1 = ((RogueLogical)true);
          goto _auto_2840;
        }
        else
        {
          {
            RogueInt32 _auto_298_3 = (1);
            RogueInt32 _auto_299_4 = (spaces_2);
            for (;_auto_298_3 <= _auto_299_4;++_auto_298_3)
            {
              RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)' ', true );
            }
          }
        }
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2840:;
    if (!(found_end_1))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[198] ))));
    }
  }
  else
  {
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
      {
        goto _auto_2841;
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2841:;
  }
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeCode), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) ))));
}

RogueLogical RogueTokenizer__scan_native_header( RogueClassTokenizer* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
  {
    RogueLogical found_end_1 = (false);
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      if (THIS->reader->column == 1)
      {
        RogueInt32 spaces_2 = (0);
        while (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)' ' ))))
        {
          ++spaces_2;
        }
        if (((RogueParseReader__consume_id__String( ROGUE_ARG(THIS->reader), Rogue_literal_strings[199] ))))
        {
          found_end_1 = ((RogueLogical)true);
          goto _auto_2842;
        }
        else
        {
          {
            RogueInt32 _auto_300_3 = (1);
            RogueInt32 _auto_301_4 = (spaces_2);
            for (;_auto_300_3 <= _auto_301_4;++_auto_300_3)
            {
              RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)' ', true );
            }
          }
        }
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2842:;
    if (!(found_end_1))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[200] ))));
    }
  }
  else
  {
    while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
    {
      if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
      {
        goto _auto_2843;
      }
      RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
    }
    _auto_2843:;
  }
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_keyword_nativeHeader), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) ))));
}

RogueLogical RogueTokenizer__scan_essential_directive( RogueClassTokenizer* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueParseReader__consume_spaces( ROGUE_ARG(THIS->reader) );
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    if (((RogueParseReader__consume__Character( ROGUE_ARG(THIS->reader), (RogueCharacter)10 ))))
    {
      goto _auto_2844;
    }
    RogueStringBuilder__print__Character_Logical( buffer_0, ROGUE_ARG(((RogueParseReader__read( ROGUE_ARG(THIS->reader) )))), true );
  }
  _auto_2844:;
  return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_directive_essential), ROGUE_ARG(((RogueString__trimmed( ROGUE_ARG(((RogueStringBuilder__to_String( buffer_0 )))) )))) ))));
}

RogueLogical RogueTokenizer__tokenize_string__Character( RogueClassTokenizer* THIS, RogueCharacter terminator_0 )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    RogueCharacter ch_1 = (((RogueParseReader__peek( ROGUE_ARG(THIS->reader) ))));
    if (ch_1 == terminator_0)
    {
      RogueParseReader__read( ROGUE_ARG(THIS->reader) );
      return (RogueLogical)(((RogueTokenizer__add_new_string_or_character_token_from_buffer__Character( ROGUE_ARG(THIS), terminator_0 ))));
    }
    else
    {
      RogueTokenizer__read_character( ROGUE_ARG(THIS) );
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[212] ))));
}

RogueLogical RogueTokenizer__tokenize_verbatim_string( RogueClassTokenizer* THIS )
{
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  RogueParseReader__read( ROGUE_ARG(THIS->reader) );
  while (((RogueParseReader__has_another( ROGUE_ARG(THIS->reader) ))))
  {
    RogueCharacter ch_0 = (((RogueParseReader__read( ROGUE_ARG(THIS->reader) ))));
    if (((RogueInt32)(ch_0)) == 10)
    {
      RogueTokenizer__consume_spaces( ROGUE_ARG(THIS) );
      if (((RogueTokenizer__consume__Character( ROGUE_ARG(THIS), (RogueCharacter)'|' ))))
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
      }
      else
      {
        RogueTokenizer__add_new_token__TokenType_String( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_literal_string), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) );
        return (RogueLogical)(((RogueTokenizer__add_new_token__TokenType( ROGUE_ARG(THIS), ROGUE_ARG(RogueTokenType_eol) ))));
      }
    }
    else
    {
      RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueTokenizer__error__String( ROGUE_ARG(THIS), Rogue_literal_strings[215] ))));
}

RogueClassLiteralCharacterToken* RogueLiteralCharacterToken__init_object( RogueClassLiteralCharacterToken* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassLiteralCharacterToken*)(THIS);
}

RogueString* RogueLiteralCharacterToken__to_String( RogueClassLiteralCharacterToken* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralCharacterToken__type_name( RogueClassLiteralCharacterToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1144]);
}

RogueCharacter RogueLiteralCharacterToken__to_Character( RogueClassLiteralCharacterToken* THIS )
{
  return (RogueCharacter)(THIS->value);
}

RogueClassLiteralCharacterToken* RogueLiteralCharacterToken__init__TokenType_Character( RogueClassLiteralCharacterToken* THIS, RogueClassTokenType* _auto_317_0, RogueCharacter _auto_318_1 )
{
  THIS->value = _auto_318_1;
  THIS->_type = _auto_317_0;
  return (RogueClassLiteralCharacterToken*)(THIS);
}

RogueClassLiteralInt64Token* RogueLiteralInt64Token__init_object( RogueClassLiteralInt64Token* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassLiteralInt64Token*)(THIS);
}

RogueString* RogueLiteralInt64Token__to_String( RogueClassLiteralInt64Token* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int64( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralInt64Token__type_name( RogueClassLiteralInt64Token* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1145]);
}

RogueInt32 RogueLiteralInt64Token__to_Int32( RogueClassLiteralInt64Token* THIS )
{
  return (RogueInt32)(((RogueInt32)(THIS->value)));
}

RogueInt64 RogueLiteralInt64Token__to_Int64( RogueClassLiteralInt64Token* THIS )
{
  return (RogueInt64)(THIS->value);
}

RogueReal64 RogueLiteralInt64Token__to_Real64( RogueClassLiteralInt64Token* THIS )
{
  return (RogueReal64)(((RogueReal64)(THIS->value)));
}

RogueClassLiteralInt64Token* RogueLiteralInt64Token__init__TokenType_Int64( RogueClassLiteralInt64Token* THIS, RogueClassTokenType* _auto_319_0, RogueInt64 _auto_320_1 )
{
  THIS->value = _auto_320_1;
  THIS->_type = _auto_319_0;
  return (RogueClassLiteralInt64Token*)(THIS);
}

RogueClassLiteralInt32Token* RogueLiteralInt32Token__init_object( RogueClassLiteralInt32Token* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassLiteralInt32Token*)(THIS);
}

RogueString* RogueLiteralInt32Token__to_String( RogueClassLiteralInt32Token* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralInt32Token__type_name( RogueClassLiteralInt32Token* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1146]);
}

RogueInt32 RogueLiteralInt32Token__to_Int32( RogueClassLiteralInt32Token* THIS )
{
  return (RogueInt32)(THIS->value);
}

RogueReal64 RogueLiteralInt32Token__to_Real64( RogueClassLiteralInt32Token* THIS )
{
  return (RogueReal64)(((RogueReal64)(THIS->value)));
}

RogueClassLiteralInt32Token* RogueLiteralInt32Token__init__TokenType_Int32( RogueClassLiteralInt32Token* THIS, RogueClassTokenType* _auto_321_0, RogueInt32 _auto_322_1 )
{
  THIS->value = _auto_322_1;
  THIS->_type = _auto_321_0;
  return (RogueClassLiteralInt32Token*)(THIS);
}

RogueClassLiteralReal64Token* RogueLiteralReal64Token__init_object( RogueClassLiteralReal64Token* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassLiteralReal64Token*)(THIS);
}

RogueString* RogueLiteralReal64Token__to_String( RogueClassLiteralReal64Token* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__Real64( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueLiteralReal64Token__type_name( RogueClassLiteralReal64Token* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1147]);
}

RogueInt32 RogueLiteralReal64Token__to_Int32( RogueClassLiteralReal64Token* THIS )
{
  return (RogueInt32)(((RogueInt32)(THIS->value)));
}

RogueReal64 RogueLiteralReal64Token__to_Real64( RogueClassLiteralReal64Token* THIS )
{
  return (RogueReal64)(THIS->value);
}

RogueClassLiteralReal64Token* RogueLiteralReal64Token__init__TokenType_Real64( RogueClassLiteralReal64Token* THIS, RogueClassTokenType* _auto_323_0, RogueReal64 _auto_324_1 )
{
  THIS->value = _auto_324_1;
  THIS->_type = _auto_323_0;
  return (RogueClassLiteralReal64Token*)(THIS);
}

RogueClassStringDataToken* RogueStringDataToken__init_object( RogueClassStringDataToken* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassStringDataToken*)(THIS);
}

RogueString* RogueStringDataToken__to_String( RogueClassStringDataToken* THIS )
{
  return (RogueString*)(THIS->value);
}

RogueString* RogueStringDataToken__type_name( RogueClassStringDataToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1148]);
}

RogueString* RogueStringDataToken__quoted_name( RogueClassStringDataToken* THIS )
{
  if (((void*)THIS->_type) == ((void*)RogueTokenType_directive_essential))
  {
    return (RogueString*)(Rogue_literal_strings[32]);
  }
  return (RogueString*)((RogueToken__quoted_name( ROGUE_ARG(((RogueClassToken*)THIS)) )));
}

RogueClassStringDataToken* RogueStringDataToken__init__TokenType_String( RogueClassStringDataToken* THIS, RogueClassTokenType* _auto_325_0, RogueString* _auto_326_1 )
{
  THIS->value = _auto_326_1;
  THIS->_type = _auto_325_0;
  return (RogueClassStringDataToken*)(THIS);
}

RogueClassListRewriter_Token_* RogueListRewriter_Token___init_object( RogueClassListRewriter_Token_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassListRewriter_Token_*)(THIS);
}

RogueString* RogueListRewriter_Token___type_name( RogueClassListRewriter_Token_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[984]);
}

RogueClassListRewriter_Token_* RogueListRewriter_Token___init__Token_List( RogueClassListRewriter_Token_* THIS, RogueToken_List* _auto_332_0 )
{
  THIS->list = _auto_332_0;
  return (RogueClassListRewriter_Token_*)(THIS);
}

RogueLogical RogueListRewriter_Token___has_another( RogueClassListRewriter_Token_* THIS )
{
  if (THIS->read_index < THIS->list->count)
  {
    return (RogueLogical)(true);
  }
  else
  {
    RogueToken_List__discard_from__Int32( ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->write_index) );
    return (RogueLogical)(false);
  }
  return (RogueLogical)(THIS->read_index < THIS->list->count);
}

RogueClassToken* RogueListRewriter_Token___peek__Int32( RogueClassListRewriter_Token_* THIS, RogueInt32 lookahead_0 )
{
  return (RogueClassToken*)(((RogueClassToken*)(THIS->list->data->as_objects[(THIS->read_index + lookahead_0)])));
}

RogueClassToken* RogueListRewriter_Token___read( RogueClassListRewriter_Token_* THIS )
{
  ++THIS->read_index;
  return (RogueClassToken*)(((RogueClassToken*)(THIS->list->data->as_objects[(THIS->read_index - 1)])));
}

RogueClassListRewriter_Token_* RogueListRewriter_Token___write__Token( RogueClassListRewriter_Token_* THIS, RogueClassToken* value_0 )
{
  if (THIS->write_index == THIS->read_index)
  {
    RogueToken_List__reserve__Int32( ROGUE_ARG(THIS->list), 1 );
    RogueInt32 unread_count_1 = ((THIS->list->count - THIS->read_index));
    RogueArray_set(THIS->list->data,(((RogueToken_List__capacity( ROGUE_ARG(THIS->list) ))) - unread_count_1),((RogueArray*)(THIS->list->data)),THIS->read_index,unread_count_1);
    THIS->read_index += (((RogueToken_List__capacity( ROGUE_ARG(THIS->list) ))) - THIS->list->count);
    THIS->list->count = ((RogueToken_List__capacity( ROGUE_ARG(THIS->list) )));
  }
  THIS->list->data->as_objects[THIS->write_index] = value_0;
  ++THIS->write_index;
  return (RogueClassListRewriter_Token_*)(THIS);
}

RogueClassProgram_cy_create_delegates__* RogueProgram_cy_create_delegates____init_object( RogueClassProgram_cy_create_delegates__* THIS )
{
  RogueFunction__RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction__RETURNSLogical*)THIS)) );
  return (RogueClassProgram_cy_create_delegates__*)(THIS);
}

RogueString* RogueProgram_cy_create_delegates____type_name( RogueClassProgram_cy_create_delegates__* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1371]);
}

RogueLogical RogueProgram_cy_create_delegates____call( RogueClassProgram_cy_create_delegates__* THIS )
{
  return (RogueLogical)(((RogueProgram__cy_create_delegates( ROGUE_ARG(THIS->context) ))));
}

RogueClassProgram_cy_create_delegates__* RogueProgram_cy_create_delegates____init__Program( RogueClassProgram_cy_create_delegates__* THIS, RogueClassProgram* _auto_333_0 )
{
  THIS->context = _auto_333_0;
  return (RogueClassProgram_cy_create_delegates__*)(THIS);
}

RogueClassProgram_cy_on_header_end_Object_* RogueProgram_cy_on_header_end_Object___init_object( RogueClassProgram_cy_on_header_end_Object_* THIS )
{
  RogueFunction_Object___init_object( ROGUE_ARG(((RogueClassFunction_Object_*)THIS)) );
  return (RogueClassProgram_cy_on_header_end_Object_*)(THIS);
}

RogueString* RogueProgram_cy_on_header_end_Object___type_name( RogueClassProgram_cy_on_header_end_Object_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1406]);
}

void RogueProgram_cy_on_header_end_Object___call__Object( RogueClassProgram_cy_on_header_end_Object_* THIS, RogueObject* param1_0 )
{
  RogueProgram__cy_on_header_end__Object( ROGUE_ARG(THIS->context), param1_0 );
}

RogueClassProgram_cy_on_header_end_Object_* RogueProgram_cy_on_header_end_Object___init__Program( RogueClassProgram_cy_on_header_end_Object_* THIS, RogueClassProgram* _auto_334_0 )
{
  THIS->context = _auto_334_0;
  return (RogueClassProgram_cy_on_header_end_Object_*)(THIS);
}

RogueClassProgram_cy_on_code_end_Object_* RogueProgram_cy_on_code_end_Object___init_object( RogueClassProgram_cy_on_code_end_Object_* THIS )
{
  RogueFunction_Object___init_object( ROGUE_ARG(((RogueClassFunction_Object_*)THIS)) );
  return (RogueClassProgram_cy_on_code_end_Object_*)(THIS);
}

RogueString* RogueProgram_cy_on_code_end_Object___type_name( RogueClassProgram_cy_on_code_end_Object_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1407]);
}

void RogueProgram_cy_on_code_end_Object___call__Object( RogueClassProgram_cy_on_code_end_Object_* THIS, RogueObject* param1_0 )
{
  RogueProgram__cy_on_code_end__Object( ROGUE_ARG(THIS->context), param1_0 );
}

RogueClassProgram_cy_on_code_end_Object_* RogueProgram_cy_on_code_end_Object___init__Program( RogueClassProgram_cy_on_code_end_Object_* THIS, RogueClassProgram* _auto_335_0 )
{
  THIS->context = _auto_335_0;
  return (RogueClassProgram_cy_on_code_end_Object_*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init_object( RogueClassCmdAccess* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAccess*)(THIS);
}

RogueString* RogueCmdAccess__to_String( RogueClassCmdAccess* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[909] );
  if (!!(THIS->context))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(THIS->context))) )))), Rogue_literal_strings[7] );
  }
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'"', true )))), ROGUE_ARG(THIS->name) )))), (RogueCharacter)'"', true );
  if (!!(THIS->args))
  {
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(THIS->args))) );
  }
  if (!!(THIS->named_args))
  {
    RogueStringBuilder__print__Object( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'&', true )))), ROGUE_ARG(((RogueObject*)(THIS->named_args))) );
  }
  RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[12] );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdAccess__type_name( RogueClassCmdAccess* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1156]);
}

RogueClassCmd* RogueCmdAccess__cloned__CloneArgs( RogueClassCmdAccess* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,result_1,(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmd__cloned__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))) )))));
  if (!!(THIS->named_args))
  {
    result_1->named_args = ((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) )));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2845_3,(THIS->named_args));
      RogueInt32 _auto_2846_4 = (0);
      for (;_auto_2846_4 < _auto_2845_3->count;++_auto_2846_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_5,(((RogueClassCmdNamedArg*)(_auto_2845_3->data->as_objects[_auto_2846_4]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(result_1->named_args), ROGUE_ARG(((RogueCmdNamedArg__cloned__CloneArgs( named_arg_5, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_2,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_2))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_access__CmdAccess( macro_args_2, result_1 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

RogueClassCmd* RogueCmdAccess__dispatch__Visitor( RogueClassCmdAccess* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM1063( 50, v_0, ROGUE_ARG(THIS) )));
}

RogueClassType* RogueCmdAccess__implicit_type__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(THIS->name) )))));
  if ((!(!!(result_1)) || !(((RogueType__is_routine( result_1 ))))))
  {
    return (RogueClassType*)(result_1);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTemplate*,template_2,(((RogueProgram__find_template__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->name) )))));
  if (!!(template_2))
  {
    if (!!(template_2->_routine_return_type))
    {
      return (RogueClassType*)(template_2->_routine_return_type);
    }
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1212] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1213] )))) )))) ))));
  }
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

RogueClassCmd* RogueCmdAccess__resolve__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope_Logical( ROGUE_ARG(THIS), scope_0, false ))));
}

RogueClassCmd* RogueCmdAccess__resolve_assignment__Scope_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  if (!!(THIS->args))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1282] ))));
  }
  RogueLogical explicit_context_2 = (!!(THIS->context));
  RogueCharacter _auto_340_4;
  ROGUE_DEF_LOCAL_REF(RogueString*,setter_name_3,(((((_auto_340_4=RogueString_character_at(THIS->name,0))==((RogueCharacter)'@'))) ? (ROGUE_ARG(((RogueString*)(NULL)))) : ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[369], ROGUE_ARG(THIS->name) )))))));
  RogueLogical context_was_null_5 = (((void*)THIS->context) == ((void*)NULL));
  if (((void*)THIS->context) == ((void*)NULL))
  {
    if (!!(setter_name_3))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_6,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), false, 0 )))));
      if (!!(setter_6))
      {
        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(scope_0->this_method->name), setter_name_3 ))))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1283], ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[1284] )))), ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[1285] )))) ))));
        }
        return (RogueClassCmd*)(setter_6);
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,as_type_7,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(THIS->name) )))));
    if ((!!(as_type_7) && ((RogueType__is_singleton( as_type_7 )))))
    {
      return (RogueClassCmd*)(((RogueCmdWriteSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdWriteSingleton__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteSingleton*,ROGUE_CREATE_OBJECT(CmdWriteSingleton))), ROGUE_ARG(THIS->t), as_type_7, new_value_1 )))), scope_0 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_8,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
    if (!!(v_8))
    {
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), v_8, new_value_1 )))), scope_0 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_9,(((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_this_type->definition_lookup), ROGUE_ARG(THIS->name) )))));
    if ((!(!!(def_9)) && !!(scope_0->_implicit_type)))
    {
      def_9 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
    }
    if (!!(def_9))
    {
      return (RogueClassCmd*)((Rogue_call_ROGUEM154( 44, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(def_9->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, new_value_1 )));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_10,(((RogueType__find_global__String( ROGUE_ARG(scope_0->this_method->type_context), ROGUE_ARG(THIS->name) )))));
    if (!!(p_10))
    {
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), p_10, new_value_1 )))), scope_0 ))));
    }
    if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
    {
      p_10 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(scope_0->this_method->type_context), ROGUE_ARG(THIS->name) ))));
      if (!!(p_10))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[517] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[518] )))) )))) ))));
      }
    }
    THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->_this_type) )))));
  }
  else
  {
    THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_11,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_11, scope_0 );
  if (!!(setter_name_3))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_12,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, context_type_11, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), false, 0 )))));
    if (!!(setter_12))
    {
      return (RogueClassCmd*)(setter_12);
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_13,(((RogueType__find_global__String( context_type_11, ROGUE_ARG(THIS->name) )))));
  if (!!(p_13))
  {
    Rogue_call_ROGUEM152( 37, ROGUE_ARG(THIS->context) );
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), p_13, new_value_1 )))), scope_0 ))));
  }
  p_13 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_11, ROGUE_ARG(THIS->name) ))));
  if (!!(p_13))
  {
    if ((((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))) && !(explicit_context_2)))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[517] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[518] )))) )))) ))));
    }
    else
    {
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_13, new_value_1 )))), scope_0 ))));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_14,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_11->definition_lookup), ROGUE_ARG(THIS->name) )))));
  if ((!(!!(def_14)) && !!(scope_0->_implicit_type)))
  {
    def_14 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
  }
  if (!!(def_14))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM154( 44, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(def_14->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, new_value_1 )));
  }
  if (!!(setter_name_3))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_15,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, context_type_11, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), setter_name_3, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_1 )))) )))), true, 0 )))));
    if (!!(setter_15))
    {
      return (RogueClassCmd*)(setter_15);
    }
  }
  if ((context_was_null_5 && ((void*)scope_0->_this_type) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global)))
  {
    p_13 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(THIS->name) ))));
    if (!!(p_13))
    {
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))))), p_13, new_value_1 )))), scope_0 ))));
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[480] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1286] )))) )))) ))));
}

RogueClassCmd* RogueCmdAccess__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_3,0);
  if (!!(THIS->context))
  {
    THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
    context_type_3 = ((RogueClassType*)(Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) )));
  }
  else
  {
    if (((void*)THIS->args) == ((void*)NULL))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_4,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
      if (!!(v_4))
      {
        if (!!(THIS->args))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1290] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1291] )))) )))) ))));
        }
        return (RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(THIS->t), v_4, op_1, new_value_2 )))), scope_0 ))));
      }
    }
    context_type_3 = ((RogueClassType*)scope_0->_this_type);
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,setter_name_5,0);
  if (RogueString_character_at(THIS->name,0) != (RogueCharacter)'@')
  {
    setter_name_5 = ((RogueString*)((RogueString__operatorPLUS__String( Rogue_literal_strings[369], ROGUE_ARG(THIS->name) ))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_6,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, context_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_2 )))) )))), false, 0 )))));
    if (!!(setter_6))
    {
      return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, ROGUE_ARG(((RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( ROGUE_ARG(THIS), scope_0, op_1, new_value_2 )))), scope_0 )));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_7,(((RogueType__find_global__String( context_type_3, ROGUE_ARG(THIS->name) )))));
  if (!!(p_7))
  {
    if (!!(THIS->context))
    {
      Rogue_call_ROGUEM152( 37, ROGUE_ARG(THIS->context) );
    }
    return (RogueClassCmd*)(((RogueCmdModifyAndAssignGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignGlobal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignGlobal))), ROGUE_ARG(THIS->t), p_7, op_1, new_value_2 )))), scope_0 ))));
  }
  p_7 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_3, ROGUE_ARG(THIS->name) ))));
  if (!!(p_7))
  {
    if (!(!!(THIS->context)))
    {
      THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), context_type_3 )))));
    }
    if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[517] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[518] )))) )))) ))));
    }
    return (RogueClassCmd*)(((RogueCmdModifyAndAssignProperty__resolve__Scope( ROGUE_ARG(((RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignProperty*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_7, op_1, new_value_2 )))), scope_0 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_8,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_3->definition_lookup), ROGUE_ARG(THIS->name) )))));
  if ((!(!!(def_8)) && !!(scope_0->_implicit_type)))
  {
    def_8 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
  }
  if (!!(def_8))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM156( 46, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(def_8->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0, op_1, new_value_2 )));
  }
  if (!!(setter_name_5))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,setter_9,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, context_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(NULL))), setter_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), new_value_2 )))) )))), true, 0 )))));
    if (!!(setter_9))
    {
      return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, ROGUE_ARG(((RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( ROGUE_ARG(THIS), scope_0, op_1, new_value_2 )))), scope_0 )));
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[480] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1295] )))) )))) ))));
}

RogueClassType* Rogue_CmdAccess__type( RogueClassCmdAccess* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassRogueError*,err_0,(((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCmdAccess__type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[1298] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1299] )))) )))) )))));
  RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(err_0->stack_trace))) );
  ROGUE_THROW(RogueClassRogueError,err_0);
}

void RogueCmdAccess__write_cpp__CPPWriter_Logical( RogueClassCmdAccess* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueGlobal__println__Object( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueObject*)(((RogueStackTrace__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassStackTrace*,ROGUE_CREATE_OBJECT(StackTrace))), 0 )))))) );
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCmdAccess__type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[1301] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[405] )))) )))) ))));
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String( RogueClassCmdAccess* THIS, RogueClassToken* _auto_346_0, RogueString* _auto_347_1 )
{
  THIS->name = _auto_347_1;
  THIS->t = _auto_346_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String_CmdArgs( RogueClassCmdAccess* THIS, RogueClassToken* _auto_348_0, RogueString* _auto_349_1, RogueClassCmdArgs* _auto_350_2 )
{
  THIS->args = _auto_350_2;
  THIS->name = _auto_349_1;
  THIS->t = _auto_348_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( RogueClassCmdAccess* THIS, RogueClassToken* _auto_351_0, RogueString* _auto_352_1, RogueClassCmdArgs* _auto_353_2, RogueCmdNamedArg_List* _auto_354_3 )
{
  THIS->named_args = _auto_354_3;
  THIS->args = _auto_353_2;
  THIS->name = _auto_352_1;
  THIS->t = _auto_351_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String( RogueClassCmdAccess* THIS, RogueClassToken* _auto_355_0, RogueClassCmd* _auto_356_1, RogueString* _auto_357_2 )
{
  THIS->name = _auto_357_2;
  THIS->context = _auto_356_1;
  THIS->t = _auto_355_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_CmdArgs( RogueClassCmdAccess* THIS, RogueClassToken* _auto_358_0, RogueClassCmd* _auto_359_1, RogueString* _auto_360_2, RogueClassCmdArgs* _auto_361_3 )
{
  THIS->args = _auto_361_3;
  THIS->name = _auto_360_2;
  THIS->context = _auto_359_1;
  THIS->t = _auto_358_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( RogueClassCmdAccess* THIS, RogueClassToken* _auto_362_0, RogueClassCmd* _auto_363_1, RogueString* _auto_364_2, RogueClassCmdArgs* _auto_365_3, RogueCmdNamedArg_List* _auto_366_4 )
{
  THIS->named_args = _auto_366_4;
  THIS->args = _auto_365_3;
  THIS->name = _auto_364_2;
  THIS->context = _auto_363_1;
  THIS->t = _auto_362_0;
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmdAccess* RogueCmdAccess__init__Token_Cmd_String_Cmd( RogueClassCmdAccess* THIS, RogueClassToken* _auto_367_0, RogueClassCmd* _auto_368_1, RogueString* _auto_369_2, RogueClassCmd* arg_3 )
{
  THIS->name = _auto_369_2;
  THIS->context = _auto_368_1;
  THIS->t = _auto_367_0;
  THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), arg_3 );
  return (RogueClassCmdAccess*)(THIS);
}

RogueClassCmd* RogueCmdAccess__resolve__Scope_Logical( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueLogical ignore_question_mark_1 )
{
  if (!!(THIS->args))
  {
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  }
  if (!!(THIS->context))
  {
    if ((!(ignore_question_mark_1) && ((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'?' )))))
    {
      return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(THIS->name), -1 )))), ROGUE_ARG(THIS->args) )))))) )))))), scope_0 ))));
    }
    THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_2,(((RogueScope__find_local__String( scope_0, ROGUE_ARG(THIS->name) )))));
    if (!!(v_2))
    {
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[310], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      return (RogueClassCmd*)(((RogueCmdReadLocal__resolve__Scope( ROGUE_ARG(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), v_2 )))), scope_0 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,new_type_3,(((RogueScope__find_type__String( scope_0, ROGUE_ARG(((RogueString__after_any__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' )))) )))));
    if (!!(new_type_3))
    {
      RogueType__organize__Scope( new_type_3, scope_0 );
      if (((RogueType__is_routine( new_type_3 ))))
      {
        if (((RogueString__begins_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' ))))
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,m_call_list_4,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(new_type_3->global_method_lookup_by_name), Rogue_literal_strings[310] )))));
          if ((!!(m_call_list_4) && m_call_list_4->count == 1))
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_5,(((RogueClassMethod*)(m_call_list_4->data->as_objects[0]))));
            ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,parameters_6,(((RogueFnParam_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnParam_List*,ROGUE_CREATE_OBJECT(FnParam_List))), ROGUE_ARG(m_call_5->parameters->count) )))));
            ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_7,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
            {
              ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2849_25,(m_call_5->parameters));
              RogueInt32 _auto_2850_26 = (0);
              for (;_auto_2850_26 < _auto_2849_25->count;++_auto_2850_26)
              {
                ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_27,(((RogueClassLocal*)(_auto_2849_25->data->as_objects[_auto_2850_26]))));
                RogueFnParam_List__add__FnParam( parameters_6, ROGUE_ARG(((RogueFnParam__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnParam*,ROGUE_CREATE_OBJECT(FnParam))), ROGUE_ARG(param_27->name) )))) );
                ((RogueFnParam_List__last( parameters_6 )))->_type = param_27->_type;
                RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_7), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(param_27->name) )))))) );
              }
            }
            ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,statements_8,(((RogueCmdStatementList__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), 1 )))));
            if (!!(m_call_5->_return_type))
            {
              RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_8), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_3->name), args_7 )))))) )))))) );
            }
            else
            {
              RogueCmd_List__add__Cmd( ((RogueCmd_List*)statements_8), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_3->name), args_7 )))))) );
            }
            return (RogueClassCmd*)(((RogueCmdCreateFunction__resolve__Scope( ROGUE_ARG(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), ROGUE_ARG(THIS->t), parameters_6, ROGUE_ARG(m_call_5->_return_type), ROGUE_ARG(((RogueFnArg_List*)(NULL))), statements_8, false, ROGUE_ARG(((RogueClassCmd*)(NULL))) )))), scope_0 ))));
          }
        }
        else
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_9,(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), new_type_3 )))))), Rogue_literal_strings[310], ROGUE_ARG(THIS->args) )))));
          cmd_9->named_args = THIS->named_args;
          return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( cmd_9, scope_0 ))));
        }
      }
      if (((RogueString__begins_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'@' ))))
      {
        if (!!(THIS->args))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[511] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
        }
        ROGUE_DEF_LOCAL_REF(RogueString*,type_name_10,(((RogueString__from__Int32( ROGUE_ARG(THIS->name), 1 )))));
        RogueType__make_essential( ROGUE_ARG(((RogueType__organize__Scope( ROGUE_ARG(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), type_name_10 )))), scope_0 )))) );
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[450] )))))), Rogue_literal_strings[449], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), type_name_10, 0 )))))) )))) )))), scope_0 ))));
      }
      if (((void*)THIS->args) == ((void*)NULL))
      {
        if (((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)']' ))))
        {
          THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
        }
        else
        {
          return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), new_type_3 ))))));
        }
      }
      if (new_type_3->is_array)
      {
        return (RogueClassCmd*)(((RogueCmdCreateArray__resolve__Scope( ROGUE_ARG(((RogueCmdCreateArray__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateArray*,ROGUE_CREATE_OBJECT(CmdCreateArray))), ROGUE_ARG(THIS->t), new_type_3, ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      if (((RogueType__is_compound( new_type_3 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, new_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[475], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, 0 )))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmdCall*,cmd_call_12,(((RogueClassCmdCall*)(RogueObject_as(cmd_11,RogueTypeCmdCall)))));
        if ((!!(cmd_call_12) && ((RogueMethod__is_generated( ROGUE_ARG(cmd_call_12->method_info) )))))
        {
          return (RogueClassCmd*)(((RogueCmdCreateCompound__resolve__Scope( ROGUE_ARG(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), ROGUE_ARG(THIS->t), new_type_3, ROGUE_ARG(cmd_call_12->args) )))), scope_0 ))));
        }
        else if (!!(cmd_call_12))
        {
          return (RogueClassCmd*)(((RogueClassCmd*)(cmd_call_12)));
        }
        else
        {
          return (RogueClassCmd*)(cmd_11);
        }
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateObject*,cmd_create_13,(((RogueCmdCreateObject__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateObject*,ROGUE_CREATE_OBJECT(CmdCreateObject))), ROGUE_ARG(THIS->t), new_type_3 )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_new_14,(((RogueClassCmd*)(cmd_create_13))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_call_15,0);
      if (((RogueType__is_native( new_type_3 ))))
      {
        cmd_call_15 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, new_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(new_type_3->name) )))))), Rogue_literal_strings[475], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, 0 ))));
      }
      else
      {
        cmd_call_15 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, new_type_3, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), cmd_new_14, Rogue_literal_strings[417], ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))), true, 1 ))));
      }
      if (!!(cmd_call_15))
      {
        return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, cmd_call_15, new_type_3, scope_0, true, false ))), scope_0 )));
      }
      else
      {
        return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, cmd_new_14, scope_0 )));
      }
    }
    else if ((!(ignore_question_mark_1) && ((RogueString__ends_with__Character( ROGUE_ARG(THIS->name), (RogueCharacter)'?' )))))
    {
      return (RogueClassCmd*)(((RogueCmdLogicalize__resolve__Scope( ROGUE_ARG(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueString__leftmost__Int32( ROGUE_ARG(THIS->name), -1 )))), ROGUE_ARG(THIS->args) )))))) )))))), scope_0 ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_16,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS), false, 0 )))));
    if (!!(result_16))
    {
      RogueCmdAccess__check_for_recursive_getter__Scope( ROGUE_ARG(THIS), scope_0 );
      return (RogueClassCmd*)(result_16);
    }
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_17,(((RogueType__find_global__String( ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS->name) )))));
    if (!!(p_17))
    {
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[310], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      else
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), p_17 ))))));
      }
    }
    p_17 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS->name) ))));
    if (!!(p_17))
    {
      if (!!(THIS->args))
      {
        return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[310], ROGUE_ARG(THIS->args) )))), scope_0 ))));
      }
      if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[517] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[518] )))) )))) ))));
      }
      THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->_this_type) )))));
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_17 ))))));
    }
    if (!(!!(THIS->args)))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_18,(((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_this_type->definition_lookup), ROGUE_ARG(THIS->name) )))));
      if ((!(!!(def_18)) && !!(scope_0->_implicit_type)))
      {
        def_18 = ((RogueClassDefinition*)((RogueTable_String_Definition___get__String( ROGUE_ARG(scope_0->_implicit_type->definition_lookup), ROGUE_ARG(THIS->name) ))));
      }
      if (!!(def_18))
      {
        return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(def_18->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 )));
      }
      p_17 = ((RogueClassProperty*)((RogueType__find_property__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(THIS->name) ))));
      if (!!(p_17))
      {
        return (RogueClassCmd*)(((RogueCmdReadProperty__resolve__Scope( ROGUE_ARG(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))))), p_17 )))), scope_0 ))));
      }
    }
    return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, ROGUE_ARG(scope_0->_this_type), ROGUE_ARG(THIS), true, 0 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_19,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_19, scope_0 );
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_20,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, context_type_19, ROGUE_ARG(THIS), false, 0 )))));
  if (!!(result_20))
  {
    return (RogueClassCmd*)(result_20);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_21,(((RogueType__find_global__String( context_type_19, ROGUE_ARG(THIS->name) )))));
  if (!!(p_21))
  {
    if (!!(THIS->args))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[310], ROGUE_ARG(THIS->args) )))), scope_0 ))));
    }
    Rogue_call_ROGUEM152( 37, ROGUE_ARG(THIS->context) );
    return (RogueClassCmd*)(((RogueCmdReadGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), p_21 )))), scope_0 ))));
  }
  p_21 = ((RogueClassProperty*)((RogueType__find_property__String( context_type_19, ROGUE_ARG(THIS->name) ))));
  if (!!(p_21))
  {
    if (!!(THIS->args))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->name) )))))), Rogue_literal_strings[310], ROGUE_ARG(THIS->args) )))), scope_0 ))));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), p_21 ))))));
  }
  if (!(!!(THIS->args)))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassDefinition*,def_22,(((RogueTable_String_Definition___get__String( ROGUE_ARG(context_type_19->definition_lookup), ROGUE_ARG(THIS->name) )))));
    if (!!(def_22))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,old_implicit_type_23,(((RogueScope__set_implicit_type__Type( scope_0, context_type_19 )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,def_result_24,((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(def_22->expression), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))));
      RogueScope__set_implicit_type__Type( scope_0, old_implicit_type_23 );
      return (RogueClassCmd*)(def_result_24);
    }
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, context_type_19, ROGUE_ARG(THIS), true, 0 ))));
}

void RogueCmdAccess__check_for_recursive_getter__Scope( RogueClassCmdAccess* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,this_type_1,(scope_0->_this_type));
  if (((RogueString__operatorLTGT__String( ROGUE_ARG(THIS->name), ROGUE_ARG(scope_0->this_method->name) ))) != 0)
  {
    return;
  }
  RogueInt32 arg_count_2 = (((((THIS->args))) ? (THIS->args->count) : 0));
  if (arg_count_2 != scope_0->this_method->parameters->count)
  {
    return;
  }
  if (!((!!(((RogueType__find_property__String( this_type_1, ROGUE_ARG(THIS->name) )))) || !!(((RogueType__find_global__String( this_type_1, ROGUE_ARG(THIS->name) )))))))
  {
    return;
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[514], ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[515] )))), ROGUE_ARG(THIS->name) )))), Rogue_literal_strings[516] )))) ))));
}

RogueClassCmd* RogueCmdAccess__expand_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdAccess* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_3,0);
  {
    if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_ampersand_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(THIS->name), new_value_2 ))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_minus_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_plus_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_slash_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_tilde_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_times_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_vertical_bar_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else
    {
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1292] )))) )))) );
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1293] ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmdAccess__cloned__CloneArgs( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), cmd_3 ))))));
}

RogueClassCmdArgs* RogueCmdArgs__init_object( RogueClassCmdArgs* THIS )
{
  RogueCmd_List__init_object( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init( RogueClassCmdArgs* THIS )
{
  RogueCmd_List__init( ROGUE_ARG(((RogueCmd_List*)THIS)) );
  return (RogueClassCmdArgs*)(THIS);
}

RogueString* RogueCmdArgs__type_name( RogueClassCmdArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1365]);
}

RogueClassCmdArgs* RogueCmdArgs__init__Int32( RogueClassCmdArgs* THIS, RogueInt32 initial_capacity_0 )
{
  RogueCmd_List__init__Int32( ROGUE_ARG(((RogueCmd_List*)THIS)), initial_capacity_0 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__cloned( RogueClassCmdArgs* THIS )
{
  return (RogueClassCmdArgs*)(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))));
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg_0 )
{
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg_0 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd_Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg1_0, RogueClassCmd* arg2_1 )
{
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg1_0 )))), arg2_1 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__init__Cmd_Cmd_Cmd( RogueClassCmdArgs* THIS, RogueClassCmd* arg1_0, RogueClassCmd* arg2_1, RogueClassCmd* arg3_2 )
{
  RogueCmdArgs__init( ROGUE_ARG(THIS) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS)), arg1_0 )))), arg2_1 )))), arg3_2 );
  return (RogueClassCmdArgs*)(THIS);
}

RogueClassCmdArgs* RogueCmdArgs__cloned__CloneArgs( RogueClassCmdArgs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,result_1,(((RogueCmdArgs__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2851_2,(THIS));
    RogueInt32 _auto_2852_3 = (0);
    for (;_auto_2852_3 < _auto_2851_2->count;++_auto_2852_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueClassCmd*)(_auto_2851_2->data->as_objects[_auto_2852_3]))));
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)result_1), ROGUE_ARG((Rogue_call_ROGUEM146( 21, cmd_4, clone_args_0 ))) );
    }
  }
  return (RogueClassCmdArgs*)(result_1);
}

void RogueCmdArgs__dispatch__Visitor( RogueClassCmdArgs* THIS, RogueClassVisitor* v_0 )
{
  RogueVisitor__visit__CmdArgs( v_0, ROGUE_ARG(THIS) );
}

void RogueCmdArgs__resolve__Scope( RogueClassCmdArgs* THIS, RogueClassScope* scope_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2853_2,(THIS));
    RogueInt32 i_3 = (0);
    for (;i_3 < _auto_2853_2->count;++i_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,((Rogue_call_ROGUEM144( 43, ROGUE_ARG(((RogueClassCmd*)(THIS->data->as_objects[i_3]))), scope_0 ))));
      THIS->data->as_objects[i_3] = arg_1;
      RogueType__organize__Scope( ROGUE_ARG((Rogue_call_ROGUEM153( 40, arg_1 ))), scope_0 );
    }
  }
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init_object( RogueCmdNamedArg_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init( RogueCmdNamedArg_List* THIS )
{
  RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueString* RogueCmdNamedArg_List__to_String( RogueCmdNamedArg_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2854_2,(THIS));
    RogueInt32 _auto_2855_3 = (0);
    for (;_auto_2855_3 < _auto_2854_2->count;++_auto_2855_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,value_4,(((RogueClassCmdNamedArg*)(_auto_2854_2->data->as_objects[_auto_2855_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueCmdNamedArg__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdNamedArg_List__type_name( RogueCmdNamedArg_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1049]);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__init__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdNamedArg*), true );
  }
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__add__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  ((RogueCmdNamedArg_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueInt32 RogueCmdNamedArg_List__capacity( RogueCmdNamedArg_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__discard_from__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,zero_value_1,0);
  RogueInt32 c_2 = (THIS->count);
  while (c_2 > index_0)
  {
    --c_2;
    THIS->data->as_objects[c_2] = zero_value_1;
  }
  THIS->count = c_2;
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueOptionalInt32 RogueCmdNamedArg_List__locate__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  if (true)
  {
    if (((void*)value_0) == ((void*)NULL))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2887_1,(THIS));
        RogueInt32 i_2 = (0);
        for (;i_2 < _auto_2887_1->count;++i_2)
        {
          if (((void*)value_0) == ((void*)((RogueClassCmdNamedArg*)(THIS->data->as_objects[i_2]))))
          {
            return (RogueOptionalInt32)(RogueOptionalInt32( i_2, true ));
          }
        }
      }
      return (RogueOptionalInt32)((RogueOptionalInt32__create()));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2888_3,(THIS));
    RogueInt32 i_4 = (0);
    for (;i_4 < _auto_2888_3->count;++i_4)
    {
      if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)value_0), ROGUE_ARG(((RogueObject*)(((RogueClassCmdNamedArg*)(THIS->data->as_objects[i_4]))))) )))
      {
        return (RogueOptionalInt32)(RogueOptionalInt32( i_4, true ));
      }
    }
  }
  return (RogueOptionalInt32)((RogueOptionalInt32__create()));
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__reserve__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdNamedArg*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdNamedArg*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdNamedArg_List*)(THIS);
}

RogueClassCmdNamedArg* RogueCmdNamedArg_List__remove__CmdNamedArg( RogueCmdNamedArg_List* THIS, RogueClassCmdNamedArg* value_0 )
{
  RogueOptionalInt32 index_1 = (((RogueCmdNamedArg_List__locate__CmdNamedArg( ROGUE_ARG(THIS), value_0 ))));
  if (index_1.exists)
  {
    return (RogueClassCmdNamedArg*)(((RogueCmdNamedArg_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG(index_1.value) ))));
  }
  else
  {
    return (RogueClassCmdNamedArg*)(value_0);
  }
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__remove__Function_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* THIS, RogueClassFunction_CmdNamedArg_RETURNSLogical* query_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,result_1,(((RogueCmdNamedArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassListRewriter_CmdNamedArg_*,rewriter_2,(((RogueCmdNamedArg_List__rewriter( ROGUE_ARG(THIS) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassListRewriter_CmdNamedArg_*,_auto_2895_3,(rewriter_2));
    while (((RogueListRewriter_CmdNamedArg___has_another( _auto_2895_3 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,value_4,(((RogueListRewriter_CmdNamedArg___read( _auto_2895_3 )))));
      if ((Rogue_call_ROGUEM1277( 17, query_0, value_4 )))
      {
        RogueCmdNamedArg_List__add__CmdNamedArg( result_1, value_4 );
      }
      else
      {
        RogueListRewriter_CmdNamedArg___write__CmdNamedArg( rewriter_2, value_4 );
      }
    }
  }
  return (RogueCmdNamedArg_List*)(result_1);
}

RogueClassCmdNamedArg* RogueCmdNamedArg_List__remove_at__Int32( RogueCmdNamedArg_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,result_1,(((RogueClassCmdNamedArg*)(THIS->data->as_objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,zero_value_2,0);
  THIS->count = (THIS->count + -1);
  THIS->data->as_objects[THIS->count] = zero_value_2;
  return (RogueClassCmdNamedArg*)(result_1);
}

RogueClassListRewriter_CmdNamedArg_* RogueCmdNamedArg_List__rewriter( RogueCmdNamedArg_List* THIS )
{
  return (RogueClassListRewriter_CmdNamedArg_*)(((RogueListRewriter_CmdNamedArg___init__CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListRewriter_CmdNamedArg_*,ROGUE_CREATE_OBJECT(ListRewriter_CmdNamedArg_))), ROGUE_ARG(THIS) ))));
}

RogueCmdNamedArg_List* RogueCmdNamedArg_List__sort__Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( RogueCmdNamedArg_List* THIS, RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* compare_fn_0 )
{
  return (RogueCmdNamedArg_List*)((RogueQuicksort_CmdNamedArg___sort__CmdNamedArg_List_Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( ROGUE_ARG(THIS), compare_fn_0 )));
}

RogueClassCmdNamedArg* RogueCmdNamedArg__init_object( RogueClassCmdNamedArg* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNamedArg*)(THIS);
}

RogueString* RogueCmdNamedArg__to_String( RogueClassCmdNamedArg* THIS )
{
  return (RogueString*)(THIS->name);
}

RogueString* RogueCmdNamedArg__type_name( RogueClassCmdNamedArg* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1160]);
}

RogueClassCmdNamedArg* RogueCmdNamedArg__cloned__CloneArgs( RogueClassCmdNamedArg* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdNamedArg*)(((RogueCmdNamedArg__init__Token_String_Cmd_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNamedArg*,ROGUE_CREATE_OBJECT(CmdNamedArg))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->is_negative) ))));
}

RogueClassCmd* RogueCmdNamedArg__dispatch__Visitor( RogueClassCmdNamedArg* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdNamedArg( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmdNamedArg* RogueCmdNamedArg__init__Token_String_Cmd_Logical( RogueClassCmdNamedArg* THIS, RogueClassToken* _auto_705_0, RogueString* _auto_706_1, RogueClassCmd* _auto_707_2, RogueLogical _auto_708_3 )
{
  THIS->is_negative = _auto_708_3;
  THIS->value = _auto_707_2;
  THIS->name = _auto_706_1;
  THIS->t = _auto_705_0;
  return (RogueClassCmdNamedArg*)(THIS);
}

RogueClassCmd* RogueCmdNamedArg__to_value( RogueClassCmdNamedArg* THIS )
{
  if (!!(THIS->value))
  {
    if (THIS->is_negative)
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[490] ))));
    }
    return (RogueClassCmd*)(THIS->value);
  }
  else if (THIS->is_negative)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), false ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), true ))))));
  }
}

RogueString* RogueArray_CmdNamedArg___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1119]);
}

RogueClassFunction_Type_RETURNSLogical* RogueFunction_Type_RETURNSLogical__init_object( RogueClassFunction_Type_RETURNSLogical* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction_Type_RETURNSLogical*)(THIS);
}

RogueString* RogueFunction_Type_RETURNSLogical__type_name( RogueClassFunction_Type_RETURNSLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[988]);
}

RogueLogical RogueFunction_Type_RETURNSLogical__call__Type( RogueClassFunction_Type_RETURNSLogical* THIS, RogueClassType* param1_0 )
{
  return (RogueLogical)(false);
}

RogueClassCmdDefaultValue* RogueCmdDefaultValue__init_object( RogueClassCmdDefaultValue* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdDefaultValue*)(THIS);
}

RogueString* RogueCmdDefaultValue__type_name( RogueClassCmdDefaultValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1415]);
}

RogueClassCmd* RogueCmdDefaultValue__cloned__CloneArgs( RogueClassCmdDefaultValue* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdDefaultValue__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdDefaultValue*,ROGUE_CREATE_OBJECT(CmdDefaultValue))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

RogueClassCmd* RogueCmdDefaultValue__dispatch__Visitor( RogueClassCmdDefaultValue* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) ))));
}

RogueClassCmd* RogueCmdDefaultValue__resolve__Scope( RogueClassCmdDefaultValue* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,default_value_1,(((RogueType__create_default_value__Token( ROGUE_ARG(THIS->_of_type), ROGUE_ARG(THIS->t) )))));
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_of_type) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), default_value_1, ROGUE_ARG(THIS->_of_type) ))))))));
  }
  else
  {
    return (RogueClassCmd*)(default_value_1);
  }
}

RogueClassType* Rogue_CmdDefaultValue__type( RogueClassCmdDefaultValue* THIS )
{
  return (RogueClassType*)(THIS->_of_type);
}

RogueClassCmdDefaultValue* RogueCmdDefaultValue__init__Token_Type( RogueClassCmdDefaultValue* THIS, RogueClassToken* _auto_376_0, RogueClassType* _auto_377_1 )
{
  THIS->_of_type = _auto_377_1;
  THIS->t = _auto_376_0;
  return (RogueClassCmdDefaultValue*)(THIS);
}

RogueClassCmdLiteral* RogueCmdLiteral__init_object( RogueClassCmdLiteral* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdLiteral*)(THIS);
}

RogueString* RogueCmdLiteral__type_name( RogueClassCmdLiteral* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1158]);
}

RogueClassCmd* RogueCmdLiteral__dispatch__Visitor( RogueClassCmdLiteral* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* RogueCmdLiteral__implicit_type__Scope( RogueClassCmdLiteral* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)THIS)) )));
}

RogueLogical RogueCmdLiteral__is_literal( RogueClassCmdLiteral* THIS )
{
  return (RogueLogical)(true);
}

RogueClassCmdReturn* RogueCmdReturn__init_object( RogueClassCmdReturn* THIS )
{
  RogueCmdStatement__init_object( ROGUE_ARG(((RogueClassCmdStatement*)THIS)) );
  return (RogueClassCmdReturn*)(THIS);
}

RogueString* RogueCmdReturn__to_String( RogueClassCmdReturn* THIS )
{
  if (!!(THIS->value))
  {
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[910] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
  }
  else
  {
    return (RogueString*)(Rogue_literal_strings[911]);
  }
}

RogueString* RogueCmdReturn__type_name( RogueClassCmdReturn* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1423]);
}

RogueClassCmd* RogueCmdReturn__cloned__CloneArgs( RogueClassCmdReturn* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    return (RogueClassCmd*)(((RogueTaskArgs__create_return__Token_Cmd( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))) ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))) ))))));
  }
}

RogueClassCmd* RogueCmdReturn__dispatch__Visitor( RogueClassCmdReturn* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdReturn( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdReturn__resolve__Scope( RogueClassCmdReturn* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->value))
  {
    if (!(!!(scope_0->this_method->_return_type)))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(scope_0->this_method->signature) )))) )))), Rogue_literal_strings[442] )))) )))) ))));
    }
    THIS->value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->value), scope_0 ))), ROGUE_ARG(scope_0->this_method->_return_type), scope_0, false, false ))), scope_0 ));
  }
  else if (((RogueMethod__is_initializer( ROGUE_ARG(scope_0->this_method) ))))
  {
    THIS->value = ((RogueCmdLiteralThis__resolve__Scope( ROGUE_ARG(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(scope_0->this_method->type_context) )))))), scope_0 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReturn__type( RogueClassCmdReturn* THIS )
{
  return (RogueClassType*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->value) )));
}

void RogueCmdReturn__write_cpp__CPPWriter_Logical( RogueClassCmdReturn* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!!(THIS->value))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1302] )))), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->value) ))) )))), Rogue_literal_strings[822] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->value), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[107] );
  }
}

RogueClassCmdReturn* RogueCmdReturn__init__Token_Cmd( RogueClassCmdReturn* THIS, RogueClassToken* _auto_378_0, RogueClassCmd* _auto_379_1 )
{
  THIS->value = _auto_379_1;
  THIS->t = _auto_378_0;
  return (RogueClassCmdReturn*)(THIS);
}

RogueClassCmdStatement* RogueCmdStatement__init_object( RogueClassCmdStatement* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdStatement*)(THIS);
}

RogueString* RogueCmdStatement__type_name( RogueClassCmdStatement* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1159]);
}

RogueClassCmd* RogueCmdStatement__dispatch__Visitor( RogueClassCmdStatement* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdStatement( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassScope* RogueScope__init_object( RogueClassScope* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->local_list = ((RogueLocal_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueLocal_List*,ROGUE_CREATE_OBJECT(Local_List))) )));
  THIS->control_stack = ((RogueCmdControlStructure_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdControlStructure_List*,ROGUE_CREATE_OBJECT(CmdControlStructure_List))) )));
  return (RogueClassScope*)(THIS);
}

RogueString* RogueScope__type_name( RogueClassScope* THIS )
{
  return (RogueString*)(Rogue_literal_strings[989]);
}

RogueClassScope* RogueScope__init__Type_Method( RogueClassScope* THIS, RogueClassType* _auto_393_0, RogueClassMethod* _auto_394_1 )
{
  THIS->this_method = _auto_394_1;
  THIS->_this_type = _auto_393_0;
  return (RogueClassScope*)(THIS);
}

RogueClassLocal* RogueScope__find_local__String( RogueClassScope* THIS, RogueString* name_0 )
{
  RogueInt32 i_1 = ((THIS->local_list->count - 1));
  while (i_1 >= 0)
  {
    if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(((RogueClassLocal*)(THIS->local_list->data->as_objects[i_1]))->name), name_0 ))))
    {
      return (RogueClassLocal*)(((RogueClassLocal*)(THIS->local_list->data->as_objects[i_1])));
    }
    --i_1;
  }
  return (RogueClassLocal*)(((RogueClassLocal*)(NULL)));
}

RogueClassType* RogueScope__find_type__String( RogueClassScope* THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_1,(((RogueProgram__find_type__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), name_0 )))));
  if (!!(type_1))
  {
    return (RogueClassType*)(type_1);
  }
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueScope__push_local__Local_Logical( RogueClassScope* THIS, RogueClassLocal* v_0, RogueLogical validate_name_1 )
{
  if (validate_name_1)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,existing_2,(((RogueScope__find_local__String( ROGUE_ARG(THIS), ROGUE_ARG(v_0->name) )))));
    if (!!(existing_2))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(v_0->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[438] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(v_0->name) )))) )))), Rogue_literal_strings[424] )))) )))) ))));
    }
  }
  RogueLocal_List__add__Local( ROGUE_ARG(THIS->local_list), v_0 );
}

void RogueScope__pop_local( RogueClassScope* THIS )
{
  RogueLocal_List__remove_last( ROGUE_ARG(THIS->local_list) );
}

RogueClassType* RogueScope__set_implicit_type__Type( RogueClassScope* THIS, RogueClassType* new_implicit_type_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_1,(THIS->_implicit_type));
  THIS->_implicit_type = new_implicit_type_0;
  return (RogueClassType*)(result_1);
}

RogueClassCmd* RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( RogueClassScope* THIS, RogueClassType* _auto_5772, RogueClassCmdAccess* access_1, RogueLogical error_on_fail_2, RogueInt32 flags_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,type_context_0,_auto_5772);
  RogueLogical is_initializer_4 = (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(access_1->name), Rogue_literal_strings[417] ))));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_5,(((RogueScope__find_method__Type_CmdAccess_Logical_Int32( ROGUE_ARG(THIS), type_context_0, access_1, ROGUE_ARG((error_on_fail_2 && !!(access_1->context))), flags_3 )))));
  if ((!(!!(m_5)) && !(!!(access_1->context))))
  {
    if ((error_on_fail_2 && !(is_initializer_4)))
    {
      m_5 = ((RogueClassMethod*)((RogueScope__find_method__Type_CmdAccess_Logical_Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), access_1, false, flags_3 ))));
    }
    if (!!(m_5))
    {
      type_context_0 = ((RogueClassType*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global);
      access_1->context = ((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(access_1->t), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global) )))));
    }
    else if (error_on_fail_2)
    {
      if ((!(is_initializer_4) && ((RogueType__has_method_named__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), ROGUE_ARG(access_1->name) )))))
      {
        RogueScope__find_method__Type_CmdAccess_Logical_Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Global), access_1, true, flags_3 );
      }
      else
      {
        RogueScope__find_method__Type_CmdAccess_Logical_Int32( ROGUE_ARG(THIS), type_context_0, access_1, true, flags_3 );
      }
    }
  }
  if (!(!!(m_5)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  if (((!(error_on_fail_2) && ((RogueMethod__is_fallback( m_5 )))) && !(((RogueType__is_aspect( ROGUE_ARG(m_5->type_context) ))))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_6,(access_1->t));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,context_7,(access_1->context));
  if (!(!!(context_7)))
  {
    if ((((RogueMethod__is_global( ROGUE_ARG(THIS->this_method) ))) && !(((RogueMethod__is_global( m_5 ))))))
    {
      context_7 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), t_6, type_context_0 ))))));
    }
    else
    {
      context_7 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_6, type_context_0 ))))));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_8,(access_1->args));
  if (!(!!(args_8)))
  {
    args_8 = ((RogueClassCmdArgs*)((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) ))));
  }
  while (args_8->count < m_5->parameters->count)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_9,(((RogueClassLocal*)(m_5->parameters->data->as_objects[args_8->count]))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_10,0);
    if (!!(access_1->named_args))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2903_19,(access_1->named_args));
        RogueInt32 _auto_2904_20 = (0);
        for (;_auto_2904_20 < _auto_2903_19->count;++_auto_2904_20)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_21,(((RogueClassCmdNamedArg*)(_auto_2903_19->data->as_objects[_auto_2904_20]))));
          if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(arg_21->name), ROGUE_ARG(param_9->original_name) ))))
          {
            named_arg_10 = ((RogueClassCmdNamedArg*)arg_21);
            RogueCmdNamedArg_List__remove__CmdNamedArg( ROGUE_ARG(access_1->named_args), arg_21 );
            goto _auto_2905;
          }
        }
      }
      _auto_2905:;
    }
    if (!!(named_arg_10))
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_8), ROGUE_ARG(((RogueCmdNamedArg__to_value( named_arg_10 )))) );
    }
    else
    {
      RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_8), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(param_9->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))) );
    }
  }
  if ((!!(access_1->named_args) && !!(access_1->named_args->count)))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_11,(((RogueClassCmdNamedArg*)(access_1->named_args->data->as_objects[0]))));
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(arg_11->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[500] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(arg_11->name) )))) )))), Rogue_literal_strings[225] )))) )))) ))));
  }
  RogueCmdArgs__resolve__Scope( args_8, ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2906_22,(args_8));
    RogueInt32 i_23 = (0);
    for (;i_23 < _auto_2906_22->count;++i_23)
    {
      args_8->data->as_objects[i_23] = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[i_23]))), ROGUE_ARG(((RogueClassLocal*)(m_5->parameters->data->as_objects[i_23]))->_type), ROGUE_ARG(THIS), false, false ))), ROGUE_ARG(THIS) ));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_12,0);
  if (((RogueMethod__is_global( m_5 ))))
  {
    if (((RogueMethod__is_native( m_5 ))))
    {
      if (!!(m_5->native_code))
      {
        context_7 = ((RogueClassCmd*)(Rogue_call_ROGUEM144( 43, context_7, ROGUE_ARG(THIS) )));
        Rogue_call_ROGUEM152( 37, context_7 );
        cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeRoutine))), t_6, m_5, args_8 ))))));
      }
      else
      {
        cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallNativeRoutine))), t_6, m_5, args_8 ))))));
      }
    }
    else if (((RogueMethod__is_macro( m_5 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_13,(((RogueMacroArgs__init__Cmd_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMacroArgs*,ROGUE_CREATE_OBJECT(MacroArgs))), context_7, m_5, args_8 )))));
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,inline_statements_14,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2914_24,(m_5->statements));
        RogueInt32 _auto_2915_25 = (0);
        for (;_auto_2915_25 < _auto_2914_24->count;++_auto_2915_25)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_26,(((RogueClassCmd*)(_auto_2914_24->data->as_objects[_auto_2915_25]))));
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,inline_statement_15,((Rogue_call_ROGUEM146( 21, statement_26, ROGUE_ARG(((RogueClassCloneArgs*)(macro_args_13))) ))));
          if (!!(inline_statement_15))
          {
            RogueCmd_List__add__Cmd( ((RogueCmd_List*)inline_statements_14), inline_statement_15 );
          }
        }
      }
      RogueCmdStatementList__resolve__Scope_Logical( inline_statements_14, ROGUE_ARG(THIS), false );
      switch (inline_statements_14->count)
      {
        case 0:
        {
          if (!!(m_5->_return_type))
          {
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_6, Rogue_literal_strings[504] ))));
          }
          return (RogueClassCmd*)(((RogueCmdInlineNative__resolve__Scope( ROGUE_ARG(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_6, Rogue_literal_strings[0], ROGUE_ARG(((RogueClassType*)(NULL))) )))), ROGUE_ARG(THIS) ))));
          break;
        }
        case 1:
        {
          return (RogueClassCmd*)(((RogueClassCmd*)(inline_statements_14->data->as_objects[0])));
          break;
        }
        case 2:
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_6, Rogue_literal_strings[505] ))));
          break;
        }
      }
    }
    else
    {
      cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdCallRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallRoutine*,ROGUE_CREATE_OBJECT(CmdCallRoutine))), t_6, m_5, args_8 ))))));
    }
  }
  else if (((RogueMethod__is_native( m_5 ))))
  {
    if (type_context_0->is_array)
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,_auto_2919_27,(m_5->name));
        if (((RogueString__operatorEQUALSEQUALS__String( _auto_2919_27, Rogue_literal_strings[459] ))))
        {
          if ((!!(args_8) && !!(args_8->count)))
          {
            ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_6, Rogue_literal_strings[506] ))));
          }
          return (RogueClassCmd*)(((RogueCmdReadArrayCount__resolve__Scope( ROGUE_ARG(((RogueCmdReadArrayCount__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayCount*,ROGUE_CREATE_OBJECT(CmdReadArrayCount))), t_6, context_7 )))), ROGUE_ARG(THIS) ))));
        }
      }
    }
    if (!!(m_5->native_code))
    {
      cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallInlineNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeMethod)))), t_6, context_7, m_5, args_8 ))))))));
    }
    else
    {
      cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallNativeMethod)))), t_6, context_7, m_5, args_8 ))))))));
    }
  }
  else if (((RogueMethod__is_macro( m_5 ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_16,(((RogueMacroArgs__init__Cmd_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassMacroArgs*,ROGUE_CREATE_OBJECT(MacroArgs))), context_7, m_5, args_8 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,inline_statements_17,(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_2920_28,(m_5->statements));
      RogueInt32 _auto_2921_29 = (0);
      for (;_auto_2921_29 < _auto_2920_28->count;++_auto_2921_29)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_30,(((RogueClassCmd*)(_auto_2920_28->data->as_objects[_auto_2921_29]))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,inline_statement_18,((Rogue_call_ROGUEM146( 21, statement_30, ROGUE_ARG(((RogueClassCloneArgs*)(macro_args_16))) ))));
        if (!!(inline_statement_18))
        {
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)inline_statements_17), inline_statement_18 );
        }
      }
    }
    RogueCmdStatementList__resolve__Scope_Logical( inline_statements_17, ROGUE_ARG(THIS), false );
    switch (inline_statements_17->count)
    {
      case 0:
      {
        if (!!(m_5->_return_type))
        {
          ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_6, Rogue_literal_strings[504] ))));
        }
        return (RogueClassCmd*)(((RogueCmdInlineNative__resolve__Scope( ROGUE_ARG(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), t_6, Rogue_literal_strings[0], ROGUE_ARG(((RogueClassType*)(NULL))) )))), ROGUE_ARG(THIS) ))));
        break;
      }
      case 1:
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(inline_statements_17->data->as_objects[0])));
        break;
      }
      case 2:
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_6, Rogue_literal_strings[505] ))));
        break;
      }
    }
  }
  else if (((RogueType__is_aspect( type_context_0 ))))
  {
    cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallAspectMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallAspectMethod*,ROGUE_CREATE_OBJECT(CmdCallAspectMethod)))), t_6, context_7, m_5, args_8 ))))))));
  }
  else
  {
    cmd_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCallDynamicMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallDynamicMethod*,ROGUE_CREATE_OBJECT(CmdCallDynamicMethod)))), t_6, context_7, m_5, args_8 ))))))));
  }
  return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, cmd_12, ROGUE_ARG(THIS) )));
}

RogueClassMethod* RogueScope__find_method__Type_CmdAccess_Logical_Int32( RogueClassScope* THIS, RogueClassType* type_context_0, RogueClassCmdAccess* access_1, RogueLogical error_on_fail_2, RogueInt32 flags_3 )
{
  RogueLogical is_initializer_4 = (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(access_1->name), Rogue_literal_strings[417] ))));
  RogueLogical suppress_inherited_5 = (!!((flags_3 & 1)));
  RogueLogical calling_prior_init_6 = (!!((flags_3 & 2)));
  ROGUE_DEF_LOCAL_REF(RogueClassCandidateMethods*,candidates_7,(((RogueCandidateMethods__init__Type_CmdAccess_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCandidateMethods*,ROGUE_CREATE_OBJECT(CandidateMethods))), type_context_0, access_1, error_on_fail_2 )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_8,(access_1->args));
  RogueInt32 arg_count_9 = (((((args_8))) ? (args_8->count) : 0));
  RogueInt32 named_arg_count_10 = (((((access_1->named_args))) ? (access_1->named_args->count) : 0));
  RogueInt32 total_arg_count_11 = ((arg_count_9 + named_arg_count_10));
  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_12,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->global_method_lookup_by_name), ROGUE_ARG(access_1->name) )))));
  if (!!(list_12))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2925_47,(list_12));
      RogueInt32 _auto_2926_48 = (0);
      for (;_auto_2926_48 < _auto_2925_47->count;++_auto_2926_48)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_49,(((RogueClassMethod*)(_auto_2925_47->data->as_objects[_auto_2926_48]))));
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->available), m_49 );
      }
    }
  }
  if (((RogueType__is_aspect( type_context_0 ))))
  {
    list_12 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object->method_lookup_by_name), ROGUE_ARG(access_1->name) ))));
    if (!!(list_12))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2927_50,(list_12));
        RogueInt32 _auto_2928_51 = (0);
        for (;_auto_2928_51 < _auto_2927_50->count;++_auto_2928_51)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_52,(((RogueClassMethod*)(_auto_2927_50->data->as_objects[_auto_2928_51]))));
          RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->available), m_52 );
        }
      }
    }
  }
  if ((suppress_inherited_5 && is_initializer_4))
  {
    list_12 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->global_method_lookup_by_name), Rogue_literal_strings[475] ))));
    if (!!(list_12))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2929_53,(list_12));
        RogueInt32 _auto_2930_54 = (0);
        for (;_auto_2930_54 < _auto_2929_53->count;++_auto_2930_54)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_55,(((RogueClassMethod*)(_auto_2929_53->data->as_objects[_auto_2930_54]))));
          RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->available), m_55 );
        }
      }
    }
  }
  list_12 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(type_context_0->method_lookup_by_name), ROGUE_ARG(access_1->name) ))));
  if (!!(list_12))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2931_56,(list_12));
      RogueInt32 _auto_2932_57 = (0);
      for (;_auto_2932_57 < _auto_2931_56->count;++_auto_2932_57)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_58,(((RogueClassMethod*)(_auto_2931_56->data->as_objects[_auto_2932_57]))));
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->available), m_58 );
      }
    }
  }
  if (candidates_7->available->count == 0)
  {
    if (((RogueMethodTemplates__instantiate__Token_String( ROGUE_ARG(type_context_0->method_templates), ROGUE_ARG(access_1->t), ROGUE_ARG(access_1->name) ))))
    {
      return (RogueClassMethod*)(((RogueScope__find_method__Type_CmdAccess_Logical_Int32( ROGUE_ARG(THIS), type_context_0, access_1, error_on_fail_2, flags_3 ))));
    }
  }
  if (!(((RogueCandidateMethods__refine_matches( candidates_7 )))))
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  if (calling_prior_init_6)
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2933_59,(candidates_7->available));
      RogueInt32 _auto_2934_60 = (0);
      for (;_auto_2934_60 < _auto_2933_59->count;++_auto_2934_60)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_61,(((RogueClassMethod*)(_auto_2933_59->data->as_objects[_auto_2934_60]))));
        if (((void*)m_61->type_context) == ((void*)type_context_0))
        {
          if ((!!(m_61->overridden_method) && !(((RogueMethod__is_abstract( ROGUE_ARG(m_61->overridden_method) ))))))
          {
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), ROGUE_ARG(m_61->overridden_method) );
          }
        }
        else
        {
          RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_61 );
        }
      }
    }
    if (!(((RogueCandidateMethods__update_matches( candidates_7 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
  }
  if ((suppress_inherited_5 || calling_prior_init_6))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,most_specific_type_13,0);
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2935_62,(candidates_7->available));
      RogueInt32 _auto_2936_63 = (0);
      for (;_auto_2936_63 < _auto_2935_62->count;++_auto_2936_63)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_64,(((RogueClassMethod*)(_auto_2935_62->data->as_objects[_auto_2936_63]))));
        if ((((RogueMethod__is_initializer( m_64 ))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(m_64->name), Rogue_literal_strings[475] )))))
        {
          ROGUE_DEF_LOCAL_REF(RogueClassType*,m_type_context_14,(m_64->type_context));
          if ((((void*)most_specific_type_13) == ((void*)NULL) || ((RogueType__instance_of__Type( m_type_context_14, most_specific_type_13 )))))
          {
            most_specific_type_13 = ((RogueClassType*)m_type_context_14);
          }
        }
      }
    }
    if (!!(most_specific_type_13))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2937_65,(candidates_7->available));
        RogueInt32 _auto_2938_66 = (0);
        for (;_auto_2938_66 < _auto_2937_65->count;++_auto_2938_66)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_67,(((RogueClassMethod*)(_auto_2937_65->data->as_objects[_auto_2938_66]))));
          if (((void*)m_67->type_context) == ((void*)most_specific_type_13))
          {
            RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_67 );
          }
        }
      }
      if (!(((RogueCandidateMethods__update_matches( candidates_7 )))))
      {
        return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
      }
    }
  }
  if (!!(args_8))
  {
    RogueCmdArgs__resolve__Scope( args_8, ROGUE_ARG(THIS) );
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2939_68,(args_8));
      RogueInt32 _auto_2940_69 = (0);
      for (;_auto_2940_69 < _auto_2939_68->count;++_auto_2940_69)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_70,(((RogueClassCmd*)(_auto_2939_68->data->as_objects[_auto_2940_69]))));
        RogueType__organize__Scope( ROGUE_ARG((Rogue_call_ROGUEM153( 49, arg_70 ))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
      }
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2941_71,(candidates_7->available));
    RogueInt32 _auto_2942_72 = (0);
    for (;_auto_2942_72 < _auto_2941_71->count;++_auto_2942_72)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_73,(((RogueClassMethod*)(_auto_2941_71->data->as_objects[_auto_2942_72]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2943_74,(m_73->parameters));
        RogueInt32 _auto_2944_75 = (0);
        for (;_auto_2944_75 < _auto_2943_74->count;++_auto_2944_75)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_76,(((RogueClassLocal*)(_auto_2943_74->data->as_objects[_auto_2944_75]))));
          RogueType__organize__Scope( ROGUE_ARG(param_76->_type), ROGUE_ARG(((RogueClassScope*)(NULL))) );
        }
      }
      if (((RogueMethod__accepts_arg_count__Int32( m_73, total_arg_count_11 ))))
      {
        RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_73 );
      }
    }
  }
  if (!(((RogueCandidateMethods__update_matches( candidates_7 )))))
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  if (!!(access_1->named_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2945_77,(candidates_7->available));
      RogueInt32 _auto_2946_78 = (0);
      for (;_auto_2946_78 < _auto_2945_77->count;++_auto_2946_78)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_79,(((RogueClassMethod*)(_auto_2945_77->data->as_objects[_auto_2946_78]))));
        {
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2948_80,(access_1->named_args));
                RogueInt32 _auto_2949_81 = (0);
                for (;_auto_2949_81 < _auto_2948_80->count;++_auto_2949_81)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_82,(((RogueClassCmdNamedArg*)(_auto_2948_80->data->as_objects[_auto_2949_81]))));
                  {
                    {
                      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2950_83,(m_79->parameters));
                      RogueInt32 index_84 = (0);
                      for (;index_84 < _auto_2950_83->count;++index_84)
                      {
                        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_85,(((RogueClassLocal*)(_auto_2950_83->data->as_objects[index_84]))));
                        if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(param_85->original_name), ROGUE_ARG(arg_82->name) ))))
                        {
                          if (!(arg_82->inferred_index.exists))
                          {
                            arg_82->inferred_index = RogueOptionalInt32( index_84, true );
                          }
                          else if (arg_82->inferred_index.value != index_84)
                          {
                            arg_82->inferred_index = RogueOptionalInt32( -1, true );
                          }
                          goto _auto_2951;
                        }
                      }
                    }
                    if ( !(false) ) goto _auto_2952;
                  }
                  _auto_2951:;
                }
              }
              RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_79 );
              }
            goto _auto_2947;
          }
          _auto_2952:;
        }
        _auto_2947:;
      }
    }
    if (!(((RogueCandidateMethods__update_matches( candidates_7 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,named_args_15,(((RogueCmdNamedArg_List__remove__Function_CmdNamedArg_RETURNSLogical( ROGUE_ARG(access_1->named_args), ROGUE_ARG(((RogueClassFunction_CmdNamedArg_RETURNSLogical*)(((RogueClassFunction_2953*)ROGUE_SINGLETON(Function_2953))))) )))));
    RogueCmdNamedArg_List__sort__Function_CmdNamedArg_CmdNamedArg_RETURNSLogical( named_args_15, ROGUE_ARG(((RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*)(((RogueClassFunction_2954*)ROGUE_SINGLETON(Function_2954))))) );
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2955_86,(named_args_15));
      RogueInt32 _auto_2956_87 = (0);
      for (;_auto_2956_87 < _auto_2955_86->count;++_auto_2956_87)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_88,(((RogueClassCmdNamedArg*)(_auto_2955_86->data->as_objects[_auto_2956_87]))));
        RogueInt32 index_16 = (named_arg_88->inferred_index.value);
        if (index_16 <= args_8->count)
        {
          RogueCmd_List__insert__Cmd_Int32( ((RogueCmd_List*)args_8), ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(((RogueCmdNamedArg__to_value( named_arg_88 )))), ROGUE_ARG(THIS) ))), index_16 );
        }
        else
        {
          RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(access_1->named_args), named_arg_88 );
        }
      }
    }
    arg_count_9 = ((RogueInt32)((((args_8))) ? (args_8->count) : 0));
    named_arg_count_10 = ((RogueInt32)((((access_1->named_args))) ? (access_1->named_args->count) : 0));
    total_arg_count_11 = ((RogueInt32)(arg_count_9 + named_arg_count_10));
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2957_89,(candidates_7->available));
      RogueInt32 _auto_2958_90 = (0);
      for (;_auto_2958_90 < _auto_2957_89->count;++_auto_2958_90)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_91,(((RogueClassMethod*)(_auto_2957_89->data->as_objects[_auto_2958_90]))));
        {
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_2960_92,(m_91->parameters));
                RogueInt32 index_93 = (0);
                for (;index_93 < _auto_2960_92->count;++index_93)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_94,(((RogueClassLocal*)(_auto_2960_92->data->as_objects[index_93]))));
                  if (index_93 < arg_count_9) goto _auto_2961;
                  if (!!(param_94->initial_value)) goto _auto_2961;
                  {
                    ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_2962_95,(access_1->named_args));
                    RogueInt32 _auto_2963_96 = (0);
                    for (;_auto_2963_96 < _auto_2962_95->count;++_auto_2963_96)
                    {
                      ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_97,(((RogueClassCmdNamedArg*)(_auto_2962_95->data->as_objects[_auto_2963_96]))));
                      if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(param_94->original_name), ROGUE_ARG(arg_97->name) )))) goto _auto_2961;
                    }
                  }
                  goto _auto_2959;
                }
              }
              }
            _auto_2961:;
            {
              RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_91 );
              }
            goto _auto_2959;
          }
        }
        _auto_2959:;
      }
    }
    if (!(((RogueCandidateMethods__update_matches( candidates_7 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
  }
  if (!!(arg_count_9))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2964_98,(candidates_7->available));
      RogueInt32 _auto_2965_99 = (0);
      for (;_auto_2965_99 < _auto_2964_98->count;++_auto_2965_99)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_100,(((RogueClassMethod*)(_auto_2964_98->data->as_objects[_auto_2965_99]))));
        {
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2967_101,(args_8));
                RogueInt32 index_102 = (0);
                for (;index_102 < _auto_2967_101->count;++index_102)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_17,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[index_102]))) ))));
                  ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_18,(((RogueClassLocal*)(m_100->parameters->data->as_objects[index_102]))->_type));
                  if ( !(((void*)arg_type_17) == ((void*)param_type_18)) ) goto _auto_2968;
                }
              }
              }
            {
              RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_100 );
              }
            goto _auto_2966;
          }
          _auto_2968:;
        }
        _auto_2966:;
      }
    }
    if (!(((RogueCandidateMethods__refine_matches( candidates_7 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
    RogueLogical has_generic_fn_19 = (false);
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2969_103,(args_8));
      RogueInt32 _auto_2970_104 = (0);
      for (;_auto_2970_104 < _auto_2969_103->count;++_auto_2970_104)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_105,(((RogueClassCmd*)(_auto_2969_103->data->as_objects[_auto_2970_104]))));
        if ((Rogue_call_ROGUEM150( 32, arg_105 )))
        {
          has_generic_fn_19 = ((RogueLogical)true);
          goto _auto_2971;
        }
      }
    }
    _auto_2971:;
    if (has_generic_fn_19)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassToken*,first_generic_fn_t_20,0);
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2972_106,(candidates_7->available));
        RogueInt32 _auto_2973_107 = (0);
        for (;_auto_2973_107 < _auto_2972_106->count;++_auto_2973_107)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_108,(((RogueClassMethod*)(_auto_2972_106->data->as_objects[_auto_2973_107]))));
          {
            {
              {
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2975_109,(args_8));
                  RogueInt32 index_110 = (0);
                  for (;index_110 < _auto_2975_109->count;++index_110)
                  {
                    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_21,(((RogueClassCmd*)(args_8->data->as_objects[index_110]))));
                    if ((Rogue_call_ROGUEM150( 32, arg_21 )))
                    {
                      if (!(!!(first_generic_fn_t_20)))
                      {
                        first_generic_fn_t_20 = ((RogueClassToken*)arg_21->t);
                      }
                      ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateFunction*,fn_22,(((RogueClassCmdCreateFunction*)(RogueObject_as(arg_21,RogueTypeCmdCreateFunction)))));
                      ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_23,(((RogueClassLocal*)(m_108->parameters->data->as_objects[index_110]))->_type));
                      if ( !(((RogueString__begins_with__String( ROGUE_ARG(param_type_23->name), Rogue_literal_strings[491] )))) ) goto _auto_2976;
                      RogueInt32 callback_param_count_24 = (0);
                      if (!!(param_type_23->callback_parameter_types))
                      {
                        callback_param_count_24 = ((RogueInt32)param_type_23->callback_parameter_types->count);
                      }
                      RogueInt32 fn_param_count_25 = (0);
                      if (!!(fn_22->parameters))
                      {
                        fn_param_count_25 = ((RogueInt32)fn_22->parameters->count);
                      }
                      if ( !(fn_param_count_25 == callback_param_count_24) ) goto _auto_2976;
                    }
                  }
                }
                }
              {
                RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_108 );
                }
              goto _auto_2974;
            }
            _auto_2976:;
          }
          _auto_2974:;
        }
      }
      if (!(((RogueCandidateMethods__refine_matches( candidates_7 )))))
      {
        return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
      }
      if (((RogueCandidateMethods__has_match( candidates_7 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_26,(((RogueCandidateMethods__match( candidates_7 )))));
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2977_111,(args_8));
          RogueInt32 index_112 = (0);
          for (;index_112 < _auto_2977_111->count;++index_112)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_27,(((RogueClassCmd*)(args_8->data->as_objects[index_112]))));
            if ((Rogue_call_ROGUEM150( 32, arg_27 )))
            {
              ROGUE_DEF_LOCAL_REF(RogueClassCmdCreateFunction*,fn_28,(((RogueCmdCreateFunction__cloned__CloneArgs( ROGUE_ARG(((RogueClassCmdCreateFunction*)(RogueObject_as(arg_27,RogueTypeCmdCreateFunction)))), ROGUE_ARG(((RogueClassCloneArgs*)(RogueObject_as(NULL,RogueTypeCloneArgs)))) )))));
              fn_28->is_generic = false;
              args_8->data->as_objects[index_112] = ((RogueClassCmd*)(fn_28));
              ROGUE_DEF_LOCAL_REF(RogueClassType*,callback_type_29,(((RogueClassLocal*)(m_26->parameters->data->as_objects[index_112]))->_type));
              if (!(callback_type_29->is_function))
              {
                ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(fn_28->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[492] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(callback_type_29))) )))) )))), Rogue_literal_strings[493] )))) )))) ))));
              }
              if (!!(fn_28->parameters))
              {
                ROGUE_DEF_LOCAL_REF(RogueType_List*,param_types_30,(callback_type_29->callback_parameter_types));
                if ((!(!!(param_types_30)) || param_types_30->count != fn_28->parameters->count))
                {
                  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(fn_28->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[494] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(((((param_types_30))) ? (param_types_30->count) : 0)) )))) )))), Rogue_literal_strings[495] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(fn_28->parameters->count) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
                }
                {
                  ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_2978_113,(fn_28->parameters));
                  RogueInt32 i_114 = (0);
                  for (;i_114 < _auto_2978_113->count;++i_114)
                  {
                    ((RogueClassFnParam*)(fn_28->parameters->data->as_objects[i_114]))->_type = ((RogueClassType*)(callback_type_29->callback_parameter_types->data->as_objects[i_114]));
                  }
                }
              }
              fn_28->_return_type = callback_type_29->_callback_return_type;
              if ((!!(fn_28->_return_type) && !!(fn_28->statements->count)))
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmd*,last_expression_31,(((RogueCmd_List__last( ROGUE_ARG(((RogueCmd_List*)fn_28->statements)) )))));
                if (!(RogueObject_instance_of(last_expression_31,RogueTypeCmdReturn)))
                {
                  fn_28->statements->data->as_objects[(fn_28->statements->count - 1)] = ((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(last_expression_31->t), last_expression_31 )))));
                }
              }
            }
          }
        }
        return (RogueClassMethod*)(((RogueScope__find_method__Type_CmdAccess_Logical_Int32( ROGUE_ARG(THIS), type_context_0, access_1, error_on_fail_2, flags_3 ))));
      }
      else if (candidates_7->available->count == 0)
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( first_generic_fn_t_20, Rogue_literal_strings[496] ))));
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( first_generic_fn_t_20, Rogue_literal_strings[497] ))));
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2979_115,(candidates_7->available));
      RogueInt32 _auto_2980_116 = (0);
      for (;_auto_2980_116 < _auto_2979_115->count;++_auto_2980_116)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_117,(((RogueClassMethod*)(_auto_2979_115->data->as_objects[_auto_2980_116]))));
        {
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2982_118,(args_8));
                RogueInt32 index_119 = (0);
                for (;index_119 < _auto_2982_118->count;++index_119)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_32,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[index_119]))) ))));
                  ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_33,(((RogueClassLocal*)(m_117->parameters->data->as_objects[index_119]))->_type));
                  if ( !(((RogueType__is_compatible_with__Type( arg_type_32, param_type_33 )))) ) goto _auto_2983;
                }
              }
              }
            {
              RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_117 );
              }
            goto _auto_2981;
          }
          _auto_2983:;
        }
        _auto_2981:;
      }
    }
    if (!!(candidates_7->compatible->count))
    {
      RogueCandidateMethods__update_matches( candidates_7 );
      if (((RogueCandidateMethods__has_match( candidates_7 ))))
      {
        return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_7 ))));
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2984_120,(candidates_7->available));
      RogueInt32 _auto_2985_121 = (0);
      for (;_auto_2985_121 < _auto_2984_120->count;++_auto_2985_121)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_122,(((RogueClassMethod*)(_auto_2984_120->data->as_objects[_auto_2985_121]))));
        {
          {
            {
              {
                ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2987_123,(args_8));
                RogueInt32 index_124 = (0);
                for (;index_124 < _auto_2987_123->count;++index_124)
                {
                  ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_34,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[index_124]))) ))));
                  ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_35,(((RogueClassLocal*)(m_122->parameters->data->as_objects[index_124]))->_type));
                  if ( !((((RogueType__instance_of__Type( arg_type_34, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Value) ))) || ((RogueType__instance_of__Type( param_type_35, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Value) ))))) ) goto _auto_2988;
                }
              }
              }
            {
              RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_122 );
              }
            goto _auto_2986;
          }
          _auto_2988:;
        }
        _auto_2986:;
      }
    }
  }
  if (!!(candidates_7->compatible->count))
  {
    RogueCandidateMethods__update_matches( candidates_7 );
    if (((RogueCandidateMethods__has_match( candidates_7 ))))
    {
      return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_7 ))));
    }
  }
  if (!(((RogueCandidateMethods__refine_matches( candidates_7 )))))
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  if (((RogueCandidateMethods__has_match( candidates_7 ))))
  {
    return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_7 ))));
  }
  if (!!(arg_count_9))
  {
    if (candidates_7->available->count > 1)
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2989_125,(candidates_7->available));
        RogueInt32 _auto_2990_126 = (0);
        for (;_auto_2990_126 < _auto_2989_125->count;++_auto_2990_126)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m1_127,(((RogueClassMethod*)(_auto_2989_125->data->as_objects[_auto_2990_126]))));
          {
            {
              {
                {
                  ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2992_128,(candidates_7->available));
                  RogueInt32 _auto_2993_129 = (0);
                  for (;_auto_2993_129 < _auto_2992_128->count;++_auto_2993_129)
                  {
                    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m2_130,(((RogueClassMethod*)(_auto_2992_128->data->as_objects[_auto_2993_129]))));
                    if (((void*)m1_127) != ((void*)m2_130))
                    {
                      RogueLogical m2_is_better_36 = (true);
                      {
                        ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_2994_131,(args_8));
                        RogueInt32 index_132 = (0);
                        for (;index_132 < _auto_2994_131->count;++index_132)
                        {
                          ROGUE_DEF_LOCAL_REF(RogueClassType*,m1_arg_type_37,(((RogueClassLocal*)(m1_127->parameters->data->as_objects[index_132]))->_type));
                          ROGUE_DEF_LOCAL_REF(RogueClassType*,m2_arg_type_38,(((RogueClassLocal*)(m2_130->parameters->data->as_objects[index_132]))->_type));
                          if ( !(((RogueType__is_equivalent_or_more_specific_than__Type( m2_arg_type_38, m1_arg_type_37 )))) ) goto _auto_2995;
                        }
                      }
                      if (true) goto _auto_2996;
                    }
                  }
                }
                }
              _auto_2996:;
              goto _auto_2991;
            }
            _auto_2995:;
            {
              RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m1_127 );
              }
          }
          _auto_2991:;
        }
      }
      if (!!(candidates_7->compatible->count))
      {
        if (!(((RogueCandidateMethods__update_matches( candidates_7 )))))
        {
          return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
        }
        if (((RogueCandidateMethods__has_match( candidates_7 ))))
        {
          return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_7 ))));
        }
      }
    }
  }
  else if (((RogueCandidateMethods__has_match( candidates_7 ))))
  {
    return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_7 ))));
  }
  if (!!(access_1->named_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2997_133,(candidates_7->available));
      RogueInt32 _auto_2998_134 = (0);
      for (;_auto_2998_134 < _auto_2997_133->count;++_auto_2998_134)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_135,(((RogueClassMethod*)(_auto_2997_133->data->as_objects[_auto_2998_134]))));
        if (((RogueMethod__accepts_arg_count__Int32( m_135, arg_count_9 ))))
        {
          RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_135 );
        }
      }
    }
    if (!(((RogueCandidateMethods__refine_matches( candidates_7 )))))
    {
      return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
    }
    if (((RogueCandidateMethods__has_match( candidates_7 ))))
    {
      return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_7 ))));
    }
  }
  if (total_arg_count_11 == 0)
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_2999_136,(candidates_7->available));
      RogueInt32 _auto_3000_137 = (0);
      for (;_auto_3000_137 < _auto_2999_136->count;++_auto_3000_137)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_138,(((RogueClassMethod*)(_auto_2999_136->data->as_objects[_auto_3000_137]))));
        if (m_138->parameters->count == 0)
        {
          RogueMethod_List__add__Method( ROGUE_ARG(candidates_7->compatible), m_138 );
        }
      }
    }
    if (!!(candidates_7->compatible->count))
    {
      RogueCandidateMethods__update_matches( candidates_7 );
      if (((RogueCandidateMethods__has_match( candidates_7 ))))
      {
        return (RogueClassMethod*)(((RogueCandidateMethods__match( candidates_7 ))));
      }
    }
  }
  if (arg_count_9 == 1)
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3001_139,(candidates_7->available));
      RogueInt32 _auto_3002_140 = (0);
      for (;_auto_3002_140 < _auto_3001_139->count;++_auto_3002_140)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_141,(((RogueClassMethod*)(_auto_3001_139->data->as_objects[_auto_3002_140]))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_39,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[0]))) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_40,(((RogueClassLocal*)(m_141->parameters->data->as_objects[0]))->_type));
        RogueType__organize__Scope( param_type_40, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        if ((((void*)param_type_40) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) && ((RogueType__has_method_named__String( arg_type_39, Rogue_literal_strings[498] )))))
        {
          args_8->data->as_objects[0] = (Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[0]))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), ROGUE_ARG(THIS), false, false ));
          return (RogueClassMethod*)(m_141);
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3003_142,(candidates_7->available));
      RogueInt32 _auto_3004_143 = (0);
      for (;_auto_3004_143 < _auto_3003_142->count;++_auto_3004_143)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_144,(((RogueClassMethod*)(_auto_3003_142->data->as_objects[_auto_3004_143]))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_41,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[0]))) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_42,(((RogueClassLocal*)(m_144->parameters->data->as_objects[0]))->_type));
        RogueType__organize__Scope( param_type_42, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        if ((((void*)param_type_42) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) && ((RogueType__has_method_named__String( arg_type_41, Rogue_literal_strings[472] )))))
        {
          args_8->data->as_objects[0] = (Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[0]))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String), ROGUE_ARG(THIS), false, false ));
          return (RogueClassMethod*)(m_144);
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3005_145,(candidates_7->available));
      RogueInt32 _auto_3006_146 = (0);
      for (;_auto_3006_146 < _auto_3005_145->count;++_auto_3006_146)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_147,(((RogueClassMethod*)(_auto_3005_145->data->as_objects[_auto_3006_146]))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_43,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[0]))) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_44,(((RogueClassLocal*)(m_147->parameters->data->as_objects[0]))->_type));
        RogueType__organize__Scope( param_type_44, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        if ((((void*)param_type_44) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) && ((RogueType__has_method_named__String( arg_type_43, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[315], ROGUE_ARG(param_type_44->name) )))) )))))
        {
          args_8->data->as_objects[0] = (Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[0]))), param_type_44, ROGUE_ARG(THIS), false, false ));
          return (RogueClassMethod*)(m_147);
        }
      }
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3007_148,(candidates_7->available));
      RogueInt32 _auto_3008_149 = (0);
      for (;_auto_3008_149 < _auto_3007_148->count;++_auto_3008_149)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_150,(((RogueClassMethod*)(_auto_3007_148->data->as_objects[_auto_3008_149]))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_45,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[0]))) ))));
        ROGUE_DEF_LOCAL_REF(RogueClassType*,param_type_46,(((RogueClassLocal*)(m_150->parameters->data->as_objects[0]))->_type));
        RogueType__organize__Scope( param_type_46, ROGUE_ARG(((RogueClassScope*)(NULL))) );
        if ((((void*)param_type_46) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) && ((RogueType__has_method_named__String( arg_type_45, Rogue_literal_strings[499] )))))
        {
          args_8->data->as_objects[0] = (Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueClassCmd*)(args_8->data->as_objects[0]))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Value), ROGUE_ARG(THIS), false, false ));
          return (RogueClassMethod*)(m_150);
        }
      }
    }
  }
  RogueCandidateMethods__update_matches( candidates_7 );
  return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init_object( RogueCmdControlStructure_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init( RogueCmdControlStructure_List* THIS )
{
  RogueCmdControlStructure_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueString* RogueCmdControlStructure_List__to_String( RogueCmdControlStructure_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdControlStructure_List*,_auto_3009_2,(THIS));
    RogueInt32 _auto_3010_3 = (0);
    for (;_auto_3010_3 < _auto_3009_2->count;++_auto_3010_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,value_4,(((RogueClassCmdControlStructure*)(_auto_3009_2->data->as_objects[_auto_3010_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdControlStructure_List__type_name( RogueCmdControlStructure_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1064]);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__init__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdControlStructure*), true );
  }
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__add__CmdControlStructure( RogueCmdControlStructure_List* THIS, RogueClassCmdControlStructure* value_0 )
{
  ((RogueCmdControlStructure_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueInt32 RogueCmdControlStructure_List__capacity( RogueCmdControlStructure_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdControlStructure_List* RogueCmdControlStructure_List__reserve__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdControlStructure*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdControlStructure_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdControlStructure*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdControlStructure_List*)(THIS);
}

RogueClassCmdControlStructure* RogueCmdControlStructure_List__remove_at__Int32( RogueCmdControlStructure_List* THIS, RogueInt32 index_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,result_1,(((RogueClassCmdControlStructure*)(THIS->data->as_objects[index_0]))));
  RogueArray_set(THIS->data,index_0,((RogueArray*)(THIS->data)),(index_0 + 1),-1);
  ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,zero_value_2,0);
  THIS->count = (THIS->count + -1);
  THIS->data->as_objects[THIS->count] = zero_value_2;
  return (RogueClassCmdControlStructure*)(result_1);
}

RogueClassCmdControlStructure* RogueCmdControlStructure_List__remove_last( RogueCmdControlStructure_List* THIS )
{
  return (RogueClassCmdControlStructure*)(((RogueCmdControlStructure_List__remove_at__Int32( ROGUE_ARG(THIS), ROGUE_ARG((THIS->count - 1)) ))));
}

RogueClassCmdControlStructure* RogueCmdControlStructure__init_object( RogueClassCmdControlStructure* THIS )
{
  RogueCmdStatement__init_object( ROGUE_ARG(((RogueClassCmdStatement*)THIS)) );
  return (RogueClassCmdControlStructure*)(THIS);
}

RogueString* RogueCmdControlStructure__type_name( RogueClassCmdControlStructure* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1424]);
}

RogueClassCmd* RogueCmdControlStructure__dispatch__Visitor( RogueClassCmdControlStructure* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdStatement( v_0, ROGUE_ARG(((RogueClassCmdStatement*)(THIS))) ))));
}

RogueLogical RogueCmdControlStructure__requires_semicolon( RogueClassCmdControlStructure* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdControlStructure__set_control_logic__CmdControlStructure( RogueClassCmdControlStructure* THIS, RogueClassCmdControlStructure* control_structure_0 )
{
  THIS->_control_type = control_structure_0->_control_type;
  THIS->contains_yield = control_structure_0->contains_yield;
  THIS->escape_label = control_structure_0->escape_label;
  THIS->upkeep_label = control_structure_0->upkeep_label;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdTaskControlSection* RogueCmdTaskControlSection__init_object( RogueClassCmdTaskControlSection* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  return (RogueClassCmdTaskControlSection*)(THIS);
}

RogueString* RogueCmdTaskControlSection__type_name( RogueClassCmdTaskControlSection* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1020]);
}

RogueClassCmdTaskControlSection* RogueCmdTaskControlSection__init__Int32( RogueClassCmdTaskControlSection* THIS, RogueInt32 _auto_710_0 )
{
  THIS->ip = _auto_710_0;
  return (RogueClassCmdTaskControlSection*)(THIS);
}

RogueString* RogueArray_CmdControlStructure___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1120]);
}

RogueClassFunction_431* RogueFunction_431__init_object( RogueClassFunction_431* THIS )
{
  RogueFunction_Type_RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)THIS)) );
  return (RogueClassFunction_431*)(THIS);
}

RogueString* RogueFunction_431__type_name( RogueClassFunction_431* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1413]);
}

RogueLogical RogueFunction_431__call__Type( RogueClassFunction_431* THIS, RogueClassType* type_0 )
{
  return (RogueLogical)((((RogueType__is_class( type_0 ))) && type_0->is_used));
}

RogueClassFunction_432* RogueFunction_432__init_object( RogueClassFunction_432* THIS )
{
  RogueFunction_Type_RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction_Type_RETURNSLogical*)THIS)) );
  return (RogueClassFunction_432*)(THIS);
}

RogueString* RogueFunction_432__type_name( RogueClassFunction_432* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1414]);
}

RogueLogical RogueFunction_432__call__Type( RogueClassFunction_432* THIS, RogueClassType* type_0 )
{
  return (RogueLogical)((((RogueType__is_aspect( type_0 ))) && type_0->is_used));
}

RogueClassCPPWriter* RogueCPPWriter__init_object( RogueClassCPPWriter* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  THIS->indent = 0;
  THIS->needs_indent = true;
  THIS->line_number = 1;
  THIS->temp_buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  return (RogueClassCPPWriter*)(THIS);
}

RogueString* RogueCPPWriter__type_name( RogueClassCPPWriter* THIS )
{
  return (RogueString*)(Rogue_literal_strings[991]);
}

RogueClassCPPWriter* RogueCPPWriter__init__String( RogueClassCPPWriter* THIS, RogueString* _auto_456_0 )
{
  THIS->filepath = _auto_456_0;
  return (RogueClassCPPWriter*)(THIS);
}

void RogueCPPWriter__close( RogueClassCPPWriter* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,path_0,((RogueFile__path__String( ROGUE_ARG(THIS->filepath) ))));
  if (!!(path_0->character_count))
  {
    RogueFile__create_folder__String( path_0 );
  }
  RogueFile__save__String_String( ROGUE_ARG(THIS->filepath), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) )))) );
}

void RogueCPPWriter__print_indent( RogueClassCPPWriter* THIS )
{
  if (THIS->needs_indent)
  {
    THIS->needs_indent = false;
    {
      RogueInt32 _auto_454_0 = (1);
      RogueInt32 _auto_455_1 = (THIS->indent);
      for (;_auto_454_0 <= _auto_455_1;++_auto_454_0)
      {
        RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)' ', true );
      }
    }
  }
}

RogueClassCPPWriter* RogueCPPWriter__print__Int64( RogueClassCPPWriter* THIS, RogueInt64 value_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__Int64( ROGUE_ARG(THIS->buffer), value_0 );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__Int32( ROGUE_ARG(THIS->buffer), value_0 );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Real64( RogueClassCPPWriter* THIS, RogueReal64 value_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__Real64( ROGUE_ARG(THIS->buffer), value_0 );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Character( RogueClassCPPWriter* THIS, RogueCharacter value_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), value_0, true );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__String( RogueClassCPPWriter* THIS, RogueString* value_0 )
{
  RogueLogical needs_newline_1 = (false);
  if (((RogueString__contains__Character( value_0, (RogueCharacter)10 ))))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_3058_2,(((RogueLineReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), value_0 )))));
      while (((RogueLineReader__has_another( _auto_3058_2 ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,line_3,(((RogueLineReader__read( _auto_3058_2 )))));
        if (needs_newline_1)
        {
          RogueCPPWriter__println( ROGUE_ARG(THIS) );
        }
        RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
        RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), line_3 );
        needs_newline_1 = ((RogueLogical)true);
      }
    }
  }
  else
  {
    RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), value_0 );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println( RogueClassCPPWriter* THIS )
{
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  ++THIS->line_number;
  THIS->needs_indent = true;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueCPPWriter__print__Int32( ROGUE_ARG(THIS), value_0 );
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  ++THIS->line_number;
  THIS->needs_indent = true;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__println__String( RogueClassCPPWriter* THIS, RogueString* value_0 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), value_0 );
  RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), (RogueCharacter)10, true );
  ++THIS->line_number;
  THIS->needs_indent = true;
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueCPPWriter__print_type_name__Type( ROGUE_ARG(THIS), type_0 );
  if ((!!(type_0) && ((RogueType__is_reference( type_0 )))))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[188] );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[9] )))), to_type_1 )))), Rogue_literal_strings[12] ))));
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_open_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[9] );
  return (RogueClassCPPWriter*)(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), from_type_0, to_type_1 ))));
}

RogueClassCPPWriter* RogueCPPWriter__print_close_cast__Type_Type( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1 )
{
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    return (RogueClassCPPWriter*)(THIS);
  }
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[12] );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_cast__Type_Type_Cmd( RogueClassCPPWriter* THIS, RogueClassType* from_type_0, RogueClassType* to_type_1, RogueClassCmd* cmd_2 )
{
  if (((void*)from_type_0) == ((void*)to_type_1))
  {
    Rogue_call_ROGUEM157( 50, cmd_2, ROGUE_ARG(THIS), false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[9] );
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), from_type_0, to_type_1 );
    Rogue_call_ROGUEM157( 50, cmd_2, ROGUE_ARG(THIS), false );
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[12] );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_access_operator__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  if (((RogueType__is_reference( type_0 ))))
  {
    return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[145] ))));
  }
  else
  {
    return (RogueClassCPPWriter*)(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[154] ))));
  }
}

RogueClassCPPWriter* RogueCPPWriter__print_type_name__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  if (!!(type_0))
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), ROGUE_ARG(type_0->cpp_class_name) );
  }
  else
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[604] );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_type_info__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  RogueCPPWriter__print_indent( ROGUE_ARG(THIS) );
  RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[582] )))), ROGUE_ARG(type_0->cpp_name) );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_default_value__Type( RogueClassCPPWriter* THIS, RogueClassType* type_0 )
{
  if (((RogueType__is_compound( type_0 ))))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_0 )))), Rogue_literal_strings[348] );
  }
  else
  {
    RogueStringBuilder__print__String( ROGUE_ARG(THIS->buffer), Rogue_literal_strings[591] );
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_hex_pair__Int32( RogueClassCPPWriter* THIS, RogueInt32 value_0 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[720] );
  RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG((value_0 >> 4)) )))) );
  RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32__to_digit( ROGUE_ARG((value_0 & 15)) )))) );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_literal_character__Character_Logical( RogueClassCPPWriter* THIS, RogueCharacter ch_0, RogueLogical in_string_1 )
{
  if ((((RogueInt32)(ch_0)) >= 32 && ((RogueInt32)(ch_0)) <= 126))
  {
    switch (ch_0)
    {
      case (RogueCharacter)'"':
      {
        if (in_string_1)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[714] );
        }
        else
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[715] );
        }
        break;
      }
      case (RogueCharacter)'\'':
      {
        if (in_string_1)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[206] );
        }
        else
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[716] );
        }
        break;
      }
      case (RogueCharacter)'\\':
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[717] );
        break;
      }
      default:
      {
        RogueCPPWriter__print__Character( ROGUE_ARG(THIS), ch_0 );
      }
    }
  }
  else
  {
    switch (ch_0)
    {
      case 10:
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[718] );
        break;
      }
      default:
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[719] );
        if (((RogueInt32)(ch_0)) <= 127)
        {
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG(((RogueInt32)(ch_0))) );
        }
        else if (((RogueInt32)(ch_0)) <= 2047)
        {
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((192 | ((((RogueInt32)(ch_0)) >> 6) & 31))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((128 | (((RogueInt32)(ch_0)) & 63))) );
        }
        else if (((RogueInt32)(ch_0)) <= 65535)
        {
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((224 | ((((RogueInt32)(ch_0)) >> 12) & 15))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((128 | ((((RogueInt32)(ch_0)) >> 6) & 63))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((128 | (((RogueInt32)(ch_0)) & 63))) );
        }
        else
        {
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((240 | ((((RogueInt32)(ch_0)) >> 18) & 7))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((128 | ((((RogueInt32)(ch_0)) >> 12) & 63))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((128 | ((((RogueInt32)(ch_0)) >> 6) & 63))) );
          RogueCPPWriter__print_hex_pair__Int32( ROGUE_ARG(THIS), ROGUE_ARG((128 | (((RogueInt32)(ch_0)) & 63))) );
        }
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[719] );
      }
    }
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_literal_string__String( RogueClassCPPWriter* THIS, RogueString* st_0 )
{
  if (((void*)st_0) == ((void*)NULL))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[591] );
    return (RogueClassCPPWriter*)(THIS);
  }
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[715] );
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,_auto_3060_1,(st_0));
    RogueInt32 _auto_3061_2 = (0);
    for (;_auto_3061_2 < _auto_3060_1->character_count;++_auto_3061_2)
    {
      RogueCharacter ch_3 = (RogueString_character_at(_auto_3060_1,_auto_3061_2));
      RogueCPPWriter__print_literal_character__Character_Logical( ROGUE_ARG(THIS), ch_3, true );
    }
  }
  RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[715] );
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_native_code__Token_Type_Method_Local_List_String_Type( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueClassType* type_context_1, RogueClassMethod* method_context_2, RogueLocal_List* locals_3, RogueString* code_4, RogueClassType* result_type_5 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassLineReader*,_auto_3062_11,(((RogueLineReader__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassLineReader*,ROGUE_CREATE_OBJECT(LineReader))), code_4 )))));
    while (((RogueLineReader__has_another( _auto_3062_11 ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueString*,line_12,(((RogueLineReader__read( _auto_3062_11 )))));
      RogueInt32 original_indent_6 = (THIS->indent);
      if (((RogueString__begins_with__Character( line_12, (RogueCharacter)'#' ))))
      {
        THIS->indent = 0;
      }
      RogueOptionalInt32 marker_7 = (((RogueString__locate__Character_OptionalInt32( line_12, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      while (marker_7.exists)
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,name_8,0);
        RogueInt32 i1_9 = (marker_7.value);
        if (i1_9 > 0)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueString__leftmost__Int32( line_12, i1_9 )))) );
        }
        RogueInt32 i2_10 = ((i1_9 + 1));
        if ((i2_10 < line_12->character_count && RogueString_character_at(line_12,i2_10) == (RogueCharacter)'('))
        {
          ++i2_10;
          while ((i2_10 < line_12->character_count && RogueString_character_at(line_12,i2_10) != (RogueCharacter)')'))
          {
            ++i2_10;
          }
          name_8 = ((RogueString*)((RogueString__from__Int32_Int32( line_12, ROGUE_ARG((i1_9 + 2)), ROGUE_ARG((i2_10 - 1)) ))));
          line_12 = ((RogueString*)((RogueString__from__Int32( line_12, ROGUE_ARG((i2_10 + 1)) ))));
        }
        else
        {
          while ((i2_10 < line_12->character_count && ((RogueCharacter__is_identifier__Logical_Logical( ROGUE_ARG(RogueString_character_at(line_12,i2_10)), false, false )))))
          {
            ++i2_10;
          }
          name_8 = ((RogueString*)((RogueString__from__Int32_Int32( line_12, ROGUE_ARG((i1_9 + 1)), ROGUE_ARG((i2_10 - 1)) ))));
          line_12 = ((RogueString*)((RogueString__from__Int32( line_12, i2_10 ))));
        }
        RogueCPPWriter__print_native_marker__Token_Type_Method_Local_List_String( ROGUE_ARG(THIS), t_0, type_context_1, method_context_2, locals_3, name_8 );
        marker_7 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( line_12, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
      }
      if (!!(line_12->character_count))
      {
        if (!!(result_type_5))
        {
          RogueCPPWriter__print__String( ROGUE_ARG(THIS), line_12 );
        }
        else
        {
          RogueCPPWriter__println__String( ROGUE_ARG(THIS), line_12 );
        }
      }
      THIS->indent = original_indent_6;
    }
  }
  return (RogueClassCPPWriter*)(THIS);
}

RogueClassCPPWriter* RogueCPPWriter__print_native_marker__Token_Type_Method_Local_List_String( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueClassType* type_context_1, RogueClassMethod* method_context_2, RogueLocal_List* locals_3, RogueString* _auto_5773 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,name_4,_auto_5773);
  ROGUE_DEF_LOCAL_REF(RogueString*,operation_5,(((RogueString__after_first__Character( name_4, (RogueCharacter)'.' )))));
  name_4 = ((RogueString*)((RogueString__before_first__Character( name_4, (RogueCharacter)'.' ))));
  {
    if (((RogueString__operatorEQUALSEQUALS__String( name_4, Rogue_literal_strings[219] ))))
    {
      RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[219] );
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( name_4, Rogue_literal_strings[139] ))))
    {
      RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_4, operation_5, Rogue_literal_strings[615], type_context_1 );
    }
    else
    {
      if (((RogueString__begins_with__Character( name_4, (RogueCharacter)'$' ))))
      {
        if (!!(type_context_1->specializers))
        {
          {
            ROGUE_DEF_LOCAL_REF(RogueTypeSpecializer_List*,_auto_3063_9,(type_context_1->specializers));
            RogueInt32 _auto_3064_10 = (0);
            for (;_auto_3064_10 < _auto_3063_9->count;++_auto_3064_10)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,specializer_11,(((RogueClassTypeSpecializer*)(_auto_3063_9->data->as_objects[_auto_3064_10]))));
              if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(specializer_11->name), name_4 ))))
              {
                {
                  if (((RogueString__operatorEQUALSEQUALS__String( operation_5, Rogue_literal_strings[0] ))))
                  {
                    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_6,(((RogueType__organize__Scope( ROGUE_ARG(((Rogue_Parser__parse_type( ROGUE_ARG(((RogueParser__init__Token_List_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), ROGUE_ARG(specializer_11->tokens), false )))) )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )))));
                    RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_6 );
                    return (RogueClassCPPWriter*)(THIS);
                  }
                }
              }
            }
          }
        }
        if (!!(method_context_2->source_template))
        {
          {
            ROGUE_DEF_LOCAL_REF(RogueTypeParameter_List*,_auto_3065_12,(method_context_2->source_template->type_parameters));
            RogueInt32 i_13 = (0);
            for (;i_13 < _auto_3065_12->count;++i_13)
            {
              ROGUE_DEF_LOCAL_REF(RogueClassTypeParameter*,specializer_14,(((RogueClassTypeParameter*)(_auto_3065_12->data->as_objects[i_13]))));
              if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(specializer_14->name), name_4 ))))
              {
                {
                  if (((RogueString__operatorEQUALSEQUALS__String( operation_5, Rogue_literal_strings[0] ))))
                  {
                    ROGUE_DEF_LOCAL_REF(RogueClassType*,type_7,(((RogueType__organize__Scope( ROGUE_ARG(((RogueParser__parse_specialization_type__Int32( ROGUE_ARG(((RogueParser__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), t_0, ROGUE_ARG(method_context_2->name), ROGUE_ARG(((RogueString__from_first__String( ROGUE_ARG(method_context_2->name), Rogue_literal_strings[172] )))) )))), i_13 )))), ROGUE_ARG(((RogueClassScope*)(NULL))) )))));
                    RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_7 );
                    return (RogueClassCPPWriter*)(THIS);
                  }
                }
              }
            }
          }
        }
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[614] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], (RogueCharacter)'$' )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_4 )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], operation_5 )))) )))) )))) ))));
      }
      if ((!!(method_context_2) && !!(locals_3)))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_3066_15,(locals_3));
          RogueInt32 _auto_3067_16 = ((_auto_3066_15->count - 1));
          for (;_auto_3067_16 >= 0;--_auto_3067_16)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassLocal*,v_17,(((RogueClassLocal*)(_auto_3066_15->data->as_objects[_auto_3067_16]))));
            if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(v_17->name), name_4 ))))
            {
              RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_4, operation_5, ROGUE_ARG(((RogueLocal__cpp_name( v_17 )))), ROGUE_ARG(v_17->_type) );
              goto _auto_3068;
            }
          }
        }
      }
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_8,(((RogueTable_String_Property___get__String( ROGUE_ARG(type_context_1->property_lookup), name_4 )))));
      if (!!(p_8))
      {
        if (((RogueType__is_reference( type_context_1 ))))
        {
          RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_4, operation_5, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[618], ROGUE_ARG(p_8->cpp_name) )))), ROGUE_ARG(p_8->_type) );
        }
        else
        {
          RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( ROGUE_ARG(THIS), t_0, name_4, operation_5, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[619], ROGUE_ARG(p_8->cpp_name) )))), ROGUE_ARG(p_8->_type) );
        }
        goto _auto_3068;
      }
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[219] )))), name_4 );
    }
  }
  _auto_3068:;
  return (RogueClassCPPWriter*)(THIS);
}

void RogueCPPWriter__print_native_code_marker_value__Token_String_String_String_Type( RogueClassCPPWriter* THIS, RogueClassToken* t_0, RogueString* name_1, RogueString* operation_2, RogueString* default_3, RogueClassType* type_4 )
{
  {
    if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[609] ))))
    {
      if ((!!(type_4) && ((RogueType__is_reference( type_4 )))))
      {
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__Character( ROGUE_ARG(THIS), (RogueCharacter)'(' )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), type_4 )))), Rogue_literal_strings[610] );
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), type_4, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) )))), default_3 )))), Rogue_literal_strings[611] );
      }
      else
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
      }
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[612] ))))
    {
      if ((!!(type_4) && ((RogueType__is_reference( type_4 )))))
      {
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__Character( ROGUE_ARG(THIS), (RogueCharacter)'(' )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object), type_4 )))), Rogue_literal_strings[613] );
        RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(THIS), type_4, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) )))), default_3 )))), Rogue_literal_strings[611] );
      }
      else
      {
        RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
      }
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[561] ))))
    {
      RogueCPPWriter__print__Type( ROGUE_ARG(THIS), type_4 );
    }
    else if (((RogueString__operatorEQUALSEQUALS__String( operation_2, Rogue_literal_strings[0] ))))
    {
      RogueCPPWriter__print__String( ROGUE_ARG(THIS), default_3 );
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( t_0, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[614] )))), ROGUE_ARG(((RogueString__operatorPLUS__Character( Rogue_literal_strings[0], (RogueCharacter)'$' )))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_1 )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], operation_2 )))) )))) )))) ))));
    }
  }
}

void RogueCPPWriter__print_arg__Cmd_Type_Type( RogueClassCPPWriter* THIS, RogueClassCmd* arg_0, RogueClassType* param_type_1, RogueClassType* cast_to_2 )
{
  RogueInt32 close_paren_3 = (0);
  if (RogueObject_instance_of(arg_0,RogueTypeCmdReadLocal))
  {
  }
  else if (RogueObject_instance_of(arg_0,RogueTypeCmdReadSingleton))
  {
  }
  else if (RogueObject_instance_of(arg_0,RogueTypeCmdLiteral))
  {
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[1332] );
    ++close_paren_3;
  }
  if ((!!(param_type_1) && ((RogueType__is_aspect( param_type_1 )))))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[9] )))), ROGUE_ARG((Rogue_call_ROGUEM153( 49, arg_0 ))), param_type_1 )))), Rogue_literal_strings[9] );
    close_paren_3 += 2;
  }
  if (!!(cast_to_2))
  {
    RogueCPPWriter__print_cast__Type_Type_Cmd( ROGUE_ARG(THIS), ROGUE_ARG((Rogue_call_ROGUEM153( 49, arg_0 ))), cast_to_2, arg_0 );
  }
  else if (((void*)(Rogue_call_ROGUEM153( 49, arg_0 ))) != ((void*)param_type_1))
  {
    RogueCPPWriter__print_cast__Type_Type_Cmd( ROGUE_ARG(THIS), ROGUE_ARG((Rogue_call_ROGUEM153( 49, arg_0 ))), param_type_1, arg_0 );
  }
  else
  {
    Rogue_call_ROGUEM157( 50, arg_0, ROGUE_ARG(THIS), false );
  }
  while (!!(close_paren_3))
  {
    --close_paren_3;
    RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[12] );
  }
}

void RogueCPPWriter__mark_statement_start__String_Int32_Int32( RogueClassCPPWriter* THIS, RogueString* statement_filepath_0, RogueInt32 start_line_1, RogueInt32 end_line_2 )
{
}

void RogueCPPWriter__mark_statement_end( RogueClassCPPWriter* THIS )
{
}

void RogueCPPWriter__mark_method_start__Type_Method( RogueClassCPPWriter* THIS, RogueClassType* t_0, RogueClassMethod* m_1 )
{
  if (((RogueMethod__omit_output( m_1 ))))
  {
    return;
  }
}

void RogueCPPWriter__mark_method_end( RogueClassCPPWriter* THIS )
{
}

void RogueCPPWriter__mark_routine_start__Method( RogueClassCPPWriter* THIS, RogueClassMethod* m_0 )
{
  if (((RogueMethod__omit_output( m_0 ))))
  {
    return;
  }
}

void RogueCPPWriter__mark_routine_end( RogueClassCPPWriter* THIS )
{
}

void RogueCPPWriter__update_trace_info__Token( RogueClassCPPWriter* THIS, RogueClassToken* t_0 )
{
  if (((!!(THIS->trace_token) && !!(t_0)) && !!(t_0->filepath)))
  {
    if (((void*)t_0->filepath) != ((void*)THIS->trace_token->filepath))
    {
      if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[748] )))), ROGUE_ARG(((RogueToken__filename( t_0 )))) )))), Rogue_literal_strings[749] );
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[750] )))), ROGUE_ARG(t_0->line) )))), Rogue_literal_strings[179] );
      }
    }
    else if (t_0->line != THIS->trace_token->line)
    {
      if (((RogueClassRogueC*)ROGUE_SINGLETON(RogueC))->debug_mode)
      {
        RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(THIS), Rogue_literal_strings[750] )))), ROGUE_ARG(t_0->line) )))), Rogue_literal_strings[179] );
      }
    }
  }
  THIS->trace_token = t_0;
}

RogueInt32_List* RogueInt32_List__init_object( RogueInt32_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueInt32_List*)(THIS);
}

RogueInt32_List* RogueInt32_List__init( RogueInt32_List* THIS )
{
  RogueInt32_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueInt32_List*)(THIS);
}

RogueString* RogueInt32_List__to_String( RogueInt32_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueInt32_List*,_auto_3069_2,(THIS));
    RogueInt32 _auto_3070_3 = (0);
    for (;_auto_3070_3 < _auto_3069_2->count;++_auto_3070_3)
    {
      RogueInt32 value_4 = (_auto_3069_2->data->as_int32s[_auto_3070_3]);
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if ((false))
      {
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueInt32__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueInt32_List__type_name( RogueInt32_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1053]);
}

RogueInt32_List* RogueInt32_List__init__Int32( RogueInt32_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueInt32) );
  }
  return (RogueInt32_List*)(THIS);
}

RogueInt32_List* RogueInt32_List__add__Int32( RogueInt32_List* THIS, RogueInt32 value_0 )
{
  ((RogueInt32_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_int32s[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueInt32_List*)(THIS);
}

RogueInt32 RogueInt32_List__capacity( RogueInt32_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueInt32_List* RogueInt32_List__reserve__Int32( RogueInt32_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueInt32) );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueInt32_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueInt32) )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueInt32_List*)(THIS);
}

RogueString* RogueArray_Int32___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1080]);
}

RogueClassTableValueReader_Type_CyClass_* RogueTableValueReader_Type_CyClass___init_object( RogueClassTableValueReader_Type_CyClass_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableValueReader_Type_CyClass_*)(THIS);
}

RogueString* RogueTableValueReader_Type_CyClass___type_name( RogueClassTableValueReader_Type_CyClass_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[993]);
}

RogueLogical RogueTableValueReader_Type_CyClass___has_another( RogueClassTableValueReader_Type_CyClass_* THIS )
{
  return (RogueLogical)(!!(THIS->cur_entry));
}

RogueClassCyClass* RogueTableValueReader_Type_CyClass___read( RogueClassTableValueReader_Type_CyClass_* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,result_0,(THIS->cur_entry->value));
  THIS->cur_entry = THIS->cur_entry->next_entry;
  THIS->position = (THIS->position + 1);
  return (RogueClassCyClass*)(result_0);
}

RogueClassTableValueReader_Type_CyClass_* RogueTableValueReader_Type_CyClass___init__Table_Type_CyClass_( RogueClassTableValueReader_Type_CyClass_* THIS, RogueClassTable_Type_CyClass_* _auto_568_0 )
{
  THIS->table = _auto_568_0;
  THIS->cur_entry = THIS->table->first_entry;
  return (RogueClassTableValueReader_Type_CyClass_*)(THIS);
}

RogueCyClass_List* RogueCyClass_List__init_object( RogueCyClass_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCyClass_List*)(THIS);
}

RogueCyClass_List* RogueCyClass_List__init( RogueCyClass_List* THIS )
{
  RogueCyClass_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCyClass_List*)(THIS);
}

RogueString* RogueCyClass_List__to_String( RogueCyClass_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCyClass_List*,_auto_3111_2,(THIS));
    RogueInt32 _auto_3112_3 = (0);
    for (;_auto_3112_3 < _auto_3111_2->count;++_auto_3112_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCyClass*,value_4,(((RogueClassCyClass*)(_auto_3111_2->data->as_objects[_auto_3112_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueCyClass__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCyClass_List__type_name( RogueCyClass_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1054]);
}

RogueCyClass_List* RogueCyClass_List__init__Int32( RogueCyClass_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCyClass*), true );
  }
  return (RogueCyClass_List*)(THIS);
}

RogueCyClass_List* RogueCyClass_List__add__CyClass( RogueCyClass_List* THIS, RogueClassCyClass* value_0 )
{
  ((RogueCyClass_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCyClass_List*)(THIS);
}

RogueInt32 RogueCyClass_List__capacity( RogueCyClass_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCyClass_List* RogueCyClass_List__reserve__Int32( RogueCyClass_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCyClass*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCyClass_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCyClass*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCyClass_List*)(THIS);
}

RogueString* RogueArray_CyClass___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1083]);
}

RogueClassTableValueReader_String_CyProperty_* RogueTableValueReader_String_CyProperty___init_object( RogueClassTableValueReader_String_CyProperty_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableValueReader_String_CyProperty_*)(THIS);
}

RogueString* RogueTableValueReader_String_CyProperty___type_name( RogueClassTableValueReader_String_CyProperty_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[997]);
}

RogueLogical RogueTableValueReader_String_CyProperty___has_another( RogueClassTableValueReader_String_CyProperty_* THIS )
{
  return (RogueLogical)(!!(THIS->cur_entry));
}

RogueClassCyProperty* RogueTableValueReader_String_CyProperty___read( RogueClassTableValueReader_String_CyProperty_* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCyProperty*,result_0,(THIS->cur_entry->value));
  THIS->cur_entry = THIS->cur_entry->next_entry;
  THIS->position = (THIS->position + 1);
  return (RogueClassCyProperty*)(result_0);
}

RogueClassTableValueReader_String_CyProperty_* RogueTableValueReader_String_CyProperty___init__Table_String_CyProperty_( RogueClassTableValueReader_String_CyProperty_* THIS, RogueClassTable_String_CyProperty_* _auto_593_0 )
{
  THIS->table = _auto_593_0;
  THIS->cur_entry = THIS->table->first_entry;
  return (RogueClassTableValueReader_String_CyProperty_*)(THIS);
}

RogueClassTableValueReader_String_CyMethod_List_* RogueTableValueReader_String_CyMethod_List___init_object( RogueClassTableValueReader_String_CyMethod_List_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableValueReader_String_CyMethod_List_*)(THIS);
}

RogueString* RogueTableValueReader_String_CyMethod_List___type_name( RogueClassTableValueReader_String_CyMethod_List_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[999]);
}

RogueLogical RogueTableValueReader_String_CyMethod_List___has_another( RogueClassTableValueReader_String_CyMethod_List_* THIS )
{
  return (RogueLogical)(!!(THIS->cur_entry));
}

RogueCyMethod_List* RogueTableValueReader_String_CyMethod_List___read( RogueClassTableValueReader_String_CyMethod_List_* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,result_0,(THIS->cur_entry->value));
  THIS->cur_entry = THIS->cur_entry->next_entry;
  THIS->position = (THIS->position + 1);
  return (RogueCyMethod_List*)(result_0);
}

RogueClassTableValueReader_String_CyMethod_List_* RogueTableValueReader_String_CyMethod_List___init__Table_String_CyMethod_List_( RogueClassTableValueReader_String_CyMethod_List_* THIS, RogueClassTable_String_CyMethod_List_* _auto_609_0 )
{
  THIS->table = _auto_609_0;
  THIS->cur_entry = THIS->table->first_entry;
  return (RogueClassTableValueReader_String_CyMethod_List_*)(THIS);
}

RogueCyMethod_List_List* RogueCyMethod_List_List__init_object( RogueCyMethod_List_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCyMethod_List_List*)(THIS);
}

RogueCyMethod_List_List* RogueCyMethod_List_List__init( RogueCyMethod_List_List* THIS )
{
  RogueCyMethod_List_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCyMethod_List_List*)(THIS);
}

RogueString* RogueCyMethod_List_List__to_String( RogueCyMethod_List_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCyMethod_List_List*,_auto_3199_2,(THIS));
    RogueInt32 _auto_3200_3 = (0);
    for (;_auto_3200_3 < _auto_3199_2->count;++_auto_3200_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueCyMethod_List*,value_4,(((RogueCyMethod_List*)(_auto_3199_2->data->as_objects[_auto_3200_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueCyMethod_List__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCyMethod_List_List__type_name( RogueCyMethod_List_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1056]);
}

RogueCyMethod_List_List* RogueCyMethod_List_List__init__Int32( RogueCyMethod_List_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueCyMethod_List*), true );
  }
  return (RogueCyMethod_List_List*)(THIS);
}

RogueCyMethod_List_List* RogueCyMethod_List_List__add__CyMethod_List( RogueCyMethod_List_List* THIS, RogueCyMethod_List* value_0 )
{
  ((RogueCyMethod_List_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCyMethod_List_List*)(THIS);
}

RogueInt32 RogueCyMethod_List_List__capacity( RogueCyMethod_List_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCyMethod_List_List* RogueCyMethod_List_List__reserve__Int32( RogueCyMethod_List_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueCyMethod_List*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCyMethod_List_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueCyMethod_List*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCyMethod_List_List*)(THIS);
}

RogueString* RogueArray_CyMethod_List___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1082]);
}

RogueClassRequirementError* RogueRequirementError__init_object( RogueClassRequirementError* THIS )
{
  RogueError__init_object( ROGUE_ARG(((RogueClassError*)THIS)) );
  return (RogueClassRequirementError*)(THIS);
}

RogueString* RogueRequirementError__type_name( RogueClassRequirementError* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1276]);
}

RogueClassRequirementError* RogueRequirementError__init__String( RogueClassRequirementError* THIS, RogueString* requirement_0 )
{
  if (!!(requirement_0->character_count))
  {
    THIS->message = ((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[321] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], requirement_0 )))) )))), Rogue_literal_strings[154] )))) )));
  }
  else
  {
    THIS->message = Rogue_literal_strings[322];
  }
  return (RogueClassRequirementError*)(THIS);
}

RogueClassSet_Type_* RogueSet_Type___init_object( RogueClassSet_Type_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassSet_Type_*)(THIS);
}

RogueClassSet_Type_* RogueSet_Type___init( RogueClassSet_Type_* THIS )
{
  THIS->_t = ((RogueTable_Type_Logical___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_Type_Logical_*,ROGUE_CREATE_OBJECT(Table_Type_Logical_))) )));
  return (RogueClassSet_Type_*)(THIS);
}

RogueString* RogueSet_Type___to_String( RogueClassSet_Type_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueSet_Type___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueSet_Type___type_name( RogueClassSet_Type_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1000]);
}

RogueClassSet_Type_* RogueSet_Type___init__Set_Type_( RogueClassSet_Type_* THIS, RogueClassSet_Type_* other_0 )
{
  THIS->_t = ((RogueTable_Type_Logical___cloned( ROGUE_ARG(other_0->_t) )));
  return (RogueClassSet_Type_*)(THIS);
}

RogueLogical RogueSet_Type___contains__Type( RogueClassSet_Type_* THIS, RogueClassType* v_0 )
{
  return (RogueLogical)(((RogueTable_Type_Logical___contains__Type( ROGUE_ARG(THIS->_t), v_0 ))));
}

RogueClassType* RogueSet_Type___at__Int32( RogueClassSet_Type_* THIS, RogueInt32 index_0 )
{
  return (RogueClassType*)(((RogueClassType*)(((RogueTable_Type_Logical___keys( ROGUE_ARG(THIS->_t) )))->data->as_objects[index_0])));
}

RogueClassSet_Type_* RogueSet_Type___add__Type( RogueClassSet_Type_* THIS, RogueClassType* v_0 )
{
  RogueTable_Type_Logical___set__Type_Logical( ROGUE_ARG(THIS->_t), v_0, true );
  return (RogueClassSet_Type_*)(THIS);
}

RogueClassSet_Type_* RogueSet_Type___difference_update__Set_Type_( RogueClassSet_Type_* THIS, RogueClassSet_Type_* r_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassSet_Type_*,_auto_3247_1,(r_0));
    RogueInt32 _auto_3248_2 = (0);
    for (;_auto_3248_2 < ((RogueSet_Type___count( _auto_3247_1 )));++_auto_3248_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassType*,v_3,(((RogueSet_Type___at__Int32( _auto_3247_1, _auto_3248_2 )))));
      RogueSet_Type___discard__Type( ROGUE_ARG(THIS), v_3 );
    }
  }
  return (RogueClassSet_Type_*)(THIS);
}

RogueClassSet_Type_* RogueSet_Type___difference__Set_Type_( RogueClassSet_Type_* THIS, RogueClassSet_Type_* r_0 )
{
  return (RogueClassSet_Type_*)(((RogueSet_Type___difference_update__Set_Type_( ROGUE_ARG(((RogueSet_Type___cloned( ROGUE_ARG(THIS) )))), r_0 ))));
}

void RogueSet_Type___discard__Type( RogueClassSet_Type_* THIS, RogueClassType* v_0 )
{
  if (((RogueSet_Type___contains__Type( ROGUE_ARG(THIS), v_0 ))))
  {
    RogueSet_Type___remove__Type( ROGUE_ARG(THIS), v_0 );
  }
}

void RogueSet_Type___remove__Type( RogueClassSet_Type_* THIS, RogueClassType* v_0 )
{
  RogueTable_Type_Logical___remove__Type( ROGUE_ARG(THIS->_t), v_0 );
}

RogueClassSet_Type_* RogueSet_Type___cloned( RogueClassSet_Type_* THIS )
{
  return (RogueClassSet_Type_*)(((RogueSet_Type___init__Set_Type_( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassSet_Type_*,ROGUE_CREATE_OBJECT(Set_Type_))), ROGUE_ARG(THIS) ))));
}

RogueInt32 RogueSet_Type___count( RogueClassSet_Type_* THIS )
{
  return (RogueInt32)(THIS->_t->count);
}

RogueStringBuilder* RogueSet_Type___print_to__StringBuilder( RogueClassSet_Type_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  RogueInt32 i_1 = (0);
  while (i_1 < ((RogueTable_Type_Logical___keys( ROGUE_ARG(THIS->_t) )))->count)
  {
    if (i_1 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassType*,key_2,(((RogueClassType*)(((RogueTable_Type_Logical___keys( ROGUE_ARG(THIS->_t) )))->data->as_objects[i_1]))));
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(key_2))) );
    ++i_1;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

RogueClassTable_Type_Logical_* RogueTable_Type_Logical___init_object( RogueClassTable_Type_Logical_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_Type_Logical_*)(THIS);
}

RogueClassTable_Type_Logical_* RogueTable_Type_Logical___init( RogueClassTable_Type_Logical_* THIS )
{
  RogueTable_Type_Logical___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_Type_Logical_*)(THIS);
}

RogueString* RogueTable_Type_Logical___to_String( RogueClassTable_Type_Logical_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_Type_Logical___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_Type_Logical___type_name( RogueClassTable_Type_Logical_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1021]);
}

RogueClassTable_Type_Logical_* RogueTable_Type_Logical___init__Int32( RogueClassTable_Type_Logical_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_Type_Logical_*), true );
  return (RogueClassTable_Type_Logical_*)(THIS);
}

RogueClassTable_Type_Logical_* RogueTable_Type_Logical___init__Table_Type_Logical_( RogueClassTable_Type_Logical_* THIS, RogueClassTable_Type_Logical_* other_0 )
{
  THIS->bin_mask = other_0->bin_mask;
  if (!(!!(THIS->bins)))
  {
    THIS->bins = RogueType_create_array( other_0->bins->count, sizeof(RogueClassTableEntry_Type_Logical_*), true );
  }
  RogueTable_Type_Logical___add__Table_Type_Logical_( ROGUE_ARG(THIS), other_0 );
  return (RogueClassTable_Type_Logical_*)(THIS);
}

RogueClassTable_Type_Logical_* RogueTable_Type_Logical___add__Table_Type_Logical_( RogueClassTable_Type_Logical_* THIS, RogueClassTable_Type_Logical_* other_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Logical_*,cur_1,(other_0->first_entry));
  while (!!(cur_1))
  {
    RogueTable_Type_Logical___set__Type_Logical( ROGUE_ARG(THIS), ROGUE_ARG(cur_1->key), ROGUE_ARG(cur_1->value) );
    cur_1 = ((RogueClassTableEntry_Type_Logical_*)cur_1->next_entry);
  }
  return (RogueClassTable_Type_Logical_*)(THIS);
}

RogueClassTable_Type_Logical_* RogueTable_Type_Logical___cloned( RogueClassTable_Type_Logical_* THIS )
{
  return (RogueClassTable_Type_Logical_*)(((RogueTable_Type_Logical___init__Table_Type_Logical_( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_Type_Logical_*,ROGUE_CREATE_OBJECT(Table_Type_Logical_))), ROGUE_ARG(THIS) ))));
}

RogueLogical RogueTable_Type_Logical___contains__Type( RogueClassTable_Type_Logical_* THIS, RogueClassType* key_0 )
{
  return (RogueLogical)(!!(((RogueTable_Type_Logical___find__Type( ROGUE_ARG(THIS), key_0 )))));
}

RogueClassTableEntry_Type_Logical_* RogueTable_Type_Logical___find__Type( RogueClassTable_Type_Logical_* THIS, RogueClassType* key_0 )
{
  RogueInt32 hash_1 = ((Rogue_call_ROGUEM2( 3, ((RogueObject*)key_0) )));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Logical_*,entry_2,(((RogueClassTableEntry_Type_Logical_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && (Rogue_call_ROGUEM3( 6, ROGUE_ARG(((RogueObject*)entry_2->key)), ROGUE_ARG(((RogueObject*)(key_0))) ))))
    {
      return (RogueClassTableEntry_Type_Logical_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_Type_Logical_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_Type_Logical_*)(((RogueClassTableEntry_Type_Logical_*)(NULL)));
}

RogueType_List* RogueTable_Type_Logical___keys( RogueClassTable_Type_Logical_* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueType_List*,result_0,(((RogueType_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))), ROGUE_ARG(THIS->count) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Logical_*,cur_1,(THIS->first_entry));
  while (!!(cur_1))
  {
    RogueType_List__add__Type( result_0, ROGUE_ARG(cur_1->key) );
    cur_1 = ((RogueClassTableEntry_Type_Logical_*)cur_1->next_entry);
  }
  return (RogueType_List*)(result_0);
}

RogueLogical RogueTable_Type_Logical___remove__Type( RogueClassTable_Type_Logical_* THIS, RogueClassType* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Logical_*,entry_1,(((RogueTable_Type_Logical___find__Type( ROGUE_ARG(THIS), key_0 )))));
  if (!(!!(entry_1)))
  {
    RogueLogical default_zero_value_2 = 0;
    return (RogueLogical)(default_zero_value_2);
  }
  RogueTable_Type_Logical___remove__TableEntry_Type_Logical_( ROGUE_ARG(THIS), entry_1 );
  return (RogueLogical)(entry_1->value);
}

RogueClassTableEntry_Type_Logical_* RogueTable_Type_Logical___remove__TableEntry_Type_Logical_( RogueClassTable_Type_Logical_* THIS, RogueClassTableEntry_Type_Logical_* entry_0 )
{
  THIS->count = (THIS->count + -1);
  THIS->cur_entry = ((RogueClassTableEntry_Type_Logical_*)(NULL));
  RogueInt32 hash_1 = (entry_0->hash);
  RogueInt32 index_2 = ((hash_1 & THIS->bin_mask));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Logical_*,cur_3,(((RogueClassTableEntry_Type_Logical_*)(THIS->bins->as_objects[index_2]))));
  if (((void*)cur_3) == ((void*)entry_0))
  {
    THIS->bins->as_objects[index_2] = cur_3->adjacent_entry;
  }
  else
  {
    while (((void*)cur_3->adjacent_entry) != ((void*)entry_0))
    {
      cur_3 = ((RogueClassTableEntry_Type_Logical_*)cur_3->adjacent_entry);
    }
    cur_3->adjacent_entry = cur_3->adjacent_entry->adjacent_entry;
  }
  if (((void*)entry_0) == ((void*)THIS->first_entry))
  {
    if (((void*)entry_0) == ((void*)THIS->last_entry))
    {
      THIS->first_entry = ((RogueClassTableEntry_Type_Logical_*)(NULL));
      THIS->last_entry = ((RogueClassTableEntry_Type_Logical_*)(NULL));
    }
    else
    {
      THIS->first_entry = entry_0->next_entry;
    }
  }
  else if (((void*)entry_0) == ((void*)THIS->last_entry))
  {
    THIS->last_entry = entry_0->previous_entry;
  }
  else
  {
    entry_0->previous_entry->next_entry = entry_0->next_entry;
    entry_0->next_entry->previous_entry = entry_0->previous_entry;
  }
  return (RogueClassTableEntry_Type_Logical_*)(entry_0);
}

RogueClassTable_Type_Logical_* RogueTable_Type_Logical___set__Type_Logical( RogueClassTable_Type_Logical_* THIS, RogueClassType* key_0, RogueLogical value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Logical_*,entry_2,(((RogueTable_Type_Logical___find__Type( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_Type_Logical_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_Type_Logical____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = ((Rogue_call_ROGUEM2( 3, ((RogueObject*)key_0) )));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_Type_Logical_*)((RogueTableEntry_Type_Logical___init__Type_Logical_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_Type_Logical_*,ROGUE_CREATE_OBJECT(TableEntry_Type_Logical_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_Type_Logical_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_Type_Logical_*)(THIS);
}

RogueStringBuilder* RogueTable_Type_Logical___print_to__StringBuilder( RogueClassTable_Type_Logical_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Logical_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->key))) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Logical( buffer_0, ROGUE_ARG(cur_1->value) );
    cur_1 = ((RogueClassTableEntry_Type_Logical_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_Type_Logical____grow( RogueClassTable_Type_Logical_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_Type_Logical_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_Type_Logical_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_Type_Logical_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_Type_Logical_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_Type_Logical____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1121]);
}

RogueClassTableEntry_Type_Logical_* RogueTableEntry_Type_Logical___init_object( RogueClassTableEntry_Type_Logical_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_Type_Logical_*)(THIS);
}

RogueString* RogueTableEntry_Type_Logical___to_String( RogueClassTableEntry_Type_Logical_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_Type_Logical___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->key))) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Logical( Rogue_literal_strings[0], ROGUE_ARG(THIS->value) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_Type_Logical___type_name( RogueClassTableEntry_Type_Logical_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[938]);
}

RogueClassTableEntry_Type_Logical_* RogueTableEntry_Type_Logical___init__Type_Logical_Int32( RogueClassTableEntry_Type_Logical_* THIS, RogueClassType* _key_0, RogueLogical _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_Type_Logical_*)(THIS);
}

RogueClassSystem* RogueSystem__init_object( RogueClassSystem* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassSystem*)(THIS);
}

RogueString* RogueSystem__type_name( RogueClassSystem* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1002]);
}

RogueWeakReference* RogueWeakReference__init_object( RogueWeakReference* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueWeakReference*)(THIS);
}

RogueString* RogueWeakReference__type_name( RogueWeakReference* THIS )
{
  return (RogueString*)(Rogue_literal_strings[383]);
}

void RogueWeakReference__clean_up( RogueWeakReference* THIS )
{
  if (Rogue_weak_references == THIS)
  {
    Rogue_weak_references = THIS->next_weak_reference;
  }
  else
  {
    RogueWeakReference* cur = Rogue_weak_references;
    while (cur && cur->next_weak_reference != THIS)
    {
      cur = cur->next_weak_reference;
    }
    if (cur) cur->next_weak_reference = cur->next_weak_reference->next_weak_reference;
  }

}

RogueClassReal64Value* RogueReal64Value__init_object( RogueClassReal64Value* THIS )
{
  RogueValue__init_object( ROGUE_ARG(((RogueClassValue*)THIS)) );
  return (RogueClassReal64Value*)(THIS);
}

RogueString* RogueReal64Value__to_String( RogueClassReal64Value* THIS )
{
  return (RogueString*)(((RogueReal64__format__OptionalInt32( ROGUE_ARG(THIS->value), ROGUE_ARG((RogueOptionalInt32__create())) ))));
}

RogueString* RogueReal64Value__type_name( RogueClassReal64Value* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1134]);
}

RogueLogical RogueReal64Value__is_number( RogueClassReal64Value* THIS )
{
  return (RogueLogical)(true);
}

RogueLogical RogueReal64Value__operatorEQUALSEQUALS__Value( RogueClassReal64Value* THIS, RogueClassValue* other_0 )
{
  if ((Rogue_call_ROGUEM32( 40, other_0 )))
  {
    return (RogueLogical)(THIS->value == (Rogue_call_ROGUEM35( 98, other_0 )));
  }
  else
  {
    return (RogueLogical)(false);
  }
}

RogueInt32 RogueReal64Value__to_Int32( RogueClassReal64Value* THIS )
{
  return (RogueInt32)(((RogueInt32)(THIS->value)));
}

RogueReal64 RogueReal64Value__to_Real64( RogueClassReal64Value* THIS )
{
  return (RogueReal64)(THIS->value);
}

RogueClassReal64Value* RogueReal64Value__init__Real64( RogueClassReal64Value* THIS, RogueReal64 _auto_848_0 )
{
  THIS->value = _auto_848_0;
  return (RogueClassReal64Value*)(THIS);
}

RogueClassNullValue* RogueNullValue__init_object( RogueClassNullValue* THIS )
{
  RogueValue__init_object( ROGUE_ARG(((RogueClassValue*)THIS)) );
  return (RogueClassNullValue*)(THIS);
}

RogueString* RogueNullValue__to_String( RogueClassNullValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1]);
}

RogueString* RogueNullValue__type_name( RogueClassNullValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1135]);
}

RogueLogical RogueNullValue__is_null( RogueClassNullValue* THIS )
{
  return (RogueLogical)(true);
}

RogueLogical RogueNullValue__is_non_null( RogueClassNullValue* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueNullValue__operatorEQUALSEQUALS__Value( RogueClassNullValue* THIS, RogueClassValue* other_0 )
{
  return (RogueLogical)((((void*)other_0) == ((void*)NULL) || (Rogue_call_ROGUEM32( 38, other_0 ))));
}

RogueInt32 RogueNullValue__to_Int32( RogueClassNullValue* THIS )
{
  return (RogueInt32)(0);
}

RogueClassObjectValue* RogueObjectValue__init_object( RogueClassObjectValue* THIS )
{
  RogueValue__init_object( ROGUE_ARG(((RogueClassValue*)THIS)) );
  return (RogueClassObjectValue*)(THIS);
}

RogueString* RogueObjectValue__to_String( RogueClassObjectValue* THIS )
{
  return (RogueString*)((Rogue_call_ROGUEM4( 11, ROGUE_ARG(THIS->value) )));
}

RogueString* RogueObjectValue__type_name( RogueClassObjectValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1136]);
}

RogueClassObjectValue* RogueObjectValue__init__Object( RogueClassObjectValue* THIS, RogueObject* _auto_849_0 )
{
  THIS->value = _auto_849_0;
  return (RogueClassObjectValue*)(THIS);
}

RogueClassStringValue* RogueStringValue__init_object( RogueClassStringValue* THIS )
{
  RogueValue__init_object( ROGUE_ARG(((RogueClassValue*)THIS)) );
  return (RogueClassStringValue*)(THIS);
}

RogueString* RogueStringValue__to_String( RogueClassStringValue* THIS )
{
  return (RogueString*)(THIS->value);
}

RogueString* RogueStringValue__type_name( RogueClassStringValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1137]);
}

RogueLogical RogueStringValue__is_string( RogueClassStringValue* THIS )
{
  return (RogueLogical)(true);
}

RogueLogical RogueStringValue__operatorEQUALSEQUALS__Value( RogueClassStringValue* THIS, RogueClassValue* other_0 )
{
  if ((Rogue_call_ROGUEM32( 43, other_0 )))
  {
    return (RogueLogical)(((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->value), ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)other_0) ))) ))));
  }
  else
  {
    return (RogueLogical)(false);
  }
}

RogueInt32 RogueStringValue__to_Int32( RogueClassStringValue* THIS )
{
  return (RogueInt32)(strtol( (char*)THIS->value->utf8, 0, 10 ));
}

RogueLogical RogueStringValue__to_Logical( RogueClassStringValue* THIS )
{
  return (RogueLogical)(((((((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->value), Rogue_literal_strings[140] ))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->value), Rogue_literal_strings[1138] )))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->value), Rogue_literal_strings[1139] )))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->value), Rogue_literal_strings[1140] )))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->value), Rogue_literal_strings[590] )))));
}

RogueReal64 RogueStringValue__to_Real64( RogueClassStringValue* THIS )
{
  return (RogueReal64)(strtod( (char*)THIS->value->utf8, 0 ));
}

RogueClassStringValue* RogueStringValue__init__String( RogueClassStringValue* THIS, RogueString* _auto_851_0 )
{
  THIS->value = _auto_851_0;
  return (RogueClassStringValue*)(THIS);
}

RogueClassUndefinedValue* RogueUndefinedValue__init_object( RogueClassUndefinedValue* THIS )
{
  RogueNullValue__init_object( ROGUE_ARG(((RogueClassNullValue*)THIS)) );
  return (RogueClassUndefinedValue*)(THIS);
}

RogueString* RogueUndefinedValue__to_String( RogueClassUndefinedValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueUndefinedValue__type_name( RogueClassUndefinedValue* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1434]);
}

RogueClassFile* RogueFile__init_object( RogueClassFile* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFile*)(THIS);
}

RogueString* RogueFile__to_String( RogueClassFile* THIS )
{
  return (RogueString*)(THIS->filepath);
}

RogueString* RogueFile__type_name( RogueClassFile* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1022]);
}

RogueClassFile* RogueFile__init__String( RogueClassFile* THIS, RogueString* _auto_858_0 )
{
  THIS->filepath = _auto_858_0;
  return (RogueClassFile*)(THIS);
}

RogueString* RogueFile__filename( RogueClassFile* THIS )
{
  return (RogueString*)((RogueFile__filename__String( ROGUE_ARG(THIS->filepath) )));
}

RogueClassFunction_1094* RogueFunction_1094__init_object( RogueClassFunction_1094* THIS )
{
  RogueFunction____init_object( ROGUE_ARG(((RogueClassFunction__*)THIS)) );
  return (RogueClassFunction_1094*)(THIS);
}

RogueString* RogueFunction_1094__type_name( RogueClassFunction_1094* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1132]);
}

void RogueFunction_1094__call( RogueClassFunction_1094* THIS )
{
  tcsetattr( STDIN_FILENO, TCSANOW, &THIS->console->original_terminal_settings );

}

RogueClassFunction_1094* RogueFunction_1094__init__Console( RogueClassFunction_1094* THIS, RogueClassConsole* _auto_1095_0 )
{
  THIS->console = _auto_1095_0;
  return (RogueClassFunction_1094*)(THIS);
}

RogueClassBlockingConsoleIOHandler* RogueBlockingConsoleIOHandler__init_object( RogueClassBlockingConsoleIOHandler* THIS )
{
  RogueConsoleIOHandler__init_object( ROGUE_ARG(((RogueClassConsoleIOHandler*)THIS)) );
  return (RogueClassBlockingConsoleIOHandler*)(THIS);
}

RogueString* RogueBlockingConsoleIOHandler__type_name( RogueClassBlockingConsoleIOHandler* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1142]);
}

RogueLogical RogueBlockingConsoleIOHandler__has_another( RogueClassBlockingConsoleIOHandler* THIS )
{
  if (!(THIS->next_input_byte.exists))
  {
    THIS->next_input_byte = RogueOptionalInt32( (RogueInt32)getc(stdin), true );
    if (THIS->next_input_byte.value == -1)
    {
      clearerr( stdin );

      THIS->next_input_byte = (RogueOptionalInt32__create());
    }
  }
  return (RogueLogical)(THIS->next_input_byte.exists);
}

RogueByte RogueBlockingConsoleIOHandler__read( RogueClassBlockingConsoleIOHandler* THIS )
{
  if (!(((RogueBlockingConsoleIOHandler__has_another( ROGUE_ARG(THIS) )))))
  {
    return (RogueByte)(((RogueByte)(0)));
  }
  RogueInt32 result_0 = (THIS->next_input_byte.value);
  THIS->next_input_byte = (RogueOptionalInt32__create());
  return (RogueByte)(((RogueByte)(result_0)));
}

void RogueBlockingConsoleIOHandler__write__Array_Int32( RogueClassBlockingConsoleIOHandler* THIS, RogueArray* bytes_0, RogueInt32 count_1 )
{
  fwrite( bytes_0->as_bytes, 1, count_1, stdout );

}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__init_object( RogueClassCmdMakeRequisite* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdMakeRequisite*)(THIS);
}

RogueString* RogueCmdMakeRequisite__type_name( RogueClassCmdMakeRequisite* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1161]);
}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__cloned__CloneArgs( RogueClassCmdMakeRequisite* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdMakeRequisite*)(((RogueCmdMakeRequisite__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdMakeRequisite*,ROGUE_CREATE_OBJECT(CmdMakeRequisite))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->pattern) ))));
}

RogueClassCmd* RogueCmdMakeRequisite__dispatch__Visitor( RogueClassCmdMakeRequisite* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdMakeRequisite( v_0, ROGUE_ARG(THIS) ))));
}

RogueLogical RogueCmdMakeRequisite__requires_semicolon( RogueClassCmdMakeRequisite* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdMakeRequisite__resolve__Scope( RogueClassCmdMakeRequisite* THIS, RogueClassScope* scope_0 )
{
  if (((RogueString__contains__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,req_type_1,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__before_first__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' )))) )))));
    RogueType__organize__Scope( ROGUE_ARG(((RogueType__make_essential( req_type_1 )))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
    ROGUE_DEF_LOCAL_REF(RogueString*,sig_2,(((RogueString__after_first__Character( ROGUE_ARG(THIS->pattern), (RogueCharacter)'.' )))));
    if (((RogueString__operatorEQUALSEQUALS__String( sig_2, Rogue_literal_strings[188] ))))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3367_6,(req_type_1->global_method_list));
        RogueInt32 _auto_3368_7 = (0);
        for (;_auto_3368_7 < _auto_3367_6->count;++_auto_3368_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,r_8,(((RogueClassMethod*)(_auto_3367_6->data->as_objects[_auto_3368_7]))));
          RogueMethod__make_essential( r_8 );
        }
      }
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3369_9,(req_type_1->method_list));
        RogueInt32 _auto_3370_10 = (0);
        for (;_auto_3370_10 < _auto_3369_9->count;++_auto_3370_10)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_11,(((RogueClassMethod*)(_auto_3369_9->data->as_objects[_auto_3370_10]))));
          RogueMethod__make_essential( m_11 );
        }
      }
    }
    else if (((RogueString__contains__Character( sig_2, (RogueCharacter)'(' ))))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_3,(((RogueType__find_method__String( req_type_1, sig_2 )))));
      if ((!(!!(m_3)) && ((RogueMethodTemplates__instantiate__Token_String( ROGUE_ARG(req_type_1->method_templates), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__before_first__Character( sig_2, (RogueCharacter)'(' )))) )))))
      {
        m_3 = ((RogueClassMethod*)((RogueType__find_method__String( req_type_1, sig_2 ))));
      }
      if (!!(m_3))
      {
        RogueMethod__make_essential( m_3 );
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1216] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], sig_2 )))) )))), Rogue_literal_strings[1217] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(req_type_1->name) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
      }
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueMethod_List*,list_4,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(req_type_1->global_method_lookup_by_name), sig_2 )))));
      if (!!(list_4))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3371_12,(list_4));
          RogueInt32 _auto_3372_13 = (0);
          for (;_auto_3372_13 < _auto_3371_12->count;++_auto_3372_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_14,(((RogueClassMethod*)(_auto_3371_12->data->as_objects[_auto_3372_13]))));
            RogueMethod__make_essential( m_14 );
          }
        }
      }
      list_4 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(req_type_1->method_lookup_by_name), sig_2 ))));
      if (!!(list_4))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_3373_15,(list_4));
          RogueInt32 _auto_3374_16 = (0);
          for (;_auto_3374_16 < _auto_3373_15->count;++_auto_3374_16)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_17,(((RogueClassMethod*)(_auto_3373_15->data->as_objects[_auto_3374_16]))));
            RogueMethod__make_essential( m_17 );
          }
        }
      }
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,req_type_5,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->pattern) )))));
    RogueType__organize__Scope( ROGUE_ARG(((RogueType__make_essential( req_type_5 )))), ROGUE_ARG(((RogueClassScope*)(NULL))) );
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

void RogueCmdMakeRequisite__write_cpp__CPPWriter_Logical( RogueClassCmdMakeRequisite* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
}

RogueClassCmdMakeRequisite* RogueCmdMakeRequisite__init__Token_String( RogueClassCmdMakeRequisite* THIS, RogueClassToken* _auto_1110_0, RogueString* _auto_1111_1 )
{
  THIS->pattern = _auto_1111_1;
  THIS->t = _auto_1110_0;
  return (RogueClassCmdMakeRequisite*)(THIS);
}

RogueClassLineReader* RogueLineReader__init_object( RogueClassLineReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->buffer = ((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )));
  return (RogueClassLineReader*)(THIS);
}

RogueString* RogueLineReader__type_name( RogueClassLineReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1023]);
}

RogueLogical RogueLineReader__has_another( RogueClassLineReader* THIS )
{
  return (RogueLogical)(!!(THIS->next));
}

RogueString* RogueLineReader__read( RogueClassLineReader* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,result_0,(THIS->next));
  THIS->next = ((RogueLineReader__prepare_next( ROGUE_ARG(THIS) )));
  THIS->position = (THIS->position + 1);
  return (RogueString*)(result_0);
}

RogueClassLineReader* RogueLineReader__init__Reader_Character_( RogueClassLineReader* THIS, RogueClassReader_Character_* _auto_1118_0 )
{
  THIS->source = _auto_1118_0;
  THIS->next = ((RogueLineReader__prepare_next( ROGUE_ARG(THIS) )));
  return (RogueClassLineReader*)(THIS);
}

RogueClassLineReader* RogueLineReader__init__File( RogueClassLineReader* THIS, RogueClassFile* file_0 )
{
  RogueLineReader__init__Reader_Character_( ROGUE_ARG(THIS), ROGUE_ARG(((((RogueClassReader_Character_*)(((RogueUTF8Reader__init__Reader_Byte_( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUTF8Reader*,ROGUE_CREATE_OBJECT(UTF8Reader))), ROGUE_ARG(((((RogueClassReader_Byte_*)((RogueFile__reader__String( ROGUE_ARG(file_0->filepath) ))))))) )))))))) );
  return (RogueClassLineReader*)(THIS);
}

RogueClassLineReader* RogueLineReader__init__String( RogueClassLineReader* THIS, RogueString* string_0 )
{
  RogueLineReader__init__Reader_Character_( ROGUE_ARG(THIS), ROGUE_ARG(((((RogueClassReader_Character_*)(((RogueString__reader( string_0 )))))))) );
  return (RogueClassLineReader*)(THIS);
}

RogueString* RogueLineReader__prepare_next( RogueClassLineReader* THIS )
{
  if (!((RogueReader_Character___has_another( ROGUE_ARG(((RogueObject*)THIS->source)) ))))
  {
    return (RogueString*)(((RogueString*)(NULL)));
  }
  THIS->prev = ((RogueCharacter)(0));
  RogueStringBuilder__clear( ROGUE_ARG(THIS->buffer) );
  while ((RogueReader_Character___has_another( ROGUE_ARG(((RogueObject*)THIS->source)) )))
  {
    RogueCharacter ch_0 = ((RogueReader_Character___read( ROGUE_ARG(((RogueObject*)THIS->source)) )));
    if (ch_0 == (RogueCharacter)10)
    {
      THIS->prev = (RogueCharacter)10;
      return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
    }
    RogueStringBuilder__print__Character_Logical( ROGUE_ARG(THIS->buffer), ch_0, true );
  }
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(THIS->buffer) ))));
}

RogueClassFunction_1125* RogueFunction_1125__init_object( RogueClassFunction_1125* THIS )
{
  RogueFunction__RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction__RETURNSLogical*)THIS)) );
  return (RogueClassFunction_1125*)(THIS);
}

RogueString* RogueFunction_1125__type_name( RogueClassFunction_1125* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1372]);
}

RogueLogical RogueFunction_1125__call( RogueClassFunction_1125* THIS )
{
  RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1401] )))) )))) );
  if (!(!!(((RogueProgram__find_type__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), Rogue_literal_strings[1402] ))))))
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,src_5,(Rogue_literal_strings[1403]));
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[1404] );
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), src_5 );
    RogueParser__parse_elements( ROGUE_ARG(((RogueParser__init__String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassParser*,ROGUE_CREATE_OBJECT(Parser))), Rogue_literal_strings[1399], src_5 )))) );
    return (RogueLogical)(true);
  }
  else
  {
    RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), Rogue_literal_strings[1405] );
    return (RogueLogical)(false);
  }
}

RogueClassEOLToken* RogueEOLToken__init_object( RogueClassEOLToken* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassEOLToken*)(THIS);
}

RogueString* RogueEOLToken__to_String( RogueClassEOLToken* THIS )
{
  if ((!!(THIS->comment) && !!(THIS->comment->character_count)))
  {
    return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1143] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->comment) )))) )))) ))));
  }
  return (RogueString*)(Rogue_literal_strings[226]);
}

RogueString* RogueEOLToken__type_name( RogueClassEOLToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1149]);
}

RogueClassEOLToken* RogueEOLToken__init__TokenType_String( RogueClassEOLToken* THIS, RogueClassTokenType* _auto_1212_0, RogueString* _auto_1213_1 )
{
  THIS->comment = _auto_1213_1;
  THIS->_type = _auto_1212_0;
  return (RogueClassEOLToken*)(THIS);
}

RogueClassEOLToken* RogueEOLToken__init__Token( RogueClassEOLToken* THIS, RogueClassToken* existing_0 )
{
  THIS->_type = RogueTokenType_eol;
  RogueToken__set_location__Token( ROGUE_ARG(((RogueClassToken*)THIS)), existing_0 );
  return (RogueClassEOLToken*)(THIS);
}

RogueClassCmdLiteralLogical* RogueCmdLiteralLogical__init_object( RogueClassCmdLiteralLogical* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralLogical*)(THIS);
}

RogueString* RogueCmdLiteralLogical__to_String( RogueClassCmdLiteralLogical* THIS )
{
  return (RogueString*)(((RogueLogical__to_String( ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueCmdLiteralLogical__type_name( RogueClassCmdLiteralLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1416]);
}

RogueClassCmd* RogueCmdLiteralLogical__cloned__CloneArgs( RogueClassCmdLiteralLogical* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

RogueClassCmd* RogueCmdLiteralLogical__dispatch__Visitor( RogueClassCmdLiteralLogical* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) ))));
}

RogueClassCmd* RogueCmdLiteralLogical__resolve__Scope( RogueClassCmdLiteralLogical* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralLogical__to_Logical( RogueClassCmdLiteralLogical* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralLogical__type( RogueClassCmdLiteralLogical* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

void RogueCmdLiteralLogical__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralLogical* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->value)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[140] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[130] );
  }
}

RogueClassCmdLiteralLogical* RogueCmdLiteralLogical__init__Token_Logical( RogueClassCmdLiteralLogical* THIS, RogueClassToken* _auto_1214_0, RogueLogical _auto_1215_1 )
{
  THIS->value = _auto_1215_1;
  THIS->t = _auto_1214_0;
  return (RogueClassCmdLiteralLogical*)(THIS);
}

RogueClassCmdLiteralInt32* RogueCmdLiteralInt32__init_object( RogueClassCmdLiteralInt32* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralInt32*)(THIS);
}

RogueString* RogueCmdLiteralInt32__to_String( RogueClassCmdLiteralInt32* THIS )
{
  return (RogueString*)(((RogueInt32__to_String( ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueCmdLiteralInt32__type_name( RogueClassCmdLiteralInt32* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1417]);
}

RogueClassCmd* RogueCmdLiteralInt32__cast_to__Type_Scope_Logical_Logical( RogueClassCmdLiteralInt32* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1, RogueLogical allow_implicit_narrowing_2, RogueLogical is_conversion_3 )
{
  if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64)(THIS->value))) ))))));
  }
  else
  {
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope_Logical_Logical( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1, false, false )));
  }
}

RogueClassCmd* RogueCmdLiteralInt32__cloned__CloneArgs( RogueClassCmdLiteralInt32* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

RogueClassCmd* RogueCmdLiteralInt32__dispatch__Visitor( RogueClassCmdLiteralInt32* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) ))));
}

RogueClassCmd* RogueCmdLiteralInt32__resolve__Scope( RogueClassCmdLiteralInt32* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralInt32__to_Logical( RogueClassCmdLiteralInt32* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralInt32__type( RogueClassCmdLiteralInt32* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
}

void RogueCmdLiteralInt32__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralInt32* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(THIS->value) );
}

RogueClassCmdLiteralInt32* RogueCmdLiteralInt32__init__Token_Int32( RogueClassCmdLiteralInt32* THIS, RogueClassToken* _auto_1216_0, RogueInt32 _auto_1217_1 )
{
  THIS->value = _auto_1217_1;
  THIS->t = _auto_1216_0;
  return (RogueClassCmdLiteralInt32*)(THIS);
}

RogueClassCloneArgs* RogueCloneArgs__init_object( RogueClassCloneArgs* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassCloneArgs*)(THIS);
}

RogueString* RogueCloneArgs__type_name( RogueClassCloneArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1024]);
}

RogueClassCmdLabel* RogueCloneArgs__register_label__CmdLabel( RogueClassCloneArgs* THIS, RogueClassCmdLabel* label_0 )
{
  return (RogueClassCmdLabel*)(label_0);
}

RogueClassCmdAdd* RogueCmdAdd__init_object( RogueClassCmdAdd* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdAdd*)(THIS);
}

RogueString* RogueCmdAdd__type_name( RogueClassCmdAdd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1454]);
}

RogueClassCmd* RogueCmdAdd__cloned__CloneArgs( RogueClassCmdAdd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdAdd__combine_literal_operands__Type( RogueClassCmdAdd* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value + ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value + ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdAdd__dispatch__Visitor( RogueClassCmdAdd* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdAdd__fn_name( RogueClassCmdAdd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[786]);
}

RogueClassCmd* RogueCmdAdd__resolve_operator_method__Scope_Type_Type( RogueClassCmdAdd* THIS, RogueClassScope* scope_0, RogueClassType* _auto_5774, RogueClassType* right_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,left_type_1,_auto_5774);
  if ((((void*)left_type_1) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) && ((void*)right_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String)))
  {
    THIS->left = (Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), Rogue_literal_strings[0], 0 )))))), ROGUE_ARG(THIS->left) ))))))), scope_0 ));
    left_type_1 = ((RogueClassType*)(Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->left) )));
  }
  return (RogueClassCmd*)((RogueCmdBinary__resolve_operator_method__Scope_Type_Type( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0, left_type_1, right_type_2 )));
}

RogueString* RogueCmdAdd__symbol( RogueClassCmdAdd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[175]);
}

RogueClassCmdBinary* RogueCmdBinary__init_object( RogueClassCmdBinary* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdBinary*)(THIS);
}

RogueString* RogueCmdBinary__to_String( RogueClassCmdBinary* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM484( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->left))) )))) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->right))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueCmdBinary__type_name( RogueClassCmdBinary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[939]);
}

RogueClassCmd* RogueCmdBinary__dispatch__Visitor( RogueClassCmdBinary* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdBinary__resolve__Scope( RogueClassCmdBinary* THIS, RogueClassScope* scope_0 )
{
  THIS->left = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->left), scope_0 ));
  THIS->right = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->right), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,left_type_1,(((RogueType__organize__Scope( ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->left) ))), scope_0 )))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,right_type_2,(((RogueType__organize__Scope( ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->right) ))), scope_0 )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_3,((Rogue_call_ROGUEM493( 54, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2 ))));
  return (RogueClassCmd*)(result_3);
}

RogueClassType* Rogue_CmdBinary__type( RogueClassCmdBinary* THIS )
{
  return (RogueClassType*)(((RogueCmd__find_operation_result_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->left) ))), ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->right) ))) ))));
}

void RogueCmdBinary__write_cpp__CPPWriter_Logical( RogueClassCmdBinary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if ((Rogue_call_ROGUEM492( 53, ROGUE_ARG(THIS) )))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] );
  }
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->left), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] )))), ROGUE_ARG((Rogue_call_ROGUEM484( 58, ROGUE_ARG(THIS) ))) )))), Rogue_literal_strings[620] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->right), writer_0, false );
  if ((Rogue_call_ROGUEM492( 53, ROGUE_ARG(THIS) )))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCmdBinary* RogueCmdBinary__init__Token_Cmd_Cmd( RogueClassCmdBinary* THIS, RogueClassToken* _auto_1218_0, RogueClassCmd* _auto_1219_1, RogueClassCmd* _auto_1220_2 )
{
  THIS->right = _auto_1220_2;
  THIS->left = _auto_1219_1;
  THIS->t = _auto_1218_0;
  return (RogueClassCmdBinary*)(THIS);
}

RogueString* RogueCmdBinary__fn_name( RogueClassCmdBinary* THIS )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM484( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1218] )))) )))) ))));
}

RogueLogical RogueCmdBinary__requires_parens( RogueClassCmdBinary* THIS )
{
  return (RogueLogical)(true);
}

RogueClassCmd* RogueCmdBinary__resolve_for_types__Scope_Type_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,operator_method_call_3,((Rogue_call_ROGUEM493( 56, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2 ))));
  if (!!(operator_method_call_3))
  {
    return (RogueClassCmd*)(operator_method_call_3);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_4,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), left_type_1, right_type_2 )))));
  THIS->left = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->left), common_type_4, scope_0, false, false ))), scope_0 ));
  THIS->right = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->right), common_type_4, scope_0, false, false ))), scope_0 ));
  if (((Rogue_call_ROGUEM150( 36, ROGUE_ARG(THIS->left) )) && (Rogue_call_ROGUEM150( 36, ROGUE_ARG(THIS->right) ))))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM147( 25, ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_4 )));
  }
  return (RogueClassCmd*)((Rogue_call_ROGUEM494( 55, ROGUE_ARG(THIS), scope_0, common_type_4 )));
}

RogueClassCmd* RogueCmdBinary__resolve_for_common_type__Scope_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* common_type_1 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdBinary__resolve_operator_method__Scope_Type_Type( RogueClassCmdBinary* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  if (((RogueType__has_method_named__String( left_type_1, ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))) ))))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (((RogueType__has_global_method_named__String( left_type_1, ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))) ))))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(left_type_1->name) )))))), ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (((RogueType__has_global_method_named__String( right_type_2, ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))) ))))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(right_type_2->name) )))))), ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) )))) )))), scope_0 ))));
  }
  else if (!((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 ))))))
  {
    if (((void*)left_type_1) == ((void*)right_type_2))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1219] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1220] )))) )))) ))));
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1221] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1222] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM484( 52, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1223] )))) )))) ))));
    }
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
}

RogueString* RogueCmdBinary__symbol( RogueClassCmdBinary* THIS )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM484( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1303] )))) )))) ))));
}

RogueString* RogueCmdBinary__cpp_symbol( RogueClassCmdBinary* THIS )
{
  return (RogueString*)((Rogue_call_ROGUEM484( 57, ROGUE_ARG(THIS) )));
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__init_object( RogueClassCmdNativeHeader* THIS )
{
  RogueCmdNativeSource__init_object( ROGUE_ARG(((RogueClassCmdNativeSource*)THIS)) );
  return (RogueClassCmdNativeHeader*)(THIS);
}

RogueString* RogueCmdNativeHeader__type_name( RogueClassCmdNativeHeader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1474]);
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__cloned__CloneArgs( RogueClassCmdNativeHeader* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdNativeHeader*)(((RogueCmdNativeHeader__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeHeader*,ROGUE_CREATE_OBJECT(CmdNativeHeader))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code) ))));
}

RogueClassCmd* RogueCmdNativeHeader__dispatch__Visitor( RogueClassCmdNativeHeader* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdNativeSource( v_0, ROGUE_ARG(((RogueClassCmdNativeSource*)(THIS))) ))));
}

RogueClassCmd* RogueCmdNativeHeader__resolve__Scope( RogueClassCmdNativeHeader* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->code))
  {
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), ROGUE_ARG(THIS->code) ))).exists))
    {
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_header), ROGUE_ARG(THIS->code) );
    }
    THIS->code = ((RogueString*)(NULL));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

RogueClassCmdNativeHeader* RogueCmdNativeHeader__init__Token_String( RogueClassCmdNativeHeader* THIS, RogueClassToken* _auto_1229_0, RogueString* _auto_1230_1 )
{
  THIS->code = _auto_1230_1;
  THIS->t = _auto_1229_0;
  return (RogueClassCmdNativeHeader*)(THIS);
}

RogueClassCmdNativeSource* RogueCmdNativeSource__init_object( RogueClassCmdNativeSource* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNativeSource*)(THIS);
}

RogueString* RogueCmdNativeSource__type_name( RogueClassCmdNativeSource* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1162]);
}

RogueClassCmd* RogueCmdNativeSource__dispatch__Visitor( RogueClassCmdNativeSource* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdNativeSource( v_0, ROGUE_ARG(THIS) ))));
}

RogueLogical RogueCmdNativeSource__requires_semicolon( RogueClassCmdNativeSource* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmdNativeCode* RogueCmdNativeCode__init_object( RogueClassCmdNativeCode* THIS )
{
  RogueCmdNativeSource__init_object( ROGUE_ARG(((RogueClassCmdNativeSource*)THIS)) );
  return (RogueClassCmdNativeCode*)(THIS);
}

RogueString* RogueCmdNativeCode__type_name( RogueClassCmdNativeCode* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1475]);
}

RogueClassCmdNativeCode* RogueCmdNativeCode__cloned__CloneArgs( RogueClassCmdNativeCode* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdNativeCode*)(((RogueCmdNativeCode__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNativeCode*,ROGUE_CREATE_OBJECT(CmdNativeCode))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code) ))));
}

RogueClassCmd* RogueCmdNativeCode__dispatch__Visitor( RogueClassCmdNativeCode* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdNativeSource( v_0, ROGUE_ARG(((RogueClassCmdNativeSource*)(THIS))) ))));
}

RogueClassCmd* RogueCmdNativeCode__resolve__Scope( RogueClassCmdNativeCode* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->code))
  {
    if (!(((RogueString_List__locate__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), ROGUE_ARG(THIS->code) ))).exists))
    {
      RogueString_List__add__String( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->native_code), ROGUE_ARG(THIS->code) );
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

RogueClassCmdNativeCode* RogueCmdNativeCode__init__Token_String( RogueClassCmdNativeCode* THIS, RogueClassToken* _auto_1231_0, RogueString* _auto_1232_1 )
{
  THIS->code = _auto_1232_1;
  THIS->t = _auto_1231_0;
  return (RogueClassCmdNativeCode*)(THIS);
}

RogueClassCmdIncludeNative* RogueCmdIncludeNative__init_object( RogueClassCmdIncludeNative* THIS )
{
  RogueCmdNativeSource__init_object( ROGUE_ARG(((RogueClassCmdNativeSource*)THIS)) );
  return (RogueClassCmdIncludeNative*)(THIS);
}

RogueString* RogueCmdIncludeNative__type_name( RogueClassCmdIncludeNative* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1476]);
}

RogueClassCmdIncludeNative* RogueCmdIncludeNative__cloned__CloneArgs( RogueClassCmdIncludeNative* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdIncludeNative*)(((RogueCmdIncludeNative__init__Token_String_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIncludeNative*,ROGUE_CREATE_OBJECT(CmdIncludeNative))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->_file_type) ))));
}

RogueClassCmd* RogueCmdIncludeNative__dispatch__Visitor( RogueClassCmdIncludeNative* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdNativeSource( v_0, ROGUE_ARG(((RogueClassCmdNativeSource*)(THIS))) ))));
}

RogueClassCmd* RogueCmdIncludeNative__resolve__Scope( RogueClassCmdIncludeNative* THIS, RogueClassScope* scope_0 )
{
  RogueRogueC__include_native__Token_String_String( ((RogueClassRogueC*)ROGUE_SINGLETON(RogueC)), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->filepath), ROGUE_ARG(THIS->_file_type) );
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))))));
}

RogueClassCmdIncludeNative* RogueCmdIncludeNative__init__Token_String_String( RogueClassCmdIncludeNative* THIS, RogueClassToken* _auto_1234_0, RogueString* _auto_1235_1, RogueString* _auto_1236_2 )
{
  THIS->_file_type = _auto_1236_2;
  THIS->filepath = _auto_1235_1;
  THIS->t = _auto_1234_0;
  RogueLogical _auto_1233_3;
  ((_auto_1233_3=((((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->_file_type), Rogue_literal_strings[294] ))) || ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->_file_type), Rogue_literal_strings[293] ))))))?_auto_1233_3:ROGUE_THROW(RogueClassRequirementError,((RogueRequirementError__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRequirementError*,ROGUE_CREATE_OBJECT(RequirementError))), Rogue_literal_strings[320] )))));
  return (RogueClassCmdIncludeNative*)(THIS);
}

RogueClassCmdIf* RogueCmdIf__init_object( RogueClassCmdIf* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdIf*)(THIS);
}

RogueString* RogueCmdIf__type_name( RogueClassCmdIf* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1426]);
}

RogueClassCmd* RogueCmdIf__cloned__CloneArgs( RogueClassCmdIf* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,next_section_2,(((RogueTaskArgs__create_section( task_args_1 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,end_section_3,(((RogueTaskArgs__create_section( task_args_1 )))));
    THIS->task_escape_section = end_section_3;
    RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( task_args_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->condition), clone_args_0 ))) )))))))), next_section_2 );
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3428_5,(THIS->statements));
      RogueInt32 _auto_3429_6 = (0);
      for (;_auto_3429_6 < _auto_3428_5->count;++_auto_3429_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_7,(((RogueClassCmd*)(_auto_3428_5->data->as_objects[_auto_3429_6]))));
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_7, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_3 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, next_section_2 );
    if (!!(THIS->else_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3430_8,(THIS->else_statements));
        RogueInt32 _auto_3431_9 = (0);
        for (;_auto_3431_9 < _auto_3430_8->count;++_auto_3431_9)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_10,(((RogueClassCmd*)(_auto_3430_8->data->as_objects[_auto_3431_9]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_10, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_3 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, end_section_3 );
    if (end_section_3->ip < task_args_1->cmd_task_control->sections->count)
    {
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,result_4,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG(THIS->_control_type) )))));
    Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_4), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_4));
    result_4->statements = ((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    result_4->else_statements = ((RogueCmd__cloned__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->else_statements), clone_args_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
}

RogueClassCmd* RogueCmdIf__dispatch__Visitor( RogueClassCmdIf* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdIf( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdIf__resolve__Scope( RogueClassCmdIf* THIS, RogueClassScope* scope_0 )
{
  THIS->condition = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->condition), scope_0 ));
  THIS->condition = ((RogueCmd__require_logical__Scope( ROGUE_ARG(THIS->condition), scope_0 )));
  if (RogueObject_instance_of(THIS->condition,RogueTypeCmdLiteral))
  {
    if ((Rogue_call_ROGUEM150( 47, ROGUE_ARG(THIS->condition) )))
    {
      THIS->else_statements = ((RogueClassCmdStatementList*)(NULL));
    }
    else
    {
      RogueCmd_List__clear( ROGUE_ARG(((RogueCmd_List*)THIS->statements)) );
    }
  }
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  if (!!(THIS->else_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->else_statements), scope_0, false );
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdIf__write_cpp__CPPWriter_Logical( RogueClassCmdIf* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1304] );
  if ((RogueObject_instance_of(THIS->condition,RogueTypeCmdLiteralLogical) && !(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->condition,RogueTypeCmdLiteralLogical)))->value)))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->condition), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
  else
  {
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->condition), writer_0, false );
  }
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[12] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  if (!!(THIS->else_statements))
  {
    if ((THIS->else_statements->count == 1 && RogueObject_instance_of(((RogueClassCmd*)(THIS->else_statements->data->as_objects[0])),RogueTypeCmdIf)))
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1305] );
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->else_statements), writer_0, false, true );
    }
    else
    {
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[45] );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
      writer_0->indent += 2;
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->else_statements), writer_0, false, false );
      writer_0->indent -= 2;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
    }
  }
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1306] );
  }
}

RogueClassCmdIf* RogueCmdIf__init__Token_Cmd_Int32( RogueClassCmdIf* THIS, RogueClassToken* _auto_1237_0, RogueClassCmd* _auto_1238_1, RogueInt32 _auto_1239_2 )
{
  THIS->_control_type = _auto_1239_2;
  THIS->condition = _auto_1238_1;
  THIS->t = _auto_1237_0;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  return (RogueClassCmdIf*)(THIS);
}

RogueClassCmdIf* RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( RogueClassCmdIf* THIS, RogueClassToken* _auto_1240_0, RogueClassCmd* _auto_1241_1, RogueClassCmdStatementList* _auto_1242_2, RogueInt32 _auto_1243_3 )
{
  THIS->_control_type = _auto_1243_3;
  THIS->statements = _auto_1242_2;
  THIS->condition = _auto_1241_1;
  THIS->t = _auto_1240_0;
  return (RogueClassCmdIf*)(THIS);
}

RogueClassCmdWhich* RogueCmdWhich__init_object( RogueClassCmdWhich* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdWhich*)(THIS);
}

RogueString* RogueCmdWhich__type_name( RogueClassCmdWhich* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1427]);
}

RogueClassCmdWhich* RogueCmdWhich__cloned__CloneArgs( RogueClassCmdWhich* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhich*,result_1,(((RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhich*,ROGUE_CREATE_OBJECT(CmdWhich))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->expression), clone_args_0 ))), ROGUE_ARG(((RogueCmdWhichCase_List*)(NULL))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,cloned_cases_2,(((RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))), ROGUE_ARG(THIS->cases->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3432_3,(THIS->cases));
    RogueInt32 _auto_3433_4 = (0);
    for (;_auto_3433_4 < _auto_3432_3->count;++_auto_3433_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_5,(((RogueClassCmdWhichCase*)(_auto_3432_3->data->as_objects[_auto_3433_4]))));
      RogueCmdWhichCase_List__add__CmdWhichCase( cloned_cases_2, ROGUE_ARG(((RogueCmdWhichCase__cloned__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  result_1->cases = cloned_cases_2;
  if (!!(THIS->case_others))
  {
    result_1->case_others = ((RogueCmdWhichCase__cloned__CloneArgs( ROGUE_ARG(THIS->case_others), clone_args_0 )));
  }
  return (RogueClassCmdWhich*)(result_1);
}

RogueClassCmd* RogueCmdWhich__dispatch__Visitor( RogueClassCmdWhich* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdWhich( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdWhich__resolve__Scope( RogueClassCmdWhich* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->expression = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->expression), scope_0 ));
  RogueLogical all_literal_cases_1 = (true);
  ROGUE_DEF_LOCAL_REF(RogueClassType*,expression_type_2,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->expression) ))));
  if ((((void*)expression_type_2) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32) && ((void*)expression_type_2) != ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character)))
  {
    if (((void*)expression_type_2) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))
    {
      THIS->expression = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->expression), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0, false, false ))), scope_0 ));
    }
    else
    {
      all_literal_cases_1 = ((RogueLogical)false);
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3434_10,(THIS->cases));
    RogueInt32 _auto_3435_11 = (0);
    for (;_auto_3435_11 < _auto_3434_10->count;++_auto_3435_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_12,(((RogueClassCmdWhichCase*)(_auto_3434_10->data->as_objects[_auto_3435_11]))));
      RogueCmdArgs__resolve__Scope( ROGUE_ARG(c_12->conditions), scope_0 );
      if (all_literal_cases_1)
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3436_13,(c_12->conditions));
          RogueInt32 _auto_3437_14 = (0);
          for (;_auto_3437_14 < _auto_3436_13->count;++_auto_3437_14)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_15,(((RogueClassCmd*)(_auto_3436_13->data->as_objects[_auto_3437_14]))));
            if ((!((Rogue_call_ROGUEM150( 36, condition_15 ))) || RogueObject_instance_of(condition_15,RogueTypeCmdLiteralString)))
            {
              all_literal_cases_1 = ((RogueLogical)false);
              goto _auto_3438;
            }
          }
        }
        _auto_3438:;
      }
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(c_12->statements), scope_0, false );
    }
  }
  if (!!(THIS->case_others))
  {
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->case_others->conditions), scope_0 );
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->case_others->statements), scope_0, false );
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  if ((all_literal_cases_1 && !(THIS->contains_yield)))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM382( 52, ROGUE_ARG(((RogueClassCmdControlStructure*)((RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSwitch*,ROGUE_CREATE_OBJECT(CmdSwitch))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->expression), ROGUE_ARG(THIS->cases), ROGUE_ARG(THIS->case_others), 5 ))))), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) )));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_3,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), 5 )))));
  Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_3), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->expression = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->expression), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueString*,var_name_4,0);
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,expression_var_5,0);
  if (RogueObject_instance_of(THIS->expression,RogueTypeCmdReadLocal))
  {
    expression_var_5 = ((RogueClassLocal*)((RogueClassCmdReadLocal*)(RogueObject_as(THIS->expression,RogueTypeCmdReadLocal)))->local_info);
    var_name_4 = ((RogueString*)expression_var_5->name);
  }
  else
  {
    var_name_4 = ((RogueString*)((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) ))));
    expression_var_5 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), var_name_4, ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->expression) ))), ROGUE_ARG(THIS->expression) ))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), expression_var_5, false )))))) );
  }
  if (!!(THIS->cases->count))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_6,(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->expression->t), ROGUE_ARG(((RogueCmdWhichCase__as_conditional__String( ROGUE_ARG(((RogueClassCmdWhichCase*)(THIS->cases->data->as_objects[0]))), var_name_4 )))), ROGUE_ARG(((RogueClassCmdWhichCase*)(THIS->cases->data->as_objects[0]))->statements), 2 )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cur_if_7,(cmd_if_6));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3439_16,(THIS->cases));
      RogueInt32 i_17 = (0);
      for (;i_17 < _auto_3439_16->count;++i_17)
      {
        if (i_17 > 0)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_8,(((RogueClassCmdWhichCase*)(THIS->cases->data->as_objects[i_17]))));
          ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_else_if_9,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(c_8->t), ROGUE_ARG(((RogueCmdWhichCase__as_conditional__String( c_8, var_name_4 )))), 3 )))));
          cmd_else_if_9->statements = c_8->statements;
          cur_if_7->else_statements = ((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), ROGUE_ARG(((RogueClassCmd*)(cmd_else_if_9))) )));
          cur_if_7 = ((RogueClassCmdIf*)cmd_else_if_9);
        }
      }
    }
    if (!!(THIS->case_others))
    {
      cur_if_7->else_statements = THIS->case_others->statements;
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), ROGUE_ARG(((RogueClassCmd*)(cmd_if_6))) );
  }
  else if (!!(THIS->case_others))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3440_18,(THIS->case_others->statements));
      RogueInt32 _auto_3441_19 = (0);
      for (;_auto_3441_19 < _auto_3440_18->count;++_auto_3441_19)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_20,(((RogueClassCmd*)(_auto_3440_18->data->as_objects[_auto_3441_19]))));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_3->statements)), cmd_20 );
      }
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdBlock__resolve__Scope( result_3, scope_0 ))))));
}

RogueClassCmdWhich* RogueCmdWhich__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( RogueClassCmdWhich* THIS, RogueClassToken* _auto_1249_0, RogueClassCmd* _auto_1250_1, RogueCmdWhichCase_List* _auto_1251_2, RogueClassCmdWhichCase* _auto_1252_3, RogueInt32 _auto_1253_4 )
{
  THIS->_control_type = _auto_1253_4;
  THIS->case_others = _auto_1252_3;
  THIS->cases = _auto_1251_2;
  THIS->expression = _auto_1250_1;
  THIS->t = _auto_1249_0;
  return (RogueClassCmdWhich*)(THIS);
}

RogueClassCmdWhichCase* RogueCmdWhich__add_case__Token( RogueClassCmdWhich* THIS, RogueClassToken* case_t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,result_1,(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), case_t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  RogueCmdWhichCase_List__add__CmdWhichCase( ROGUE_ARG(THIS->cases), result_1 );
  return (RogueClassCmdWhichCase*)(result_1);
}

RogueClassCmdWhichCase* RogueCmdWhich__add_case_others__Token( RogueClassCmdWhich* THIS, RogueClassToken* case_t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,result_1,(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), case_t_0, ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  THIS->case_others = result_1;
  return (RogueClassCmdWhichCase*)(result_1);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init_object( RogueCmdWhichCase_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init( RogueCmdWhichCase_List* THIS )
{
  RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueString* RogueCmdWhichCase_List__to_String( RogueCmdWhichCase_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3442_2,(THIS));
    RogueInt32 _auto_3443_3 = (0);
    for (;_auto_3443_3 < _auto_3442_2->count;++_auto_3443_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,value_4,(((RogueClassCmdWhichCase*)(_auto_3442_2->data->as_objects[_auto_3443_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdWhichCase_List__type_name( RogueCmdWhichCase_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1065]);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__init__Int32( RogueCmdWhichCase_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdWhichCase*), true );
  }
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__add__CmdWhichCase( RogueCmdWhichCase_List* THIS, RogueClassCmdWhichCase* value_0 )
{
  ((RogueCmdWhichCase_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueInt32 RogueCmdWhichCase_List__capacity( RogueCmdWhichCase_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdWhichCase_List* RogueCmdWhichCase_List__reserve__Int32( RogueCmdWhichCase_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdWhichCase*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdWhichCase_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdWhichCase*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdWhichCase_List*)(THIS);
}

RogueClassCmdWhichCase* RogueCmdWhichCase__init_object( RogueClassCmdWhichCase* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWhichCase*)(THIS);
}

RogueString* RogueCmdWhichCase__type_name( RogueClassCmdWhichCase* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1176]);
}

RogueClassCmdWhichCase* RogueCmdWhichCase__cloned__CloneArgs( RogueClassCmdWhichCase* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdWhichCase*)(((RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWhichCase*,ROGUE_CREATE_OBJECT(CmdWhichCase))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->conditions), clone_args_0 )))), ROGUE_ARG(((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) ))));
}

RogueClassCmd* RogueCmdWhichCase__dispatch__Visitor( RogueClassCmdWhichCase* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdWhichCase( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmdWhichCase* RogueCmdWhichCase__init__Token_CmdArgs_CmdStatementList( RogueClassCmdWhichCase* THIS, RogueClassToken* _auto_1323_0, RogueClassCmdArgs* _auto_1324_1, RogueClassCmdStatementList* _auto_1325_2 )
{
  THIS->statements = _auto_1325_2;
  THIS->conditions = _auto_1324_1;
  THIS->t = _auto_1323_0;
  return (RogueClassCmdWhichCase*)(THIS);
}

RogueClassCmd* RogueCmdWhichCase__as_conditional__String( RogueClassCmdWhichCase* THIS, RogueString* expression_var_name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_1,0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3490_2,(THIS->conditions));
    RogueInt32 _auto_3491_3 = (0);
    for (;_auto_3491_3 < _auto_3490_2->count;++_auto_3491_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_4,(((RogueClassCmd*)(_auto_3490_2->data->as_objects[_auto_3491_3]))));
      if (!!(cmd_1))
      {
        cmd_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), ROGUE_ARG(THIS->t), cmd_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), expression_var_name_0 )))))), condition_4 )))))))) ))))))));
      }
      else
      {
        cmd_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), expression_var_name_0 )))))), condition_4 ))))))));
      }
    }
  }
  return (RogueClassCmd*)(cmd_1);
}

RogueString* RogueArray_CmdWhichCase___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1125]);
}

RogueClassCmdBlock* RogueCmdBlock__init_object( RogueClassCmdBlock* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdBlock*)(THIS);
}

RogueString* RogueCmdBlock__type_name( RogueClassCmdBlock* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1428]);
}

RogueClassCmd* RogueCmdBlock__cloned__CloneArgs( RogueClassCmdBlock* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3493_3,(THIS->statements));
      RogueInt32 _auto_3494_4 = (0);
      for (;_auto_3494_4 < _auto_3493_3->count;++_auto_3494_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_3493_3->data->as_objects[_auto_3494_4]))));
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_5, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), 0 )))));
    Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_2), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_2));
    result_2->statements = ((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
  }
}

RogueClassCmd* RogueCmdBlock__dispatch__Visitor( RogueClassCmdBlock* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBlock( v_0, ROGUE_ARG(THIS) ))));
}

RogueLogical RogueCmdBlock__requires_semicolon( RogueClassCmdBlock* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmdBlock* RogueCmdBlock__resolve__Scope( RogueClassCmdBlock* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmdBlock*)(THIS);
}

void RogueCmdBlock__write_cpp__CPPWriter_Logical( RogueClassCmdBlock* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1306] );
  }
}

RogueClassCmdBlock* RogueCmdBlock__init__Token_Int32( RogueClassCmdBlock* THIS, RogueClassToken* _auto_1254_0, RogueInt32 _auto_1255_1 )
{
  THIS->_control_type = _auto_1255_1;
  THIS->t = _auto_1254_0;
  THIS->statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  return (RogueClassCmdBlock*)(THIS);
}

RogueClassCmdBlock* RogueCmdBlock__init__Token_CmdStatementList_Int32( RogueClassCmdBlock* THIS, RogueClassToken* _auto_1256_0, RogueClassCmdStatementList* _auto_1257_1, RogueInt32 _auto_1258_2 )
{
  THIS->_control_type = _auto_1258_2;
  THIS->statements = _auto_1257_1;
  THIS->t = _auto_1256_0;
  return (RogueClassCmdBlock*)(THIS);
}

RogueClassCmdContingent* RogueCmdContingent__init_object( RogueClassCmdContingent* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdContingent*)(THIS);
}

RogueString* RogueCmdContingent__type_name( RogueClassCmdContingent* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1429]);
}

RogueClassCmd* RogueCmdContingent__cloned__CloneArgs( RogueClassCmdContingent* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    THIS->satisfied_section = ((RogueTaskArgs__create_section( task_args_1 )));
    THIS->unsatisfied_section = ((RogueTaskArgs__create_section( task_args_1 )));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,end_section_2,(((RogueTaskArgs__create_section( task_args_1 )))));
    THIS->task_escape_section = end_section_2;
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3495_4,(THIS->statements));
      RogueInt32 _auto_3496_5 = (0);
      for (;_auto_3496_5 < _auto_3495_4->count;++_auto_3496_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_6,(((RogueClassCmd*)(_auto_3495_4->data->as_objects[_auto_3496_5]))));
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_6, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->satisfied_section) );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->satisfied_section) );
    if (!!(THIS->satisfied_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3497_7,(THIS->satisfied_statements));
        RogueInt32 _auto_3498_8 = (0);
        for (;_auto_3498_8 < _auto_3497_7->count;++_auto_3498_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_9,(((RogueClassCmd*)(_auto_3497_7->data->as_objects[_auto_3498_8]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_9, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_2 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->unsatisfied_section) );
    if (!!(THIS->unsatisfied_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3499_10,(THIS->unsatisfied_statements));
        RogueInt32 _auto_3500_11 = (0);
        for (;_auto_3500_11 < _auto_3499_10->count;++_auto_3500_11)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_12,(((RogueClassCmd*)(_auto_3499_10->data->as_objects[_auto_3500_11]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_12, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), end_section_2 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, end_section_2 );
    if (end_section_2->ip < task_args_1->cmd_task_control->sections->count)
    {
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,result_3,(((RogueCmdContingent__init__Token_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdContingent*,ROGUE_CREATE_OBJECT(CmdContingent))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    RogueCmdContingent__set_control_logic__CmdControlStructure( result_3, ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_3));
    result_3->statements = ((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    result_3->satisfied_statements = ((RogueCmd__cloned__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->satisfied_statements), clone_args_0 )));
    result_3->unsatisfied_statements = ((RogueCmd__cloned__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->unsatisfied_statements), clone_args_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(result_3)));
  }
}

RogueClassCmd* RogueCmdContingent__dispatch__Visitor( RogueClassCmdContingent* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdContingent( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmdContingent* RogueCmdContingent__resolve__Scope( RogueClassCmdContingent* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  if (!(!!(THIS->escape_label)))
  {
    THIS->escape_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
  }
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  if (!!(THIS->satisfied_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->satisfied_statements), scope_0, false );
  }
  if (!!(THIS->unsatisfied_statements))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->unsatisfied_statements), scope_0, false );
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmdContingent*)(THIS);
}

void RogueCmdContingent__write_cpp__CPPWriter_Logical( RogueClassCmdContingent* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  writer_0->indent -= 2;
  if (!!(THIS->satisfied_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->satisfied_label) )))), Rogue_literal_strings[1306] );
  }
  if (!!(THIS->satisfied_statements))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
    writer_0->indent += 2;
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->satisfied_statements), writer_0, false, false );
    RogueLogical satisfied_returns_2 = ((!!(THIS->satisfied_statements->count) && RogueObject_instance_of(((RogueCmd_List__last( ROGUE_ARG(((RogueCmd_List*)THIS->satisfied_statements)) ))),RogueTypeCmdReturn)));
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
    writer_0->indent -= 2;
    if (!(satisfied_returns_2))
    {
      THIS->escape_label_used = true;
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1307] )))), ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[179] );
    }
  }
  else
  {
    RogueLogical body_returns_3 = ((!!(THIS->statements->count) && RogueObject_instance_of(((RogueCmd_List__last( ROGUE_ARG(((RogueCmd_List*)THIS->statements)) ))),RogueTypeCmdReturn)));
    if (!(body_returns_3))
    {
      THIS->escape_label_used = true;
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1307] )))), ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[179] );
    }
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  if (!!(THIS->unsatisfied_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->unsatisfied_label) )))), Rogue_literal_strings[1306] );
  }
  if (!!(THIS->unsatisfied_statements))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
    writer_0->indent += 2;
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->unsatisfied_statements), writer_0, false, false );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
    writer_0->indent -= 2;
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  if (THIS->escape_label_used)
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1306] );
  }
}

RogueClassCmd* RogueCmdContingent__set_control_logic__CmdControlStructure( RogueClassCmdContingent* THIS, RogueClassCmdControlStructure* original_0 )
{
  RogueCmdControlStructure__set_control_logic__CmdControlStructure( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)), original_0 );
  THIS->satisfied_label = ((RogueClassCmdContingent*)(RogueObject_as(original_0,RogueTypeCmdContingent)))->satisfied_label;
  THIS->unsatisfied_label = ((RogueClassCmdContingent*)(RogueObject_as(original_0,RogueTypeCmdContingent)))->unsatisfied_label;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdContingent* RogueCmdContingent__init__Token_CmdStatementList( RogueClassCmdContingent* THIS, RogueClassToken* _auto_1259_0, RogueClassCmdStatementList* _auto_1260_1 )
{
  THIS->statements = _auto_1260_1;
  THIS->t = _auto_1259_0;
  THIS->_control_type = 1;
  return (RogueClassCmdContingent*)(THIS);
}

RogueClassCmdGenericLoop* RogueCmdGenericLoop__init_object( RogueClassCmdGenericLoop* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdGenericLoop*)(THIS);
}

RogueString* RogueCmdGenericLoop__type_name( RogueClassCmdGenericLoop* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1430]);
}

RogueClassCmd* RogueCmdGenericLoop__cloned__CloneArgs( RogueClassCmdGenericLoop* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if ((!!(task_args_1) && THIS->contains_yield))
  {
    if (!!(THIS->control_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3501_5,(THIS->control_statements));
        RogueInt32 _auto_3502_6 = (0);
        for (;_auto_3502_6 < _auto_3501_5->count;++_auto_3502_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_7,(((RogueClassCmd*)(_auto_3501_5->data->as_objects[_auto_3502_6]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_7, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,condition_section_2,(((RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,after_section_3,(((RogueTaskArgs__create_section( task_args_1 )))));
    THIS->task_escape_section = after_section_3;
    THIS->task_upkeep_section = ((RogueTaskArgs__create_section( task_args_1 )));
    if (!!(THIS->condition))
    {
      RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( task_args_1, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))) )))))))), after_section_3 );
    }
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3503_8,(THIS->statements));
      RogueInt32 _auto_3504_9 = (0);
      for (;_auto_3504_9 < _auto_3503_8->count;++_auto_3504_9)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_10,(((RogueClassCmd*)(_auto_3503_8->data->as_objects[_auto_3504_9]))));
        RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_10, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->task_upkeep_section) );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->task_upkeep_section) );
    if (!!(THIS->upkeep))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3505_11,(THIS->upkeep));
        RogueInt32 _auto_3506_12 = (0);
        for (;_auto_3506_12 < _auto_3505_11->count;++_auto_3506_12)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_13,(((RogueClassCmd*)(_auto_3505_11->data->as_objects[_auto_3506_12]))));
          RogueTaskArgs__add__Cmd( task_args_1, ROGUE_ARG((Rogue_call_ROGUEM146( 21, statement_13, ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) );
        }
      }
    }
    RogueTaskArgs__add_jump__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), condition_section_2 );
    RogueTaskArgs__begin_section__CmdTaskControlSection( task_args_1, after_section_3 );
    if (after_section_3->ip < task_args_1->cmd_task_control->sections->count)
    {
      RogueTaskArgs__jump_to_new_section__Token( task_args_1, ROGUE_ARG(THIS->t) );
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,result_4,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_control_type), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_4), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_4));
    result_4->statements = ((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
    result_4->upkeep = ((RogueCmd__cloned__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->upkeep), clone_args_0 )));
    result_4->control_statements = ((RogueCmd__cloned__CmdStatementList_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->control_statements), clone_args_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(result_4)));
  }
}

RogueClassCmd* RogueCmdGenericLoop__dispatch__Visitor( RogueClassCmdGenericLoop* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdGenericLoop( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdGenericLoop__resolve__Scope( RogueClassCmdGenericLoop* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  if (!!(THIS->control_statements))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3507_1,(THIS->control_statements));
      RogueInt32 i_2 = (0);
      for (;i_2 < _auto_3507_1->count;++i_2)
      {
        THIS->control_statements->data->as_objects[i_2] = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(((RogueClassCmd*)(THIS->control_statements->data->as_objects[i_2]))), scope_0 ));
      }
    }
  }
  if (!!(THIS->condition))
  {
    THIS->condition = ((RogueCmd__require_logical__Scope( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->condition), scope_0 ))), scope_0 )));
  }
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  if (!!(THIS->upkeep))
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->upkeep), scope_0, false );
  }
  if (!!(THIS->control_statements))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3508_3,(THIS->control_statements));
      RogueInt32 _auto_3509_4 = (0);
      for (;_auto_3509_4 < _auto_3508_3->count;++_auto_3509_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_3508_3->data->as_objects[_auto_3509_4]))));
        Rogue_call_ROGUEM149( 28, statement_5, scope_0 );
      }
    }
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdGenericLoop__write_cpp__CPPWriter_Logical( RogueClassCmdGenericLoop* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!!(THIS->control_statements))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
    writer_0->indent += 2;
    if (!!(THIS->control_statements))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3510_3,(THIS->control_statements));
        RogueInt32 _auto_3511_4 = (0);
        for (;_auto_3511_4 < _auto_3510_3->count;++_auto_3511_4)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_5,(((RogueClassCmd*)(_auto_3510_3->data->as_objects[_auto_3511_4]))));
          Rogue_call_ROGUEM157( 50, statement_5, writer_0, false );
          RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[179] );
        }
      }
    }
  }
  if ((!!(THIS->upkeep) || !(!!(THIS->condition))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1308] );
    if (!!(THIS->condition))
    {
      Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->condition), writer_0, false );
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[179] );
    RogueLogical first_2 = (true);
    if (!!(THIS->upkeep))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3512_6,(THIS->upkeep));
        RogueInt32 _auto_3513_7 = (0);
        for (;_auto_3513_7 < _auto_3512_6->count;++_auto_3513_7)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_8,(((RogueClassCmd*)(_auto_3512_6->data->as_objects[_auto_3513_7]))));
          if (first_2)
          {
            first_2 = ((RogueLogical)false);
          }
          else
          {
            RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[7] );
          }
          Rogue_call_ROGUEM157( 50, statement_8, writer_0, false );
        }
      }
    }
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[12] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1309] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->condition), writer_0, false );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[12] );
  }
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  if (!!(THIS->control_statements))
  {
    writer_0->indent -= 2;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  }
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1306] );
  }
}

RogueClassCmdGenericLoop* RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( RogueClassCmdGenericLoop* THIS, RogueClassToken* _auto_1261_0, RogueInt32 _auto_1262_1, RogueClassCmd* _auto_1263_2, RogueClassCmdStatementList* _auto_1264_3, RogueClassCmdStatementList* _auto_1265_4, RogueClassCmdStatementList* _auto_1266_5 )
{
  THIS->control_statements = _auto_1266_5;
  THIS->upkeep = _auto_1265_4;
  THIS->statements = _auto_1264_3;
  THIS->condition = _auto_1263_2;
  THIS->_control_type = _auto_1262_1;
  THIS->t = _auto_1261_0;
  return (RogueClassCmdGenericLoop*)(THIS);
}

void RogueCmdGenericLoop__add_control_var__Local( RogueClassCmdGenericLoop* THIS, RogueClassLocal* v_0 )
{
  if (!(!!(THIS->control_statements)))
  {
    THIS->control_statements = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->control_statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(v_0->t), v_0, false )))))) );
}

void RogueCmdGenericLoop__add_upkeep__Cmd( RogueClassCmdGenericLoop* THIS, RogueClassCmd* cmd_0 )
{
  if (!(!!(THIS->upkeep)))
  {
    THIS->upkeep = ((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )));
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->upkeep)), cmd_0 );
}

RogueClassCmdTry* RogueCmdTry__init_object( RogueClassCmdTry* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdTry*)(THIS);
}

RogueString* RogueCmdTry__type_name( RogueClassCmdTry* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1431]);
}

RogueClassCmdTry* RogueCmdTry__cloned__CloneArgs( RogueClassCmdTry* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTry*,result_1,(((RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTry*,ROGUE_CREATE_OBJECT(CmdTry))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueCmdCatch_List*)(NULL))) )))));
  Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  result_1->statements = ((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
  ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,new_catches_2,(((RogueCmdCatch_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdCatch_List*,ROGUE_CREATE_OBJECT(CmdCatch_List))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3514_3,(THIS->catches));
    RogueInt32 _auto_3515_4 = (0);
    for (;_auto_3515_4 < _auto_3514_3->count;++_auto_3515_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_5,(((RogueClassCmdCatch*)(_auto_3514_3->data->as_objects[_auto_3515_4]))));
      RogueCmdCatch_List__add__CmdCatch( new_catches_2, ROGUE_ARG(((RogueCmdCatch__cloned__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  result_1->catches = new_catches_2;
  return (RogueClassCmdTry*)(result_1);
}

RogueClassCmd* RogueCmdTry__dispatch__Visitor( RogueClassCmdTry* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTry( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdTry__resolve__Scope( RogueClassCmdTry* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3516_1,(THIS->catches));
    RogueInt32 _auto_3517_2 = (0);
    for (;_auto_3517_2 < _auto_3516_1->count;++_auto_3517_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_3,(((RogueClassCmdCatch*)(_auto_3516_1->data->as_objects[_auto_3517_2]))));
      RogueCmdCatch__resolve__Scope( c_3, scope_0 );
    }
  }
  if (THIS->contains_yield)
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1227] ))));
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdTry__write_cpp__CPPWriter_Logical( RogueClassCmdTry* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1310] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3518_2,(THIS->catches));
    RogueInt32 _auto_3519_3 = (0);
    for (;_auto_3519_3 < _auto_3518_2->count;++_auto_3519_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_4,(((RogueClassCmdCatch*)(_auto_3518_2->data->as_objects[_auto_3519_3]))));
      RogueCmdCatch__write_cpp__CPPWriter_Logical( c_4, writer_0, false );
    }
  }
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1313] );
  if (!!(THIS->escape_label))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->escape_label) )))), Rogue_literal_strings[1306] );
  }
}

RogueClassCmdTry* RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( RogueClassCmdTry* THIS, RogueClassToken* _auto_1277_0, RogueClassCmdStatementList* _auto_1278_1, RogueCmdCatch_List* _auto_1279_2 )
{
  THIS->catches = _auto_1279_2;
  THIS->statements = _auto_1278_1;
  THIS->t = _auto_1277_0;
  THIS->_control_type = 4;
  return (RogueClassCmdTry*)(THIS);
}

RogueClassCmdCatch* RogueCmdTry__add_catch__Token( RogueClassCmdTry* THIS, RogueClassToken* catch_t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_1,(((RogueCmdCatch__init__Token_Local_Type_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCatch*,ROGUE_CREATE_OBJECT(CmdCatch))), catch_t_0, ROGUE_ARG(((RogueClassLocal*)(NULL))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))) )))));
  RogueCmdCatch_List__add__CmdCatch( ROGUE_ARG(THIS->catches), c_1 );
  return (RogueClassCmdCatch*)(c_1);
}

RogueCmdCatch_List* RogueCmdCatch_List__init_object( RogueCmdCatch_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdCatch_List*)(THIS);
}

RogueCmdCatch_List* RogueCmdCatch_List__init( RogueCmdCatch_List* THIS )
{
  RogueCmdCatch_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdCatch_List*)(THIS);
}

RogueString* RogueCmdCatch_List__to_String( RogueCmdCatch_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3520_2,(THIS));
    RogueInt32 _auto_3521_3 = (0);
    for (;_auto_3521_3 < _auto_3520_2->count;++_auto_3521_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,value_4,(((RogueClassCmdCatch*)(_auto_3520_2->data->as_objects[_auto_3521_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdCatch_List__type_name( RogueCmdCatch_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1066]);
}

RogueCmdCatch_List* RogueCmdCatch_List__init__Int32( RogueCmdCatch_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdCatch*), true );
  }
  return (RogueCmdCatch_List*)(THIS);
}

RogueCmdCatch_List* RogueCmdCatch_List__add__CmdCatch( RogueCmdCatch_List* THIS, RogueClassCmdCatch* value_0 )
{
  ((RogueCmdCatch_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCmdCatch_List*)(THIS);
}

RogueInt32 RogueCmdCatch_List__capacity( RogueCmdCatch_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdCatch_List* RogueCmdCatch_List__reserve__Int32( RogueCmdCatch_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdCatch*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdCatch_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdCatch*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdCatch_List*)(THIS);
}

RogueClassCmdCatch* RogueCmdCatch__init_object( RogueClassCmdCatch* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCatch*)(THIS);
}

RogueString* RogueCmdCatch__type_name( RogueClassCmdCatch* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1177]);
}

RogueClassCmdCatch* RogueCmdCatch__cloned__CloneArgs( RogueClassCmdCatch* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdCatch*)(((RogueCmdCatch__init__Token_Local_Type_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCatch*,ROGUE_CREATE_OBJECT(CmdCatch))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->error_var), ROGUE_ARG(THIS->_error_type), ROGUE_ARG(((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))) ))));
}

RogueClassCmd* RogueCmdCatch__dispatch__Visitor( RogueClassCmdCatch* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCatch( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdCatch__resolve__Scope( RogueClassCmdCatch* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,err_type_1,0);
  if (!!(THIS->error_var))
  {
    err_type_1 = ((RogueClassType*)((RogueType__organize__Scope( ROGUE_ARG(THIS->error_var->_type), scope_0 ))));
  }
  else
  {
    err_type_1 = ((RogueClassType*)((RogueType__organize__Scope( ROGUE_ARG(THIS->_error_type), scope_0 ))));
  }
  if (!(((RogueType__instance_of__Type( err_type_1, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1226] ))));
  }
  if (!!(THIS->error_var))
  {
    RogueScope__push_local__Local_Logical( scope_0, ROGUE_ARG(THIS->error_var), true );
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
    RogueScope__pop_local( scope_0 );
  }
  else
  {
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statements), scope_0, false );
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCatch__write_cpp__CPPWriter_Logical( RogueClassCmdCatch* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!!(THIS->error_var))
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1311] )))), ROGUE_ARG(THIS->error_var->_type->cpp_class_name) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->error_var) )))) )))), Rogue_literal_strings[628] );
  }
  else
  {
    RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1312] )))), ROGUE_ARG(THIS->_error_type->cpp_class_name) )))), Rogue_literal_strings[12] );
  }
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->statements), writer_0, false, false );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
}

RogueClassCmdCatch* RogueCmdCatch__init__Token_Local_Type_CmdStatementList( RogueClassCmdCatch* THIS, RogueClassToken* _auto_1326_0, RogueClassLocal* _auto_1327_1, RogueClassType* _auto_1328_2, RogueClassCmdStatementList* _auto_1329_3 )
{
  THIS->statements = _auto_1329_3;
  THIS->_error_type = _auto_1328_2;
  THIS->error_var = _auto_1327_1;
  THIS->t = _auto_1326_0;
  return (RogueClassCmdCatch*)(THIS);
}

RogueString* RogueArray_CmdCatch___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1126]);
}

RogueClassCmdAwait* RogueCmdAwait__init_object( RogueClassCmdAwait* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAwait*)(THIS);
}

RogueString* RogueCmdAwait__type_name( RogueClassCmdAwait* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1163]);
}

RogueClassCmd* RogueCmdAwait__cloned__CloneArgs( RogueClassCmdAwait* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1211] ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAwait*,ROGUE_CREATE_OBJECT(CmdAwait))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->expression), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))), ROGUE_ARG(((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statement_list), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) )))), ROGUE_ARG(THIS->result_var) ))))));
  }
}

RogueClassCmd* RogueCmdAwait__dispatch__Visitor( RogueClassCmdAwait* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) ))));
}

RogueClassCmd* RogueCmdAwait__resolve__Scope( RogueClassCmdAwait* THIS, RogueClassScope* scope_0 )
{
  if (!(((RogueMethod__is_task_conversion( ROGUE_ARG(scope_0->this_method) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1228] ))));
  }
  THIS->expression = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->expression), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,task_type_1,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->expression) ))));
  ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_result_2,(((RogueType__find_property__String( task_type_1, Rogue_literal_strings[437] )))));
  if (!!(THIS->result_var))
  {
    if (!!(p_result_2))
    {
      THIS->result_var->_type = p_result_2->_type;
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->expression->t), Rogue_literal_strings[1229] ))));
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueClassLocal*,task_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
  task_var_3->initial_value = THIS->expression;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), task_var_3, false )))))) );
  ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_while_4,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 8, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), task_var_3 )))))), Rogue_literal_strings[433] )))))), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_while_4->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), ROGUE_ARG(THIS->t) )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(cmd_while_4))) );
  if (!!(THIS->result_var))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->statement_list)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->result_var), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), task_var_3 )))))), p_result_2 )))))) )))))) );
  }
  RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->statement_list), scope_0, false );
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdBlock__resolve__Scope( ROGUE_ARG(((RogueCmdBlock__init__Token_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->statement_list), 0 )))), scope_0 ))))));
}

RogueClassCmdAwait* RogueCmdAwait__init__Token_Cmd_CmdStatementList_Local( RogueClassCmdAwait* THIS, RogueClassToken* _auto_1280_0, RogueClassCmd* _auto_1281_1, RogueClassCmdStatementList* _auto_1282_2, RogueClassLocal* _auto_1283_3 )
{
  THIS->result_var = _auto_1283_3;
  THIS->statement_list = _auto_1282_2;
  THIS->expression = _auto_1281_1;
  THIS->t = _auto_1280_0;
  return (RogueClassCmdAwait*)(THIS);
}

RogueClassCmdYield* RogueCmdYield__init_object( RogueClassCmdYield* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdYield*)(THIS);
}

RogueString* RogueCmdYield__type_name( RogueClassCmdYield* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1164]);
}

RogueClassCmd* RogueCmdYield__cloned__CloneArgs( RogueClassCmdYield* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    RogueTaskArgs__add_yield__Token( task_args_1, ROGUE_ARG(THIS->t) );
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdYield__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdYield*,ROGUE_CREATE_OBJECT(CmdYield))), ROGUE_ARG(THIS->t) ))))));
  }
}

RogueClassCmd* RogueCmdYield__dispatch__Visitor( RogueClassCmdYield* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) ))));
}

RogueClassCmd* RogueCmdYield__resolve__Scope( RogueClassCmdYield* THIS, RogueClassScope* scope_0 )
{
  if (!(((RogueMethod__is_task_conversion( ROGUE_ARG(scope_0->this_method) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1230] ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdControlStructure_List*,_auto_3569_1,(scope_0->control_stack));
    RogueInt32 _auto_3570_2 = (0);
    for (;_auto_3570_2 < _auto_3569_1->count;++_auto_3570_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,control_structure_3,(((RogueClassCmdControlStructure*)(_auto_3569_1->data->as_objects[_auto_3570_2]))));
      control_structure_3->contains_yield = true;
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdYield* RogueCmdYield__init__Token( RogueClassCmdYield* THIS, RogueClassToken* _auto_1284_0 )
{
  THIS->t = _auto_1284_0;
  return (RogueClassCmdYield*)(THIS);
}

RogueClassCmdThrow* RogueCmdThrow__init_object( RogueClassCmdThrow* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdThrow*)(THIS);
}

RogueString* RogueCmdThrow__type_name( RogueClassCmdThrow* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1165]);
}

RogueClassCmdThrow* RogueCmdThrow__cloned__CloneArgs( RogueClassCmdThrow* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdThrow*)(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->expression), clone_args_0 ))) ))));
}

RogueClassCmd* RogueCmdThrow__dispatch__Visitor( RogueClassCmdThrow* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdThrow( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdThrow__resolve__Scope( RogueClassCmdThrow* THIS, RogueClassScope* scope_0 )
{
  THIS->expression = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->expression), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,expression_type_1,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->expression) ))));
  RogueType__organize__Scope( expression_type_1, scope_0 );
  if (!(((RogueType__instance_of__Type( expression_type_1, ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->expression->t), Rogue_literal_strings[1231] ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdThrow__write_cpp__CPPWriter_Logical( RogueClassCmdThrow* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1314] )))), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->expression) ))->cpp_class_name) )))), Rogue_literal_strings[7] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->expression), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

RogueClassCmdThrow* RogueCmdThrow__init__Token_Cmd( RogueClassCmdThrow* THIS, RogueClassToken* _auto_1285_0, RogueClassCmd* _auto_1286_1 )
{
  THIS->expression = _auto_1286_1;
  THIS->t = _auto_1285_0;
  return (RogueClassCmdThrow*)(THIS);
}

RogueClassCmdLiteralString* RogueCmdLiteralString__init_object( RogueClassCmdLiteralString* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralString*)(THIS);
}

RogueString* RogueCmdLiteralString__to_String( RogueClassCmdLiteralString* THIS )
{
  return (RogueString*)(THIS->value);
}

RogueString* RogueCmdLiteralString__type_name( RogueClassCmdLiteralString* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1418]);
}

RogueClassCmd* RogueCmdLiteralString__cloned__CloneArgs( RogueClassCmdLiteralString* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value), ROGUE_ARG(THIS->index) ))))));
}

RogueClassCmd* RogueCmdLiteralString__dispatch__Visitor( RogueClassCmdLiteralString* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteralString( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdLiteralString__resolve__Scope( RogueClassCmdLiteralString* THIS, RogueClassScope* scope_0 )
{
  RogueType__resolve( ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralString__to_Logical( RogueClassCmdLiteralString* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralString__type( RogueClassCmdLiteralString* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

void RogueCmdLiteralString__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralString* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!!(THIS->value))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[756] )))), ROGUE_ARG(THIS->index) )))), Rogue_literal_strings[73] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[591] );
  }
}

RogueClassCmdLiteralString* RogueCmdLiteralString__init__Token_String_Int32( RogueClassCmdLiteralString* THIS, RogueClassToken* _auto_1287_0, RogueString* _auto_1288_1, RogueInt32 _auto_1289_2 )
{
  THIS->index = _auto_1289_2;
  THIS->value = _auto_1288_1;
  THIS->t = _auto_1287_0;
  return (RogueClassCmdLiteralString*)(THIS);
}

RogueClassCmdFormattedString* RogueCmdFormattedString__init_object( RogueClassCmdFormattedString* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdFormattedString*)(THIS);
}

RogueString* RogueCmdFormattedString__type_name( RogueClassCmdFormattedString* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1166]);
}

RogueClassCmd* RogueCmdFormattedString__cloned__CloneArgs( RogueClassCmdFormattedString* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdFormattedString__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdFormattedString*,ROGUE_CREATE_OBJECT(CmdFormattedString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->format), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

RogueClassCmd* RogueCmdFormattedString__dispatch__Visitor( RogueClassCmdFormattedString* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdFormattedString( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* RogueCmdFormattedString__implicit_type__Scope( RogueClassCmdFormattedString* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

RogueClassCmd* RogueCmdFormattedString__resolve__Scope( RogueClassCmdFormattedString* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_1,(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[379], ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,fmt_2,(THIS->format));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3571_4,(THIS->args));
    RogueInt32 _auto_3572_5 = (0);
    for (;_auto_3572_5 < _auto_3571_4->count;++_auto_3572_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_6,(((RogueClassCmd*)(_auto_3571_4->data->as_objects[_auto_3572_5]))));
      arg_6 = ((RogueClassCmd*)((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, arg_6, scope_0 ))) ))));
      RogueOptionalInt32 i_3 = (((RogueCmdFormattedString__locate_marker__String( ROGUE_ARG(THIS), fmt_2 ))));
      if (!(i_3.exists))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1232] ))));
      }
      if (i_3.value > 0)
      {
        cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[1233], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__leftmost__Int32( fmt_2, ROGUE_ARG(i_3.value) )))), 0 )))))) )))) ))));
        fmt_2 = ((RogueString*)((RogueString__from__Int32( fmt_2, ROGUE_ARG((i_3.value + 1)) ))));
      }
      else
      {
        fmt_2 = ((RogueString*)((RogueString__from__Int32( fmt_2, 1 ))));
      }
      cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[1233], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), Rogue_literal_strings[0], 0 )))))), arg_6 )))))))) )))) ))));
    }
  }
  if (!!(fmt_2->character_count))
  {
    if (((RogueCmdFormattedString__locate_marker__String( ROGUE_ARG(THIS), fmt_2 ))).exists)
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1234] ))));
    }
    cmd_1 = ((RogueClassCmdAccess*)((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(cmd_1))), Rogue_literal_strings[1233], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), fmt_2, 0 )))))) )))) ))));
  }
  return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueCmdAccess__resolve__Scope( cmd_1, scope_0 )))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String), scope_0, false, false ))), scope_0 )));
}

RogueClassType* Rogue_CmdFormattedString__type( RogueClassCmdFormattedString* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_String);
}

RogueClassCmdFormattedString* RogueCmdFormattedString__init__Token_String_CmdArgs( RogueClassCmdFormattedString* THIS, RogueClassToken* _auto_1290_0, RogueString* _auto_1291_1, RogueClassCmdArgs* _auto_1292_2 )
{
  THIS->args = _auto_1292_2;
  THIS->format = _auto_1291_1;
  THIS->t = _auto_1290_0;
  return (RogueClassCmdFormattedString*)(THIS);
}

RogueOptionalInt32 RogueCmdFormattedString__locate_marker__String( RogueClassCmdFormattedString* THIS, RogueString* fmt_0 )
{
  return (RogueOptionalInt32)(((RogueString__locate__Character_OptionalInt32( fmt_0, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
}

RogueClassCmdTrace* RogueCmdTrace__init_object( RogueClassCmdTrace* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdTrace*)(THIS);
}

RogueString* RogueCmdTrace__type_name( RogueClassCmdTrace* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1167]);
}

RogueClassCmdTrace* RogueCmdTrace__cloned__CloneArgs( RogueClassCmdTrace* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdTrace*)(((RogueCmdTrace__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTrace*,ROGUE_CREATE_OBJECT(CmdTrace))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->info), clone_args_0 )))) ))));
}

RogueClassCmd* RogueCmdTrace__dispatch__Visitor( RogueClassCmdTrace* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTrace( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdTrace__resolve__Scope( RogueClassCmdTrace* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[295] )))))), Rogue_literal_strings[1235], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->info) )))) )))), scope_0 ))));
}

RogueClassCmdTrace* RogueCmdTrace__init__Token_Cmd( RogueClassCmdTrace* THIS, RogueClassToken* _auto_1293_0, RogueClassCmd* _auto_1294_1 )
{
  THIS->info = _auto_1294_1;
  THIS->t = _auto_1293_0;
  return (RogueClassCmdTrace*)(THIS);
}

RogueClassCmdLocalDeclaration* RogueCmdLocalDeclaration__init_object( RogueClassCmdLocalDeclaration* THIS )
{
  RogueCmdStatement__init_object( ROGUE_ARG(((RogueClassCmdStatement*)THIS)) );
  return (RogueClassCmdLocalDeclaration*)(THIS);
}

RogueString* RogueCmdLocalDeclaration__type_name( RogueClassCmdLocalDeclaration* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1425]);
}

RogueClassCmd* RogueCmdLocalDeclaration__cloned__CloneArgs( RogueClassCmdLocalDeclaration* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,new_value_2,(THIS->local_info->initial_value));
    if (!!(new_value_2))
    {
      new_value_2 = ((RogueClassCmd*)(Rogue_call_ROGUEM146( 21, new_value_2, clone_args_0 )));
    }
    return (RogueClassCmd*)(((RogueTaskArgs__replace_write_local__Token_Local_Cmd( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), new_value_2 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->skip_initialization) ))))));
  }
}

RogueClassCmd* RogueCmdLocalDeclaration__dispatch__Visitor( RogueClassCmdLocalDeclaration* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLocalDeclaration( v_0, ROGUE_ARG(THIS) ))));
}

void RogueCmdLocalDeclaration__exit_scope__Scope( RogueClassCmdLocalDeclaration* THIS, RogueClassScope* scope_0 )
{
  RogueScope__pop_local( scope_0 );
}

RogueClassCmd* RogueCmdLocalDeclaration__resolve__Scope( RogueClassCmdLocalDeclaration* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->local_info->initial_value))
  {
    THIS->local_info->initial_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->local_info->initial_value), scope_0 ));
    ROGUE_DEF_LOCAL_REF(RogueClassType*,initial_value_type_1,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->local_info->initial_value) ))));
    if (((void*)THIS->local_info->_type) == ((void*)NULL))
    {
      THIS->local_info->_type = initial_value_type_1;
    }
  }
  if (((void*)THIS->local_info->_type) == ((void*)NULL))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1236] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[1237] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[391] )))) )))) ))));
  }
  if (!!(THIS->local_info->initial_value))
  {
    THIS->local_info->initial_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->local_info->initial_value), ROGUE_ARG(THIS->local_info->_type), scope_0, false, false ))), scope_0 ));
  }
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  RogueScope__push_local__Local_Logical( scope_0, ROGUE_ARG(THIS->local_info), true );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdLocalDeclaration__write_cpp__CPPWriter_Logical( RogueClassCmdLocalDeclaration* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (((RogueType__is_reference( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    if (THIS->skip_initialization)
    {
      RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1315] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[12] );
    }
    else if (!!(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[737] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[7] )))))
    {
      if (!!(THIS->local_info->initial_value))
      {
        RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->local_info->initial_value) ))), ROGUE_ARG(THIS->local_info->_type) );
        Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->local_info->initial_value), writer_0, false );
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
      }
      else
      {
        RogueCPPWriter__print_default_value__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) );
      }
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
    }
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
    if (!(THIS->skip_initialization))
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[632] );
      if (!!(THIS->local_info->initial_value))
      {
        RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->local_info->initial_value) ))), ROGUE_ARG(THIS->local_info->_type) );
        Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->local_info->initial_value), writer_0, false );
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
      }
      else
      {
        RogueCPPWriter__print_default_value__Type( writer_0, ROGUE_ARG(THIS->local_info->_type) );
      }
    }
  }
}

RogueClassCmdLocalDeclaration* RogueCmdLocalDeclaration__init__Token_Local_Logical( RogueClassCmdLocalDeclaration* THIS, RogueClassToken* _auto_1295_0, RogueClassLocal* _auto_1296_1, RogueLogical _auto_1297_2 )
{
  THIS->skip_initialization = _auto_1297_2;
  THIS->local_info = _auto_1296_1;
  THIS->t = _auto_1295_0;
  return (RogueClassCmdLocalDeclaration*)(THIS);
}

RogueClassCmdAssert* RogueCmdAssert__init_object( RogueClassCmdAssert* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAssert*)(THIS);
}

RogueString* RogueCmdAssert__type_name( RogueClassCmdAssert* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1168]);
}

RogueClassCmdAssert* RogueCmdAssert__cloned__CloneArgs( RogueClassCmdAssert* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdAssert*)(((RogueCmdAssert__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssert*,ROGUE_CREATE_OBJECT(CmdAssert))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->message), clone_args_0 ))), ROGUE_ARG(THIS->local_info) ))));
}

RogueClassCmd* RogueCmdAssert__dispatch__Visitor( RogueClassCmdAssert* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdAssert( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdAssert__resolve__Scope( RogueClassCmdAssert* THIS, RogueClassScope* scope_0 )
{
  THIS->condition = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->condition), scope_0 ));
  THIS->local_info->_type = (Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->condition) ));
  THIS->message = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->message), scope_0 ))) )));
  THIS->error = ((RogueCmdThrow__resolve__Scope( ROGUE_ARG(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[1238], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->message) )))) )))))) )))), scope_0 )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAssert__type( RogueClassCmdAssert* THIS )
{
  return (RogueClassType*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->condition) )));
}

void RogueCmdAssert__write_cpp__CPPWriter_Logical( RogueClassCmdAssert* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[160] );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->condition), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1316] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[152] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->error), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

RogueClassCmdAssert* RogueCmdAssert__init__Token_Cmd_Cmd_Local( RogueClassCmdAssert* THIS, RogueClassToken* _auto_1298_0, RogueClassCmd* _auto_1299_1, RogueClassCmd* _auto_1300_2, RogueClassLocal* _auto_1301_3 )
{
  THIS->local_info = _auto_1301_3;
  THIS->message = _auto_1300_2;
  THIS->condition = _auto_1299_1;
  THIS->t = _auto_1298_0;
  return (RogueClassCmdAssert*)(THIS);
}

RogueClassCmdEscape* RogueCmdEscape__init_object( RogueClassCmdEscape* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdEscape*)(THIS);
}

RogueString* RogueCmdEscape__type_name( RogueClassCmdEscape* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1169]);
}

RogueClassCmd* RogueCmdEscape__cloned__CloneArgs( RogueClassCmdEscape* THIS, RogueClassCloneArgs* clone_args_0 )
{
  if (!!(THIS->target_cmd->task_escape_section))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    return (RogueClassCmd*)(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->task_escape_section) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_2,(THIS->target_cmd));
    while (!!(new_target_2->cloned_command))
    {
      new_target_2 = ((RogueClassCmdControlStructure*)new_target_2->cloned_command);
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdEscape__init__Token_Int32_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEscape*,ROGUE_CREATE_OBJECT(CmdEscape))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_control_type), new_target_2 ))))));
  }
}

RogueClassCmd* RogueCmdEscape__dispatch__Visitor( RogueClassCmdEscape* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdEscape( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdEscape__resolve__Scope( RogueClassCmdEscape* THIS, RogueClassScope* scope_0 )
{
  RogueInt32 i_1 = (scope_0->control_stack->count);
  while (i_1 > 0)
  {
    --i_1;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->as_objects[i_1]))));
    if (cmd_2->_control_type == THIS->_control_type)
    {
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      if (!(!!(cmd_2->escape_label)))
      {
        cmd_2->escape_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
        cmd_2->escape_label_used = true;
      }
      THIS->target_cmd = cmd_2;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1239] ))));
}

void RogueCmdEscape__write_cpp__CPPWriter_Logical( RogueClassCmdEscape* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1307], ROGUE_ARG(THIS->target_cmd->escape_label) )))) );
}

RogueClassCmdEscape* RogueCmdEscape__init__Token_Int32_CmdControlStructure( RogueClassCmdEscape* THIS, RogueClassToken* _auto_1302_0, RogueInt32 _auto_1303_1, RogueClassCmdControlStructure* _auto_1304_2 )
{
  THIS->target_cmd = _auto_1304_2;
  THIS->_control_type = _auto_1303_1;
  THIS->t = _auto_1302_0;
  return (RogueClassCmdEscape*)(THIS);
}

RogueClassCmdNextIteration* RogueCmdNextIteration__init_object( RogueClassCmdNextIteration* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNextIteration*)(THIS);
}

RogueString* RogueCmdNextIteration__type_name( RogueClassCmdNextIteration* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1170]);
}

RogueClassCmd* RogueCmdNextIteration__cloned__CloneArgs( RogueClassCmdNextIteration* THIS, RogueClassCloneArgs* clone_args_0 )
{
  if (!!(THIS->target_cmd->task_upkeep_section))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    return (RogueClassCmd*)(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->task_upkeep_section) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_2,(THIS->target_cmd));
    while (!!(new_target_2->cloned_command))
    {
      new_target_2 = ((RogueClassCmdControlStructure*)new_target_2->cloned_command);
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNextIteration__init__Token_CmdControlStructure( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNextIteration*,ROGUE_CREATE_OBJECT(CmdNextIteration))), ROGUE_ARG(THIS->t), new_target_2 ))))));
  }
}

RogueClassCmd* RogueCmdNextIteration__dispatch__Visitor( RogueClassCmdNextIteration* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdNextIteration( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdNextIteration__resolve__Scope( RogueClassCmdNextIteration* THIS, RogueClassScope* scope_0 )
{
  RogueInt32 i_1 = (scope_0->control_stack->count);
  while (i_1 > 0)
  {
    --i_1;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->as_objects[i_1]))));
    if (cmd_2->_control_type >= 6)
    {
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      if (!(!!(cmd_2->upkeep_label)))
      {
        cmd_2->upkeep_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      THIS->target_cmd = cmd_2;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1240] ))));
}

void RogueCmdNextIteration__write_cpp__CPPWriter_Logical( RogueClassCmdNextIteration* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1317] );
}

RogueClassCmdNextIteration* RogueCmdNextIteration__init__Token_CmdControlStructure( RogueClassCmdNextIteration* THIS, RogueClassToken* _auto_1305_0, RogueClassCmdControlStructure* _auto_1306_1 )
{
  THIS->target_cmd = _auto_1306_1;
  THIS->t = _auto_1305_0;
  return (RogueClassCmdNextIteration*)(THIS);
}

RogueClassCmdNecessary* RogueCmdNecessary__init_object( RogueClassCmdNecessary* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNecessary*)(THIS);
}

RogueString* RogueCmdNecessary__type_name( RogueClassCmdNecessary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1171]);
}

RogueClassCmd* RogueCmdNecessary__cloned__CloneArgs( RogueClassCmdNecessary* THIS, RogueClassCloneArgs* clone_args_0 )
{
  if (!!(THIS->target_cmd->unsatisfied_section))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_jump_2,(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->unsatisfied_section) )))));
    if (!!(THIS->condition))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->condition), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) )))))))), ROGUE_ARG(((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), cmd_jump_2 )))), 2 ))))));
    }
    else
    {
      return (RogueClassCmd*)(cmd_jump_2);
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_3,(((RogueClassCmdControlStructure*)(THIS->target_cmd))));
    while (!!(new_target_3->cloned_command))
    {
      new_target_3 = ((RogueClassCmdControlStructure*)new_target_3->cloned_command);
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdNecessary__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNecessary*,ROGUE_CREATE_OBJECT(CmdNecessary))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdContingent*)(RogueObject_as(new_target_3,RogueTypeCmdContingent)))) ))))));
  }
}

RogueClassCmd* RogueCmdNecessary__dispatch__Visitor( RogueClassCmdNecessary* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdNecessary( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdNecessary__resolve__Scope( RogueClassCmdNecessary* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->condition))
  {
    THIS->condition = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->condition), scope_0 ));
  }
  RogueInt32 i_1 = (scope_0->control_stack->count);
  while (i_1 > 0)
  {
    --i_1;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->as_objects[i_1]))));
    if (cmd_2->_control_type == 1)
    {
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_3,(((RogueClassCmdContingent*)(RogueObject_as(cmd_2,RogueTypeCmdContingent)))));
      if (!(!!(cmd_contingent_3->unsatisfied_label)))
      {
        cmd_contingent_3->unsatisfied_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      THIS->target_cmd = cmd_contingent_3;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1241] ))));
}

void RogueCmdNecessary__write_cpp__CPPWriter_Logical( RogueClassCmdNecessary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1318] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->condition), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1319] )))), ROGUE_ARG(THIS->target_cmd->unsatisfied_label) );
}

RogueClassCmdNecessary* RogueCmdNecessary__init__Token_Cmd_CmdContingent( RogueClassCmdNecessary* THIS, RogueClassToken* _auto_1307_0, RogueClassCmd* _auto_1308_1, RogueClassCmdContingent* _auto_1309_2 )
{
  THIS->target_cmd = _auto_1309_2;
  THIS->condition = _auto_1308_1;
  THIS->t = _auto_1307_0;
  return (RogueClassCmdNecessary*)(THIS);
}

RogueClassCmdSufficient* RogueCmdSufficient__init_object( RogueClassCmdSufficient* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdSufficient*)(THIS);
}

RogueString* RogueCmdSufficient__type_name( RogueClassCmdSufficient* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1172]);
}

RogueClassCmd* RogueCmdSufficient__cloned__CloneArgs( RogueClassCmdSufficient* THIS, RogueClassCloneArgs* clone_args_0 )
{
  if (!!(THIS->target_cmd->satisfied_section))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_jump_2,(((RogueTaskArgs__create_escape__Token_CmdTaskControlSection( task_args_1, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->target_cmd->satisfied_section) )))));
    if (!!(THIS->condition))
    {
      return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdIf__init__Token_Cmd_CmdStatementList_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->condition), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))), ROGUE_ARG(((RogueCmdStatementList__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))), cmd_jump_2 )))), 2 ))))));
    }
    else
    {
      return (RogueClassCmd*)(cmd_jump_2);
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,new_target_3,(((RogueClassCmdControlStructure*)(THIS->target_cmd))));
    while (!!(new_target_3->cloned_command))
    {
      new_target_3 = ((RogueClassCmdControlStructure*)new_target_3->cloned_command);
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdSufficient__init__Token_Cmd_CmdContingent( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSufficient*,ROGUE_CREATE_OBJECT(CmdSufficient))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->condition), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdContingent*)(RogueObject_as(new_target_3,RogueTypeCmdContingent)))) ))))));
  }
}

RogueClassCmd* RogueCmdSufficient__dispatch__Visitor( RogueClassCmdSufficient* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdSufficient( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdSufficient__resolve__Scope( RogueClassCmdSufficient* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->condition))
  {
    THIS->condition = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->condition), scope_0 ));
  }
  RogueInt32 i_1 = (scope_0->control_stack->count);
  while (i_1 > 0)
  {
    --i_1;
    ROGUE_DEF_LOCAL_REF(RogueClassCmdControlStructure*,cmd_2,(((RogueClassCmdControlStructure*)(scope_0->control_stack->data->as_objects[i_1]))));
    if (cmd_2->_control_type == 1)
    {
      while (!!(cmd_2->cloned_command))
      {
        cmd_2 = ((RogueClassCmdControlStructure*)cmd_2->cloned_command);
      }
      ROGUE_DEF_LOCAL_REF(RogueClassCmdContingent*,cmd_contingent_3,(((RogueClassCmdContingent*)(RogueObject_as(cmd_2,RogueTypeCmdContingent)))));
      if (!(!!(cmd_contingent_3->satisfied_label)))
      {
        cmd_contingent_3->satisfied_label = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
      }
      THIS->target_cmd = cmd_contingent_3;
      return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
    }
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1241] ))));
}

void RogueCmdSufficient__write_cpp__CPPWriter_Logical( RogueClassCmdSufficient* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1304] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->condition), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1320] )))), ROGUE_ARG(THIS->target_cmd->satisfied_label) );
}

RogueClassCmdSufficient* RogueCmdSufficient__init__Token_Cmd_CmdContingent( RogueClassCmdSufficient* THIS, RogueClassToken* _auto_1310_0, RogueClassCmd* _auto_1311_1, RogueClassCmdContingent* _auto_1312_2 )
{
  THIS->target_cmd = _auto_1312_2;
  THIS->condition = _auto_1311_1;
  THIS->t = _auto_1310_0;
  return (RogueClassCmdSufficient*)(THIS);
}

RogueClassCmdAdjust* RogueCmdAdjust__init_object( RogueClassCmdAdjust* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAdjust*)(THIS);
}

RogueString* RogueCmdAdjust__type_name( RogueClassCmdAdjust* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1173]);
}

RogueClassCmd* RogueCmdAdjust__dispatch__Visitor( RogueClassCmdAdjust* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) ))));
}

RogueClassCmd* RogueCmdAdjust__resolve__Scope( RogueClassCmdAdjust* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  return (RogueClassCmd*)((Rogue_call_ROGUEM155( 45, ROGUE_ARG(THIS->operand), scope_0, ROGUE_ARG(THIS->delta) )));
}

RogueClassCmdAdjust* RogueCmdAdjust__init__Token_Cmd_Int32( RogueClassCmdAdjust* THIS, RogueClassToken* _auto_1313_0, RogueClassCmd* _auto_1314_1, RogueInt32 _auto_1315_2 )
{
  THIS->delta = _auto_1315_2;
  THIS->operand = _auto_1314_1;
  THIS->t = _auto_1313_0;
  return (RogueClassCmdAdjust*)(THIS);
}

RogueClassCmdAssign* RogueCmdAssign__init_object( RogueClassCmdAssign* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAssign*)(THIS);
}

RogueString* RogueCmdAssign__type_name( RogueClassCmdAssign* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1174]);
}

RogueClassCmd* RogueCmdAssign__cloned__CloneArgs( RogueClassCmdAssign* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->target), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdAssign__dispatch__Visitor( RogueClassCmdAssign* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdAssign( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdAssign__resolve__Scope( RogueClassCmdAssign* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM154( 44, ROGUE_ARG(THIS->target), scope_0, ROGUE_ARG(THIS->new_value) )));
}

RogueClassCmdAssign* RogueCmdAssign__init__Token_Cmd_Cmd( RogueClassCmdAssign* THIS, RogueClassToken* _auto_1316_0, RogueClassCmd* _auto_1317_1, RogueClassCmd* _auto_1318_2 )
{
  THIS->new_value = _auto_1318_2;
  THIS->target = _auto_1317_1;
  THIS->t = _auto_1316_0;
  return (RogueClassCmdAssign*)(THIS);
}

RogueClassCmdModifyAndAssign* RogueCmdModifyAndAssign__init_object( RogueClassCmdModifyAndAssign* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdModifyAndAssign*)(THIS);
}

RogueString* RogueCmdModifyAndAssign__type_name( RogueClassCmdModifyAndAssign* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1175]);
}

RogueClassCmd* RogueCmdModifyAndAssign__cloned__CloneArgs( RogueClassCmdModifyAndAssign* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->target), clone_args_0 ))), ROGUE_ARG(THIS->op), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdModifyAndAssign__dispatch__Visitor( RogueClassCmdModifyAndAssign* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdModifyAndAssign( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdModifyAndAssign__resolve__Scope( RogueClassCmdModifyAndAssign* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM156( 46, ROGUE_ARG(THIS->target), scope_0, ROGUE_ARG(THIS->op), ROGUE_ARG(THIS->new_value) )));
}

RogueClassCmdModifyAndAssign* RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( RogueClassCmdModifyAndAssign* THIS, RogueClassToken* _auto_1319_0, RogueClassCmd* _auto_1320_1, RogueClassTokenType* _auto_1321_2, RogueClassCmd* _auto_1322_3 )
{
  THIS->new_value = _auto_1322_3;
  THIS->op = _auto_1321_2;
  THIS->target = _auto_1320_1;
  THIS->t = _auto_1319_0;
  return (RogueClassCmdModifyAndAssign*)(THIS);
}

RogueClassCmdTryExpression* RogueCmdTryExpression__init_object( RogueClassCmdTryExpression* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdTryExpression*)(THIS);
}

RogueString* RogueCmdTryExpression__type_name( RogueClassCmdTryExpression* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1178]);
}

RogueClassCmd* RogueCmdTryExpression__cloned__CloneArgs( RogueClassCmdTryExpression* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdTryExpression__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTryExpression*,ROGUE_CREATE_OBJECT(CmdTryExpression))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->try_expression), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->else_expression), clone_args_0 ))), ROGUE_ARG(THIS->result_var) ))))));
}

RogueClassCmd* RogueCmdTryExpression__dispatch__Visitor( RogueClassCmdTryExpression* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTryExpression( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* RogueCmdTryExpression__implicit_type__Scope( RogueClassCmdTryExpression* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)((Rogue_call_ROGUEM151( 34, ROGUE_ARG(THIS->try_expression), scope_0 )));
}

RogueClassCmd* RogueCmdTryExpression__resolve__Scope( RogueClassCmdTryExpression* THIS, RogueClassScope* scope_0 )
{
  THIS->try_expression = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->try_expression), scope_0 ))) )));
  THIS->else_expression = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->else_expression), scope_0 ))) )));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,try_type_1,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->try_expression) ))));
  if (((void*)(Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->else_expression) ))) != ((void*)try_type_1))
  {
    THIS->else_expression = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->else_expression), try_type_1, scope_0, false, false ))), scope_0 ));
  }
  THIS->result_var->_type = try_type_1;
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTry*,cmd_try_2,(((RogueCmdTry__init__Token_CmdStatementList_CmdCatch_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTry*,ROGUE_CREATE_OBJECT(CmdTry))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmdStatementList__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdStatementList*,ROGUE_CREATE_OBJECT(CmdStatementList))) )))), ROGUE_ARG(((RogueCmdCatch_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdCatch_List*,ROGUE_CREATE_OBJECT(CmdCatch_List))) )))) )))));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_try_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->result_var), ROGUE_ARG(THIS->try_expression) )))))) );
  ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,cmd_catch_3,(((RogueCmdTry__add_catch__Token( cmd_try_2, ROGUE_ARG(THIS->t) )))));
  cmd_catch_3->_error_type = ((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Exception;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_catch_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->result_var), ROGUE_ARG(THIS->else_expression) )))))) );
  return (RogueClassCmd*)(((RogueCmdTry__resolve__Scope( cmd_try_2, scope_0 ))));
}

RogueClassCmdTryExpression* RogueCmdTryExpression__init__Token_Cmd_Cmd_Local( RogueClassCmdTryExpression* THIS, RogueClassToken* _auto_1330_0, RogueClassCmd* _auto_1331_1, RogueClassCmd* _auto_1332_2, RogueClassLocal* _auto_1333_3 )
{
  THIS->result_var = _auto_1333_3;
  THIS->else_expression = _auto_1332_2;
  THIS->try_expression = _auto_1331_1;
  THIS->t = _auto_1330_0;
  return (RogueClassCmdTryExpression*)(THIS);
}

RogueClassCmdReadLocal* RogueCmdReadLocal__init_object( RogueClassCmdReadLocal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadLocal*)(THIS);
}

RogueString* RogueCmdReadLocal__to_String( RogueClassCmdReadLocal* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[940] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->original_name) )))) )))), Rogue_literal_strings[941] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->_type->name) )))) )))), Rogue_literal_strings[942] )))) ))));
}

RogueString* RogueCmdReadLocal__type_name( RogueClassCmdReadLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1179]);
}

RogueClassCmd* RogueCmdReadLocal__cloned__CloneArgs( RogueClassCmdReadLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_read_local__CmdReadLocal( macro_args_1, ROGUE_ARG(THIS) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    if (!!(task_args_2))
    {
      return (RogueClassCmd*)(((RogueTaskArgs__cmd_read__Token_Local( task_args_2, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) ))))));
}

RogueClassCmd* RogueCmdReadLocal__dispatch__Visitor( RogueClassCmdReadLocal* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM1065( 59, v_0, ROGUE_ARG(THIS) )));
}

RogueClassCmd* RogueCmdReadLocal__resolve__Scope( RogueClassCmdReadLocal* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadLocal__resolve_adjust__Scope_Int32( RogueClassCmdReadLocal* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)(((RogueCmdAdjustLocal__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadLocal__type( RogueClassCmdReadLocal* THIS )
{
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdReadLocal__write_cpp__CPPWriter_Logical( RogueClassCmdReadLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
}

RogueClassCmdReadLocal* RogueCmdReadLocal__init__Token_Local( RogueClassCmdReadLocal* THIS, RogueClassToken* _auto_1334_0, RogueClassLocal* _auto_1335_1 )
{
  THIS->local_info = _auto_1335_1;
  THIS->t = _auto_1334_0;
  return (RogueClassCmdReadLocal*)(THIS);
}

RogueClassCmdAdjustLocal* RogueCmdAdjustLocal__init_object( RogueClassCmdAdjustLocal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAdjustLocal*)(THIS);
}

RogueString* RogueCmdAdjustLocal__type_name( RogueClassCmdAdjustLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1180]);
}

RogueClassCmd* RogueCmdAdjustLocal__cloned__CloneArgs( RogueClassCmdAdjustLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjust__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjust*,ROGUE_CREATE_OBJECT(CmdAdjust))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueTaskArgs__cmd_read_this__Token( task_args_1, ROGUE_ARG(THIS->t) )))), ROGUE_ARG(((RogueTaskArgs__convert_local_name__Local( task_args_1, ROGUE_ARG(THIS->local_info) )))) )))))), ROGUE_ARG(THIS->delta) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->delta) ))))));
  }
}

RogueClassCmd* RogueCmdAdjustLocal__dispatch__Visitor( RogueClassCmdAdjustLocal* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdAdjustLocal( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdAdjustLocal__resolve__Scope( RogueClassCmdAdjustLocal* THIS, RogueClassScope* scope_0 )
{
  if (((RogueType__is_compound( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), Rogue_literal_strings[786], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustLocal__type( RogueClassCmdAdjustLocal* THIS )
{
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdAdjustLocal__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[177] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
}

RogueClassCmdAdjustLocal* RogueCmdAdjustLocal__init__Token_Local_Int32( RogueClassCmdAdjustLocal* THIS, RogueClassToken* _auto_1348_0, RogueClassLocal* _auto_1349_1, RogueInt32 _auto_1350_2 )
{
  THIS->delta = _auto_1350_2;
  THIS->local_info = _auto_1349_1;
  THIS->t = _auto_1348_0;
  return (RogueClassCmdAdjustLocal*)(THIS);
}

RogueClassCmdCompareLE* RogueCmdCompareLE__init_object( RogueClassCmdCompareLE* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareLE*)(THIS);
}

RogueString* RogueCmdCompareLE__type_name( RogueClassCmdCompareLE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1479]);
}

RogueClassCmd* RogueCmdCompareLE__cloned__CloneArgs( RogueClassCmdCompareLE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareLE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLE*,ROGUE_CREATE_OBJECT(CmdCompareLE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareLE__combine_literal_operands__Type( RogueClassCmdCompareLE* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value <= ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value <= ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdCompareLE__dispatch__Visitor( RogueClassCmdCompareLE* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdCompareLE__symbol( RogueClassCmdCompareLE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[165]);
}

RogueClassCmd* RogueCmdCompareLE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareLE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[776], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1487], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[784], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[778], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[782], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[776], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, 0 ))));
}

RogueClassCmdComparison* RogueCmdComparison__init_object( RogueClassCmdComparison* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdComparison*)(THIS);
}

RogueString* RogueCmdComparison__type_name( RogueClassCmdComparison* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1455]);
}

RogueClassCmd* RogueCmdComparison__dispatch__Visitor( RogueClassCmdComparison* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueClassType* Rogue_CmdComparison__type( RogueClassCmdComparison* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueLogical RogueCmdComparison__requires_parens( RogueClassCmdComparison* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdComparison__resolve_for_types__Scope_Type_Type( RogueClassCmdComparison* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  THIS->resolved = true;
  if ((((RogueType__is_compound( left_type_1 ))) || ((RogueType__is_compound( right_type_2 )))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_3,((Rogue_call_ROGUEM689( 59, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2, false ))));
    if (!!(result_3))
    {
      return (RogueClassCmd*)(result_3);
    }
    if (((void*)left_type_1) == ((void*)right_type_2))
    {
      if ((RogueObject_instance_of(THIS,RogueTypeCmdCompareEQ) || RogueObject_instance_of(THIS,RogueTypeCmdCompareNE)))
      {
        return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
      }
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1448] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[1449] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[1450] )))) )))) ))));
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1451] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[445] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
    }
  }
  else if ((((RogueType__is_reference( left_type_1 ))) || ((RogueType__is_reference( right_type_2 )))))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM689( 59, ROGUE_ARG(THIS), scope_0, left_type_1, right_type_2, true )));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_4,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), left_type_1, right_type_2 )))));
  THIS->left = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->left), common_type_4, scope_0, false, false ))), scope_0 ));
  THIS->right = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->right), common_type_4, scope_0, false, false ))), scope_0 ));
  if (((Rogue_call_ROGUEM150( 36, ROGUE_ARG(THIS->left) )) && (Rogue_call_ROGUEM150( 36, ROGUE_ARG(THIS->right) ))))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM147( 25, ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_4 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdComparison__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdComparison* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1447] ))));
}

RogueClassCmdRange* RogueCmdRange__init_object( RogueClassCmdRange* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdRange*)(THIS);
}

RogueString* RogueCmdRange__type_name( RogueClassCmdRange* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1181]);
}

RogueClassCmd* RogueCmdRange__dispatch__Visitor( RogueClassCmdRange* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdRange__resolve__Scope( RogueClassCmdRange* THIS, RogueClassScope* scope_0 )
{
  THIS->first = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->first), scope_0 ))) )));
  THIS->last = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->last), scope_0 ))) )));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,range_type_1,(((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->first) ))), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->last) ))) )))));
  if (!!(THIS->step_size))
  {
    THIS->step_size = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->step_size), scope_0 ));
    range_type_1 = ((RogueClassType*)((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), range_type_1, ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->step_size) ))) ))));
  }
  else
  {
    THIS->step_size = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(((RogueCmdLiteralInt32__cast_to__Type_Scope_Logical_Logical( ROGUE_ARG(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM694( 52, ROGUE_ARG(THIS) ))) )))), range_type_1, scope_0, false, false )))), scope_0 ))) )));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,(Rogue_literal_strings[1244]));
  if (RogueObject_instance_of(THIS,RogueTypeCmdRangeUpToLessThan))
  {
    name_2 = ((RogueString*)Rogue_literal_strings[1245]);
  }
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_2 )))) )))), Rogue_literal_strings[172] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(range_type_1))) )))) )))), Rogue_literal_strings[75] )))) )))), ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->first), ROGUE_ARG(THIS->last), ROGUE_ARG(THIS->step_size) )))) )))), scope_0 ))));
}

RogueClassCmdRange* RogueCmdRange__init__Token_Cmd_Cmd_Cmd( RogueClassCmdRange* THIS, RogueClassToken* _auto_1353_0, RogueClassCmd* _auto_1354_1, RogueClassCmd* _auto_1355_2, RogueClassCmd* _auto_1356_3 )
{
  THIS->step_size = _auto_1356_3;
  THIS->last = _auto_1355_2;
  THIS->first = _auto_1354_1;
  THIS->t = _auto_1353_0;
  return (RogueClassCmdRange*)(THIS);
}

RogueInt32 RogueCmdRange__default_step_size( RogueClassCmdRange* THIS )
{
  return (RogueInt32)(1);
}

RogueClassCmdModifyAndAssignLocal* RogueCmdModifyAndAssignLocal__init_object( RogueClassCmdModifyAndAssignLocal* THIS )
{
  RogueCmdResolvedModifyAndAssign__init_object( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) );
  return (RogueClassCmdModifyAndAssignLocal*)(THIS);
}

RogueString* RogueCmdModifyAndAssignLocal__type_name( RogueClassCmdModifyAndAssignLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1491]);
}

RogueClassCmd* RogueCmdModifyAndAssignLocal__cloned__CloneArgs( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_1,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_1))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(task_args_1->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->name) )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(THIS->local_info->index) )))) )))) )))) )))))), ROGUE_ARG(THIS->op), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), ROGUE_ARG(((RogueClassCloneArgs*)(task_args_1))) ))) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignLocal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(THIS->op), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
  }
}

RogueClassCmd* RogueCmdModifyAndAssignLocal__dispatch__Visitor( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdModifyAndAssignLocal( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdModifyAndAssignLocal__resolve__Scope( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[452], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  if (((RogueType__is_reference( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->local_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->local_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->local_info->_type->global_method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info->_type->name) )))))), m_name_1, ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(THIS->new_value) )))) )))))) )))), scope_0 ))));
      }
      else if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))->global_method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))->name) )))))), m_name_1, ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(THIS->new_value) )))) )))))) )))), scope_0 ))));
      }
      else
      {
        ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_2,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->new_value) ))));
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1246] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->local_info->_type))) )))) )))), Rogue_literal_strings[1247] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1248] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(arg_type_2->name) )))) )))), Rogue_literal_strings[1249] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1250] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(arg_type_2->name) )))) )))), Rogue_literal_strings[1251] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1252] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->local_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_3573_4,(THIS->op));
    if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3573_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) )))
    {
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3573_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) )))
    {
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3573_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) )))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      if (!(!!(access_3)))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1253] ))));
      }
      if (!!(access_3->context))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1254] ))));
      }
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info) )))));
      return (RogueClassCmd*)(((RogueCmdWriteLocal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->local_info->_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignLocal__type( RogueClassCmdModifyAndAssignLocal* THIS )
{
  return (RogueClassType*)(THIS->local_info->_type);
}

void RogueCmdModifyAndAssignLocal__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[620] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignLocal* RogueCmdModifyAndAssignLocal__init__Token_Local_TokenType_Cmd( RogueClassCmdModifyAndAssignLocal* THIS, RogueClassToken* _auto_1357_0, RogueClassLocal* _auto_1358_1, RogueClassTokenType* _auto_1359_2, RogueClassCmd* _auto_1360_3 )
{
  THIS->new_value = _auto_1360_3;
  THIS->op = _auto_1359_2;
  THIS->local_info = _auto_1358_1;
  THIS->t = _auto_1357_0;
  return (RogueClassCmdModifyAndAssignLocal*)(THIS);
}

RogueClassCmdResolvedModifyAndAssign* RogueCmdResolvedModifyAndAssign__init_object( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdResolvedModifyAndAssign*)(THIS);
}

RogueString* RogueCmdResolvedModifyAndAssign__type_name( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1182]);
}

RogueClassCmd* RogueCmdResolvedModifyAndAssign__dispatch__Visitor( RogueClassCmdResolvedModifyAndAssign* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) ))));
}

RogueString* RogueCmdResolvedModifyAndAssign__symbol( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  if (((void*)THIS->op) == ((void*)RogueTokenType_symbol_tilde_equals))
  {
    return (RogueString*)(Rogue_literal_strings[151]);
  }
  return (RogueString*)(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) ))));
}

RogueString* RogueCmdResolvedModifyAndAssign__cpp_symbol( RogueClassCmdResolvedModifyAndAssign* THIS )
{
  return (RogueString*)(((RogueCmdResolvedModifyAndAssign__symbol( ROGUE_ARG(THIS) ))));
}

RogueClassCmdRangeUpTo* RogueCmdRangeUpTo__init_object( RogueClassCmdRangeUpTo* THIS )
{
  RogueCmdRange__init_object( ROGUE_ARG(((RogueClassCmdRange*)THIS)) );
  return (RogueClassCmdRangeUpTo*)(THIS);
}

RogueString* RogueCmdRangeUpTo__type_name( RogueClassCmdRangeUpTo* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1488]);
}

RogueClassCmd* RogueCmdRangeUpTo__cloned__CloneArgs( RogueClassCmdRangeUpTo* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeUpTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpTo*,ROGUE_CREATE_OBJECT(CmdRangeUpTo)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

RogueClassCmd* RogueCmdRangeUpTo__dispatch__Visitor( RogueClassCmdRangeUpTo* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) ))));
}

RogueClassCmdRangeUpToLessThan* RogueCmdRangeUpToLessThan__init_object( RogueClassCmdRangeUpToLessThan* THIS )
{
  RogueCmdRange__init_object( ROGUE_ARG(((RogueClassCmdRange*)THIS)) );
  return (RogueClassCmdRangeUpToLessThan*)(THIS);
}

RogueString* RogueCmdRangeUpToLessThan__type_name( RogueClassCmdRangeUpToLessThan* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1489]);
}

RogueClassCmd* RogueCmdRangeUpToLessThan__cloned__CloneArgs( RogueClassCmdRangeUpToLessThan* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeUpToLessThan*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeUpToLessThan*,ROGUE_CREATE_OBJECT(CmdRangeUpToLessThan)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

RogueClassCmd* RogueCmdRangeUpToLessThan__dispatch__Visitor( RogueClassCmdRangeUpToLessThan* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) ))));
}

RogueClassCmdCompareLT* RogueCmdCompareLT__init_object( RogueClassCmdCompareLT* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareLT*)(THIS);
}

RogueString* RogueCmdCompareLT__type_name( RogueClassCmdCompareLT* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1480]);
}

RogueClassCmd* RogueCmdCompareLT__cloned__CloneArgs( RogueClassCmdCompareLT* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareLT__combine_literal_operands__Type( RogueClassCmdCompareLT* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value < ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value < ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdCompareLT__dispatch__Visitor( RogueClassCmdCompareLT* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdCompareLT__symbol( RogueClassCmdCompareLT* THIS )
{
  return (RogueString*)(Rogue_literal_strings[166]);
}

RogueClassCmd* RogueCmdCompareLT__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareLT* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[782], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1487], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[778], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[784], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[776], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[782], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, 0 ))));
}

RogueClassCmdCompareGE* RogueCmdCompareGE__init_object( RogueClassCmdCompareGE* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareGE*)(THIS);
}

RogueString* RogueCmdCompareGE__type_name( RogueClassCmdCompareGE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1481]);
}

RogueClassCmd* RogueCmdCompareGE__cloned__CloneArgs( RogueClassCmdCompareGE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareGE__combine_literal_operands__Type( RogueClassCmdCompareGE* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value >= ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value >= ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdCompareGE__dispatch__Visitor( RogueClassCmdCompareGE* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdCompareGE__symbol( RogueClassCmdCompareGE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[163]);
}

RogueClassCmd* RogueCmdCompareGE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareGE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[778], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1487], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), -1 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[782], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[776], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[784], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[778], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, 0 ))));
}

RogueClassCmdForEach* RogueCmdForEach__init_object( RogueClassCmdForEach* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdForEach*)(THIS);
}

RogueString* RogueCmdForEach__type_name( RogueClassCmdForEach* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1432]);
}

RogueClassCmd* RogueCmdForEach__cloned__CloneArgs( RogueClassCmdForEach* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdForEach*,result_1,(((RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdForEach*,ROGUE_CREATE_OBJECT(CmdForEach))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->collection), clone_args_0 ))), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_cmd), clone_args_0 )))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
  Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  result_1->statements = ((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )));
  result_1->collection_var_name = THIS->collection_var_name;
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

RogueClassCmd* RogueCmdForEach__dispatch__Visitor( RogueClassCmdForEach* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdForEach( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdForEach__resolve__Scope( RogueClassCmdForEach* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->collection = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->collection), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,collection_type_1,(((RogueType__organize__Scope( ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->collection) ))), scope_0 )))));
  RogueLogical has_count_2 = ((!!(((RogueType__find_property__String( collection_type_1, Rogue_literal_strings[459] )))) || !!(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1255] ))))));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_at_3,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1256] )))));
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_get_4,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1257] )))));
  RogueLogical has_get_5 = ((!!(m_get_4) || !!(m_at_3)));
  RogueInt32 step_size_6 = (1);
  if (!!(THIS->step_cmd))
  {
    THIS->step_cmd = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->step_cmd), scope_0 ));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdLiteralInt32*,literal_integer_cmd_7,(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->step_cmd,RogueTypeCmdLiteralInt32)))));
    if (!!(literal_integer_cmd_7))
    {
      step_size_6 = ((RogueInt32)literal_integer_cmd_7->value);
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->step_cmd->t), Rogue_literal_strings[1258] ))));
    }
  }
  if (!(!!(THIS->collection_var_name)))
  {
    THIS->collection_var_name = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
  }
  if ((has_count_2 && has_get_5))
  {
    if (!!(m_at_3))
    {
      m_get_4 = ((RogueClassMethod*)m_at_3);
    }
    THIS->collection = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->collection), scope_0 ));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,collection_var_8,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->collection_var_name), ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->collection) ))), ROGUE_ARG(THIS->collection) )))));
    if (!(!!(THIS->index_var_name)))
    {
      THIS->index_var_name = ((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,index_var_9,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(NULL))) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,last_cmd_10,0);
    if (step_size_6 >= 0)
    {
      index_var_9->initial_value = ((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))));
      last_cmd_10 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), Rogue_literal_strings[459] ))))));
    }
    else
    {
      index_var_9->initial_value = ((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), Rogue_literal_strings[459] )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) )))))));
      last_cmd_10 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_11,0);
    if (!!(THIS->control_var_name))
    {
      control_var_11 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(NULL))) ))));
      control_var_11->initial_value = ((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), collection_var_8 )))))), ROGUE_ARG(m_get_4->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))) )))) )))));
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(control_var_11->t), control_var_11, false )))))), 0 );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,modifier_12,0);
    if ((step_size_6 >= -1 && step_size_6 <= 1))
    {
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), index_var_9, step_size_6 ))))));
    }
    else if (step_size_6 >= 0)
    {
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(index_var_9->name) )))))), ROGUE_ARG(RogueTokenType_symbol_plus_equals), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), step_size_6 )))))) ))))));
    }
    else
    {
      modifier_12 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdModifyAndAssign__init__Token_Cmd_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssign*,ROGUE_CREATE_OBJECT(CmdModifyAndAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(index_var_9->name) )))))), ROGUE_ARG(RogueTokenType_symbol_minus_equals), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(step_size_6))) )))))) ))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_13,0);
    if (step_size_6 >= 0)
    {
      condition_13 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareLT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareLT*,ROGUE_CREATE_OBJECT(CmdCompareLT)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))), last_cmd_10 ))))))));
    }
    else
    {
      condition_13 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdCompareGE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGE*,ROGUE_CREATE_OBJECT(CmdCompareGE)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), ROGUE_ARG(THIS->t), index_var_9 )))))), last_cmd_10 ))))))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,result_14,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 9, condition_13, ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_14), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    RogueCmdGenericLoop__add_control_var__Local( result_14, collection_var_8 );
    RogueCmdGenericLoop__add_control_var__Local( result_14, index_var_9 );
    RogueCmdGenericLoop__add_upkeep__Cmd( result_14, modifier_12 );
    RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
    return (RogueClassCmd*)(((RogueCmdGenericLoop__resolve__Scope( result_14, scope_0 ))));
  }
  else
  {
    RogueLogical has_another_15 = ((!!(((RogueType__find_property__String( collection_type_1, Rogue_literal_strings[1259] )))) || !!(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1260] ))))));
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_read_16,(((RogueType__find_method__String( collection_type_1, Rogue_literal_strings[1261] )))));
    if ((!(has_another_15) || !(!!(m_read_16))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->collection->t), Rogue_literal_strings[1262] ))));
    }
    if (!(!!(m_read_16->_return_type)))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->collection->t), Rogue_literal_strings[1263] ))));
    }
    if (!!(THIS->step_cmd))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->step_cmd->t), Rogue_literal_strings[1264] ))));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,reader_var_17,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->collection_var_name), collection_type_1, ROGUE_ARG(THIS->collection) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,index_var_18,0);
    if (!!(THIS->index_var_name))
    {
      index_var_18 = ((RogueClassLocal*)((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->index_var_name), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))));
    }
    if (!!(THIS->control_var_name))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,control_var_19,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->control_var_name), ROGUE_ARG(m_read_16->_return_type), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(reader_var_17->name) )))))), Rogue_literal_strings[1265] )))))) )))));
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->collection->t), control_var_19, false )))))), 0 );
    }
    else
    {
      RogueCmd_List__insert__Cmd_Int32( ROGUE_ARG(((RogueCmd_List*)THIS->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->collection->t), ROGUE_ARG(reader_var_17->name) )))))), Rogue_literal_strings[1265] )))))), 0 );
    }
    ROGUE_DEF_LOCAL_REF(RogueClassToken*,rt_20,(reader_var_17->t));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdGenericLoop*,cmd_loop_21,(((RogueCmdGenericLoop__init__Token_Int32_Cmd_CmdStatementList_CmdStatementList_CmdStatementList( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdGenericLoop*,ROGUE_CREATE_OBJECT(CmdGenericLoop))), ROGUE_ARG(THIS->t), 9, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), rt_20, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadLocal__init__Token_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadLocal*,ROGUE_CREATE_OBJECT(CmdReadLocal))), rt_20, reader_var_17 )))))), Rogue_literal_strings[1259] )))))), ROGUE_ARG(THIS->statements), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))), ROGUE_ARG(((RogueClassCmdStatementList*)(NULL))) )))));
    Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)cmd_loop_21), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
    RogueCmdGenericLoop__add_control_var__Local( cmd_loop_21, reader_var_17 );
    if (!!(index_var_18))
    {
      RogueCmdGenericLoop__add_control_var__Local( cmd_loop_21, index_var_18 );
      RogueCmdGenericLoop__add_upkeep__Cmd( cmd_loop_21, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAdjustLocal__init__Token_Local_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustLocal*,ROGUE_CREATE_OBJECT(CmdAdjustLocal))), ROGUE_ARG(THIS->t), index_var_18, 1 )))))) );
    }
    RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
    return (RogueClassCmd*)(((RogueCmdGenericLoop__resolve__Scope( cmd_loop_21, scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdForEach* RogueCmdForEach__init__Token_String_String_Cmd_Cmd_CmdStatementList( RogueClassCmdForEach* THIS, RogueClassToken* _auto_1361_0, RogueString* _auto_1362_1, RogueString* _auto_1363_2, RogueClassCmd* _auto_1364_3, RogueClassCmd* _auto_1365_4, RogueClassCmdStatementList* _auto_1366_5 )
{
  THIS->statements = _auto_1366_5;
  THIS->step_cmd = _auto_1365_4;
  THIS->collection = _auto_1364_3;
  THIS->index_var_name = _auto_1363_2;
  THIS->control_var_name = _auto_1362_1;
  THIS->t = _auto_1361_0;
  THIS->_control_type = 9;
  return (RogueClassCmdForEach*)(THIS);
}

RogueClassCmdRangeDownTo* RogueCmdRangeDownTo__init_object( RogueClassCmdRangeDownTo* THIS )
{
  RogueCmdRange__init_object( ROGUE_ARG(((RogueClassCmdRange*)THIS)) );
  return (RogueClassCmdRangeDownTo*)(THIS);
}

RogueString* RogueCmdRangeDownTo__type_name( RogueClassCmdRangeDownTo* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1490]);
}

RogueClassCmd* RogueCmdRangeDownTo__cloned__CloneArgs( RogueClassCmdRangeDownTo* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdRangeDownTo*)(((RogueCmdRange__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdRange*)ROGUE_CREATE_REF(RogueClassCmdRangeDownTo*,ROGUE_CREATE_OBJECT(CmdRangeDownTo)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->first), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->last), clone_args_0 ))), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->step_size), clone_args_0 )))) ))))))));
}

RogueClassCmd* RogueCmdRangeDownTo__dispatch__Visitor( RogueClassCmdRangeDownTo* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdRange( v_0, ROGUE_ARG(((RogueClassCmdRange*)(THIS))) ))));
}

RogueInt32 RogueCmdRangeDownTo__default_step_size( RogueClassCmdRangeDownTo* THIS )
{
  return (RogueInt32)(-1);
}

RogueClassCmdLogicalXor* RogueCmdLogicalXor__init_object( RogueClassCmdLogicalXor* THIS )
{
  RogueCmdBinaryLogical__init_object( ROGUE_ARG(((RogueClassCmdBinaryLogical*)THIS)) );
  return (RogueClassCmdLogicalXor*)(THIS);
}

RogueString* RogueCmdLogicalXor__type_name( RogueClassCmdLogicalXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1494]);
}

RogueClassCmd* RogueCmdLogicalXor__cloned__CloneArgs( RogueClassCmdLogicalXor* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalXor*,ROGUE_CREATE_OBJECT(CmdLogicalXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdLogicalXor__dispatch__Visitor( RogueClassCmdLogicalXor* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdLogicalXor__symbol( RogueClassCmdLogicalXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[141]);
}

RogueString* RogueCmdLogicalXor__cpp_symbol( RogueClassCmdLogicalXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[150]);
}

RogueLogical RogueCmdLogicalXor__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalXor* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  return (RogueLogical)((a_0 ^ b_1));
}

RogueClassCmdBinaryLogical* RogueCmdBinaryLogical__init_object( RogueClassCmdBinaryLogical* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdBinaryLogical*)(THIS);
}

RogueString* RogueCmdBinaryLogical__type_name( RogueClassCmdBinaryLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1438]);
}

RogueClassCmd* RogueCmdBinaryLogical__dispatch__Visitor( RogueClassCmdBinaryLogical* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueClassCmd* RogueCmdBinaryLogical__resolve__Scope( RogueClassCmdBinaryLogical* THIS, RogueClassScope* scope_0 )
{
  THIS->left = ((RogueCmd__require_logical__Scope( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->left), scope_0 ))), scope_0 )));
  THIS->right = ((RogueCmd__require_logical__Scope( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->right), scope_0 ))), scope_0 )));
  if (((Rogue_call_ROGUEM150( 36, ROGUE_ARG(THIS->left) )) && (Rogue_call_ROGUEM150( 36, ROGUE_ARG(THIS->right) ))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM746( 59, ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value), ROGUE_ARG(((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value) ))) ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdBinaryLogical__type( RogueClassCmdBinaryLogical* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueClassCmd* RogueCmdBinaryLogical__resolve_operator_method__Scope_Type_Type( RogueClassCmdBinaryLogical* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
}

RogueLogical RogueCmdBinaryLogical__combine_literal_operands__Logical_Logical( RogueClassCmdBinaryLogical* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[412] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM744( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[1439] )))) )))) ))));
}

RogueClassCmdLogicalOr* RogueCmdLogicalOr__init_object( RogueClassCmdLogicalOr* THIS )
{
  RogueCmdBinaryLogical__init_object( ROGUE_ARG(((RogueClassCmdBinaryLogical*)THIS)) );
  return (RogueClassCmdLogicalOr*)(THIS);
}

RogueString* RogueCmdLogicalOr__type_name( RogueClassCmdLogicalOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1495]);
}

RogueClassCmd* RogueCmdLogicalOr__cloned__CloneArgs( RogueClassCmdLogicalOr* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalOr*,ROGUE_CREATE_OBJECT(CmdLogicalOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdLogicalOr__dispatch__Visitor( RogueClassCmdLogicalOr* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdLogicalOr__symbol( RogueClassCmdLogicalOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[136]);
}

RogueString* RogueCmdLogicalOr__cpp_symbol( RogueClassCmdLogicalOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[194]);
}

RogueLogical RogueCmdLogicalOr__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalOr* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  return (RogueLogical)((a_0 || b_1));
}

RogueClassCmdLogicalAnd* RogueCmdLogicalAnd__init_object( RogueClassCmdLogicalAnd* THIS )
{
  RogueCmdBinaryLogical__init_object( ROGUE_ARG(((RogueClassCmdBinaryLogical*)THIS)) );
  return (RogueClassCmdLogicalAnd*)(THIS);
}

RogueString* RogueCmdLogicalAnd__type_name( RogueClassCmdLogicalAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1496]);
}

RogueClassCmd* RogueCmdLogicalAnd__cloned__CloneArgs( RogueClassCmdLogicalAnd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdLogicalAnd*,ROGUE_CREATE_OBJECT(CmdLogicalAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdLogicalAnd__dispatch__Visitor( RogueClassCmdLogicalAnd* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdLogicalAnd__symbol( RogueClassCmdLogicalAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[127]);
}

RogueString* RogueCmdLogicalAnd__cpp_symbol( RogueClassCmdLogicalAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[144]);
}

RogueLogical RogueCmdLogicalAnd__combine_literal_operands__Logical_Logical( RogueClassCmdLogicalAnd* THIS, RogueLogical a_0, RogueLogical b_1 )
{
  return (RogueLogical)((a_0 && b_1));
}

RogueClassCmdCompareEQ* RogueCmdCompareEQ__init_object( RogueClassCmdCompareEQ* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareEQ*)(THIS);
}

RogueString* RogueCmdCompareEQ__type_name( RogueClassCmdCompareEQ* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1482]);
}

RogueClassCmd* RogueCmdCompareEQ__cloned__CloneArgs( RogueClassCmdCompareEQ* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareEQ__combine_literal_operands__Type( RogueClassCmdCompareEQ* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value == ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value == ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdCompareEQ__dispatch__Visitor( RogueClassCmdCompareEQ* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueLogical RogueCmdCompareEQ__requires_parens( RogueClassCmdCompareEQ* THIS )
{
  return (RogueLogical)(false);
}

RogueString* RogueCmdCompareEQ__symbol( RogueClassCmdCompareEQ* THIS )
{
  return (RogueString*)(Rogue_literal_strings[159]);
}

RogueClassCmd* RogueCmdCompareEQ__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareEQ* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[774], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1487], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[780], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[774], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[780], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[774], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, 0 ))));
}

RogueClassCmdCompareIsNot* RogueCmdCompareIsNot__init_object( RogueClassCmdCompareIsNot* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareIsNot*)(THIS);
}

RogueString* RogueCmdCompareIsNot__type_name( RogueClassCmdCompareIsNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1483]);
}

RogueClassCmd* RogueCmdCompareIsNot__cloned__CloneArgs( RogueClassCmdCompareIsNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareIsNot*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIsNot*,ROGUE_CREATE_OBJECT(CmdCompareIsNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareIsNot__dispatch__Visitor( RogueClassCmdCompareIsNot* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

void RogueCmdCompareIsNot__write_cpp__CPPWriter_Logical( RogueClassCmdCompareIsNot* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1442] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->left), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1443] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->right), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

RogueClassCmd* RogueCmdCompareIsNot__resolve_for_types__Scope_Type_Type( RogueClassCmdCompareIsNot* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  if ((((RogueType__is_reference( left_type_1 ))) && ((RogueType__is_reference( right_type_2 )))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  else if ((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 )))))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) ))))))), scope_0 )));
  }
  else if ((((RogueType__is_compound( left_type_1 ))) && ((RogueType__is_compound( right_type_2 )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1477] ))));
  }
  else
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1478] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(left_type_1))) )))) )))), Rogue_literal_strings[445] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(right_type_2))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
  }
}

RogueString* RogueCmdCompareIsNot__symbol( RogueClassCmdCompareIsNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1473]);
}

RogueString* RogueCmdCompareIsNot__cpp_symbol( RogueClassCmdCompareIsNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[169]);
}

RogueClassCmdCompareIs* RogueCmdCompareIs__init_object( RogueClassCmdCompareIs* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareIs*)(THIS);
}

RogueString* RogueCmdCompareIs__type_name( RogueClassCmdCompareIs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1484]);
}

RogueClassCmd* RogueCmdCompareIs__cloned__CloneArgs( RogueClassCmdCompareIs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareIs*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareIs*,ROGUE_CREATE_OBJECT(CmdCompareIs)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareIs__dispatch__Visitor( RogueClassCmdCompareIs* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

void RogueCmdCompareIs__write_cpp__CPPWriter_Logical( RogueClassCmdCompareIs* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1442] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->left), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1444] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->right), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

RogueClassCmd* RogueCmdCompareIs__resolve_for_types__Scope_Type_Type( RogueClassCmdCompareIs* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2 )
{
  if ((((RogueType__is_reference( left_type_1 ))) && ((RogueType__is_reference( right_type_2 )))))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  else if ((((RogueType__is_primitive( left_type_1 ))) && ((RogueType__is_primitive( right_type_2 )))))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), ROGUE_ARG(THIS->right) ))))))), scope_0 )));
  }
  else if ((((RogueType__is_compound( left_type_1 ))) && ((RogueType__is_compound( right_type_2 )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1477] ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), false ))))));
  }
}

RogueString* RogueCmdCompareIs__symbol( RogueClassCmdCompareIs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[96]);
}

RogueString* RogueCmdCompareIs__cpp_symbol( RogueClassCmdCompareIs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[159]);
}

RogueClassCmdCompareNE* RogueCmdCompareNE__init_object( RogueClassCmdCompareNE* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareNE*)(THIS);
}

RogueString* RogueCmdCompareNE__type_name( RogueClassCmdCompareNE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1485]);
}

RogueClassCmd* RogueCmdCompareNE__cloned__CloneArgs( RogueClassCmdCompareNE* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareNE__combine_literal_operands__Type( RogueClassCmdCompareNE* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value != ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value != ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdCompareNE__dispatch__Visitor( RogueClassCmdCompareNE* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdCompareNE__symbol( RogueClassCmdCompareNE* THIS )
{
  return (RogueString*)(Rogue_literal_strings[169]);
}

RogueClassCmd* RogueCmdCompareNE__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareNE* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[780], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1487], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareNE*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareNE*,ROGUE_CREATE_OBJECT(CmdCompareNE)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 0 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[774], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[780], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[774], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[780], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, 0 ))));
}

RogueClassCmdCompareGT* RogueCmdCompareGT__init_object( RogueClassCmdCompareGT* THIS )
{
  RogueCmdComparison__init_object( ROGUE_ARG(((RogueClassCmdComparison*)THIS)) );
  return (RogueClassCmdCompareGT*)(THIS);
}

RogueString* RogueCmdCompareGT__type_name( RogueClassCmdCompareGT* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1486]);
}

RogueClassCmd* RogueCmdCompareGT__cloned__CloneArgs( RogueClassCmdCompareGT* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCompareGT*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareGT*,ROGUE_CREATE_OBJECT(CmdCompareGT)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdCompareGT__combine_literal_operands__Type( RogueClassCmdCompareGT* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value > ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value > ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdCompareGT__dispatch__Visitor( RogueClassCmdCompareGT* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdCompareGT__symbol( RogueClassCmdCompareGT* THIS )
{
  return (RogueString*)(Rogue_literal_strings[164]);
}

RogueClassCmd* RogueCmdCompareGT__resolve_for_reference__Scope_Type_Type_Logical( RogueClassCmdCompareGT* THIS, RogueClassScope* scope_0, RogueClassType* left_type_1, RogueClassType* right_type_2, RogueLogical force_error_3 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[784], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 )))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[1487], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM489( 43, ROGUE_ARG(((RogueClassCmdBinary*)((RogueClassCmdCompareEQ*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdCompareEQ*,ROGUE_CREATE_OBJECT(CmdCompareEQ)))), ROGUE_ARG(THIS->t), cmd_4, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), 1 )))))) ))))))), scope_0 )));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[776], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[782], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(cmd_4);
  }
  cmd_4 = ((RogueClassCmd*)((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, right_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->right), Rogue_literal_strings[778], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->left) )))) )))), false, 0 ))));
  if (!!(cmd_4))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_4 ))))))));
  }
  if (!(force_error_3))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(NULL)));
  }
  return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, left_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->left), Rogue_literal_strings[784], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->right) )))) )))), true, 0 ))));
}

RogueClassCmdInstanceOf* RogueCmdInstanceOf__init_object( RogueClassCmdInstanceOf* THIS )
{
  RogueCmdTypeOperator__init_object( ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) );
  return (RogueClassCmdInstanceOf*)(THIS);
}

RogueString* RogueCmdInstanceOf__type_name( RogueClassCmdInstanceOf* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1497]);
}

RogueClassCmd* RogueCmdInstanceOf__cloned__CloneArgs( RogueClassCmdInstanceOf* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdInstanceOf*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdInstanceOf*,ROGUE_CREATE_OBJECT(CmdInstanceOf)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

RogueClassCmd* RogueCmdInstanceOf__dispatch__Visitor( RogueClassCmdInstanceOf* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) ))));
}

RogueClassCmd* RogueCmdInstanceOf__resolve__Scope( RogueClassCmdInstanceOf* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdInstanceOf__type( RogueClassCmdInstanceOf* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

void RogueCmdInstanceOf__write_cpp__CPPWriter_Logical( RogueClassCmdInstanceOf* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1321] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->operand), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[7] );
  RogueCPPWriter__print_type_info__Type( writer_0, ROGUE_ARG(THIS->_target_type) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

RogueClassCmdTypeOperator* RogueCmdTypeOperator__init_object( RogueClassCmdTypeOperator* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdTypeOperator*)(THIS);
}

RogueString* RogueCmdTypeOperator__type_name( RogueClassCmdTypeOperator* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1183]);
}

RogueClassCmd* RogueCmdTypeOperator__dispatch__Visitor( RogueClassCmdTypeOperator* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* Rogue_CmdTypeOperator__type( RogueClassCmdTypeOperator* THIS )
{
  return (RogueClassType*)(THIS->_target_type);
}

RogueClassCmdTypeOperator* RogueCmdTypeOperator__init__Token_Cmd_Type( RogueClassCmdTypeOperator* THIS, RogueClassToken* _auto_1369_0, RogueClassCmd* _auto_1370_1, RogueClassType* _auto_1371_2 )
{
  THIS->_target_type = _auto_1371_2;
  THIS->operand = _auto_1370_1;
  THIS->t = _auto_1369_0;
  return (RogueClassCmdTypeOperator*)(THIS);
}

RogueClassCmdLogicalNot* RogueCmdLogicalNot__init_object( RogueClassCmdLogicalNot* THIS )
{
  RogueCmdUnary__init_object( ROGUE_ARG(((RogueClassCmdUnary*)THIS)) );
  return (RogueClassCmdLogicalNot*)(THIS);
}

RogueString* RogueCmdLogicalNot__type_name( RogueClassCmdLogicalNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1502]);
}

RogueClassCmd* RogueCmdLogicalNot__cloned__CloneArgs( RogueClassCmdLogicalNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdLogicalNot__dispatch__Visitor( RogueClassCmdLogicalNot* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) ))));
}

RogueClassCmd* RogueCmdLogicalNot__resolve__Scope( RogueClassCmdLogicalNot* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  if ((Rogue_call_ROGUEM150( 36, ROGUE_ARG(THIS->operand) )))
  {
    return (RogueClassCmd*)(((RogueCmdLogicalNot__resolve_for_literal_operand__Scope( ROGUE_ARG(THIS), scope_0 ))));
  }
  else
  {
    THIS->operand = ((RogueCmd__require_logical__Scope( ROGUE_ARG(THIS->operand), scope_0 )));
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassType* Rogue_CmdLogicalNot__type( RogueClassCmdLogicalNot* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueString* RogueCmdLogicalNot__prefix_symbol( RogueClassCmdLogicalNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1506]);
}

RogueClassCmd* RogueCmdLogicalNot__resolve_for_literal_operand__Scope( RogueClassCmdLogicalNot* THIS, RogueClassScope* scope_0 )
{
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralReal64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(!(!!(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(!(!!(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  else
  {
    THIS->operand = ((RogueCmd__require_logical__Scope( ROGUE_ARG(THIS->operand), scope_0 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdLogicalNot__cpp_prefix_symbol( RogueClassCmdLogicalNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[161]);
}

RogueClassCmdUnary* RogueCmdUnary__init_object( RogueClassCmdUnary* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdUnary*)(THIS);
}

RogueString* RogueCmdUnary__to_String( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM800( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->operand))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueCmdUnary__type_name( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[943]);
}

RogueClassCmd* RogueCmdUnary__dispatch__Visitor( RogueClassCmdUnary* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdUnary__resolve__Scope( RogueClassCmdUnary* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  if ((Rogue_call_ROGUEM150( 36, ROGUE_ARG(THIS->operand) )))
  {
    return (RogueClassCmd*)((Rogue_call_ROGUEM809( 54, ROGUE_ARG(THIS), scope_0 )));
  }
  else
  {
    return (RogueClassCmd*)(((RogueCmdUnary__resolve_for_operand_type__Scope_Type( ROGUE_ARG(THIS), scope_0, ROGUE_ARG(((RogueType__organize__Scope( ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->operand) ))), scope_0 )))) ))));
  }
}

RogueClassType* Rogue_CmdUnary__type( RogueClassCmdUnary* THIS )
{
  return (RogueClassType*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->operand) )));
}

void RogueCmdUnary__write_cpp__CPPWriter_Logical( RogueClassCmdUnary* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG((Rogue_call_ROGUEM800( 57, ROGUE_ARG(THIS) ))) )))), Rogue_literal_strings[9] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->operand), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] )))), ROGUE_ARG((Rogue_call_ROGUEM800( 58, ROGUE_ARG(THIS) ))) );
}

RogueClassCmdUnary* RogueCmdUnary__init__Token_Cmd( RogueClassCmdUnary* THIS, RogueClassToken* _auto_1372_0, RogueClassCmd* _auto_1373_1 )
{
  THIS->operand = _auto_1373_1;
  THIS->t = _auto_1372_0;
  return (RogueClassCmdUnary*)(THIS);
}

RogueString* RogueCmdUnary__prefix_symbol( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdUnary__fn_name( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(((RogueString*)(NULL)));
}

RogueClassCmd* RogueCmdUnary__resolve_for_literal_operand__Scope( RogueClassCmdUnary* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdUnary__resolve_for_operand_type__Scope_Type( RogueClassCmdUnary* THIS, RogueClassScope* scope_0, RogueClassType* operand_type_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,name_2,((Rogue_call_ROGUEM800( 53, ROGUE_ARG(THIS) ))));
  if (!!(name_2))
  {
    if (((RogueType__has_method_named__String( operand_type_1, name_2 ))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), name_2 )))), scope_0 ))));
    }
    if (!(((RogueType__is_primitive( operand_type_1 )))))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1219] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(operand_type_1))) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], name_2 )))) )))), Rogue_literal_strings[1266] )))) )))) ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdUnary__suffix_symbol( RogueClassCmdUnary* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdUnary__cpp_prefix_symbol( RogueClassCmdUnary* THIS )
{
  return (RogueString*)((Rogue_call_ROGUEM800( 52, ROGUE_ARG(THIS) )));
}

RogueString* RogueCmdUnary__cpp_suffix_symbol( RogueClassCmdUnary* THIS )
{
  return (RogueString*)((Rogue_call_ROGUEM800( 56, ROGUE_ARG(THIS) )));
}

RogueClassCmdBitwiseXor* RogueCmdBitwiseXor__init_object( RogueClassCmdBitwiseXor* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseXor*)(THIS);
}

RogueString* RogueCmdBitwiseXor__type_name( RogueClassCmdBitwiseXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1509]);
}

RogueClassCmd* RogueCmdBitwiseXor__cloned__CloneArgs( RogueClassCmdBitwiseXor* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseXor__combine_literal_operands__Type( RogueClassCmdBitwiseXor* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value ^ ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value ^ ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdBitwiseXor__dispatch__Visitor( RogueClassCmdBitwiseXor* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdBitwiseXor__fn_name( RogueClassCmdBitwiseXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1462]);
}

RogueString* RogueCmdBitwiseXor__symbol( RogueClassCmdBitwiseXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[186]);
}

RogueString* RogueCmdBitwiseXor__cpp_symbol( RogueClassCmdBitwiseXor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[150]);
}

RogueClassCmdBitwiseOp* RogueCmdBitwiseOp__init_object( RogueClassCmdBitwiseOp* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdBitwiseOp*)(THIS);
}

RogueString* RogueCmdBitwiseOp__type_name( RogueClassCmdBitwiseOp* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1456]);
}

RogueClassCmd* RogueCmdBitwiseOp__dispatch__Visitor( RogueClassCmdBitwiseOp* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueClassCmd* RogueCmdBitwiseOp__resolve_for_common_type__Scope_Type( RogueClassCmdBitwiseOp* THIS, RogueClassScope* scope_0, RogueClassType* common_type_1 )
{
  if ((((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte) || ((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32)))
  {
    THIS->left = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0, false, false ))), scope_0 ));
    THIS->right = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32), scope_0, false, false ))), scope_0 ));
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  if (((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))
  {
    THIS->left = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character), scope_0, false, false ))), scope_0 ));
    THIS->right = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character), scope_0, false, false ))), scope_0 ));
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  if (((void*)common_type_1) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))
  {
    THIS->left = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->left), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), scope_0, false, false ))), scope_0 ));
    THIS->right = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->right), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64), scope_0, false, false ))), scope_0 ));
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1452] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM484( 57, ROGUE_ARG(((RogueClassCmdBinary*)THIS)) ))) )))) )))), Rogue_literal_strings[1453] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(common_type_1))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
}

RogueClassCmdBitwiseOr* RogueCmdBitwiseOr__init_object( RogueClassCmdBitwiseOr* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseOr*)(THIS);
}

RogueString* RogueCmdBitwiseOr__type_name( RogueClassCmdBitwiseOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1510]);
}

RogueClassCmd* RogueCmdBitwiseOr__cloned__CloneArgs( RogueClassCmdBitwiseOr* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseOr__combine_literal_operands__Type( RogueClassCmdBitwiseOr* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value | ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value || ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdBitwiseOr__dispatch__Visitor( RogueClassCmdBitwiseOr* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdBitwiseOr__fn_name( RogueClassCmdBitwiseOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1463]);
}

RogueString* RogueCmdBitwiseOr__symbol( RogueClassCmdBitwiseOr* THIS )
{
  return (RogueString*)(Rogue_literal_strings[192]);
}

RogueClassCmdBitwiseAnd* RogueCmdBitwiseAnd__init_object( RogueClassCmdBitwiseAnd* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseAnd*)(THIS);
}

RogueString* RogueCmdBitwiseAnd__type_name( RogueClassCmdBitwiseAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1511]);
}

RogueClassCmd* RogueCmdBitwiseAnd__cloned__CloneArgs( RogueClassCmdBitwiseAnd* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseAnd__combine_literal_operands__Type( RogueClassCmdBitwiseAnd* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value & ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralLogical)))->value && ((RogueClassCmdLiteralLogical*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralLogical)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdBitwiseAnd__dispatch__Visitor( RogueClassCmdBitwiseAnd* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdBitwiseAnd__fn_name( RogueClassCmdBitwiseAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1464]);
}

RogueString* RogueCmdBitwiseAnd__symbol( RogueClassCmdBitwiseAnd* THIS )
{
  return (RogueString*)(Rogue_literal_strings[142]);
}

RogueClassCmdBitwiseShiftLeft* RogueCmdBitwiseShiftLeft__init_object( RogueClassCmdBitwiseShiftLeft* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseShiftLeft*)(THIS);
}

RogueString* RogueCmdBitwiseShiftLeft__type_name( RogueClassCmdBitwiseShiftLeft* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1512]);
}

RogueClassCmd* RogueCmdBitwiseShiftLeft__cloned__CloneArgs( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftLeft*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftLeft*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftLeft)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftLeft__combine_literal_operands__Type( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdBitwiseShiftLeft__dispatch__Visitor( RogueClassCmdBitwiseShiftLeft* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdBitwiseShiftLeft__fn_name( RogueClassCmdBitwiseShiftLeft* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1465]);
}

RogueString* RogueCmdBitwiseShiftLeft__symbol( RogueClassCmdBitwiseShiftLeft* THIS )
{
  return (RogueString*)(Rogue_literal_strings[180]);
}

RogueString* RogueCmdBitwiseShiftLeft__cpp_symbol( RogueClassCmdBitwiseShiftLeft* THIS )
{
  return (RogueString*)(Rogue_literal_strings[172]);
}

RogueClassCmdBitwiseShiftRight* RogueCmdBitwiseShiftRight__init_object( RogueClassCmdBitwiseShiftRight* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseShiftRight*)(THIS);
}

RogueString* RogueCmdBitwiseShiftRight__type_name( RogueClassCmdBitwiseShiftRight* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1513]);
}

RogueClassCmd* RogueCmdBitwiseShiftRight__cloned__CloneArgs( RogueClassCmdBitwiseShiftRight* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRight*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRight*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRight)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftRight__combine_literal_operands__Type( RogueClassCmdBitwiseShiftRight* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdBitwiseShiftRight__dispatch__Visitor( RogueClassCmdBitwiseShiftRight* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueClassCmd* RogueCmdBitwiseShiftRight__resolve__Scope( RogueClassCmdBitwiseShiftRight* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,((RogueCmdBinary__resolve__Scope( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBitwiseShiftRight*,cmd_shift_2,(((RogueClassCmdBitwiseShiftRight*)(RogueObject_as(result_1,RogueTypeCmdBitwiseShiftRight)))));
  if (!(!!(cmd_shift_2)))
  {
    return (RogueClassCmd*)(result_1);
  }
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[956] )))))), Rogue_literal_strings[1440], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(cmd_shift_2->left), ROGUE_ARG(cmd_shift_2->right) )))) )))), scope_0 ))));
}

RogueString* RogueCmdBitwiseShiftRight__fn_name( RogueClassCmdBitwiseShiftRight* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1466]);
}

RogueString* RogueCmdBitwiseShiftRight__symbol( RogueClassCmdBitwiseShiftRight* THIS )
{
  return (RogueString*)(Rogue_literal_strings[181]);
}

RogueClassCmdBitwiseShiftRightX* RogueCmdBitwiseShiftRightX__init_object( RogueClassCmdBitwiseShiftRightX* THIS )
{
  RogueCmdBitwiseOp__init_object( ROGUE_ARG(((RogueClassCmdBitwiseOp*)THIS)) );
  return (RogueClassCmdBitwiseShiftRightX*)(THIS);
}

RogueString* RogueCmdBitwiseShiftRightX__type_name( RogueClassCmdBitwiseShiftRightX* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1514]);
}

RogueClassCmd* RogueCmdBitwiseShiftRightX__cloned__CloneArgs( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseShiftRightX*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseShiftRightX*,ROGUE_CREATE_OBJECT(CmdBitwiseShiftRightX)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseShiftRightX__combine_literal_operands__Type( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value << ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdBitwiseShiftRightX__dispatch__Visitor( RogueClassCmdBitwiseShiftRightX* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdBitwiseShiftRightX__fn_name( RogueClassCmdBitwiseShiftRightX* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1467]);
}

RogueString* RogueCmdBitwiseShiftRightX__symbol( RogueClassCmdBitwiseShiftRightX* THIS )
{
  return (RogueString*)(Rogue_literal_strings[182]);
}

RogueString* RogueCmdBitwiseShiftRightX__cpp_symbol( RogueClassCmdBitwiseShiftRightX* THIS )
{
  return (RogueString*)(Rogue_literal_strings[75]);
}

RogueClassCmdSubtract* RogueCmdSubtract__init_object( RogueClassCmdSubtract* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdSubtract*)(THIS);
}

RogueString* RogueCmdSubtract__type_name( RogueClassCmdSubtract* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1457]);
}

RogueClassCmd* RogueCmdSubtract__cloned__CloneArgs( RogueClassCmdSubtract* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdSubtract__combine_literal_operands__Type( RogueClassCmdSubtract* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value - ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value - ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdSubtract__dispatch__Visitor( RogueClassCmdSubtract* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdSubtract__fn_name( RogueClassCmdSubtract* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1468]);
}

RogueString* RogueCmdSubtract__symbol( RogueClassCmdSubtract* THIS )
{
  return (RogueString*)(Rogue_literal_strings[167]);
}

RogueClassCmdMultiply* RogueCmdMultiply__init_object( RogueClassCmdMultiply* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdMultiply*)(THIS);
}

RogueString* RogueCmdMultiply__type_name( RogueClassCmdMultiply* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1458]);
}

RogueClassCmd* RogueCmdMultiply__cloned__CloneArgs( RogueClassCmdMultiply* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdMultiply__combine_literal_operands__Type( RogueClassCmdMultiply* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value * ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value * ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdMultiply__dispatch__Visitor( RogueClassCmdMultiply* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdMultiply__fn_name( RogueClassCmdMultiply* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1469]);
}

RogueString* RogueCmdMultiply__symbol( RogueClassCmdMultiply* THIS )
{
  return (RogueString*)(Rogue_literal_strings[188]);
}

RogueClassCmdDivide* RogueCmdDivide__init_object( RogueClassCmdDivide* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdDivide*)(THIS);
}

RogueString* RogueCmdDivide__type_name( RogueClassCmdDivide* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1459]);
}

RogueClassCmd* RogueCmdDivide__cloned__CloneArgs( RogueClassCmdDivide* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdDivide__combine_literal_operands__Type( RogueClassCmdDivide* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value / ((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value)) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value / ((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdDivide__dispatch__Visitor( RogueClassCmdDivide* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueString* RogueCmdDivide__fn_name( RogueClassCmdDivide* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1470]);
}

RogueString* RogueCmdDivide__symbol( RogueClassCmdDivide* THIS )
{
  return (RogueString*)(Rogue_literal_strings[183]);
}

RogueClassCmdMod* RogueCmdMod__init_object( RogueClassCmdMod* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdMod*)(THIS);
}

RogueString* RogueCmdMod__type_name( RogueClassCmdMod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1460]);
}

RogueClassCmd* RogueCmdMod__cloned__CloneArgs( RogueClassCmdMod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdMod__combine_literal_operands__Type( RogueClassCmdMod* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((RogueMath__mod__Real64_Real64( ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value), ROGUE_ARG(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value) ))) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((RogueMath__mod__Int32_Int32( ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value), ROGUE_ARG(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value) ))) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdMod__dispatch__Visitor( RogueClassCmdMod* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

RogueClassCmd* RogueCmdMod__resolve__Scope( RogueClassCmdMod* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,((RogueCmdBinary__resolve__Scope( ROGUE_ARG(((RogueClassCmdBinary*)THIS)), scope_0 ))));
  if ((Rogue_call_ROGUEM150( 36, result_1 )))
  {
    return (RogueClassCmd*)(result_1);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdMod*,cmd_mod_2,(((RogueClassCmdMod*)(RogueObject_as(result_1,RogueTypeCmdMod)))));
  if (!(!!(cmd_mod_2)))
  {
    return (RogueClassCmd*)(result_1);
  }
  return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[956] )))))), Rogue_literal_strings[1441], ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(cmd_mod_2->left), ROGUE_ARG(cmd_mod_2->right) )))) )))), scope_0 ))));
}

RogueString* RogueCmdMod__fn_name( RogueClassCmdMod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1471]);
}

RogueString* RogueCmdMod__symbol( RogueClassCmdMod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[173]);
}

RogueClassCmdPower* RogueCmdPower__init_object( RogueClassCmdPower* THIS )
{
  RogueCmdBinary__init_object( ROGUE_ARG(((RogueClassCmdBinary*)THIS)) );
  return (RogueClassCmdPower*)(THIS);
}

RogueString* RogueCmdPower__type_name( RogueClassCmdPower* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1461]);
}

RogueClassCmd* RogueCmdPower__cloned__CloneArgs( RogueClassCmdPower* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->left), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->right), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdPower__combine_literal_operands__Type( RogueClassCmdPower* THIS, RogueClassType* common_type_0 )
{
  if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64) pow((double)((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralReal64)))->value, (double)((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (((void*)common_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueInt32) pow((double)((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->left,RogueTypeCmdLiteralInt32)))->value, (double)((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->right,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassCmd* RogueCmdPower__dispatch__Visitor( RogueClassCmdPower* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdBinary( v_0, ROGUE_ARG(((RogueClassCmdBinary*)(THIS))) ))));
}

void RogueCmdPower__write_cpp__CPPWriter_Logical( RogueClassCmdPower* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->left) ))) )))), Rogue_literal_strings[1445] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->left), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1446] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->right), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[611] );
}

RogueString* RogueCmdPower__fn_name( RogueClassCmdPower* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1472]);
}

RogueString* RogueCmdPower__symbol( RogueClassCmdPower* THIS )
{
  return (RogueString*)(Rogue_literal_strings[150]);
}

RogueClassCmdNegate* RogueCmdNegate__init_object( RogueClassCmdNegate* THIS )
{
  RogueCmdUnary__init_object( ROGUE_ARG(((RogueClassCmdUnary*)THIS)) );
  return (RogueClassCmdNegate*)(THIS);
}

RogueString* RogueCmdNegate__type_name( RogueClassCmdNegate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1503]);
}

RogueClassCmd* RogueCmdNegate__cloned__CloneArgs( RogueClassCmdNegate* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdNegate*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdNegate*,ROGUE_CREATE_OBJECT(CmdNegate)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdNegate__dispatch__Visitor( RogueClassCmdNegate* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) ))));
}

RogueClassType* RogueCmdNegate__implicit_type__Scope( RogueClassCmdNegate* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)((Rogue_call_ROGUEM151( 34, ROGUE_ARG(THIS->operand), scope_0 )));
}

RogueString* RogueCmdNegate__prefix_symbol( RogueClassCmdNegate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1507]);
}

RogueString* RogueCmdNegate__fn_name( RogueClassCmdNegate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1468]);
}

RogueClassCmd* RogueCmdNegate__resolve_for_literal_operand__Scope( RogueClassCmdNegate* THIS, RogueClassScope* scope_0 )
{
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralReal64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(((RogueClassCmdLiteralReal64*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralReal64)))->value))) ))))));
  }
  else if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG((-(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value))) ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdNegate__suffix_symbol( RogueClassCmdNegate* THIS )
{
  return (RogueString*)(Rogue_literal_strings[12]);
}

RogueClassCmdBitwiseNot* RogueCmdBitwiseNot__init_object( RogueClassCmdBitwiseNot* THIS )
{
  RogueCmdUnary__init_object( ROGUE_ARG(((RogueClassCmdUnary*)THIS)) );
  return (RogueClassCmdBitwiseNot*)(THIS);
}

RogueString* RogueCmdBitwiseNot__type_name( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1504]);
}

RogueClassCmd* RogueCmdBitwiseNot__cloned__CloneArgs( RogueClassCmdBitwiseNot* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdBitwiseNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseNot*,ROGUE_CREATE_OBJECT(CmdBitwiseNot)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdBitwiseNot__dispatch__Visitor( RogueClassCmdBitwiseNot* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) ))));
}

RogueClassType* Rogue_CmdBitwiseNot__type( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueClassType*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->operand) )));
}

RogueString* RogueCmdBitwiseNot__prefix_symbol( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[161]);
}

RogueString* RogueCmdBitwiseNot__fn_name( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1501]);
}

RogueClassCmd* RogueCmdBitwiseNot__resolve_for_literal_operand__Scope( RogueClassCmdBitwiseNot* THIS, RogueClassScope* scope_0 )
{
  if (RogueObject_instance_of(THIS->operand,RogueTypeCmdLiteralInt32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(~(((RogueClassCmdLiteralInt32*)(RogueObject_as(THIS->operand,RogueTypeCmdLiteralInt32)))->value)) ))))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdBitwiseNot__cpp_prefix_symbol( RogueClassCmdBitwiseNot* THIS )
{
  return (RogueString*)(Rogue_literal_strings[186]);
}

RogueClassCmdLogicalize* RogueCmdLogicalize__init_object( RogueClassCmdLogicalize* THIS )
{
  RogueCmdUnary__init_object( ROGUE_ARG(((RogueClassCmdUnary*)THIS)) );
  return (RogueClassCmdLogicalize*)(THIS);
}

RogueString* RogueCmdLogicalize__type_name( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1505]);
}

RogueClassCmd* RogueCmdLogicalize__cloned__CloneArgs( RogueClassCmdLogicalize* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLogicalize*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalize*,ROGUE_CREATE_OBJECT(CmdLogicalize)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))))));
}

RogueClassCmd* RogueCmdLogicalize__dispatch__Visitor( RogueClassCmdLogicalize* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdUnary( v_0, ROGUE_ARG(((RogueClassCmdUnary*)(THIS))) ))));
}

RogueClassCmd* RogueCmdLogicalize__resolve__Scope( RogueClassCmdLogicalize* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,operand_type_1,(((RogueType__organize__Scope( ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->operand) ))), ROGUE_ARG(((RogueClassScope*)(NULL))) )))));
  if (operand_type_1->is_optional)
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), Rogue_literal_strings[509] )))), scope_0 ))));
  }
  else if (((RogueType__has_global_method_named__String( operand_type_1, Rogue_literal_strings[510] ))))
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope_Logical( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(operand_type_1->name) )))))), Rogue_literal_strings[510], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->operand) )))) )))), scope_0, true ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
}

RogueClassType* Rogue_CmdLogicalize__type( RogueClassCmdLogicalize* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueString* RogueCmdLogicalize__prefix_symbol( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueString* RogueCmdLogicalize__fn_name( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[510]);
}

RogueClassCmd* RogueCmdLogicalize__resolve_for_literal_operand__Scope( RogueClassCmdLogicalize* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueString* RogueCmdLogicalize__suffix_symbol( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[178]);
}

RogueString* RogueCmdLogicalize__cpp_prefix_symbol( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1508]);
}

RogueString* RogueCmdLogicalize__cpp_suffix_symbol( RogueClassCmdLogicalize* THIS )
{
  return (RogueString*)(Rogue_literal_strings[0]);
}

RogueClassCmdIsReference* RogueCmdIsReference__init_object( RogueClassCmdIsReference* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdIsReference*)(THIS);
}

RogueString* RogueCmdIsReference__type_name( RogueClassCmdIsReference* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1184]);
}

RogueClassCmd* RogueCmdIsReference__cloned__CloneArgs( RogueClassCmdIsReference* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdIsReference__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIsReference*,ROGUE_CREATE_OBJECT(CmdIsReference))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdIsReference__dispatch__Visitor( RogueClassCmdIsReference* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdIsReference( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdIsReference__resolve__Scope( RogueClassCmdIsReference* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueType__is_reference( ROGUE_ARG((Rogue_call_ROGUEM153( 40, ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ))) ))) )))) ))))));
}

RogueClassType* Rogue_CmdIsReference__type( RogueClassCmdIsReference* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical);
}

RogueClassCmdIsReference* RogueCmdIsReference__init__Token_Cmd( RogueClassCmdIsReference* THIS, RogueClassToken* _auto_1374_0, RogueClassCmd* _auto_1375_1 )
{
  THIS->operand = _auto_1375_1;
  THIS->t = _auto_1374_0;
  return (RogueClassCmdIsReference*)(THIS);
}

RogueClassCmdElementAccess* RogueCmdElementAccess__init_object( RogueClassCmdElementAccess* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdElementAccess*)(THIS);
}

RogueString* RogueCmdElementAccess__to_String( RogueClassCmdElementAccess* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->context))) )))) )))), Rogue_literal_strings[171] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->index))) )))) )))), Rogue_literal_strings[73] )))) ))));
}

RogueString* RogueCmdElementAccess__type_name( RogueClassCmdElementAccess* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1185]);
}

RogueClassCmd* RogueCmdElementAccess__cloned__CloneArgs( RogueClassCmdElementAccess* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdElementAccess__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdElementAccess*,ROGUE_CREATE_OBJECT(CmdElementAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->index), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdElementAccess__dispatch__Visitor( RogueClassCmdElementAccess* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdElementAccess( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdElementAccess__resolve__Scope( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0 )
{
  THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_1,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_1, scope_0 );
  if (context_type_1->is_array)
  {
    return (RogueClassCmd*)(((RogueCmdReadArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdReadArrayElement__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayElement*,ROGUE_CREATE_OBJECT(CmdReadArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->index) )))), scope_0 ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_2,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_2), ROGUE_ARG(THIS->index) );
    return (RogueClassCmd*)(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, context_type_1, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), Rogue_literal_strings[1267], args_2 )))), true, 0 ))));
  }
}

RogueClassCmd* RogueCmdElementAccess__resolve_assignment__Scope_Cmd( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0, RogueClassCmd* new_value_1 )
{
  THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_2,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_2, scope_0 );
  if (context_type_2->is_array)
  {
    return (RogueClassCmd*)(((RogueCmdWriteArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->index), new_value_1 )))), scope_0 ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_3,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_3), ROGUE_ARG(THIS->index) )))), new_value_1 );
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_4,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, context_type_2, ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), Rogue_literal_strings[343], args_3 )))), true, 0 )))));
    return (RogueClassCmd*)(result_4);
  }
}

RogueClassCmd* RogueCmdElementAccess__resolve_adjust__Scope_Int32( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM154( 44, ROGUE_ARG(((RogueCmdElementAccess__cloned__CloneArgs( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), scope_0, ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )));
}

RogueClassCmd* RogueCmdElementAccess__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdElementAccess* THIS, RogueClassScope* scope_0, RogueClassTokenType* op_1, RogueClassCmd* new_value_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_3,0);
  {
    if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_ampersand_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseAnd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseAnd*,ROGUE_CREATE_OBJECT(CmdBitwiseAnd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_minus_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdSubtract*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdSubtract*,ROGUE_CREATE_OBJECT(CmdSubtract)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_plus_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_slash_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdDivide*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdDivide*,ROGUE_CREATE_OBJECT(CmdDivide)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_tilde_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseXor*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseXor*,ROGUE_CREATE_OBJECT(CmdBitwiseXor)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_times_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdMultiply*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMultiply*,ROGUE_CREATE_OBJECT(CmdMultiply)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)op_1), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_vertical_bar_equals))) )))
    {
      cmd_3 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueClassCmdBitwiseOr*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdBitwiseOr*,ROGUE_CREATE_OBJECT(CmdBitwiseOr)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), new_value_2 ))))))));
    }
    else
    {
      RogueGlobal__println__String( ((RogueClassGlobal*)ROGUE_SINGLETON(Global)), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1296] )))) )))) );
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1293] ))));
    }
  }
  return (RogueClassCmd*)(((RogueCmdAssign__resolve__Scope( ROGUE_ARG(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmdElementAccess__cloned__CloneArgs( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), cmd_3 )))), scope_0 ))));
}

RogueClassCmdElementAccess* RogueCmdElementAccess__init__Token_Cmd_Cmd( RogueClassCmdElementAccess* THIS, RogueClassToken* _auto_1376_0, RogueClassCmd* _auto_1377_1, RogueClassCmd* _auto_1378_2 )
{
  THIS->index = _auto_1378_2;
  THIS->context = _auto_1377_1;
  THIS->t = _auto_1376_0;
  return (RogueClassCmdElementAccess*)(THIS);
}

RogueClassCmdConvertToType* RogueCmdConvertToType__init_object( RogueClassCmdConvertToType* THIS )
{
  RogueCmdTypeOperator__init_object( ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) );
  return (RogueClassCmdConvertToType*)(THIS);
}

RogueString* RogueCmdConvertToType__to_String( RogueClassCmdConvertToType* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[944] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->operand))) )))) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->_target_type))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueCmdConvertToType__type_name( RogueClassCmdConvertToType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1498]);
}

RogueClassCmd* RogueCmdConvertToType__cloned__CloneArgs( RogueClassCmdConvertToType* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdConvertToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdConvertToType*,ROGUE_CREATE_OBJECT(CmdConvertToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

RogueClassCmd* RogueCmdConvertToType__dispatch__Visitor( RogueClassCmdConvertToType* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) ))));
}

RogueClassCmd* RogueCmdConvertToType__resolve__Scope( RogueClassCmdConvertToType* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ))) )));
  return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->operand), ROGUE_ARG(THIS->_target_type), scope_0, false, true ))), scope_0 )));
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__init_object( RogueClassCmdCreateCallback* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateCallback*)(THIS);
}

RogueString* RogueCmdCreateCallback__type_name( RogueClassCmdCreateCallback* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1186]);
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__cloned__CloneArgs( RogueClassCmdCreateCallback* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdCreateCallback*)(((RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCallback*,ROGUE_CREATE_OBJECT(CmdCreateCallback))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->signature), ROGUE_ARG(THIS->_return_type) ))));
}

RogueClassCmd* RogueCmdCreateCallback__dispatch__Visitor( RogueClassCmdCreateCallback* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCreateCallback( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdCreateCallback__resolve__Scope( RogueClassCmdCreateCallback* THIS, RogueClassScope* scope_0 )
{
  if ((((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[453] ))) && !!(THIS->_return_type)))
  {
    THIS->name = ((RogueString__operatorPLUS__String( Rogue_literal_strings[315], ROGUE_ARG(THIS->_return_type->name) )));
  }
  THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_1,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) ))));
  RogueType__organize__Scope( context_type_1, scope_0 );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_2,(((RogueType__find_method__String( context_type_1, ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->signature) )))) )))));
  if (!(!!(m_2)))
  {
    ROGUE_DEF_LOCAL_REF(RogueMethod_List*,methods_3,(((RogueTable_String_Method_List___get__String( ROGUE_ARG(context_type_1->method_lookup_by_name), ROGUE_ARG(THIS->name) )))));
    if (!(!!(methods_3)))
    {
      methods_3 = ((RogueMethod_List*)((RogueTable_String_Method_List___get__String( ROGUE_ARG(context_type_1->global_method_lookup_by_name), ROGUE_ARG(THIS->name) ))));
    }
    if (!(!!(methods_3)))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1268] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1269] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(context_type_1->name) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
    }
    if (methods_3->count != 1)
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1270] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->name) )))) )))), Rogue_literal_strings[1271] )))) )))) ))));
    }
    m_2 = ((RogueClassMethod*)((RogueClassMethod*)(methods_3->data->as_objects[0])));
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_4,0);
  if (!!(m_2->parameters->count))
  {
    parameter_types_4 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_3574_13,(m_2->parameters));
      RogueInt32 _auto_3575_14 = (0);
      for (;_auto_3575_14 < _auto_3574_13->count;++_auto_3575_14)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_15,(((RogueClassLocal*)(_auto_3574_13->data->as_objects[_auto_3575_14]))));
        RogueType_List__add__Type( parameter_types_4, ROGUE_ARG(p_15->_type) );
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,callback_type_name_5,(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(context_type_1->name), Rogue_literal_strings[154] )))), ROGUE_ARG(THIS->name) )))), ROGUE_ARG(((RogueProgram__get_callback_type_signature__Type_List( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), parameter_types_4 )))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,callback_type_6,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), callback_type_name_5 )))));
  if (!(callback_type_6->defined))
  {
    callback_type_6->defined = true;
    RogueAttributes__add__Int32( ROGUE_ARG(callback_type_6->attributes), 0 );
    ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_7,(((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), parameter_types_4, ROGUE_ARG(m_2->_return_type) )))));
    RogueType_List__add__Type( ROGUE_ARG(callback_type_6->base_types), base_type_7 );
    RogueType_List__add__Type( ROGUE_ARG(base_type_7->extended_types), callback_type_6 );
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_8,(((RogueType__add_method__Token_String( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[310] )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,args_9,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    if (!!(parameter_types_4))
    {
      {
        ROGUE_DEF_LOCAL_REF(RogueType_List*,_auto_3576_16,(parameter_types_4));
        RogueInt32 i_17 = (0);
        for (;i_17 < _auto_3576_16->count;++i_17)
        {
          ROGUE_DEF_LOCAL_REF(RogueString*,param_name_10,(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[311], ROGUE_ARG((i_17 + 1)) )))));
          RogueMethod__add_parameter__Token_String_Type( m_call_8, ROGUE_ARG(THIS->t), param_name_10, ROGUE_ARG(((RogueClassType*)(parameter_types_4->data->as_objects[i_17]))) );
          RogueCmd_List__add__Cmd( ((RogueCmd_List*)args_9), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), param_name_10 )))))) );
        }
      }
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_11,0);
    if (((RogueMethod__is_global( m_2 ))))
    {
      RogueAttributes__add__Int32( ROGUE_ARG(callback_type_6->attributes), 1024 );
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(context_type_1->name) )))))), ROGUE_ARG(THIS->name), args_9 ))))));
    }
    else
    {
      RogueType__add_property__Token_String_Type_Cmd( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[432], context_type_1, ROGUE_ARG(((RogueClassCmd*)(NULL))) );
      ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_12,(((RogueType__add_method__Token_String( callback_type_6, ROGUE_ARG(THIS->t), Rogue_literal_strings[417] )))));
      RogueMethod__add_parameter__Token_String_Type( m_init_12, ROGUE_ARG(THIS->t), Rogue_literal_strings[432], ROGUE_ARG(((RogueClassType*)(NULL))) );
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[432] )))))), ROGUE_ARG(THIS->name), args_9 ))))));
    }
    if (!!(m_2->_return_type))
    {
      m_call_8->_return_type = m_2->_return_type;
      cmd_11 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), ROGUE_ARG(THIS->t), cmd_11 ))))));
    }
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)m_call_8->statements)), cmd_11 );
  }
  if (((RogueMethod__is_global( m_2 ))))
  {
    return (RogueClassCmd*)(((RogueCmdReadSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), callback_type_6 )))), scope_0 ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), callback_type_name_5, ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->context) )))) )))), scope_0 ))));
  }
}

RogueClassCmdCreateCallback* RogueCmdCreateCallback__init__Token_Cmd_String_String_Type( RogueClassCmdCreateCallback* THIS, RogueClassToken* _auto_1379_0, RogueClassCmd* _auto_1380_1, RogueString* _auto_1381_2, RogueString* _auto_1382_3, RogueClassType* _auto_1383_4 )
{
  THIS->_return_type = _auto_1383_4;
  THIS->signature = _auto_1382_3;
  THIS->name = _auto_1381_2;
  THIS->context = _auto_1380_1;
  THIS->t = _auto_1379_0;
  return (RogueClassCmdCreateCallback*)(THIS);
}

RogueClassCmdAs* RogueCmdAs__init_object( RogueClassCmdAs* THIS )
{
  RogueCmdTypeOperator__init_object( ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) );
  return (RogueClassCmdAs*)(THIS);
}

RogueString* RogueCmdAs__type_name( RogueClassCmdAs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1499]);
}

RogueClassCmd* RogueCmdAs__cloned__CloneArgs( RogueClassCmdAs* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdAs*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdAs*,ROGUE_CREATE_OBJECT(CmdAs)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

RogueClassCmd* RogueCmdAs__dispatch__Visitor( RogueClassCmdAs* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) ))));
}

RogueClassCmd* RogueCmdAs__resolve__Scope( RogueClassCmdAs* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,operand_type_1,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->operand) ))));
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  if (((void*)operand_type_1) == ((void*)THIS->_target_type))
  {
    return (RogueClassCmd*)(THIS->operand);
  }
  if (!((((RogueType__is_reference( operand_type_1 ))) && ((RogueType__is_reference( ROGUE_ARG(THIS->_target_type) ))))))
  {
    return (RogueClassCmd*)(((RogueType__create_default_value__Token( ROGUE_ARG(THIS->_target_type), ROGUE_ARG(THIS->t) ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdAs__write_cpp__CPPWriter_Logical( RogueClassCmdAs* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG(THIS->_target_type) )))), Rogue_literal_strings[1322] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->operand), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[7] );
  RogueCPPWriter__print_type_info__Type( writer_0, ROGUE_ARG(THIS->_target_type) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[859] );
}

RogueClassFnParam* RogueFnParam__init_object( RogueClassFnParam* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFnParam*)(THIS);
}

RogueString* RogueFnParam__type_name( RogueClassFnParam* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1025]);
}

RogueClassFnParam* RogueFnParam__init__String( RogueClassFnParam* THIS, RogueString* _auto_1384_0 )
{
  THIS->name = _auto_1384_0;
  return (RogueClassFnParam*)(THIS);
}

RogueFnParam_List* RogueFnParam_List__init_object( RogueFnParam_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueFnParam_List*)(THIS);
}

RogueFnParam_List* RogueFnParam_List__init( RogueFnParam_List* THIS )
{
  RogueFnParam_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueFnParam_List*)(THIS);
}

RogueString* RogueFnParam_List__to_String( RogueFnParam_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3577_2,(THIS));
    RogueInt32 _auto_3578_3 = (0);
    for (;_auto_3578_3 < _auto_3577_2->count;++_auto_3578_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,value_4,(((RogueClassFnParam*)(_auto_3577_2->data->as_objects[_auto_3578_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFnParam_List__type_name( RogueFnParam_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1067]);
}

RogueFnParam_List* RogueFnParam_List__init__Int32( RogueFnParam_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFnParam*), true );
  }
  return (RogueFnParam_List*)(THIS);
}

RogueFnParam_List* RogueFnParam_List__add__FnParam( RogueFnParam_List* THIS, RogueClassFnParam* value_0 )
{
  ((RogueFnParam_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueFnParam_List*)(THIS);
}

RogueInt32 RogueFnParam_List__capacity( RogueFnParam_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueClassFnParam* RogueFnParam_List__last( RogueFnParam_List* THIS )
{
  return (RogueClassFnParam*)(((RogueClassFnParam*)(THIS->data->as_objects[(THIS->count - 1)])));
}

RogueFnParam_List* RogueFnParam_List__reserve__Int32( RogueFnParam_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFnParam*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueFnParam_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFnParam*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueFnParam_List*)(THIS);
}

RogueString* RogueArray_FnParam___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1124]);
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__init_object( RogueClassCmdCreateFunction* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateFunction*)(THIS);
}

RogueString* RogueCmdCreateFunction__type_name( RogueClassCmdCreateFunction* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1187]);
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__cloned__CloneArgs( RogueClassCmdCreateFunction* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,args2_1,0);
  if (!!(THIS->with_args))
  {
    args2_1 = ((RogueFnArg_List*)((RogueFnArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnArg_List*,ROGUE_CREATE_OBJECT(FnArg_List))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_3626_2,(THIS->with_args));
      RogueInt32 _auto_3627_3 = (0);
      for (;_auto_3627_3 < _auto_3626_2->count;++_auto_3627_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,arg_4,(((RogueClassFnArg*)(_auto_3626_2->data->as_objects[_auto_3627_3]))));
        RogueFnArg_List__add__FnArg( args2_1, ROGUE_ARG(((RogueFnArg__set_type__Type( ROGUE_ARG(((RogueFnArg__init__String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnArg*,ROGUE_CREATE_OBJECT(FnArg))), ROGUE_ARG(arg_4->name), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(arg_4->value), clone_args_0 ))) )))), ROGUE_ARG(arg_4->_type) )))) );
      }
    }
  }
  return (RogueClassCmdCreateFunction*)(((RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateFunction*,ROGUE_CREATE_OBJECT(CmdCreateFunction))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->parameters), ROGUE_ARG(THIS->_return_type), args2_1, ROGUE_ARG(((RogueCmdStatementList__cloned__CloneArgs( ROGUE_ARG(THIS->statements), clone_args_0 )))), ROGUE_ARG(THIS->is_generic), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->query_cmd), clone_args_0 )))) ))));
}

RogueClassCmd* RogueCmdCreateFunction__dispatch__Visitor( RogueClassCmdCreateFunction* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCreateFunction( v_0, ROGUE_ARG(THIS) ))));
}

RogueLogical RogueCmdCreateFunction__is_generic_function( RogueClassCmdCreateFunction* THIS )
{
  return (RogueLogical)(THIS->is_generic);
}

RogueClassType* RogueCmdCreateFunction__implicit_type__Scope( RogueClassCmdCreateFunction* THIS, RogueClassScope* scope_0 )
{
  if (((RogueCmdCreateFunction__is_generic_function( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassType*)(((RogueClassType*)(NULL)));
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_1,0);
  if ((!!(THIS->parameters) && !!(THIS->parameters->count)))
  {
    parameter_types_1 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3628_2,(THIS->parameters));
      RogueInt32 _auto_3629_3 = (0);
      for (;_auto_3629_3 < _auto_3628_2->count;++_auto_3629_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_4,(((RogueClassFnParam*)(_auto_3628_2->data->as_objects[_auto_3629_3]))));
        RogueType_List__add__Type( parameter_types_1, ROGUE_ARG(param_4->_type) );
      }
    }
  }
  return (RogueClassType*)(((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), parameter_types_1, ROGUE_ARG(THIS->_return_type) ))));
}

RogueClassCmd* RogueCmdCreateFunction__resolve__Scope( RogueClassCmdCreateFunction* THIS, RogueClassScope* scope_0 )
{
  if (THIS->is_generic)
  {
    if (!!(THIS->query_cmd))
    {
      RogueQueryToGenericFunctionConversionVisitor__convert__Cmd_CmdCreateFunction( ((RogueClassQueryToGenericFunctionConversionVisitor*)ROGUE_SINGLETON(QueryToGenericFunctionConversionVisitor)), ROGUE_ARG(THIS->query_cmd), ROGUE_ARG(THIS) );
      THIS->query_cmd = ((RogueClassCmd*)(NULL));
    }
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  ROGUE_DEF_LOCAL_REF(RogueType_List*,parameter_types_1,0);
  if ((!!(THIS->parameters) && !!(THIS->parameters->count)))
  {
    parameter_types_1 = ((RogueType_List*)((RogueType_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueType_List*,ROGUE_CREATE_OBJECT(Type_List))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3631_9,(THIS->parameters));
      RogueInt32 _auto_3632_10 = (0);
      for (;_auto_3632_10 < _auto_3631_9->count;++_auto_3632_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_11,(((RogueClassFnParam*)(_auto_3631_9->data->as_objects[_auto_3632_10]))));
        RogueType_List__add__Type( parameter_types_1, ROGUE_ARG(param_11->_type) );
      }
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,fn_name_2,(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[476], ROGUE_ARG(((RogueProgram__next_unique_integer( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,fn_type_3,(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), fn_name_2 )))));
  fn_type_3->defined = true;
  RogueAttributes__add__Int32( ROGUE_ARG(fn_type_3->attributes), 0 );
  ROGUE_DEF_LOCAL_REF(RogueClassType*,base_type_4,(((RogueProgram__get_callback_type_reference__Token_Type_List_Type( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), parameter_types_1, ROGUE_ARG(THIS->_return_type) )))));
  RogueType_List__add__Type( ROGUE_ARG(fn_type_3->base_types), base_type_4 );
  RogueType_List__add__Type( ROGUE_ARG(base_type_4->extended_types), fn_type_3 );
  ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_call_5,(((RogueType__add_method__Token_String( fn_type_3, ROGUE_ARG(THIS->t), Rogue_literal_strings[310] )))));
  if (!!(THIS->parameters))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3633_12,(THIS->parameters));
      RogueInt32 _auto_3634_13 = (0);
      for (;_auto_3634_13 < _auto_3633_12->count;++_auto_3634_13)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_14,(((RogueClassFnParam*)(_auto_3633_12->data->as_objects[_auto_3634_13]))));
        RogueMethod__add_parameter__Token_String_Type( m_call_5, ROGUE_ARG(THIS->t), ROGUE_ARG(param_14->name), ROGUE_ARG(param_14->_type) );
      }
    }
  }
  m_call_5->_return_type = THIS->_return_type;
  m_call_5->statements = THIS->statements;
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(m_call_5->statements), ROGUE_ARG(((RogueClassVisitor*)(((RogueUpdateThisTypeVisitor__init__Type_Method( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassUpdateThisTypeVisitor*,ROGUE_CREATE_OBJECT(UpdateThisTypeVisitor))), fn_type_3, m_call_5 )))))) );
  if (!!(THIS->with_args))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_init_6,(((RogueType__add_method__Token_String( fn_type_3, ROGUE_ARG(THIS->t), Rogue_literal_strings[417] )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,create_args_7,(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))));
    {
      ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_3635_15,(THIS->with_args));
      RogueInt32 _auto_3636_16 = (0);
      for (;_auto_3636_16 < _auto_3635_15->count;++_auto_3636_16)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,fn_arg_17,(((RogueClassFnArg*)(_auto_3635_15->data->as_objects[_auto_3636_16]))));
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_8,(((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(fn_arg_17->value), scope_0 ))) )))));
        RogueCmd_List__add__Cmd( ((RogueCmd_List*)create_args_7), arg_8 );
        RogueType__add_property__Token_String_Type_Cmd( fn_type_3, ROGUE_ARG(fn_arg_17->value->t), ROGUE_ARG(fn_arg_17->name), ROGUE_ARG((Rogue_call_ROGUEM153( 49, arg_8 ))), ROGUE_ARG(((RogueClassCmd*)(NULL))) );
        RogueMethod__add_parameter__Token_String_Type( m_init_6, ROGUE_ARG(fn_arg_17->value->t), ROGUE_ARG(fn_arg_17->name), ROGUE_ARG(((RogueClassType*)(NULL))) );
      }
    }
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), fn_name_2, create_args_7 )))), scope_0 ))));
  }
  else
  {
    RogueAttributes__add__Int32( ROGUE_ARG(fn_type_3->attributes), 1024 );
    return (RogueClassCmd*)(((RogueCmdReadSingleton__resolve__Scope( ROGUE_ARG(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), fn_type_3 )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdCreateFunction__type( RogueClassCmdCreateFunction* THIS )
{
  if (((RogueCmdCreateFunction__is_generic_function( ROGUE_ARG(THIS) ))))
  {
    return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object);
  }
  else
  {
    return (RogueClassType*)(((RogueCmdCreateFunction__implicit_type__Scope( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassScope*)(NULL))) ))));
  }
}

RogueClassCmdCreateFunction* RogueCmdCreateFunction__init__Token_FnParam_List_Type_FnArg_List_CmdStatementList_Logical_Cmd( RogueClassCmdCreateFunction* THIS, RogueClassToken* _auto_1395_0, RogueFnParam_List* _auto_1396_1, RogueClassType* _auto_1397_2, RogueFnArg_List* _auto_1398_3, RogueClassCmdStatementList* _auto_1399_4, RogueLogical _auto_1400_5, RogueClassCmd* _auto_1401_6 )
{
  THIS->query_cmd = _auto_1401_6;
  THIS->is_generic = _auto_1400_5;
  THIS->statements = _auto_1399_4;
  THIS->with_args = _auto_1398_3;
  THIS->_return_type = _auto_1397_2;
  THIS->parameters = _auto_1396_1;
  THIS->t = _auto_1395_0;
  return (RogueClassCmdCreateFunction*)(THIS);
}

RogueFnArg_List* RogueFnArg_List__init_object( RogueFnArg_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueFnArg_List*)(THIS);
}

RogueFnArg_List* RogueFnArg_List__init( RogueFnArg_List* THIS )
{
  RogueFnArg_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueFnArg_List*)(THIS);
}

RogueString* RogueFnArg_List__to_String( RogueFnArg_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_3637_2,(THIS));
    RogueInt32 _auto_3638_3 = (0);
    for (;_auto_3638_3 < _auto_3637_2->count;++_auto_3638_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,value_4,(((RogueClassFnArg*)(_auto_3637_2->data->as_objects[_auto_3638_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueFnArg_List__type_name( RogueFnArg_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1068]);
}

RogueFnArg_List* RogueFnArg_List__init__Int32( RogueFnArg_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassFnArg*), true );
  }
  return (RogueFnArg_List*)(THIS);
}

RogueFnArg_List* RogueFnArg_List__add__FnArg( RogueFnArg_List* THIS, RogueClassFnArg* value_0 )
{
  ((RogueFnArg_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueFnArg_List*)(THIS);
}

RogueInt32 RogueFnArg_List__capacity( RogueFnArg_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueFnArg_List* RogueFnArg_List__reserve__Int32( RogueFnArg_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassFnArg*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueFnArg_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassFnArg*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueFnArg_List*)(THIS);
}

RogueClassFnArg* RogueFnArg__init_object( RogueClassFnArg* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFnArg*)(THIS);
}

RogueString* RogueFnArg__type_name( RogueClassFnArg* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1026]);
}

RogueClassFnArg* RogueFnArg__init__String_Cmd( RogueClassFnArg* THIS, RogueString* _auto_1454_0, RogueClassCmd* _auto_1455_1 )
{
  THIS->value = _auto_1455_1;
  THIS->name = _auto_1454_0;
  return (RogueClassFnArg*)(THIS);
}

RogueClassFnArg* RogueFnArg__set_type__Type( RogueClassFnArg* THIS, RogueClassType* _auto_1456_0 )
{
  THIS->_type = _auto_1456_0;
  return (RogueClassFnArg*)(THIS);
}

RogueString* RogueArray_FnArg___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1127]);
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__init_object( RogueClassCmdLiteralNull* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueString* RogueCmdLiteralNull__to_String( RogueClassCmdLiteralNull* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1]);
}

RogueString* RogueCmdLiteralNull__type_name( RogueClassCmdLiteralNull* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1419]);
}

RogueClassCmd* RogueCmdLiteralNull__cast_to__Type_Scope_Logical_Logical( RogueClassCmdLiteralNull* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1, RogueLogical allow_implicit_narrowing_2, RogueLogical is_conversion_3 )
{
  if (target_type_0->is_optional)
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(target_type_0->_element_type->name) )))) )))), Rogue_literal_strings[178] )))) )))), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) ))))));
  }
  else
  {
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope_Logical_Logical( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1, false, false )));
  }
}

RogueClassCmd* RogueCmdLiteralNull__cloned__CloneArgs( RogueClassCmdLiteralNull* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralNull__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralNull*,ROGUE_CREATE_OBJECT(CmdLiteralNull))), ROGUE_ARG(THIS->t) ))))));
}

RogueClassCmd* RogueCmdLiteralNull__dispatch__Visitor( RogueClassCmdLiteralNull* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) ))));
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__resolve__Scope( RogueClassCmdLiteralNull* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueClassType* Rogue_CmdLiteralNull__type( RogueClassCmdLiteralNull* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_null);
}

void RogueCmdLiteralNull__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralNull* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1323] );
}

RogueClassCmdLiteralNull* RogueCmdLiteralNull__init__Token( RogueClassCmdLiteralNull* THIS, RogueClassToken* _auto_1404_0 )
{
  THIS->t = _auto_1404_0;
  return (RogueClassCmdLiteralNull*)(THIS);
}

RogueClassCmdLiteralReal64* RogueCmdLiteralReal64__init_object( RogueClassCmdLiteralReal64* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralReal64*)(THIS);
}

RogueString* RogueCmdLiteralReal64__to_String( RogueClassCmdLiteralReal64* THIS )
{
  return (RogueString*)(((RogueReal64__to_String( ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueCmdLiteralReal64__type_name( RogueClassCmdLiteralReal64* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1420]);
}

RogueClassCmd* RogueCmdLiteralReal64__cloned__CloneArgs( RogueClassCmdLiteralReal64* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

RogueClassCmd* RogueCmdLiteralReal64__dispatch__Visitor( RogueClassCmdLiteralReal64* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) ))));
}

RogueClassCmd* RogueCmdLiteralReal64__resolve__Scope( RogueClassCmdLiteralReal64* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralReal64__to_Logical( RogueClassCmdLiteralReal64* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralReal64__type( RogueClassCmdLiteralReal64* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64);
}

void RogueCmdLiteralReal64__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralReal64* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->value == THIS->value)
  {
    if ((THIS->value - THIS->value) == 0.0)
    {
      RogueCPPWriter__print__Real64( writer_0, ROGUE_ARG(THIS->value) );
    }
    else if (THIS->value > 0.0)
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1324] );
    }
    else
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1325] );
    }
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1326] );
  }
}

RogueClassCmdLiteralReal64* RogueCmdLiteralReal64__init__Token_Real64( RogueClassCmdLiteralReal64* THIS, RogueClassToken* _auto_1405_0, RogueReal64 _auto_1406_1 )
{
  THIS->value = _auto_1406_1;
  THIS->t = _auto_1405_0;
  return (RogueClassCmdLiteralReal64*)(THIS);
}

RogueClassCmdLiteralInt64* RogueCmdLiteralInt64__init_object( RogueClassCmdLiteralInt64* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralInt64*)(THIS);
}

RogueString* RogueCmdLiteralInt64__to_String( RogueClassCmdLiteralInt64* THIS )
{
  return (RogueString*)(((RogueInt64__to_String( ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueCmdLiteralInt64__type_name( RogueClassCmdLiteralInt64* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1421]);
}

RogueClassCmd* RogueCmdLiteralInt64__cast_to__Type_Scope_Logical_Logical( RogueClassCmdLiteralInt64* THIS, RogueClassType* target_type_0, RogueClassScope* scope_1, RogueLogical allow_implicit_narrowing_2, RogueLogical is_conversion_3 )
{
  if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralReal64__init__Token_Real64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralReal64*,ROGUE_CREATE_OBJECT(CmdLiteralReal64))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueReal64)(THIS->value))) ))))));
  }
  else if (((void*)target_type_0) == ((void*)((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueInt32)(THIS->value))) ))))));
  }
  else
  {
    return (RogueClassCmd*)((RogueCmd__cast_to__Type_Scope_Logical_Logical( ROGUE_ARG(((RogueClassCmd*)THIS)), target_type_0, scope_1, false, false )));
  }
}

RogueClassCmd* RogueCmdLiteralInt64__cloned__CloneArgs( RogueClassCmdLiteralInt64* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralInt64__init__Token_Int64( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt64*,ROGUE_CREATE_OBJECT(CmdLiteralInt64))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

RogueClassCmd* RogueCmdLiteralInt64__dispatch__Visitor( RogueClassCmdLiteralInt64* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) ))));
}

RogueClassCmd* RogueCmdLiteralInt64__resolve__Scope( RogueClassCmdLiteralInt64* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralInt64__to_Logical( RogueClassCmdLiteralInt64* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralInt64__type( RogueClassCmdLiteralInt64* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64);
}

void RogueCmdLiteralInt64__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralInt64* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int64( writer_0, ROGUE_ARG(THIS->value) )))), Rogue_literal_strings[1327] );
}

RogueClassCmdLiteralInt64* RogueCmdLiteralInt64__init__Token_Int64( RogueClassCmdLiteralInt64* THIS, RogueClassToken* _auto_1407_0, RogueInt64 _auto_1408_1 )
{
  THIS->value = _auto_1408_1;
  THIS->t = _auto_1407_0;
  return (RogueClassCmdLiteralInt64*)(THIS);
}

RogueClassCmdLiteralCharacter* RogueCmdLiteralCharacter__init_object( RogueClassCmdLiteralCharacter* THIS )
{
  RogueCmdLiteral__init_object( ROGUE_ARG(((RogueClassCmdLiteral*)THIS)) );
  return (RogueClassCmdLiteralCharacter*)(THIS);
}

RogueString* RogueCmdLiteralCharacter__to_String( RogueClassCmdLiteralCharacter* THIS )
{
  return (RogueString*)(((RogueCharacter__to_String( ROGUE_ARG(THIS->value) ))));
}

RogueString* RogueCmdLiteralCharacter__type_name( RogueClassCmdLiteralCharacter* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1422]);
}

RogueClassCmd* RogueCmdLiteralCharacter__cloned__CloneArgs( RogueClassCmdLiteralCharacter* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdLiteralCharacter__init__Token_Character( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralCharacter*,ROGUE_CREATE_OBJECT(CmdLiteralCharacter))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->value) ))))));
}

RogueClassCmd* RogueCmdLiteralCharacter__dispatch__Visitor( RogueClassCmdLiteralCharacter* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdLiteral( v_0, ROGUE_ARG(((RogueClassCmdLiteral*)(THIS))) ))));
}

RogueClassCmd* RogueCmdLiteralCharacter__resolve__Scope( RogueClassCmdLiteralCharacter* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueLogical RogueCmdLiteralCharacter__to_Logical( RogueClassCmdLiteralCharacter* THIS )
{
  return (RogueLogical)(!!(THIS->value));
}

RogueClassType* Rogue_CmdLiteralCharacter__type( RogueClassCmdLiteralCharacter* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character);
}

void RogueCmdLiteralCharacter__write_cpp__CPPWriter_Logical( RogueClassCmdLiteralCharacter* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1328] );
  if ((((RogueInt32)(THIS->value)) >= 32 && ((RogueInt32)(THIS->value)) <= 126))
  {
    switch (THIS->value)
    {
      case 10:
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1329] );
        break;
      }
      case (RogueCharacter)'\\':
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1330] );
        break;
      }
      case (RogueCharacter)'\'':
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1331] );
        break;
      }
      default:
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[206] );
        RogueCPPWriter__print_literal_character__Character_Logical( writer_0, ROGUE_ARG(THIS->value), false );
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[206] );
      }
    }
  }
  else
  {
    RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(((RogueInt32)(THIS->value))) );
  }
}

RogueClassCmdLiteralCharacter* RogueCmdLiteralCharacter__init__Token_Character( RogueClassCmdLiteralCharacter* THIS, RogueClassToken* _auto_1409_0, RogueCharacter _auto_1410_1 )
{
  THIS->value = _auto_1410_1;
  THIS->t = _auto_1409_0;
  return (RogueClassCmdLiteralCharacter*)(THIS);
}

RogueClassCmdLiteralThis* RogueCmdLiteralThis__init_object( RogueClassCmdLiteralThis* THIS )
{
  RogueCmdThisContext__init_object( ROGUE_ARG(((RogueClassCmdThisContext*)THIS)) );
  return (RogueClassCmdLiteralThis*)(THIS);
}

RogueString* RogueCmdLiteralThis__to_String( RogueClassCmdLiteralThis* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[945] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->_this_type))) )))) )))), Rogue_literal_strings[75] )))) ))));
}

RogueString* RogueCmdLiteralThis__type_name( RogueClassCmdLiteralThis* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1515]);
}

RogueClassCmd* RogueCmdLiteralThis__cloned__CloneArgs( RogueClassCmdLiteralThis* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_this( macro_args_1 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_2))
  {
    return (RogueClassCmd*)(((RogueTaskArgs__cmd_read_context__Token( task_args_2, ROGUE_ARG(THIS->t) ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdLiteralThis*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(((RogueClassCmdThisContext*)ROGUE_CREATE_REF(RogueClassCmdLiteralThis*,ROGUE_CREATE_OBJECT(CmdLiteralThis)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_this_type) ))))))));
  }
}

RogueClassCmd* RogueCmdLiteralThis__dispatch__Visitor( RogueClassCmdLiteralThis* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM1064( 56, v_0, ROGUE_ARG(((RogueClassCmdThisContext*)(THIS))) )));
}

void RogueCmdLiteralThis__require_type_context( RogueClassCmdLiteralThis* THIS )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[503] ))));
}

RogueClassCmd* RogueCmdLiteralThis__resolve__Scope( RogueClassCmdLiteralThis* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_this_type), scope_0 );
  if (((RogueMethod__is_global( ROGUE_ARG(scope_0->this_method) ))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[526] ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmdThisContext* RogueCmdThisContext__init_object( RogueClassCmdThisContext* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdThisContext*)(THIS);
}

RogueString* RogueCmdThisContext__type_name( RogueClassCmdThisContext* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1188]);
}

RogueClassCmd* RogueCmdThisContext__cloned__CloneArgs( RogueClassCmdThisContext* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_this( macro_args_1 ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
  if (!!(task_args_2))
  {
    return (RogueClassCmd*)(((RogueTaskArgs__cmd_read_context__Token( task_args_2, ROGUE_ARG(THIS->t) ))));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_this_type) ))))));
  }
}

RogueClassCmd* RogueCmdThisContext__dispatch__Visitor( RogueClassCmdThisContext* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM1064( 56, v_0, ROGUE_ARG(THIS) )));
}

RogueClassType* RogueCmdThisContext__implicit_type__Scope( RogueClassCmdThisContext* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(THIS->_this_type);
}

void RogueCmdThisContext__require_type_context( RogueClassCmdThisContext* THIS )
{
}

RogueClassCmd* RogueCmdThisContext__resolve__Scope( RogueClassCmdThisContext* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_this_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdThisContext__type( RogueClassCmdThisContext* THIS )
{
  return (RogueClassType*)(THIS->_this_type);
}

void RogueCmdThisContext__write_cpp__CPPWriter_Logical( RogueClassCmdThisContext* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[615] );
}

RogueClassCmdThisContext* RogueCmdThisContext__init__Token_Type( RogueClassCmdThisContext* THIS, RogueClassToken* _auto_1411_0, RogueClassType* _auto_1412_1 )
{
  THIS->_this_type = _auto_1412_1;
  THIS->t = _auto_1411_0;
  return (RogueClassCmdThisContext*)(THIS);
}

RogueClassCmdCreateList* RogueCmdCreateList__init_object( RogueClassCmdCreateList* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateList*)(THIS);
}

RogueString* RogueCmdCreateList__type_name( RogueClassCmdCreateList* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1189]);
}

RogueClassCmd* RogueCmdCreateList__cloned__CloneArgs( RogueClassCmdCreateList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateList__init__Token_CmdArgs_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateList*,ROGUE_CREATE_OBJECT(CmdCreateList))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))), ROGUE_ARG(THIS->_list_type) ))))));
}

RogueClassCmd* RogueCmdCreateList__dispatch__Visitor( RogueClassCmdCreateList* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__Cmd( v_0, ROGUE_ARG(((RogueClassCmd*)(THIS))) ))));
}

RogueClassCmd* RogueCmdCreateList__resolve__Scope( RogueClassCmdCreateList* THIS, RogueClassScope* scope_0 )
{
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  if ((!(!!(THIS->_list_type)) && !!(THIS->args->count)))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_1,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->as_objects[0]))) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3686_5,(THIS->args));
      RogueInt32 _auto_3687_6 = (0);
      for (;_auto_3687_6 < _auto_3686_5->count;++_auto_3687_6)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_7,(((RogueClassCmd*)(_auto_3686_5->data->as_objects[_auto_3687_6]))));
        common_type_1 = ((RogueClassType*)((RogueCmd__find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), common_type_1, ROGUE_ARG((Rogue_call_ROGUEM153( 49, arg_7 ))) ))));
      }
    }
    THIS->_list_type = ((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(common_type_1))) )))), Rogue_literal_strings[158] )))) )));
    RogueType__organize__Scope( ROGUE_ARG(THIS->_list_type), scope_0 );
  }
  if (!!(THIS->_list_type))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_list_type->_element_type));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3688_8,(THIS->args));
      RogueInt32 index_9 = (0);
      for (;index_9 < _auto_3688_8->count;++index_9)
      {
        THIS->args->data->as_objects[index_9] = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->as_objects[index_9]))), scope_0 ))), element_type_2, scope_0, false, false ))), scope_0 ));
      }
    }
  }
  if (!(!!(THIS->_list_type)))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1272] ))));
  }
  RogueInt32 initial_capacity_3 = (10);
  if (!!(THIS->args->count))
  {
    initial_capacity_3 = ((RogueInt32)THIS->args->count);
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_4,0);
  cmd_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_list_type->name), ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), initial_capacity_3 )))))) )))) ))))));
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3689_10,(THIS->args));
    RogueInt32 _auto_3690_11 = (0);
    for (;_auto_3690_11 < _auto_3689_10->count;++_auto_3690_11)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_12,(((RogueClassCmd*)(_auto_3689_10->data->as_objects[_auto_3690_11]))));
      cmd_4 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), cmd_4, Rogue_literal_strings[342], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), arg_12 )))) ))))));
    }
  }
  return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, cmd_4, scope_0 )));
}

RogueClassCmdCreateList* RogueCmdCreateList__init__Token_CmdArgs_Type( RogueClassCmdCreateList* THIS, RogueClassToken* _auto_1413_0, RogueClassCmdArgs* _auto_1414_1, RogueClassType* _auto_1415_2 )
{
  THIS->_list_type = _auto_1415_2;
  THIS->args = _auto_1414_1;
  THIS->t = _auto_1413_0;
  return (RogueClassCmdCreateList*)(THIS);
}

RogueClassCmdCallPriorMethod* RogueCmdCallPriorMethod__init_object( RogueClassCmdCallPriorMethod* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCallPriorMethod*)(THIS);
}

RogueString* RogueCmdCallPriorMethod__type_name( RogueClassCmdCallPriorMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1190]);
}

RogueClassCmd* RogueCmdCallPriorMethod__cloned__CloneArgs( RogueClassCmdCallPriorMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,cloned_named_args_1,0);
  if (!!(THIS->named_args))
  {
    cloned_named_args_1 = ((RogueCmdNamedArg_List*)((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_3691_2,(THIS->named_args));
      RogueInt32 _auto_3692_3 = (0);
      for (;_auto_3692_3 < _auto_3691_2->count;++_auto_3692_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_4,(((RogueClassCmdNamedArg*)(_auto_3691_2->data->as_objects[_auto_3692_3]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( cloned_named_args_1, ROGUE_ARG(((RogueCmdNamedArg__cloned__CloneArgs( named_arg_4, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallPriorMethod*,ROGUE_CREATE_OBJECT(CmdCallPriorMethod))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))), cloned_named_args_1 ))))));
}

RogueClassCmd* RogueCmdCallPriorMethod__dispatch__Visitor( RogueClassCmdCallPriorMethod* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCallPriorMethod( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdCallPriorMethod__resolve__Scope( RogueClassCmdCallPriorMethod* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_1,(((RogueCmdAccess__init__Token_String_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), ROGUE_ARG(THIS->args), ROGUE_ARG(THIS->named_args) )))));
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->name), Rogue_literal_strings[417] ))))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,call_2,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, ROGUE_ARG(scope_0->_this_type), access_1, true, 2 )))));
    return (RogueClassCmd*)((Rogue_call_ROGUEM144( 18, call_2, scope_0 )));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,call_3,(((RogueScope__resolve_call__Type_CmdAccess_Logical_Int32( scope_0, ROGUE_ARG(scope_0->_this_type), access_1, true, 0 )))));
    return (RogueClassCmd*)((Rogue_call_ROGUEM144( 18, call_3, scope_0 )));
  }
}

RogueClassCmdCallPriorMethod* RogueCmdCallPriorMethod__init__Token_String_CmdArgs_CmdNamedArg_List( RogueClassCmdCallPriorMethod* THIS, RogueClassToken* _auto_1416_0, RogueString* _auto_1417_1, RogueClassCmdArgs* _auto_1418_2, RogueCmdNamedArg_List* _auto_1419_3 )
{
  THIS->named_args = _auto_1419_3;
  THIS->args = _auto_1418_2;
  THIS->name = _auto_1417_1;
  THIS->t = _auto_1416_0;
  return (RogueClassCmdCallPriorMethod*)(THIS);
}

RogueClassCmdInlineNative* RogueCmdInlineNative__init_object( RogueClassCmdInlineNative* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdInlineNative*)(THIS);
}

RogueString* RogueCmdInlineNative__type_name( RogueClassCmdInlineNative* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1191]);
}

RogueClassCmdInlineNative* RogueCmdInlineNative__cloned__CloneArgs( RogueClassCmdInlineNative* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdInlineNative*,result_1,(((RogueCmdInlineNative__init__Token_String_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdInlineNative*,ROGUE_CREATE_OBJECT(CmdInlineNative))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->code), ROGUE_ARG(THIS->_result_type) )))));
  result_1->modify_op = THIS->modify_op;
  result_1->adjust_delta = THIS->adjust_delta;
  result_1->new_value = THIS->new_value;
  return (RogueClassCmdInlineNative*)(result_1);
}

RogueClassCmd* RogueCmdInlineNative__dispatch__Visitor( RogueClassCmdInlineNative* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdInlineNative( v_0, ROGUE_ARG(THIS) ))));
}

RogueLogical RogueCmdInlineNative__requires_semicolon( RogueClassCmdInlineNative* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdInlineNative__resolve__Scope( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0 )
{
  THIS->local_list = ((RogueLocal_List__cloned( ROGUE_ARG(scope_0->local_list) )));
  THIS->this_method = scope_0->this_method;
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_assignment__Scope_Cmd( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueClassCmd* _auto_1423_1 )
{
  THIS->new_value = _auto_1423_1;
  THIS->local_list = ((RogueLocal_List__cloned( ROGUE_ARG(scope_0->local_list) )));
  THIS->this_method = scope_0->this_method;
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1287] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->_result_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_adjust__Scope_Int32( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueInt32 _auto_1426_1 )
{
  THIS->adjust_delta = _auto_1426_1;
  THIS->local_list = ((RogueLocal_List__cloned( ROGUE_ARG(scope_0->local_list) )));
  THIS->this_method = scope_0->this_method;
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1288] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdInlineNative__resolve_modify_and_assign__Scope_TokenType_Cmd( RogueClassCmdInlineNative* THIS, RogueClassScope* scope_0, RogueClassTokenType* _auto_1424_1, RogueClassCmd* _auto_1425_2 )
{
  THIS->new_value = _auto_1425_2;
  THIS->modify_op = _auto_1424_1;
  THIS->local_list = ((RogueLocal_List__cloned( ROGUE_ARG(scope_0->local_list) )));
  THIS->this_method = scope_0->this_method;
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  if (!!(THIS->_result_type))
  {
    RogueType__organize__Scope( ROGUE_ARG(THIS->_result_type), scope_0 );
  }
  else
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1297] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))))) )))) )))) )))) ))));
  }
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->_result_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdInlineNative__type( RogueClassCmdInlineNative* THIS )
{
  return (RogueClassType*)(THIS->_result_type);
}

void RogueCmdInlineNative__write_cpp__CPPWriter_Logical( RogueClassCmdInlineNative* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  switch (THIS->adjust_delta)
  {
    case -1:
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
      break;
    }
    case 1:
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[177] );
      break;
    }
  }
  RogueCPPWriter__print_native_code__Token_Type_Method_Local_List_String_Type( writer_0, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->this_method->type_context), ROGUE_ARG(THIS->this_method), ROGUE_ARG(THIS->local_list), ROGUE_ARG(THIS->code), ROGUE_ARG(THIS->_result_type) );
  if (!!(THIS->adjust_delta))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[179] );
    return;
  }
  if ((((RogueString__contains__Character( ROGUE_ARG(THIS->code), (RogueCharacter)10 ))) || !(!!(THIS->_result_type))))
  {
    RogueCPPWriter__println( writer_0 );
  }
  if (!!(THIS->new_value))
  {
    if (!!(THIS->modify_op))
    {
      RogueCPPWriter__print__Character( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Character( writer_0, (RogueCharacter)' ' )))), ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->modify_op) )))) )))), (RogueCharacter)' ' );
    }
    else
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[632] );
    }
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[179] );
  }
}

RogueClassCmdInlineNative* RogueCmdInlineNative__init__Token_String_Type( RogueClassCmdInlineNative* THIS, RogueClassToken* _auto_1420_0, RogueString* _auto_1421_1, RogueClassType* _auto_1422_2 )
{
  THIS->_result_type = _auto_1422_2;
  THIS->code = _auto_1421_1;
  THIS->t = _auto_1420_0;
  return (RogueClassCmdInlineNative*)(THIS);
}

RogueClassCmdSelect* RogueCmdSelect__init_object( RogueClassCmdSelect* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdSelect*)(THIS);
}

RogueString* RogueCmdSelect__type_name( RogueClassCmdSelect* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1192]);
}

RogueClassCmdSelect* RogueCmdSelect__cloned__CloneArgs( RogueClassCmdSelect* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelect*,result_1,(((RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelect*,ROGUE_CREATE_OBJECT(CmdSelect))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->expression), clone_args_0 )))), ROGUE_ARG(((RogueCmdSelectCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdSelectCase_List*,ROGUE_CREATE_OBJECT(CmdSelectCase_List))), ROGUE_ARG(THIS->cases->count) )))) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3693_2,(THIS->cases));
    RogueInt32 _auto_3694_3 = (0);
    for (;_auto_3694_3 < _auto_3693_2->count;++_auto_3694_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_4,(((RogueClassCmdSelectCase*)(_auto_3693_2->data->as_objects[_auto_3694_3]))));
      RogueCmdSelectCase_List__add__CmdSelectCase( ROGUE_ARG(result_1->cases), ROGUE_ARG(((RogueCmdSelectCase__cloned__CloneArgs( c_4, clone_args_0 )))) );
    }
  }
  return (RogueClassCmdSelect*)(result_1);
}

RogueClassCmd* RogueCmdSelect__dispatch__Visitor( RogueClassCmdSelect* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdSelect( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* RogueCmdSelect__implicit_type__Scope( RogueClassCmdSelect* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,common_type_1,0);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3695_3,(THIS->cases));
    RogueInt32 _auto_3696_4 = (0);
    for (;_auto_3696_4 < _auto_3695_3->count;++_auto_3696_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_5,(((RogueClassCmdSelectCase*)(_auto_3695_3->data->as_objects[_auto_3696_4]))));
      ROGUE_DEF_LOCAL_REF(RogueClassType*,case_type_2,(((RogueCmdSelectCase__implicit_type__Scope( c_5, scope_0 )))));
      if (!(!!(common_type_1)))
      {
        common_type_1 = ((RogueClassType*)case_type_2);
      }
      else if (((void*)common_type_1) != ((void*)case_type_2))
      {
        return (RogueClassType*)(((RogueClassType*)(NULL)));
      }
    }
  }
  return (RogueClassType*)(common_type_1);
}

RogueClassCmd* RogueCmdSelect__resolve__Scope( RogueClassCmdSelect* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->_value_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  if (!(!!(THIS->cases->count)))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1274] ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3697_3,(THIS->cases));
    RogueInt32 _auto_3698_4 = (0);
    for (;_auto_3698_4 < _auto_3697_3->count;++_auto_3698_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_5,(((RogueClassCmdSelectCase*)(_auto_3697_3->data->as_objects[_auto_3698_4]))));
      RogueCmdSelectCase__resolve__Scope( c_5, scope_0 );
      ROGUE_DEF_LOCAL_REF(RogueClassType*,case_type_1,(((Rogue_CmdSelectCase__type( c_5 )))));
      THIS->_value_type = ((RogueCmd__must_find_common_type__Type_Type( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->_value_type), case_type_1 )));
    }
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3699_6,(THIS->cases));
    RogueInt32 _auto_3700_7 = (0);
    for (;_auto_3700_7 < _auto_3699_6->count;++_auto_3700_7)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_8,(((RogueClassCmdSelectCase*)(_auto_3699_6->data->as_objects[_auto_3700_7]))));
      RogueCmdSelectCase__cast_value__Type_Scope( c_8, ROGUE_ARG(THIS->_value_type), scope_0 );
    }
  }
  if (!!(THIS->expression))
  {
    THIS->expression = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->expression), scope_0 ));
    ROGUE_DEF_LOCAL_REF(RogueClassType*,expr_type_2,((Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->expression) ))));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3701_9,(THIS->cases));
      RogueInt32 _auto_3702_10 = (0);
      for (;_auto_3702_10 < _auto_3701_9->count;++_auto_3702_10)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_11,(((RogueClassCmdSelectCase*)(_auto_3701_9->data->as_objects[_auto_3702_10]))));
        RogueCmdSelectCase__cast_conditions__Type_Scope( c_11, expr_type_2, scope_0 );
      }
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdSelect__type( RogueClassCmdSelect* THIS )
{
  return (RogueClassType*)(THIS->_value_type);
}

void RogueCmdSelect__write_cpp__CPPWriter_Logical( RogueClassCmdSelect* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( ROGUE_ARG(THIS), ROGUE_ARG(((RogueCmdSelectCase_List__reader( ROGUE_ARG(THIS->cases) )))), writer_0, true );
}

RogueClassCmdSelect* RogueCmdSelect__init__Token_Local_Cmd_CmdSelectCase_List( RogueClassCmdSelect* THIS, RogueClassToken* _auto_1432_0, RogueClassLocal* _auto_1433_1, RogueClassCmd* _auto_1434_2, RogueCmdSelectCase_List* _auto_1435_3 )
{
  THIS->cases = _auto_1435_3;
  THIS->expression = _auto_1434_2;
  THIS->local_info = _auto_1433_1;
  THIS->t = _auto_1432_0;
  return (RogueClassCmdSelect*)(THIS);
}

void RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( RogueClassCmdSelect* THIS, RogueClassListReader_CmdSelectCase_* reader_0, RogueClassCPPWriter* writer_1, RogueLogical first_case_2 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,select_case_3,(((RogueListReader_CmdSelectCase___read( reader_0 )))));
  if (!(((RogueListReader_CmdSelectCase___has_another( reader_0 )))))
  {
    if (((RogueType__is_reference( ROGUE_ARG(THIS->_value_type) ))))
    {
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1332] );
    }
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(select_case_3->value), writer_1, false );
    if (((RogueType__is_reference( ROGUE_ARG(THIS->_value_type) ))))
    {
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[12] );
    }
    return;
  }
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[666] );
  RogueLogical first_condition_4 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3713_5,(select_case_3->conditions));
    RogueInt32 _auto_3714_6 = (0);
    for (;_auto_3714_6 < _auto_3713_5->count;++_auto_3714_6)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_7,(((RogueClassCmd*)(_auto_3713_5->data->as_objects[_auto_3714_6]))));
      if (first_condition_4)
      {
        first_condition_4 = ((RogueLogical)false);
      }
      else
      {
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1333] );
      }
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[9] );
      if (!!(THIS->expression))
      {
        if (first_case_2)
        {
          RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[160] );
          Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->expression), writer_1, false );
          RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[12] );
          first_case_2 = ((RogueLogical)false);
        }
        else
        {
          RogueCPPWriter__print__String( writer_1, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) );
        }
        RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[159] );
      }
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[9] );
      Rogue_call_ROGUEM157( 50, c_7, writer_1, false );
      RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[611] );
    }
  }
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1334] );
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_value_type) ))))
  {
    RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1332] );
  }
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(select_case_3->value), writer_1, false );
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_value_type) ))))
  {
    RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[12] );
  }
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[1335] );
  RogueCmdSelect__write_cpp__ListReader_CmdSelectCase__CPPWriter_Logical( ROGUE_ARG(THIS), reader_0, writer_1, false );
  RogueCPPWriter__print__String( writer_1, Rogue_literal_strings[12] );
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init_object( RogueCmdSelectCase_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init( RogueCmdSelectCase_List* THIS )
{
  RogueCmdSelectCase_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueString* RogueCmdSelectCase_List__to_String( RogueCmdSelectCase_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3715_2,(THIS));
    RogueInt32 _auto_3716_3 = (0);
    for (;_auto_3716_3 < _auto_3715_2->count;++_auto_3716_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,value_4,(((RogueClassCmdSelectCase*)(_auto_3715_2->data->as_objects[_auto_3716_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdSelectCase_List__type_name( RogueCmdSelectCase_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1069]);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__init__Int32( RogueCmdSelectCase_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdSelectCase*), true );
  }
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__add__CmdSelectCase( RogueCmdSelectCase_List* THIS, RogueClassCmdSelectCase* value_0 )
{
  ((RogueCmdSelectCase_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueInt32 RogueCmdSelectCase_List__capacity( RogueCmdSelectCase_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueClassCmdSelectCase* RogueCmdSelectCase_List__last( RogueCmdSelectCase_List* THIS )
{
  return (RogueClassCmdSelectCase*)(((RogueClassCmdSelectCase*)(THIS->data->as_objects[(THIS->count - 1)])));
}

RogueClassListReader_CmdSelectCase_* RogueCmdSelectCase_List__reader( RogueCmdSelectCase_List* THIS )
{
  return (RogueClassListReader_CmdSelectCase_*)(((RogueListReader_CmdSelectCase___init__CmdSelectCase_List_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassListReader_CmdSelectCase_*,ROGUE_CREATE_OBJECT(ListReader_CmdSelectCase_))), ROGUE_ARG(THIS), 0 ))));
}

RogueCmdSelectCase_List* RogueCmdSelectCase_List__reserve__Int32( RogueCmdSelectCase_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdSelectCase*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdSelectCase_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdSelectCase*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdSelectCase_List*)(THIS);
}

RogueClassCmdSelectCase* RogueCmdSelectCase__init_object( RogueClassCmdSelectCase* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdSelectCase*)(THIS);
}

RogueString* RogueCmdSelectCase__type_name( RogueClassCmdSelectCase* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1193]);
}

RogueClassCmdSelectCase* RogueCmdSelectCase__cloned__CloneArgs( RogueClassCmdSelectCase* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,result_1,(((RogueCmdSelectCase__init__Token_Cmd_List_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSelectCase*,ROGUE_CREATE_OBJECT(CmdSelectCase))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd_List*)(NULL))), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->value), clone_args_0 )))), ROGUE_ARG(THIS->local_info) )))));
  result_1->conditions = (Rogue_call_ROGUEM183( 17, ROGUE_ARG(ROGUE_CREATE_REF(RogueCmd_List*,ROGUE_CREATE_OBJECT(Cmd_List))), ROGUE_ARG(THIS->conditions->count) ));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3753_2,(THIS->conditions));
    RogueInt32 _auto_3754_3 = (0);
    for (;_auto_3754_3 < _auto_3753_2->count;++_auto_3754_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_4,(((RogueClassCmd*)(_auto_3753_2->data->as_objects[_auto_3754_3]))));
      RogueCmd_List__add__Cmd( ROGUE_ARG(result_1->conditions), ROGUE_ARG((Rogue_call_ROGUEM146( 21, c_4, clone_args_0 ))) );
    }
  }
  result_1->condition_is_value = THIS->condition_is_value;
  return (RogueClassCmdSelectCase*)(result_1);
}

RogueClassCmd* RogueCmdSelectCase__dispatch__Visitor( RogueClassCmdSelectCase* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdSelectCase( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* RogueCmdSelectCase__implicit_type__Scope( RogueClassCmdSelectCase* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(((((THIS->value))) ? (ROGUE_ARG((Rogue_call_ROGUEM151( 34, ROGUE_ARG(THIS->value), scope_0 )))) : ROGUE_ARG(((RogueClassType*)(NULL)))));
}

RogueClassCmd* RogueCmdSelectCase__resolve__Scope( RogueClassCmdSelectCase* THIS, RogueClassScope* scope_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3755_1,(THIS->conditions));
    RogueInt32 i_2 = (0);
    for (;i_2 < _auto_3755_1->count;++i_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_3,(((RogueClassCmd*)(_auto_3755_1->data->as_objects[i_2]))));
      condition_3 = ((RogueClassCmd*)((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->as_objects[i_2]))), scope_0 ))) ))));
      if ((Rogue_call_ROGUEM153( 49, condition_3 ))->is_optional)
      {
        condition_3 = ((RogueClassCmd*)((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(condition_3->t), condition_3, Rogue_literal_strings[509] )))), scope_0 ))));
      }
      THIS->conditions->data->as_objects[i_2] = condition_3;
    }
  }
  if (!(!!(THIS->value)))
  {
    THIS->value = (Rogue_call_ROGUEM146( 21, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->as_objects[0]))), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ));
  }
  THIS->value = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->value), scope_0 ))) )));
  if (((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->value) ))->is_optional && THIS->condition_is_value))
  {
    THIS->value = ((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->value->t), ROGUE_ARG(THIS->value), Rogue_literal_strings[312] )))), scope_0 )));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdSelectCase__type( RogueClassCmdSelectCase* THIS )
{
  return (RogueClassType*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->value) )));
}

RogueClassCmdSelectCase* RogueCmdSelectCase__init__Token_Cmd_List_Cmd_Local( RogueClassCmdSelectCase* THIS, RogueClassToken* _auto_1436_0, RogueCmd_List* _auto_1437_1, RogueClassCmd* _auto_1438_2, RogueClassLocal* _auto_1439_3 )
{
  THIS->local_info = _auto_1439_3;
  THIS->value = _auto_1438_2;
  THIS->conditions = _auto_1437_1;
  THIS->t = _auto_1436_0;
  return (RogueClassCmdSelectCase*)(THIS);
}

void RogueCmdSelectCase__cast_conditions__Type_Scope( RogueClassCmdSelectCase* THIS, RogueClassType* to_type_0, RogueClassScope* scope_1 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3756_2,(THIS->conditions));
    RogueInt32 i_3 = (0);
    for (;i_3 < _auto_3756_2->count;++i_3)
    {
      THIS->conditions->data->as_objects[i_3] = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueClassCmd*)(THIS->conditions->data->as_objects[i_3]))), to_type_0, scope_1, false, false ))), scope_1 ))) )));
    }
  }
}

void RogueCmdSelectCase__cast_value__Type_Scope( RogueClassCmdSelectCase* THIS, RogueClassType* to_type_0, RogueClassScope* scope_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,value_type_2,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->value) ))));
  if ((value_type_2->is_optional && !(to_type_0->is_optional)))
  {
    THIS->value = ((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->value->t), ROGUE_ARG(THIS->value), Rogue_literal_strings[312] )))), scope_1 )));
  }
  THIS->value = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->value), to_type_0, scope_1, false, false ))), scope_1 ))) )));
}

RogueString* RogueArray_CmdSelectCase___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1122]);
}

RogueClassCmdImplicitIDAccess* RogueCmdImplicitIDAccess__init_object( RogueClassCmdImplicitIDAccess* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdImplicitIDAccess*)(THIS);
}

RogueString* RogueCmdImplicitIDAccess__type_name( RogueClassCmdImplicitIDAccess* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1194]);
}

RogueClassCmd* RogueCmdImplicitIDAccess__cloned__CloneArgs( RogueClassCmdImplicitIDAccess* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdImplicitIDAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdImplicitIDAccess*,ROGUE_CREATE_OBJECT(CmdImplicitIDAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name) ))))));
}

RogueClassCmd* RogueCmdImplicitIDAccess__dispatch__Visitor( RogueClassCmdImplicitIDAccess* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM1067( 88, v_0, ROGUE_ARG(THIS) )));
}

RogueClassCmd* RogueCmdImplicitIDAccess__resolve__Scope( RogueClassCmdImplicitIDAccess* THIS, RogueClassScope* scope_0 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1275] ))));
}

RogueClassCmdImplicitIDAccess* RogueCmdImplicitIDAccess__init__Token_String( RogueClassCmdImplicitIDAccess* THIS, RogueClassToken* _auto_1441_0, RogueString* _auto_1442_1 )
{
  THIS->name = _auto_1442_1;
  THIS->t = _auto_1441_0;
  return (RogueClassCmdImplicitIDAccess*)(THIS);
}

RogueClassCmd* RogueCmdImplicitIDAccess__convert_to_explicit_access( RogueClassCmdImplicitIDAccess* THIS )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdElementAccess__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdElementAccess*,ROGUE_CREATE_OBJECT(CmdElementAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[312] )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralString__init__Token_String_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralString*,ROGUE_CREATE_OBJECT(CmdLiteralString))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->name), 0 )))))) ))))));
}

RogueClassCmdImplicitAccess* RogueCmdImplicitAccess__init_object( RogueClassCmdImplicitAccess* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdImplicitAccess*)(THIS);
}

RogueString* RogueCmdImplicitAccess__type_name( RogueClassCmdImplicitAccess* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1195]);
}

RogueClassCmd* RogueCmdImplicitAccess__cloned__CloneArgs( RogueClassCmdImplicitAccess* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdImplicitAccess__init__Token_CmdAccess( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdImplicitAccess*,ROGUE_CREATE_OBJECT(CmdImplicitAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmdAccess*)(RogueObject_as(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(((RogueClassCmd*)(THIS->access))), clone_args_0 ))),RogueTypeCmdAccess)))) ))))));
}

RogueClassCmd* RogueCmdImplicitAccess__dispatch__Visitor( RogueClassCmdImplicitAccess* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM1066( 87, v_0, ROGUE_ARG(THIS) )));
}

RogueClassCmd* RogueCmdImplicitAccess__resolve__Scope( RogueClassCmdImplicitAccess* THIS, RogueClassScope* scope_0 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1275] ))));
}

RogueClassCmdImplicitAccess* RogueCmdImplicitAccess__init__Token_CmdAccess( RogueClassCmdImplicitAccess* THIS, RogueClassToken* _auto_1443_0, RogueClassCmdAccess* _auto_1444_1 )
{
  THIS->access = _auto_1444_1;
  THIS->t = _auto_1443_0;
  return (RogueClassCmdImplicitAccess*)(THIS);
}

RogueClassCmd* RogueCmdImplicitAccess__convert_to_explicit_access( RogueClassCmdImplicitAccess* THIS )
{
  if (!!(THIS->access))
  {
    THIS->access->context = ((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[312] )))));
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS->access)));
  }
  else
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[312] ))))));
  }
}

RogueClassCmdRequire* RogueCmdRequire__init_object( RogueClassCmdRequire* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdRequire*)(THIS);
}

RogueString* RogueCmdRequire__type_name( RogueClassCmdRequire* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1196]);
}

RogueClassCmdRequire* RogueCmdRequire__cloned__CloneArgs( RogueClassCmdRequire* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdRequire*)(((RogueCmdRequire__init__Token_Cmd_Cmd_Local( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdRequire*,ROGUE_CREATE_OBJECT(CmdRequire))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->condition), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->message), clone_args_0 ))), ROGUE_ARG(THIS->local_info) ))));
}

RogueClassCmd* RogueCmdRequire__dispatch__Visitor( RogueClassCmdRequire* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdRequire( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdRequire__resolve__Scope( RogueClassCmdRequire* THIS, RogueClassScope* scope_0 )
{
  THIS->condition = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->condition), scope_0 ));
  THIS->local_info->_type = (Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->condition) ));
  THIS->message = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->message), scope_0 ))) )));
  THIS->error = ((RogueCmdThrow__resolve__Scope( ROGUE_ARG(((RogueCmdThrow__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThrow*,ROGUE_CREATE_OBJECT(CmdThrow))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[1276], ROGUE_ARG(((RogueCmdArgs__init__Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(THIS->message) )))) )))))) )))), scope_0 )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdRequire__type( RogueClassCmdRequire* THIS )
{
  return (RogueClassType*)((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->condition) )));
}

void RogueCmdRequire__write_cpp__CPPWriter_Logical( RogueClassCmdRequire* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[160] );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->condition), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1316] )))), ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[152] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->error), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

RogueClassCmdRequire* RogueCmdRequire__init__Token_Cmd_Cmd_Local( RogueClassCmdRequire* THIS, RogueClassToken* _auto_1445_0, RogueClassCmd* _auto_1446_1, RogueClassCmd* _auto_1447_2, RogueClassLocal* _auto_1448_3 )
{
  THIS->local_info = _auto_1448_3;
  THIS->message = _auto_1447_2;
  THIS->condition = _auto_1446_1;
  THIS->t = _auto_1445_0;
  return (RogueClassCmdRequire*)(THIS);
}

RogueClassCmdEnsure* RogueCmdEnsure__init_object( RogueClassCmdEnsure* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdEnsure*)(THIS);
}

RogueString* RogueCmdEnsure__type_name( RogueClassCmdEnsure* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1197]);
}

RogueClassCmd* RogueCmdEnsure__cloned__CloneArgs( RogueClassCmdEnsure* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdEnsure*,result_1,(((RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdEnsure*,ROGUE_CREATE_OBJECT(CmdEnsure))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(((RogueCmd__cloned__CmdArgs_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->args), clone_args_0 )))), ROGUE_ARG(((RogueCmdNamedArg_List*)(NULL))) )))));
  if (!!(THIS->named_args))
  {
    result_1->named_args = ((RogueCmdNamedArg_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdNamedArg_List*,ROGUE_CREATE_OBJECT(CmdNamedArg_List))), ROGUE_ARG(THIS->named_args->count) )));
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_3758_2,(THIS->named_args));
      RogueInt32 _auto_3759_3 = (0);
      for (;_auto_3759_3 < _auto_3758_2->count;++_auto_3759_3)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,named_arg_4,(((RogueClassCmdNamedArg*)(_auto_3758_2->data->as_objects[_auto_3759_3]))));
        RogueCmdNamedArg_List__add__CmdNamedArg( ROGUE_ARG(result_1->named_args), ROGUE_ARG(((RogueCmdNamedArg__cloned__CloneArgs( named_arg_4, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))) );
      }
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(result_1)));
}

RogueClassCmd* RogueCmdEnsure__dispatch__Visitor( RogueClassCmdEnsure* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdEnsure( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* RogueCmdEnsure__implicit_type__Scope( RogueClassCmdEnsure* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)((Rogue_call_ROGUEM151( 34, ROGUE_ARG(THIS->operand), scope_0 )));
}

RogueClassCmd* RogueCmdEnsure__resolve__Scope( RogueClassCmdEnsure* THIS, RogueClassScope* scope_0 )
{
  THIS->cmd_read = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) )));
  if (!(((RogueType__is_reference( ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->cmd_read) ))) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1277] ))));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,cmd_new_1,(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->cmd_read) ))->name), ROGUE_ARG(THIS->args) )))));
  cmd_new_1->named_args = THIS->named_args;
  THIS->cmd_write = ((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCmd*)(cmd_new_1))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,cmd_read_2,(((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) )))));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_3,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdLogicalNot*)(((RogueCmdUnary__init__Token_Cmd( ROGUE_ARG(((RogueClassCmdUnary*)ROGUE_CREATE_REF(RogueClassCmdLogicalNot*,ROGUE_CREATE_OBJECT(CmdLogicalNot)))), ROGUE_ARG(THIS->t), cmd_read_2 )))))))), 2 )))));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->operand), ROGUE_ARG(((RogueClassCmd*)(cmd_new_1))) )))))) );
  return (RogueClassCmd*)(((RogueCmdIf__resolve__Scope( cmd_if_3, scope_0 ))));
}

RogueClassType* Rogue_CmdEnsure__type( RogueClassCmdEnsure* THIS )
{
  ROGUE_DEF_LOCAL_REF_NULL(RogueClassLocal*,_auto_1449_0);
  return (RogueClassType*)(((_auto_1449_0=(THIS->local_info))?_auto_1449_0:ROGUE_THROW(RogueClassRequirementError,((RogueRequirementError__init__String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRequirementError*,ROGUE_CREATE_OBJECT(RequirementError))), Rogue_literal_strings[1300] )))))->_type);
}

RogueClassCmdEnsure* RogueCmdEnsure__init__Token_Cmd_CmdArgs_CmdNamedArg_List( RogueClassCmdEnsure* THIS, RogueClassToken* _auto_1450_0, RogueClassCmd* _auto_1451_1, RogueClassCmdArgs* _auto_1452_2, RogueCmdNamedArg_List* _auto_1453_3 )
{
  THIS->named_args = _auto_1453_3;
  THIS->args = _auto_1452_2;
  THIS->operand = _auto_1451_1;
  THIS->t = _auto_1450_0;
  return (RogueClassCmdEnsure*)(THIS);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__init_object( RogueClassCmdTypedLiteralList* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueString* RogueCmdTypedLiteralList__type_name( RogueClassCmdTypedLiteralList* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1198]);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__cloned__CloneArgs( RogueClassCmdTypedLiteralList* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdTypedLiteralList*)(((RogueCmdTypedLiteralList__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTypedLiteralList*,ROGUE_CREATE_OBJECT(CmdTypedLiteralList))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->elements), clone_args_0 )))) ))));
}

RogueClassCmd* RogueCmdTypedLiteralList__dispatch__Visitor( RogueClassCmdTypedLiteralList* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTypedLiteralList( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* RogueCmdTypedLiteralList__implicit_type__Scope( RogueClassCmdTypedLiteralList* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassType*)(((Rogue_CmdTypedLiteralList__type( ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdTypedLiteralList__resolve__Scope( RogueClassCmdTypedLiteralList* THIS, RogueClassScope* scope_0 )
{
  if (THIS->elements->count <= 32)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,result_1,(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3760_4,(THIS->elements));
      RogueInt32 _auto_3761_5 = (0);
      for (;_auto_3761_5 < _auto_3760_4->count;++_auto_3761_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,element_6,(((RogueClassCmd*)(_auto_3760_4->data->as_objects[_auto_3761_5]))));
        result_1 = ((RogueClassCmd*)((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), result_1, Rogue_literal_strings[342], element_6 ))))));
      }
    }
    return (RogueClassCmd*)((Rogue_call_ROGUEM144( 43, result_1, scope_0 )));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,list_var_name_2,(((RogueProgram__create_unique_id( ((RogueClassProgram*)ROGUE_SINGLETON(Program)) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,list_var_3,(((RogueMethod__add_local__Token_String_Type_Cmd( ROGUE_ARG(scope_0->this_method), ROGUE_ARG(THIS->t), list_var_name_2, ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name), ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))) )))))) )))));
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)scope_0->this_body)), ROGUE_ARG(((RogueCmdLocalDeclaration__resolve__Scope( ROGUE_ARG(((RogueCmdLocalDeclaration__init__Token_Local_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLocalDeclaration*,ROGUE_CREATE_OBJECT(CmdLocalDeclaration))), ROGUE_ARG(THIS->t), list_var_3, false )))), scope_0 )))) );
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3762_7,(THIS->elements));
      RogueInt32 _auto_3763_8 = (0);
      for (;_auto_3763_8 < _auto_3762_7->count;++_auto_3763_8)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,element_9,(((RogueClassCmd*)(_auto_3762_7->data->as_objects[_auto_3763_8]))));
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)scope_0->this_body)), ROGUE_ARG(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), list_var_name_2 )))))), Rogue_literal_strings[342], element_9 )))), scope_0 )))) );
      }
    }
    return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), list_var_name_2 )))), scope_0 ))));
  }
}

RogueClassType* Rogue_CmdTypedLiteralList__type( RogueClassCmdTypedLiteralList* THIS )
{
  return (RogueClassType*)(((RogueProgram__get_type_reference__Token_String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->list_type_name) ))));
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__init__Token_String_CmdArgs( RogueClassCmdTypedLiteralList* THIS, RogueClassToken* _auto_1457_0, RogueString* _auto_1458_1, RogueClassCmdArgs* _auto_1459_2 )
{
  THIS->elements = _auto_1459_2;
  THIS->list_type_name = _auto_1458_1;
  THIS->t = _auto_1457_0;
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueClassCmdTypedLiteralList* RogueCmdTypedLiteralList__add__Cmd( RogueClassCmdTypedLiteralList* THIS, RogueClassCmd* element_0 )
{
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->elements)), element_0 );
  return (RogueClassCmdTypedLiteralList*)(THIS);
}

RogueClassCmdCreateCompound* RogueCmdCreateCompound__init_object( RogueClassCmdCreateCompound* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateCompound*)(THIS);
}

RogueString* RogueCmdCreateCompound__type_name( RogueClassCmdCreateCompound* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1199]);
}

RogueClassCmd* RogueCmdCreateCompound__cloned__CloneArgs( RogueClassCmdCreateCompound* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateCompound__init__Token_Type_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateCompound*,ROGUE_CREATE_OBJECT(CmdCreateCompound))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

RogueClassCmd* RogueCmdCreateCompound__dispatch__Visitor( RogueClassCmdCreateCompound* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCreateCompound( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdCreateCompound__resolve__Scope( RogueClassCmdCreateCompound* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  if (!(!!(THIS->args)))
  {
    THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
  }
  RogueInt32 non_native_property_count_1 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueProperty_List*,_auto_3819_4,(THIS->_of_type->property_list));
    RogueInt32 _auto_3820_5 = (0);
    for (;_auto_3820_5 < _auto_3819_4->count;++_auto_3820_5)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_6,(((RogueClassProperty*)(_auto_3819_4->data->as_objects[_auto_3820_5]))));
      if (!(((RogueProperty__is_native( p_6 )))))
      {
        ++non_native_property_count_1;
      }
    }
  }
  RogueInt32 i_2 = (THIS->args->count);
  while (THIS->args->count < non_native_property_count_1)
  {
    ROGUE_DEF_LOCAL_REF(RogueClassProperty*,p_3,(((RogueClassProperty*)(THIS->_of_type->property_list->data->as_objects[i_2]))));
    if (!(((RogueProperty__is_native( p_3 )))))
    {
      if (!!(p_3->initial_value))
      {
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(p_3->initial_value), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), scope_0 ))) );
      }
      else
      {
        RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->args)), ROGUE_ARG(((RogueType__create_default_value__Token( ROGUE_ARG(p_3->_type), ROGUE_ARG(THIS->t) )))) );
      }
    }
    ++i_2;
  }
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateCompound__type( RogueClassCmdCreateCompound* THIS )
{
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdCreateCompound__write_cpp__CPPWriter_Logical( RogueClassCmdCreateCompound* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( writer_0, ROGUE_ARG(THIS->_of_type) )))), Rogue_literal_strings[9] );
  if (!!(THIS->args->count))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
    RogueLogical first_2 = (true);
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3821_3,(THIS->args));
      RogueInt32 _auto_3822_4 = (0);
      for (;_auto_3822_4 < _auto_3821_3->count;++_auto_3822_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3821_3->data->as_objects[_auto_3822_4]))));
        if (first_2)
        {
          first_2 = ((RogueLogical)false);
        }
        else
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
        }
        Rogue_call_ROGUEM157( 50, arg_5, writer_0, false );
      }
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

RogueClassCmdCreateCompound* RogueCmdCreateCompound__init__Token_Type_CmdArgs( RogueClassCmdCreateCompound* THIS, RogueClassToken* _auto_1542_0, RogueClassType* _auto_1543_1, RogueClassCmdArgs* _auto_1544_2 )
{
  THIS->args = _auto_1544_2;
  THIS->_of_type = _auto_1543_1;
  THIS->t = _auto_1542_0;
  return (RogueClassCmdCreateCompound*)(THIS);
}

RogueClassVisitor* RogueVisitor__init_object( RogueClassVisitor* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassVisitor*)(THIS);
}

RogueString* RogueVisitor__type_name( RogueClassVisitor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[415]);
}

RogueClassCmd* RogueVisitor__visit__Cmd( RogueClassVisitor* THIS, RogueClassCmd* cmd_0 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueRogueError__init__String_String_Int32_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassRogueError*,ROGUE_CREATE_OBJECT(RogueError))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM1062( 16, ROGUE_ARG(THIS) ))) )))) )))), Rogue_literal_strings[416] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG((Rogue_call_ROGUEM142( 16, cmd_0 ))) )))) )))), Rogue_literal_strings[405] )))) )))), ROGUE_ARG(((RogueString*)(NULL))), 0, 0 ))));
}

void RogueVisitor__visit__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
  Rogue_call_ROGUEM1068( 97, ROGUE_ARG(THIS), type_0 );
  RogueVisitor__dispatch__Type( ROGUE_ARG(THIS), type_0 );
  RogueVisitor__on_leave__Type( ROGUE_ARG(THIS), type_0 );
}

void RogueVisitor__visit__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
  Rogue_call_ROGUEM1069( 98, ROGUE_ARG(THIS), m_0 );
  RogueVisitor__dispatch__Method( ROGUE_ARG(THIS), m_0 );
  RogueVisitor__on_leave__Method( ROGUE_ARG(THIS), m_0 );
}

void RogueVisitor__visit__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
  RogueVisitor__on_enter__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
  RogueVisitor__dispatch__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
  RogueVisitor__on_leave__CmdStatementList( ROGUE_ARG(THIS), statements_0 );
}

void RogueVisitor__visit__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
  RogueVisitor__on_enter__CmdArgs( ROGUE_ARG(THIS), args_0 );
  RogueVisitor__dispatch__CmdArgs( ROGUE_ARG(THIS), args_0 );
  RogueVisitor__on_leave__CmdArgs( ROGUE_ARG(THIS), args_0 );
}

RogueClassCmd* RogueVisitor__visit__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
  RogueVisitor__on_enter__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdStatement( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
  RogueVisitor__on_enter__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAssert( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
  RogueVisitor__on_enter__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdRequire( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
  RogueVisitor__on_enter__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAssign( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
  RogueVisitor__on_enter__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdLocalDeclaration( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
  RogueVisitor__on_enter__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReturn( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
  RogueVisitor__on_enter__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdBlock( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
  RogueVisitor__on_enter__CmdIf( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdIf( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdIf( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
  RogueVisitor__on_enter__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdSwitch( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
  RogueVisitor__on_enter__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWhich( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
  RogueVisitor__on_enter__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWhichCase( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
  RogueVisitor__on_enter__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdContingent( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
  RogueVisitor__on_enter__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdGenericLoop( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
  RogueVisitor__on_enter__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdElementAccess( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
  RogueVisitor__on_enter__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdEnsure( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
  RogueVisitor__on_enter__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdForEach( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
  RogueVisitor__on_enter__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdFormattedString( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdIsReference( RogueClassVisitor* THIS, RogueClassCmdIsReference* cmd_0 )
{
  RogueVisitor__on_enter__CmdIsReference( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdIsReference( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdIsReference( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
  RogueVisitor__on_enter__CmdTry( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTry( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTry( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdTryExpression( RogueClassVisitor* THIS, RogueClassCmdTryExpression* cmd_0 )
{
  RogueVisitor__on_enter__CmdTryExpression( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTryExpression( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTryExpression( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
  RogueVisitor__on_enter__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCatch( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
  RogueVisitor__on_enter__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdThrow( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
  RogueVisitor__on_enter__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdEscape( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
  RogueVisitor__on_enter__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNextIteration( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
  RogueVisitor__on_enter__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNecessary( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
  RogueVisitor__on_enter__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdSufficient( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
  RogueVisitor__on_enter__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdLiteral( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  Rogue_call_ROGUEM1070( 134, ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdLiteralString( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdLiteralString( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  RogueVisitor__on_enter__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAccess( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateObject( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCreateCallback( RogueClassVisitor* THIS, RogueClassCmdCreateCallback* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateCallback( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateCallback( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateCallback( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateCompound( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCreateFunction( RogueClassVisitor* THIS, RogueClassCmdCreateFunction* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateFunction( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateFunction( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateFunction( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdTypedLiteralList( RogueClassVisitor* THIS, RogueClassCmdTypedLiteralList* cmd_0 )
{
  RogueVisitor__on_enter__CmdTypedLiteralList( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTypedLiteralList( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTypedLiteralList( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  Rogue_call_ROGUEM1071( 160, ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdThisContext( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdThisContext( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadSingleton( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteSingleton( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadLocal( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteLocal( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadGlobal( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteGlobal( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadProperty( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteProperty( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
  RogueVisitor__on_enter__CmdCall( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCall( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCall( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  RogueVisitor__on_enter__CmdCallDynamicMethod( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCallDynamicMethod( ROGUE_ARG(THIS), cmd_0 );
  Rogue_call_ROGUEM1072( 189, ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
  RogueVisitor__on_enter__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCallPriorMethod( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
  RogueVisitor__on_enter__CmdRange( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdRange( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdRange( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
  RogueVisitor__on_enter__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdUnary( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
  RogueVisitor__on_enter__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdBinary( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
  RogueVisitor__on_enter__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAdjustLocal( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
  RogueVisitor__on_enter__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAdjustProperty( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
  RogueVisitor__on_enter__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdAdjustGlobal( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdModifyAndAssign( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssign* cmd_0 )
{
  RogueVisitor__on_enter__CmdModifyAndAssign( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdModifyAndAssign( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdModifyAndAssign( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
  RogueVisitor__on_enter__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdModifyAndAssignLocal( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
  RogueVisitor__on_enter__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdModifyAndAssignGlobal( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
  RogueVisitor__on_enter__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdModifyAndAssignProperty( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
  RogueVisitor__on_enter__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdCreateArray( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadArrayElement( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
  RogueVisitor__on_enter__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdReadArrayCount( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
  RogueVisitor__on_enter__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdWriteArrayElement( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
  RogueVisitor__on_enter__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTypeOperator( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
  RogueVisitor__on_enter__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTaskControl( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
  RogueVisitor__on_enter__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdTrace( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
  RogueVisitor__on_enter__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdLabel( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdImplicitAccess( RogueClassVisitor* THIS, RogueClassCmdImplicitAccess* cmd_0 )
{
  RogueVisitor__on_enter__CmdImplicitAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdImplicitAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdImplicitAccess( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdImplicitIDAccess( RogueClassVisitor* THIS, RogueClassCmdImplicitIDAccess* cmd_0 )
{
  RogueVisitor__on_enter__CmdImplicitIDAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdImplicitIDAccess( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdImplicitIDAccess( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
  RogueVisitor__on_enter__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdInlineNative( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
  RogueVisitor__on_enter__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdMakeRequisite( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
  RogueVisitor__on_enter__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNoAction( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
  RogueVisitor__on_enter__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdSelect( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
  RogueVisitor__on_enter__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdSelectCase( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
  RogueVisitor__on_enter__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNamedArg( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

RogueClassCmd* RogueVisitor__visit__CmdNativeSource( RogueClassVisitor* THIS, RogueClassCmdNativeSource* cmd_0 )
{
  RogueVisitor__on_enter__CmdNativeSource( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__dispatch__CmdNativeSource( ROGUE_ARG(THIS), cmd_0 );
  RogueVisitor__on_leave__CmdNativeSource( ROGUE_ARG(THIS), cmd_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(cmd_0)));
}

void RogueVisitor__on_enter__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
}

void RogueVisitor__on_enter__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
}

void RogueVisitor__on_enter__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
}

void RogueVisitor__on_enter__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
}

void RogueVisitor__on_enter__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateCallback( RogueClassVisitor* THIS, RogueClassCmdCreateCallback* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateFunction( RogueClassVisitor* THIS, RogueClassCmdCreateFunction* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdImplicitAccess( RogueClassVisitor* THIS, RogueClassCmdImplicitAccess* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdImplicitIDAccess( RogueClassVisitor* THIS, RogueClassCmdImplicitIDAccess* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdIsReference( RogueClassVisitor* THIS, RogueClassCmdIsReference* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdModifyAndAssign( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssign* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNativeSource( RogueClassVisitor* THIS, RogueClassCmdNativeSource* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTryExpression( RogueClassVisitor* THIS, RogueClassCmdTryExpression* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdTypedLiteralList( RogueClassVisitor* THIS, RogueClassCmdTypedLiteralList* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
}

void RogueVisitor__on_enter__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
}

void RogueVisitor__on_leave__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
}

void RogueVisitor__on_leave__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
}

void RogueVisitor__on_leave__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
}

void RogueVisitor__on_leave__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
}

void RogueVisitor__on_leave__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateCallback( RogueClassVisitor* THIS, RogueClassCmdCreateCallback* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateFunction( RogueClassVisitor* THIS, RogueClassCmdCreateFunction* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdImplicitAccess( RogueClassVisitor* THIS, RogueClassCmdImplicitAccess* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdImplicitIDAccess( RogueClassVisitor* THIS, RogueClassCmdImplicitIDAccess* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdIsReference( RogueClassVisitor* THIS, RogueClassCmdIsReference* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdModifyAndAssign( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssign* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNativeSource( RogueClassVisitor* THIS, RogueClassCmdNativeSource* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTryExpression( RogueClassVisitor* THIS, RogueClassCmdTryExpression* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdTypedLiteralList( RogueClassVisitor* THIS, RogueClassCmdTypedLiteralList* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
}

void RogueVisitor__on_leave__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
}

void RogueVisitor__dispatch__Type( RogueClassVisitor* THIS, RogueClassType* type_0 )
{
}

void RogueVisitor__dispatch__Method( RogueClassVisitor* THIS, RogueClassMethod* m_0 )
{
}

void RogueVisitor__dispatch__CmdStatementList( RogueClassVisitor* THIS, RogueClassCmdStatementList* statements_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdStatementList*,_auto_3823_1,(statements_0));
    RogueInt32 index_2 = (0);
    for (;index_2 < _auto_3823_1->count;++index_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,statement_3,(((RogueClassCmd*)(_auto_3823_1->data->as_objects[index_2]))));
      statements_0->data->as_objects[index_2] = (Rogue_call_ROGUEM148( 27, statement_3, ROGUE_ARG(THIS) ));
    }
  }
}

void RogueVisitor__dispatch__CmdArgs( RogueClassVisitor* THIS, RogueClassCmdArgs* args_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3824_1,(args_0));
    RogueInt32 index_2 = (0);
    for (;index_2 < _auto_3824_1->count;++index_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3824_1->data->as_objects[index_2]))));
      args_0->data->as_objects[index_2] = (Rogue_call_ROGUEM148( 27, arg_3, ROGUE_ARG(THIS) ));
    }
  }
}

void RogueVisitor__dispatch__CmdStatement( RogueClassVisitor* THIS, RogueClassCmdStatement* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdAssert( RogueClassVisitor* THIS, RogueClassCmdAssert* cmd_0 )
{
  cmd_0->condition = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) ));
  cmd_0->message = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->message), ROGUE_ARG(THIS) ));
  if (!!(cmd_0->error))
  {
    cmd_0->error = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->error), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdRequire( RogueClassVisitor* THIS, RogueClassCmdRequire* cmd_0 )
{
  cmd_0->condition = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) ));
  cmd_0->message = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->message), ROGUE_ARG(THIS) ));
  if (!!(cmd_0->error))
  {
    cmd_0->error = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->error), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdAssign( RogueClassVisitor* THIS, RogueClassCmdAssign* cmd_0 )
{
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
  cmd_0->target = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->target), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdLocalDeclaration( RogueClassVisitor* THIS, RogueClassCmdLocalDeclaration* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  if (!!(cmd_0->local_info->initial_value))
  {
    cmd_0->local_info->initial_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->local_info->initial_value), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdReturn( RogueClassVisitor* THIS, RogueClassCmdReturn* cmd_0 )
{
  if (!!(cmd_0->value))
  {
    cmd_0->value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->value), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdBlock( RogueClassVisitor* THIS, RogueClassCmdBlock* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdIf( RogueClassVisitor* THIS, RogueClassCmdIf* cmd_0 )
{
  cmd_0->condition = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) ));
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  if (!!(cmd_0->else_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->else_statements), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdSwitch( RogueClassVisitor* THIS, RogueClassCmdSwitch* cmd_0 )
{
  cmd_0->expression = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) ));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3825_1,(cmd_0->cases));
    RogueInt32 _auto_3826_2 = (0);
    for (;_auto_3826_2 < _auto_3825_1->count;++_auto_3826_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_3825_1->data->as_objects[_auto_3826_2]))));
      RogueCmdWhichCase__dispatch__Visitor( c_3, ROGUE_ARG(THIS) );
    }
  }
  if (!!(cmd_0->case_others))
  {
    RogueCmdWhichCase__dispatch__Visitor( ROGUE_ARG(cmd_0->case_others), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdWhich( RogueClassVisitor* THIS, RogueClassCmdWhich* cmd_0 )
{
  cmd_0->expression = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) ));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3827_1,(cmd_0->cases));
    RogueInt32 _auto_3828_2 = (0);
    for (;_auto_3828_2 < _auto_3827_1->count;++_auto_3828_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_3827_1->data->as_objects[_auto_3828_2]))));
      RogueCmdWhichCase__dispatch__Visitor( c_3, ROGUE_ARG(THIS) );
    }
  }
  if (!!(cmd_0->case_others))
  {
    RogueCmdWhichCase__dispatch__Visitor( ROGUE_ARG(cmd_0->case_others), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdWhichCase( RogueClassVisitor* THIS, RogueClassCmdWhichCase* cmd_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3829_1,(cmd_0->conditions));
    RogueInt32 index_2 = (0);
    for (;index_2 < _auto_3829_1->count;++index_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_3,(((RogueClassCmd*)(_auto_3829_1->data->as_objects[index_2]))));
      cmd_0->conditions->data->as_objects[index_2] = (Rogue_call_ROGUEM148( 27, condition_3, ROGUE_ARG(THIS) ));
    }
  }
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdContingent( RogueClassVisitor* THIS, RogueClassCmdContingent* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  if (!!(cmd_0->satisfied_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->satisfied_statements), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->unsatisfied_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->unsatisfied_statements), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdGenericLoop( RogueClassVisitor* THIS, RogueClassCmdGenericLoop* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  if (!!(cmd_0->control_statements))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->control_statements), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->condition))
  {
    cmd_0->condition = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) ));
  }
  if (!!(cmd_0->upkeep))
  {
    RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->upkeep), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdForEach( RogueClassVisitor* THIS, RogueClassCmdForEach* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  cmd_0->collection = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->collection), ROGUE_ARG(THIS) ));
  if (!!(cmd_0->step_cmd))
  {
    cmd_0->step_cmd = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->step_cmd), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdFormattedString( RogueClassVisitor* THIS, RogueClassCmdFormattedString* cmd_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3830_1,(cmd_0->args));
    RogueInt32 index_2 = (0);
    for (;index_2 < _auto_3830_1->count;++index_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3830_1->data->as_objects[index_2]))));
      cmd_0->args->data->as_objects[index_2] = (Rogue_call_ROGUEM148( 27, arg_3, ROGUE_ARG(THIS) ));
    }
  }
}

void RogueVisitor__dispatch__CmdTry( RogueClassVisitor* THIS, RogueClassCmdTry* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdCatch_List*,_auto_3831_1,(cmd_0->catches));
    RogueInt32 _auto_3832_2 = (0);
    for (;_auto_3832_2 < _auto_3831_1->count;++_auto_3832_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdCatch*,c_3,(((RogueClassCmdCatch*)(_auto_3831_1->data->as_objects[_auto_3832_2]))));
      RogueCmdCatch__dispatch__Visitor( c_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdTryExpression( RogueClassVisitor* THIS, RogueClassCmdTryExpression* cmd_0 )
{
  cmd_0->try_expression = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->try_expression), ROGUE_ARG(THIS) ));
  cmd_0->else_expression = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->else_expression), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdCatch( RogueClassVisitor* THIS, RogueClassCmdCatch* cmd_0 )
{
  if (!!(cmd_0->error_var))
  {
    RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->error_var->_type), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->_error_type))
  {
    RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_error_type), ROGUE_ARG(THIS) );
  }
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdThrow( RogueClassVisitor* THIS, RogueClassCmdThrow* cmd_0 )
{
  cmd_0->expression = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdElementAccess( RogueClassVisitor* THIS, RogueClassCmdElementAccess* cmd_0 )
{
  cmd_0->index = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) ));
  cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdEnsure( RogueClassVisitor* THIS, RogueClassCmdEnsure* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  cmd_0->cmd_read = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->cmd_read), ROGUE_ARG(THIS) ));
  cmd_0->cmd_write = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->cmd_write), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdEscape( RogueClassVisitor* THIS, RogueClassCmdEscape* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdNextIteration( RogueClassVisitor* THIS, RogueClassCmdNextIteration* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdNativeSource( RogueClassVisitor* THIS, RogueClassCmdNativeSource* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdNecessary( RogueClassVisitor* THIS, RogueClassCmdNecessary* cmd_0 )
{
  if (!!(cmd_0->condition))
  {
    cmd_0->condition = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdSufficient( RogueClassVisitor* THIS, RogueClassCmdSufficient* cmd_0 )
{
  if (!!(cmd_0->condition))
  {
    cmd_0->condition = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->condition), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdLiteral( RogueClassVisitor* THIS, RogueClassCmdLiteral* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdLiteralString( RogueClassVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdAccess( RogueClassVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  }
  if (!!(cmd_0->args))
  {
    RogueCmdArgs__dispatch__Visitor( ROGUE_ARG(cmd_0->args), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->named_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_3833_1,(cmd_0->named_args));
      RogueInt32 _auto_3834_2 = (0);
      for (;_auto_3834_2 < _auto_3833_1->count;++_auto_3834_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_3,(((RogueClassCmdNamedArg*)(_auto_3833_1->data->as_objects[_auto_3834_2]))));
        RogueCmdNamedArg__dispatch__Visitor( arg_3, ROGUE_ARG(THIS) );
      }
    }
  }
}

void RogueVisitor__dispatch__CmdCreateObject( RogueClassVisitor* THIS, RogueClassCmdCreateObject* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdCreateCallback( RogueClassVisitor* THIS, RogueClassCmdCreateCallback* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  }
  if (!!(cmd_0->_return_type))
  {
    RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_return_type), ROGUE_ARG(THIS) );
  }
}

void RogueVisitor__dispatch__CmdCreateCompound( RogueClassVisitor* THIS, RogueClassCmdCreateCompound* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3835_1,(cmd_0->args));
    RogueInt32 index_2 = (0);
    for (;index_2 < _auto_3835_1->count;++index_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3835_1->data->as_objects[index_2]))));
      cmd_0->args->data->as_objects[index_2] = (Rogue_call_ROGUEM148( 27, arg_3, ROGUE_ARG(THIS) ));
    }
  }
}

void RogueVisitor__dispatch__CmdCreateFunction( RogueClassVisitor* THIS, RogueClassCmdCreateFunction* cmd_0 )
{
  if (!!(cmd_0->parameters))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueFnParam_List*,_auto_3836_1,(cmd_0->parameters));
      RogueInt32 _auto_3837_2 = (0);
      for (;_auto_3837_2 < _auto_3836_1->count;++_auto_3837_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnParam*,param_3,(((RogueClassFnParam*)(_auto_3836_1->data->as_objects[_auto_3837_2]))));
        RogueType__dispatch__Visitor( ROGUE_ARG(param_3->_type), ROGUE_ARG(THIS) );
      }
    }
  }
  if (!!(cmd_0->_return_type))
  {
    RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_return_type), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->with_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueFnArg_List*,_auto_3838_4,(cmd_0->with_args));
      RogueInt32 _auto_3839_5 = (0);
      for (;_auto_3839_5 < _auto_3838_4->count;++_auto_3839_5)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassFnArg*,arg_6,(((RogueClassFnArg*)(_auto_3838_4->data->as_objects[_auto_3839_5]))));
        if (!!(arg_6->value))
        {
          arg_6->value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(arg_6->value), ROGUE_ARG(THIS) ));
        }
        if (!!(arg_6->_type))
        {
          RogueType__dispatch__Visitor( ROGUE_ARG(arg_6->_type), ROGUE_ARG(THIS) );
        }
      }
    }
  }
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
  if (!!(cmd_0->query_cmd))
  {
    cmd_0->query_cmd = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->query_cmd), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdThisContext( RogueClassVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdReadSingleton( RogueClassVisitor* THIS, RogueClassCmdReadSingleton* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteSingleton( RogueClassVisitor* THIS, RogueClassCmdWriteSingleton* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_of_type), ROGUE_ARG(THIS) );
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdReadLocal( RogueClassVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteLocal( RogueClassVisitor* THIS, RogueClassCmdWriteLocal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdReadGlobal( RogueClassVisitor* THIS, RogueClassCmdReadGlobal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteGlobal( RogueClassVisitor* THIS, RogueClassCmdWriteGlobal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdReadProperty( RogueClassVisitor* THIS, RogueClassCmdReadProperty* cmd_0 )
{
  cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteProperty( RogueClassVisitor* THIS, RogueClassCmdWriteProperty* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  }
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdCall( RogueClassVisitor* THIS, RogueClassCmdCall* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  }
  RogueMethod__dispatch__Visitor( ROGUE_ARG(cmd_0->method_info), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3840_1,(cmd_0->args));
    RogueInt32 index_2 = (0);
    for (;index_2 < _auto_3840_1->count;++index_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3840_1->data->as_objects[index_2]))));
      cmd_0->args->data->as_objects[index_2] = (Rogue_call_ROGUEM148( 27, arg_3, ROGUE_ARG(THIS) ));
    }
  }
}

void RogueVisitor__dispatch__CmdCallDynamicMethod( RogueClassVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  if (!!(cmd_0->context))
  {
    cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  }
  RogueMethod__dispatch__Visitor( ROGUE_ARG(cmd_0->method_info), ROGUE_ARG(THIS) );
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3841_1,(cmd_0->args));
    RogueInt32 index_2 = (0);
    for (;index_2 < _auto_3841_1->count;++index_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_3,(((RogueClassCmd*)(_auto_3841_1->data->as_objects[index_2]))));
      cmd_0->args->data->as_objects[index_2] = (Rogue_call_ROGUEM148( 27, arg_3, ROGUE_ARG(THIS) ));
    }
  }
}

void RogueVisitor__dispatch__CmdCallPriorMethod( RogueClassVisitor* THIS, RogueClassCmdCallPriorMethod* cmd_0 )
{
  if (!!(cmd_0->args))
  {
    RogueCmdArgs__dispatch__Visitor( ROGUE_ARG(cmd_0->args), ROGUE_ARG(THIS) );
  }
  if (!!(cmd_0->named_args))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_3842_1,(cmd_0->named_args));
      RogueInt32 _auto_3843_2 = (0);
      for (;_auto_3843_2 < _auto_3842_1->count;++_auto_3843_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_3,(((RogueClassCmdNamedArg*)(_auto_3842_1->data->as_objects[_auto_3843_2]))));
        RogueCmdNamedArg__dispatch__Visitor( arg_3, ROGUE_ARG(THIS) );
      }
    }
  }
}

void RogueVisitor__dispatch__CmdRange( RogueClassVisitor* THIS, RogueClassCmdRange* cmd_0 )
{
  cmd_0->first = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->first), ROGUE_ARG(THIS) ));
  cmd_0->last = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->last), ROGUE_ARG(THIS) ));
  if (!!(cmd_0->step_size))
  {
    cmd_0->step_size = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->step_size), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdUnary( RogueClassVisitor* THIS, RogueClassCmdUnary* cmd_0 )
{
  cmd_0->operand = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->operand), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdBinary( RogueClassVisitor* THIS, RogueClassCmdBinary* cmd_0 )
{
  cmd_0->left = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->left), ROGUE_ARG(THIS) ));
  cmd_0->right = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->right), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdAdjustLocal( RogueClassVisitor* THIS, RogueClassCmdAdjustLocal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdAdjustProperty( RogueClassVisitor* THIS, RogueClassCmdAdjustProperty* cmd_0 )
{
  cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdAdjustGlobal( RogueClassVisitor* THIS, RogueClassCmdAdjustGlobal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdModifyAndAssign( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssign* cmd_0 )
{
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
  cmd_0->target = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->target), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdModifyAndAssignLocal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignLocal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->local_info->_type), ROGUE_ARG(THIS) );
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdModifyAndAssignGlobal( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignGlobal* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->global_info->_type), ROGUE_ARG(THIS) );
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdModifyAndAssignProperty( RogueClassVisitor* THIS, RogueClassCmdModifyAndAssignProperty* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->type_context), ROGUE_ARG(THIS) );
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->property_info->_type), ROGUE_ARG(THIS) );
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdCreateArray( RogueClassVisitor* THIS, RogueClassCmdCreateArray* cmd_0 )
{
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  cmd_0->count_cmd = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->count_cmd), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdReadArrayElement( RogueClassVisitor* THIS, RogueClassCmdReadArrayElement* cmd_0 )
{
  cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  cmd_0->index = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdReadArrayCount( RogueClassVisitor* THIS, RogueClassCmdReadArrayCount* cmd_0 )
{
  cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdWriteArrayElement( RogueClassVisitor* THIS, RogueClassCmdWriteArrayElement* cmd_0 )
{
  cmd_0->context = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->context), ROGUE_ARG(THIS) ));
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_array_type), ROGUE_ARG(THIS) );
  cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
  cmd_0->index = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->index), ROGUE_ARG(THIS) ));
}

void RogueVisitor__dispatch__CmdTypeOperator( RogueClassVisitor* THIS, RogueClassCmdTypeOperator* cmd_0 )
{
  cmd_0->operand = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->operand), ROGUE_ARG(THIS) ));
  RogueType__dispatch__Visitor( ROGUE_ARG(cmd_0->_target_type), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdTypedLiteralList( RogueClassVisitor* THIS, RogueClassCmdTypedLiteralList* cmd_0 )
{
  RogueCmdArgs__dispatch__Visitor( ROGUE_ARG(cmd_0->elements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdTaskControl( RogueClassVisitor* THIS, RogueClassCmdTaskControl* cmd_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3844_1,(cmd_0->sections));
    RogueInt32 _auto_3845_2 = (0);
    for (;_auto_3845_2 < _auto_3844_1->count;++_auto_3845_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_3,(((RogueClassCmdTaskControlSection*)(_auto_3844_1->data->as_objects[_auto_3845_2]))));
      RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(section_3->statements), ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdTrace( RogueClassVisitor* THIS, RogueClassCmdTrace* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdLabel( RogueClassVisitor* THIS, RogueClassCmdLabel* cmd_0 )
{
  RogueCmdStatementList__dispatch__Visitor( ROGUE_ARG(cmd_0->statements), ROGUE_ARG(THIS) );
}

void RogueVisitor__dispatch__CmdImplicitAccess( RogueClassVisitor* THIS, RogueClassCmdImplicitAccess* cmd_0 )
{
  cmd_0->access = ((RogueClassCmdAccess*)(RogueObject_as(((RogueCmdAccess__dispatch__Visitor( ROGUE_ARG(cmd_0->access), ROGUE_ARG(THIS) ))),RogueTypeCmdAccess)));
}

void RogueVisitor__dispatch__CmdImplicitIDAccess( RogueClassVisitor* THIS, RogueClassCmdImplicitIDAccess* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdInlineNative( RogueClassVisitor* THIS, RogueClassCmdInlineNative* cmd_0 )
{
  if (!!(cmd_0->new_value))
  {
    cmd_0->new_value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->new_value), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdMakeRequisite( RogueClassVisitor* THIS, RogueClassCmdMakeRequisite* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdNoAction( RogueClassVisitor* THIS, RogueClassCmdNoAction* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdSelect( RogueClassVisitor* THIS, RogueClassCmdSelect* cmd_0 )
{
  if (!!(cmd_0->expression))
  {
    cmd_0->expression = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->expression), ROGUE_ARG(THIS) ));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdSelectCase_List*,_auto_3846_1,(cmd_0->cases));
    RogueInt32 _auto_3847_2 = (0);
    for (;_auto_3847_2 < _auto_3846_1->count;++_auto_3847_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdSelectCase*,c_3,(((RogueClassCmdSelectCase*)(_auto_3846_1->data->as_objects[_auto_3847_2]))));
      RogueCmdSelectCase__dispatch__Visitor( c_3, ROGUE_ARG(THIS) );
    }
  }
}

void RogueVisitor__dispatch__CmdSelectCase( RogueClassVisitor* THIS, RogueClassCmdSelectCase* cmd_0 )
{
  if (!!(cmd_0->conditions))
  {
    {
      ROGUE_DEF_LOCAL_REF(RogueCmd_List*,_auto_3848_1,(cmd_0->conditions));
      RogueInt32 index_2 = (0);
      for (;index_2 < _auto_3848_1->count;++index_2)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,c_3,(((RogueClassCmd*)(_auto_3848_1->data->as_objects[index_2]))));
        cmd_0->conditions->data->as_objects[index_2] = (Rogue_call_ROGUEM148( 27, c_3, ROGUE_ARG(THIS) ));
      }
    }
  }
  if (!!(cmd_0->value))
  {
    cmd_0->value = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->value), ROGUE_ARG(THIS) ));
  }
}

void RogueVisitor__dispatch__CmdNamedArg( RogueClassVisitor* THIS, RogueClassCmdNamedArg* cmd_0 )
{
}

void RogueVisitor__dispatch__CmdIsReference( RogueClassVisitor* THIS, RogueClassCmdIsReference* cmd_0 )
{
  cmd_0->operand = (Rogue_call_ROGUEM148( 27, ROGUE_ARG(cmd_0->operand), ROGUE_ARG(THIS) ));
}

RogueClassCmdSwitch* RogueCmdSwitch__init_object( RogueClassCmdSwitch* THIS )
{
  RogueCmdControlStructure__init_object( ROGUE_ARG(((RogueClassCmdControlStructure*)THIS)) );
  return (RogueClassCmdSwitch*)(THIS);
}

RogueString* RogueCmdSwitch__type_name( RogueClassCmdSwitch* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1433]);
}

RogueClassCmdSwitch* RogueCmdSwitch__cloned__CloneArgs( RogueClassCmdSwitch* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdSwitch*,result_1,(((RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdSwitch*,ROGUE_CREATE_OBJECT(CmdSwitch))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->expression), clone_args_0 ))), ROGUE_ARG(((RogueCmdWhichCase_List*)(NULL))), ROGUE_ARG(((RogueClassCmdWhichCase*)(NULL))), 5 )))));
  Rogue_call_ROGUEM382( 52, ((RogueClassCmdControlStructure*)result_1), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->cloned_command = ((RogueClassCmdControlStructure*)(result_1));
  ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,cloned_cases_2,(((RogueCmdWhichCase_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdWhichCase_List*,ROGUE_CREATE_OBJECT(CmdWhichCase_List))), ROGUE_ARG(THIS->cases->count) )))));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3849_3,(THIS->cases));
    RogueInt32 _auto_3850_4 = (0);
    for (;_auto_3850_4 < _auto_3849_3->count;++_auto_3850_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_5,(((RogueClassCmdWhichCase*)(_auto_3849_3->data->as_objects[_auto_3850_4]))));
      RogueCmdWhichCase_List__add__CmdWhichCase( cloned_cases_2, ROGUE_ARG(((RogueCmdWhichCase__cloned__CloneArgs( c_5, clone_args_0 )))) );
    }
  }
  result_1->cases = cloned_cases_2;
  if (!!(THIS->case_others))
  {
    result_1->case_others = ((RogueCmdWhichCase__cloned__CloneArgs( ROGUE_ARG(THIS->case_others), clone_args_0 )));
  }
  return (RogueClassCmdSwitch*)(result_1);
}

RogueClassCmd* RogueCmdSwitch__dispatch__Visitor( RogueClassCmdSwitch* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdSwitch( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdSwitch__resolve__Scope( RogueClassCmdSwitch* THIS, RogueClassScope* scope_0 )
{
  RogueCmdControlStructure_List__add__CmdControlStructure( ROGUE_ARG(scope_0->control_stack), ROGUE_ARG(((RogueClassCmdControlStructure*)(THIS))) );
  THIS->expression = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->expression), scope_0 ));
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3851_1,(THIS->cases));
    RogueInt32 _auto_3852_2 = (0);
    for (;_auto_3852_2 < _auto_3851_1->count;++_auto_3852_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_3,(((RogueClassCmdWhichCase*)(_auto_3851_1->data->as_objects[_auto_3852_2]))));
      RogueCmdArgs__resolve__Scope( ROGUE_ARG(c_3->conditions), scope_0 );
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(c_3->statements), scope_0, false );
    }
  }
  if (!!(THIS->case_others))
  {
    RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->case_others->conditions), scope_0 );
    RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(THIS->case_others->statements), scope_0, false );
  }
  RogueCmdControlStructure_List__remove_last( ROGUE_ARG(scope_0->control_stack) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdSwitch__write_cpp__CPPWriter_Logical( RogueClassCmdSwitch* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1336] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->expression), writer_0, false );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[12] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdWhichCase_List*,_auto_3853_2,(THIS->cases));
    RogueInt32 _auto_3854_3 = (0);
    for (;_auto_3854_3 < _auto_3853_2->count;++_auto_3854_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdWhichCase*,c_4,(((RogueClassCmdWhichCase*)(_auto_3853_2->data->as_objects[_auto_3854_3]))));
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3855_5,(c_4->conditions));
        RogueInt32 _auto_3856_6 = (0);
        for (;_auto_3856_6 < _auto_3855_5->count;++_auto_3856_6)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmd*,condition_7,(((RogueClassCmd*)(_auto_3855_5->data->as_objects[_auto_3856_6]))));
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[739] );
          Rogue_call_ROGUEM157( 50, condition_7, writer_0, false );
          RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[152] );
        }
      }
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
      writer_0->indent += 2;
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(c_4->statements), writer_0, false, false );
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1337] );
      writer_0->indent -= 2;
      RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
    }
  }
  if (!!(THIS->case_others))
  {
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[743] );
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
    writer_0->indent += 2;
    RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(THIS->case_others->statements), writer_0, false, false );
    writer_0->indent -= 2;
    RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
  }
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
}

RogueClassCmdSwitch* RogueCmdSwitch__init__Token_Cmd_CmdWhichCase_List_CmdWhichCase_Int32( RogueClassCmdSwitch* THIS, RogueClassToken* _auto_1545_0, RogueClassCmd* _auto_1546_1, RogueCmdWhichCase_List* _auto_1547_2, RogueClassCmdWhichCase* _auto_1548_3, RogueInt32 _auto_1549_4 )
{
  THIS->_control_type = _auto_1549_4;
  THIS->case_others = _auto_1548_3;
  THIS->cases = _auto_1547_2;
  THIS->expression = _auto_1546_1;
  THIS->t = _auto_1545_0;
  return (RogueClassCmdSwitch*)(THIS);
}

RogueClassCmdCreateObject* RogueCmdCreateObject__init_object( RogueClassCmdCreateObject* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateObject*)(THIS);
}

RogueString* RogueCmdCreateObject__to_String( RogueClassCmdCreateObject* THIS )
{
  return (RogueString*)(((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->_of_type))) )))), Rogue_literal_strings[348] ))));
}

RogueString* RogueCmdCreateObject__type_name( RogueClassCmdCreateObject* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1200]);
}

RogueClassCmd* RogueCmdCreateObject__cloned__CloneArgs( RogueClassCmdCreateObject* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateObject__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateObject*,ROGUE_CREATE_OBJECT(CmdCreateObject))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

RogueClassCmd* RogueCmdCreateObject__dispatch__Visitor( RogueClassCmdCreateObject* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCreateObject( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdCreateObject__resolve__Scope( RogueClassCmdCreateObject* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateObject__type( RogueClassCmdCreateObject* THIS )
{
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdCreateObject__write_cpp__CPPWriter_Logical( RogueClassCmdCreateObject* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1338] )))), ROGUE_ARG(THIS->_of_type) )))), Rogue_literal_strings[7] );
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1339] )))), ROGUE_ARG(((Rogue_CmdCreateObject__type( ROGUE_ARG(THIS) )))->cpp_name) )))), Rogue_literal_strings[12] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCmdCreateObject* RogueCmdCreateObject__init__Token_Type( RogueClassCmdCreateObject* THIS, RogueClassToken* _auto_1550_0, RogueClassType* _auto_1551_1 )
{
  THIS->_of_type = _auto_1551_1;
  THIS->t = _auto_1550_0;
  return (RogueClassCmdCreateObject*)(THIS);
}

RogueClassCmdReadSingleton* RogueCmdReadSingleton__init_object( RogueClassCmdReadSingleton* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadSingleton*)(THIS);
}

RogueString* RogueCmdReadSingleton__type_name( RogueClassCmdReadSingleton* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1201]);
}

RogueClassCmd* RogueCmdReadSingleton__cloned__CloneArgs( RogueClassCmdReadSingleton* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadSingleton__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadSingleton*,ROGUE_CREATE_OBJECT(CmdReadSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type) ))))));
}

RogueClassCmd* RogueCmdReadSingleton__dispatch__Visitor( RogueClassCmdReadSingleton* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdReadSingleton( v_0, ROGUE_ARG(THIS) ))));
}

void RogueCmdReadSingleton__require_type_context( RogueClassCmdReadSingleton* THIS )
{
}

RogueClassCmd* RogueCmdReadSingleton__resolve__Scope( RogueClassCmdReadSingleton* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReadSingleton__type( RogueClassCmdReadSingleton* THIS )
{
  return (RogueClassType*)(THIS->_of_type);
}

void RogueCmdReadSingleton__write_cpp__CPPWriter_Logical( RogueClassCmdReadSingleton* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(((RogueType__is_singleton( ROGUE_ARG(THIS->_of_type) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_of_type->name) )))) )))), Rogue_literal_strings[1340] )))) )))) ))));
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG(THIS->_of_type->cpp_class_name) );
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_of_type) ))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[188] );
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1341] )))), ROGUE_ARG(THIS->_of_type->cpp_name) )))), Rogue_literal_strings[611] );
}

RogueClassCmdReadSingleton* RogueCmdReadSingleton__init__Token_Type( RogueClassCmdReadSingleton* THIS, RogueClassToken* _auto_1552_0, RogueClassType* _auto_1553_1 )
{
  THIS->_of_type = _auto_1553_1;
  THIS->t = _auto_1552_0;
  return (RogueClassCmdReadSingleton*)(THIS);
}

RogueClassCmdWriteSingleton* RogueCmdWriteSingleton__init_object( RogueClassCmdWriteSingleton* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteSingleton*)(THIS);
}

RogueString* RogueCmdWriteSingleton__type_name( RogueClassCmdWriteSingleton* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1534]);
}

RogueClassCmd* RogueCmdWriteSingleton__cloned__CloneArgs( RogueClassCmdWriteSingleton* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteSingleton__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteSingleton*,ROGUE_CREATE_OBJECT(CmdWriteSingleton))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_of_type), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdWriteSingleton__dispatch__Visitor( RogueClassCmdWriteSingleton* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdWriteSingleton( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdWriteSingleton__resolve__Scope( RogueClassCmdWriteSingleton* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_of_type), scope_0 );
  THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteSingleton__write_cpp__CPPWriter_Logical( RogueClassCmdWriteSingleton* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(((RogueType__is_singleton( ROGUE_ARG(THIS->_of_type) )))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->_of_type->name) )))) )))), Rogue_literal_strings[1340] )))) )))) ))));
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[582] )))), ROGUE_ARG(THIS->_of_type->cpp_name) )))), Rogue_literal_strings[1342] );
  if (((void*)(Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))) != ((void*)THIS->_of_type))
  {
    RogueCPPWriter__print_cast__Type_Type( writer_0, ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))), ROGUE_ARG(THIS->_of_type) );
  }
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[179] );
}

RogueClassCmdWriteSingleton* RogueCmdWriteSingleton__init__Token_Type_Cmd( RogueClassCmdWriteSingleton* THIS, RogueClassToken* _auto_1554_0, RogueClassType* _auto_1555_1, RogueClassCmd* _auto_1556_2 )
{
  THIS->new_value = _auto_1556_2;
  THIS->_of_type = _auto_1555_1;
  THIS->t = _auto_1554_0;
  return (RogueClassCmdWriteSingleton*)(THIS);
}

RogueClassCmdWriteLocal* RogueCmdWriteLocal__init_object( RogueClassCmdWriteLocal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteLocal*)(THIS);
}

RogueString* RogueCmdWriteLocal__type_name( RogueClassCmdWriteLocal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1535]);
}

RogueClassCmd* RogueCmdWriteLocal__cloned__CloneArgs( RogueClassCmdWriteLocal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassMacroArgs*,macro_args_1,(((RogueClassMacroArgs*)(RogueObject_as(clone_args_0,RogueTypeMacroArgs)))));
  if (!!(macro_args_1))
  {
    return (RogueClassCmd*)(((RogueMacroArgs__inline_write_local__CmdWriteLocal( macro_args_1, ROGUE_ARG(THIS) ))));
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTaskArgs*,task_args_2,(((RogueClassTaskArgs*)(RogueObject_as(clone_args_0,RogueTypeTaskArgs)))));
    if (!!(task_args_2))
    {
      return (RogueClassCmd*)(((RogueTaskArgs__cmd_write__Token_Local_Cmd( task_args_2, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteLocal__init__Token_Local_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteLocal*,ROGUE_CREATE_OBJECT(CmdWriteLocal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->local_info), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->new_value), clone_args_0 )))) ))))));
}

RogueClassCmd* RogueCmdWriteLocal__dispatch__Visitor( RogueClassCmdWriteLocal* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdWriteLocal( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdWriteLocal__resolve__Scope( RogueClassCmdWriteLocal* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->local_info->_type), scope_0 );
  THIS->local_info->is_modified = true;
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ));
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(THIS->new_value), ROGUE_ARG(THIS->local_info->_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteLocal__write_cpp__CPPWriter_Logical( RogueClassCmdWriteLocal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueLocal__cpp_name( ROGUE_ARG(THIS->local_info) )))) )))), Rogue_literal_strings[632] );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG(THIS->local_info->_type) )))), Rogue_literal_strings[12] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
}

RogueClassCmdWriteLocal* RogueCmdWriteLocal__init__Token_Local_Cmd( RogueClassCmdWriteLocal* THIS, RogueClassToken* _auto_1557_0, RogueClassLocal* _auto_1558_1, RogueClassCmd* _auto_1559_2 )
{
  THIS->new_value = _auto_1559_2;
  THIS->local_info = _auto_1558_1;
  THIS->t = _auto_1557_0;
  return (RogueClassCmdWriteLocal*)(THIS);
}

RogueClassCmdReadGlobal* RogueCmdReadGlobal__init_object( RogueClassCmdReadGlobal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadGlobal*)(THIS);
}

RogueString* RogueCmdReadGlobal__type_name( RogueClassCmdReadGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1202]);
}

RogueClassCmd* RogueCmdReadGlobal__cloned__CloneArgs( RogueClassCmdReadGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) ))))));
}

RogueClassCmd* RogueCmdReadGlobal__dispatch__Visitor( RogueClassCmdReadGlobal* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdReadGlobal( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdReadGlobal__resolve__Scope( RogueClassCmdReadGlobal* THIS, RogueClassScope* scope_0 )
{
  RogueType__resolve( ROGUE_ARG(THIS->global_info->type_context) );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadGlobal__resolve_adjust__Scope_Int32( RogueClassCmdReadGlobal* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)(((RogueCmdAdjustGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustGlobal__init__Token_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustGlobal*,ROGUE_CREATE_OBJECT(CmdAdjustGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadGlobal__type( RogueClassCmdReadGlobal* THIS )
{
  return (RogueClassType*)(THIS->global_info->_type);
}

void RogueCmdReadGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdReadGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, ROGUE_ARG(THIS->global_info->_type), ROGUE_ARG(THIS->global_info->_type) );
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[274] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[313] );
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, ROGUE_ARG(THIS->global_info->_type), ROGUE_ARG(THIS->global_info->_type) );
  }
}

RogueClassCmdReadGlobal* RogueCmdReadGlobal__init__Token_Property( RogueClassCmdReadGlobal* THIS, RogueClassToken* _auto_1560_0, RogueClassProperty* _auto_1561_1 )
{
  THIS->global_info = _auto_1561_1;
  THIS->t = _auto_1560_0;
  return (RogueClassCmdReadGlobal*)(THIS);
}

RogueClassCmdWriteGlobal* RogueCmdWriteGlobal__init_object( RogueClassCmdWriteGlobal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteGlobal*)(THIS);
}

RogueString* RogueCmdWriteGlobal__type_name( RogueClassCmdWriteGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1203]);
}

RogueClassCmd* RogueCmdWriteGlobal__cloned__CloneArgs( RogueClassCmdWriteGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdWriteGlobal__dispatch__Visitor( RogueClassCmdWriteGlobal* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdWriteGlobal( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdWriteGlobal__resolve__Scope( RogueClassCmdWriteGlobal* THIS, RogueClassScope* scope_0 )
{
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->global_info->_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdWriteGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[274] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[313] );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) )))), Rogue_literal_strings[632] );
  if (((void*)THIS->global_info->_type) == ((void*)(Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))))
  {
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG(THIS->global_info->_type) )))), Rogue_literal_strings[12] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCmdWriteGlobal* RogueCmdWriteGlobal__init__Token_Property_Cmd( RogueClassCmdWriteGlobal* THIS, RogueClassToken* _auto_1562_0, RogueClassProperty* _auto_1563_1, RogueClassCmd* _auto_1564_2 )
{
  THIS->new_value = _auto_1564_2;
  THIS->global_info = _auto_1563_1;
  THIS->t = _auto_1562_0;
  return (RogueClassCmdWriteGlobal*)(THIS);
}

RogueClassCmdReadProperty* RogueCmdReadProperty__init_object( RogueClassCmdReadProperty* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadProperty*)(THIS);
}

RogueString* RogueCmdReadProperty__type_name( RogueClassCmdReadProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1204]);
}

RogueClassCmd* RogueCmdReadProperty__cloned__CloneArgs( RogueClassCmdReadProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info) ))))));
}

RogueClassCmd* RogueCmdReadProperty__dispatch__Visitor( RogueClassCmdReadProperty* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdReadProperty( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdReadProperty__resolve__Scope( RogueClassCmdReadProperty* THIS, RogueClassScope* scope_0 )
{
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ))) )));
  if (((RogueType__is_aspect( ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->context) ))) ))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[519], ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[520] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[145] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->_type->name) )))) )))), Rogue_literal_strings[521] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[225] )))) )))) )))) ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadProperty__resolve_adjust__Scope_Int32( RogueClassCmdReadProperty* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,setter_name_2,(((RogueString__operatorPLUS__String( Rogue_literal_strings[369], ROGUE_ARG(THIS->property_info->name) )))));
  ROGUE_DEF_LOCAL_REF(RogueString*,getter_name_3,(THIS->property_info->name));
  ROGUE_DEF_LOCAL_REF(RogueClassType*,context_type_4,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->context) ))));
  if ((((RogueType__has_method_named__String( context_type_4, setter_name_2 ))) || ((RogueType__has_method_named__String( context_type_4, getter_name_3 )))))
  {
    return (RogueClassCmd*)(((RogueCmdAssign__resolve__Scope( ROGUE_ARG(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info->name) )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(THIS->property_info->name) )))))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )))), scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueCmdAdjustProperty__resolve__Scope( ROGUE_ARG(((RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustProperty*,ROGUE_CREATE_OBJECT(CmdAdjustProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), delta_1 )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadProperty__type( RogueClassCmdReadProperty* THIS )
{
  return (RogueClassType*)(THIS->property_info->_type);
}

void RogueCmdReadProperty__write_cpp__CPPWriter_Logical( RogueClassCmdReadProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, ROGUE_ARG(THIS->property_info->_type), ROGUE_ARG(THIS->property_info->_type) );
  }
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->context) ))) );
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, ROGUE_ARG(THIS->property_info->_type), ROGUE_ARG(THIS->property_info->_type) );
  }
}

RogueClassCmdReadProperty* RogueCmdReadProperty__init__Token_Cmd_Property( RogueClassCmdReadProperty* THIS, RogueClassToken* _auto_1565_0, RogueClassCmd* _auto_1566_1, RogueClassProperty* _auto_1567_2 )
{
  THIS->property_info = _auto_1567_2;
  THIS->context = _auto_1566_1;
  THIS->t = _auto_1565_0;
  return (RogueClassCmdReadProperty*)(THIS);
}

RogueClassCmdWriteProperty* RogueCmdWriteProperty__init_object( RogueClassCmdWriteProperty* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteProperty*)(THIS);
}

RogueString* RogueCmdWriteProperty__type_name( RogueClassCmdWriteProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1205]);
}

RogueClassCmd* RogueCmdWriteProperty__cloned__CloneArgs( RogueClassCmdWriteProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdWriteProperty__dispatch__Visitor( RogueClassCmdWriteProperty* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdWriteProperty( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdWriteProperty__resolve__Scope( RogueClassCmdWriteProperty* THIS, RogueClassScope* scope_0 )
{
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ))) )));
  if (((RogueType__is_aspect( ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->context) ))) ))))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[1278], ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1279] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[1280] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->property_info->name) )))) )))), Rogue_literal_strings[1281] )))) )))) )))) ))));
  }
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))) )))), ROGUE_ARG(THIS->property_info->_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdWriteProperty__write_cpp__CPPWriter_Logical( RogueClassCmdWriteProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->context) ))) );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) )))), Rogue_literal_strings[632] );
  if (((void*)THIS->property_info->_type) == ((void*)(Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))))
  {
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG(THIS->property_info->_type) )))), Rogue_literal_strings[12] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCmdWriteProperty* RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( RogueClassCmdWriteProperty* THIS, RogueClassToken* _auto_1568_0, RogueClassCmd* _auto_1569_1, RogueClassProperty* _auto_1570_2, RogueClassCmd* _auto_1571_3 )
{
  THIS->new_value = _auto_1571_3;
  THIS->property_info = _auto_1570_2;
  THIS->context = _auto_1569_1;
  THIS->t = _auto_1568_0;
  return (RogueClassCmdWriteProperty*)(THIS);
}

RogueClassCmdCall* RogueCmdCall__init_object( RogueClassCmdCall* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCall*)(THIS);
}

RogueString* RogueCmdCall__type_name( RogueClassCmdCall* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1206]);
}

RogueClassCmd* RogueCmdCall__dispatch__Visitor( RogueClassCmdCall* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassType* Rogue_CmdCall__require_type( RogueClassCmdCall* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,result_0,((Rogue_call_ROGUEM1137( 49, ROGUE_ARG(THIS) ))));
  if (((void*)result_0) == ((void*)NULL))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1214] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[1215] )))) )))) ))));
  }
  return (RogueClassType*)(result_0);
}

RogueClassCmd* RogueCmdCall__resolve__Scope( RogueClassCmdCall* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->context))
  {
    THIS->context = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ))) )));
  }
  RogueCmdArgs__resolve__Scope( ROGUE_ARG(THIS->args), scope_0 );
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdCall__resolve_adjust__Scope_Int32( RogueClassCmdCall* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  if (!(!!(THIS->method_info->_return_type)))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1289] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[1213] )))) )))) ))));
  }
  if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(THIS->method_info->name), Rogue_literal_strings[1267] ))))
  {
    if (!(!!(THIS->args)))
    {
      THIS->args = ((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )));
    }
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,setter_args_2,(((RogueCmdArgs__cloned( ROGUE_ARG(THIS->args) )))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)setter_args_2), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) );
    if (!!(THIS->context))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), Rogue_literal_strings[343], setter_args_2 )))), scope_0 ))));
    }
    else
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), Rogue_literal_strings[343], setter_args_2 )))), scope_0 ))));
    }
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueString*,setter_name_3,(((RogueString__operatorPLUS__String( Rogue_literal_strings[369], ROGUE_ARG(THIS->method_info->name) )))));
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,setter_args_4,(((((THIS->args))) ? (ROGUE_ARG(((RogueCmdArgs__cloned( ROGUE_ARG(THIS->args) ))))) : ROGUE_ARG(((RogueCmdArgs__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))) )))))));
    RogueCmd_List__add__Cmd( ((RogueCmd_List*)setter_args_4), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) );
    if (!!(THIS->context))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), setter_name_3, setter_args_4 )))), scope_0 ))));
    }
    else
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), setter_name_3, setter_args_4 )))), scope_0 ))));
    }
  }
}

RogueClassType* Rogue_CmdCall__type( RogueClassCmdCall* THIS )
{
  return (RogueClassType*)(THIS->method_info->_return_type);
}

RogueClassCmdCall* RogueCmdCall__init__Token_Cmd_Method_CmdArgs( RogueClassCmdCall* THIS, RogueClassToken* _auto_1572_0, RogueClassCmd* _auto_1573_1, RogueClassMethod* _auto_1574_2, RogueClassCmdArgs* _auto_1575_3 )
{
  THIS->args = _auto_1575_3;
  THIS->method_info = _auto_1574_2;
  THIS->context = _auto_1573_1;
  THIS->t = _auto_1572_0;
  return (RogueClassCmdCall*)(THIS);
}

RogueClassCmdCallDynamicMethod* RogueCmdCallDynamicMethod__init_object( RogueClassCmdCallDynamicMethod* THIS )
{
  RogueCmdCallMethod__init_object( ROGUE_ARG(((RogueClassCmdCallMethod*)THIS)) );
  return (RogueClassCmdCallDynamicMethod*)(THIS);
}

RogueString* RogueCmdCallDynamicMethod__to_String( RogueClassCmdCallDynamicMethod* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[946] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->context))) )))) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->args))) )))) )))), Rogue_literal_strings[907] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->_return_type))) )))) )))) ))));
}

RogueString* RogueCmdCallDynamicMethod__type_name( RogueClassCmdCallDynamicMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1526]);
}

RogueClassCmd* RogueCmdCallDynamicMethod__cloned__CloneArgs( RogueClassCmdCallDynamicMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallDynamicMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallDynamicMethod*,ROGUE_CREATE_OBJECT(CmdCallDynamicMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

RogueClassCmd* RogueCmdCallDynamicMethod__dispatch__Visitor( RogueClassCmdCallDynamicMethod* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCallDynamicMethod( v_0, ROGUE_ARG(THIS) ))));
}

void RogueCmdCallDynamicMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallDynamicMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  if (((RogueMethod__is_overridden( ROGUE_ARG(THIS->method_info) ))))
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[874] )))), ROGUE_ARG(THIS->method_info->cpp_typedef) );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[623] );
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( writer_0, ROGUE_ARG(THIS->method_info->index) )))), Rogue_literal_strings[625] );
    RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(THIS->method_info->type_context) );
    RogueInt32 i_2 = (0);
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_3857_3,(THIS->args));
      RogueInt32 _auto_3858_4 = (0);
      for (;_auto_3858_4 < _auto_3857_3->count;++_auto_3858_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_3857_3->data->as_objects[_auto_3858_4]))));
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
        RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->as_objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
        ++i_2;
      }
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[628] );
  }
  else
  {
    RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical( ROGUE_ARG(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info), ROGUE_ARG(THIS->args) )))))), writer_0, is_statement_1 );
  }
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCmdCallMethod* RogueCmdCallMethod__init_object( RogueClassCmdCallMethod* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallMethod*)(THIS);
}

RogueString* RogueCmdCallMethod__type_name( RogueClassCmdCallMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1520]);
}

RogueClassCmd* RogueCmdCallMethod__call_prior__Scope( RogueClassCmdCallMethod* THIS, RogueClassScope* scope_0 )
{
  if ((((RogueMethod__is_initializer( ROGUE_ARG(THIS->method_info) ))) && ((void*)THIS->method_info->type_context) != ((void*)scope_0->_this_type)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info), ROGUE_ARG(THIS->args) ))))))));
  }
  if (!(!!(THIS->method_info->overridden_method)))
  {
    if ((!!(THIS->method_info->specializer_count) && !!(THIS->method_info->type_context->base_class)))
    {
      RogueMethodTemplates__instantiate__String_Int32_Token_String( ROGUE_ARG(THIS->method_info->type_context->base_class->method_templates), ROGUE_ARG(THIS->method_info->unspecialized_name), ROGUE_ARG(THIS->method_info->specializer_count), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info->name) );
    }
    if (!(!!(THIS->method_info->overridden_method)))
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1367] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[1368] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[1369] )))) )))) ))));
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->method_info->overridden_method), ROGUE_ARG(THIS->args) ))))))));
}

RogueClassCmd* RogueCmdCallMethod__dispatch__Visitor( RogueClassCmdCallMethod* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

RogueClassCmdAdjustProperty* RogueCmdAdjustProperty__init_object( RogueClassCmdAdjustProperty* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAdjustProperty*)(THIS);
}

RogueString* RogueCmdAdjustProperty__type_name( RogueClassCmdAdjustProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1536]);
}

RogueClassCmd* RogueCmdAdjustProperty__cloned__CloneArgs( RogueClassCmdAdjustProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustProperty*,ROGUE_CREATE_OBJECT(CmdAdjustProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(THIS->delta) ))))));
}

RogueClassCmd* RogueCmdAdjustProperty__dispatch__Visitor( RogueClassCmdAdjustProperty* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdAdjustProperty( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdAdjustProperty__resolve__Scope( RogueClassCmdAdjustProperty* THIS, RogueClassScope* scope_0 )
{
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ))) )));
  if (((RogueType__is_compound( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), Rogue_literal_strings[786], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustProperty__type( RogueClassCmdAdjustProperty* THIS )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdAdjustProperty__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[177] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
  }
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->context) ))) );
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) );
}

RogueClassCmdAdjustProperty* RogueCmdAdjustProperty__init__Token_Cmd_Property_Int32( RogueClassCmdAdjustProperty* THIS, RogueClassToken* _auto_1576_0, RogueClassCmd* _auto_1577_1, RogueClassProperty* _auto_1578_2, RogueInt32 _auto_1579_3 )
{
  THIS->delta = _auto_1579_3;
  THIS->property_info = _auto_1578_2;
  THIS->context = _auto_1577_1;
  THIS->t = _auto_1576_0;
  return (RogueClassCmdAdjustProperty*)(THIS);
}

RogueClassCmdAdjustGlobal* RogueCmdAdjustGlobal__init_object( RogueClassCmdAdjustGlobal* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdAdjustGlobal*)(THIS);
}

RogueString* RogueCmdAdjustGlobal__type_name( RogueClassCmdAdjustGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1537]);
}

RogueClassCmd* RogueCmdAdjustGlobal__cloned__CloneArgs( RogueClassCmdAdjustGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAdjustGlobal__init__Token_Property_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAdjustGlobal*,ROGUE_CREATE_OBJECT(CmdAdjustGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(THIS->delta) ))))));
}

RogueClassCmd* RogueCmdAdjustGlobal__dispatch__Visitor( RogueClassCmdAdjustGlobal* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdAdjustGlobal( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdAdjustGlobal__resolve__Scope( RogueClassCmdAdjustGlobal* THIS, RogueClassScope* scope_0 )
{
  if (((RogueType__is_compound( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), Rogue_literal_strings[786], ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->delta) )))))) )))))) )))), scope_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdAdjustGlobal__type( RogueClassCmdAdjustGlobal* THIS )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdAdjustGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdAdjustGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (THIS->delta > 0)
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[177] );
  }
  else
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
  }
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[274] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[313] );
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) );
}

RogueClassCmdAdjustGlobal* RogueCmdAdjustGlobal__init__Token_Property_Int32( RogueClassCmdAdjustGlobal* THIS, RogueClassToken* _auto_1580_0, RogueClassProperty* _auto_1581_1, RogueInt32 _auto_1582_2 )
{
  THIS->delta = _auto_1582_2;
  THIS->global_info = _auto_1581_1;
  THIS->t = _auto_1580_0;
  return (RogueClassCmdAdjustGlobal*)(THIS);
}

RogueClassCmdModifyAndAssignGlobal* RogueCmdModifyAndAssignGlobal__init_object( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  RogueCmdResolvedModifyAndAssign__init_object( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) );
  return (RogueClassCmdModifyAndAssignGlobal*)(THIS);
}

RogueString* RogueCmdModifyAndAssignGlobal__type_name( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1492]);
}

RogueClassCmd* RogueCmdModifyAndAssignGlobal__cloned__CloneArgs( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignGlobal*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(THIS->op), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdModifyAndAssignGlobal__dispatch__Visitor( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdModifyAndAssignGlobal( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdModifyAndAssignGlobal__resolve__Scope( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[452], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  if (((RogueType__is_reference( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->global_info->_type->global_method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info->_type->name) )))))), m_name_1, ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(THIS->new_value) )))) )))))) )))), scope_0 ))));
      }
      else if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))->global_method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))->name) )))))), m_name_1, ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(THIS->new_value) )))) )))))) )))), scope_0 ))));
      }
      else
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,arg_type_2,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))->name));
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1246] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->global_info->_type))) )))) )))), Rogue_literal_strings[1247] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1248] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[1294] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1250] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[405] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->global_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_3859_4,(THIS->op));
    if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3859_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) )))
    {
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3859_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) )))
    {
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3859_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) )))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      if (!(!!(access_3)))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1253] ))));
      }
      if (!!(access_3->context))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1254] ))));
      }
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadGlobal__init__Token_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadGlobal*,ROGUE_CREATE_OBJECT(CmdReadGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info) )))));
      return (RogueClassCmd*)(((RogueCmdWriteGlobal__resolve__Scope( ROGUE_ARG(((RogueCmdWriteGlobal__init__Token_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteGlobal*,ROGUE_CREATE_OBJECT(CmdWriteGlobal))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->global_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->global_info->_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignGlobal__type( RogueClassCmdModifyAndAssignGlobal* THIS )
{
  return (RogueClassType*)(THIS->global_info->_type);
}

void RogueCmdModifyAndAssignGlobal__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[274] )))), ROGUE_ARG(THIS->global_info->type_context->cpp_name) )))), Rogue_literal_strings[313] );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->global_info->cpp_name) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[620] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignGlobal* RogueCmdModifyAndAssignGlobal__init__Token_Property_TokenType_Cmd( RogueClassCmdModifyAndAssignGlobal* THIS, RogueClassToken* _auto_1583_0, RogueClassProperty* _auto_1584_1, RogueClassTokenType* _auto_1585_2, RogueClassCmd* _auto_1586_3 )
{
  THIS->new_value = _auto_1586_3;
  THIS->op = _auto_1585_2;
  THIS->global_info = _auto_1584_1;
  THIS->t = _auto_1583_0;
  return (RogueClassCmdModifyAndAssignGlobal*)(THIS);
}

RogueClassCmdModifyAndAssignProperty* RogueCmdModifyAndAssignProperty__init_object( RogueClassCmdModifyAndAssignProperty* THIS )
{
  RogueCmdResolvedModifyAndAssign__init_object( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) );
  return (RogueClassCmdModifyAndAssignProperty*)(THIS);
}

RogueString* RogueCmdModifyAndAssignProperty__type_name( RogueClassCmdModifyAndAssignProperty* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1493]);
}

RogueClassCmd* RogueCmdModifyAndAssignProperty__cloned__CloneArgs( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdModifyAndAssignProperty*,ROGUE_CREATE_OBJECT(CmdModifyAndAssignProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(THIS->op), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdModifyAndAssignProperty__dispatch__Visitor( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdModifyAndAssignProperty( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdModifyAndAssignProperty__resolve__Scope( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassScope* scope_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,m_name_1,(((RogueString__operatorPLUS__String( Rogue_literal_strings[452], ROGUE_ARG(((RogueTokenType__to_String( ROGUE_ARG(THIS->op) )))) )))));
  if (((RogueType__is_reference( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->property_info->_type->method_lookup_by_name), m_name_1 )))))
    {
      return (RogueClassCmd*)(((RogueCmdAccess__resolve__Scope( ROGUE_ARG(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))), scope_0 ))));
    }
    else
    {
      m_name_1 = ((RogueString*)((RogueString__leftmost__Int32( m_name_1, -1 ))));
      THIS->new_value = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))) )));
      if (!!(((RogueTable_String_Method_List___get__String( ROGUE_ARG(THIS->property_info->_type->method_lookup_by_name), m_name_1 )))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), m_name_1, ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
      }
      else if (((RogueType__has_global_method_named__String( ROGUE_ARG(THIS->property_info->_type), m_name_1 ))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->property_info->_type->name) )))))), m_name_1, ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(THIS->new_value) )))) )))))) )))), scope_0 ))));
      }
      else if (((RogueType__has_global_method_named__String( ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))), m_name_1 ))))
      {
        return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))->name) )))))), m_name_1, ROGUE_ARG(((RogueCmdArgs__init__Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdArgs*,ROGUE_CREATE_OBJECT(CmdArgs))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(THIS->new_value) )))) )))))) )))), scope_0 ))));
      }
      else
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,arg_type_2,((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))->name));
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1246] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->property_info->_type))) )))) )))), Rogue_literal_strings[1247] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1248] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[1294] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], m_name_1 )))) )))), Rogue_literal_strings[1250] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], arg_type_2 )))) )))), Rogue_literal_strings[405] )))) )))) ))));
      }
    }
  }
  else if (((RogueType__is_compound( ROGUE_ARG(THIS->property_info->_type) ))))
  {
    return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(((RogueString__leftmost__Int32( m_name_1, -1 )))), ROGUE_ARG(THIS->new_value) )))))) )))), scope_0 ))));
  }
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTokenType*,_auto_3860_4,(THIS->op));
    if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3860_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_caret_equals))) )))
    {
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdPower*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdPower*,ROGUE_CREATE_OBJECT(CmdPower)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3860_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_percent_equals))) )))
    {
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdMod*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdMod*,ROGUE_CREATE_OBJECT(CmdMod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))))), ROGUE_ARG(THIS->new_value) )))))))) )))), scope_0 ))));
    }
    else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)_auto_3860_4), ROGUE_ARG(((RogueObject*)(RogueTokenType_symbol_dot_equals))) )))
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,access_3,(((RogueClassCmdAccess*)(RogueObject_as(THIS->new_value,RogueTypeCmdAccess)))));
      if (!(!!(access_3)))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->new_value->t), Rogue_literal_strings[1253] ))));
      }
      if (!!(access_3->context))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(access_3->t), Rogue_literal_strings[1254] ))));
      }
      access_3->context = ((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )))), ROGUE_ARG(THIS->property_info) )))));
      return (RogueClassCmd*)(((RogueCmdWriteProperty__resolve__Scope( ROGUE_ARG(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG(THIS->property_info), ROGUE_ARG(((RogueClassCmd*)(access_3))) )))), scope_0 ))));
    }
  }
  THIS->context = ((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ))) )));
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))), ROGUE_ARG(THIS->property_info->_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdModifyAndAssignProperty__type( RogueClassCmdModifyAndAssignProperty* THIS )
{
  return (RogueClassType*)(THIS->property_info->_type);
}

void RogueCmdModifyAndAssignProperty__write_cpp__CPPWriter_Logical( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print_access_operator__Type( writer_0, ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->context) ))) );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->property_info->cpp_name) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueCmdResolvedModifyAndAssign__cpp_symbol( ROGUE_ARG(((RogueClassCmdResolvedModifyAndAssign*)THIS)) )))) )))), Rogue_literal_strings[620] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
}

RogueClassCmdModifyAndAssignProperty* RogueCmdModifyAndAssignProperty__init__Token_Cmd_Property_TokenType_Cmd( RogueClassCmdModifyAndAssignProperty* THIS, RogueClassToken* _auto_1587_0, RogueClassCmd* _auto_1588_1, RogueClassProperty* _auto_1589_2, RogueClassTokenType* _auto_1590_3, RogueClassCmd* _auto_1591_4 )
{
  THIS->new_value = _auto_1591_4;
  THIS->op = _auto_1590_3;
  THIS->property_info = _auto_1589_2;
  THIS->context = _auto_1588_1;
  THIS->t = _auto_1587_0;
  return (RogueClassCmdModifyAndAssignProperty*)(THIS);
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init_object( RogueClassCmdCreateArray* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueString* RogueCmdCreateArray__type_name( RogueClassCmdCreateArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1207]);
}

RogueClassCmd* RogueCmdCreateArray__cloned__CloneArgs( RogueClassCmdCreateArray* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCreateArray__init__Token_Type_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCreateArray*,ROGUE_CREATE_OBJECT(CmdCreateArray))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->_array_type), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->count_cmd), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdCreateArray__dispatch__Visitor( RogueClassCmdCreateArray* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCreateArray( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdCreateArray__resolve__Scope( RogueClassCmdCreateArray* THIS, RogueClassScope* scope_0 )
{
  RogueType__organize__Scope( ROGUE_ARG(THIS->_array_type), scope_0 );
  THIS->count_cmd = ((RogueCmd__require_integer( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->count_cmd), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdCreateArray__type( RogueClassCmdCreateArray* THIS )
{
  return (RogueClassType*)(THIS->_array_type);
}

void RogueCmdCreateArray__write_cpp__CPPWriter_Logical( RogueClassCmdCreateArray* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1343] );
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->count_cmd), writer_0, false );
  RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1344] )))), ROGUE_ARG(THIS->_array_type->_element_type) )))), Rogue_literal_strings[12] );
  if (((RogueType__is_reference( ROGUE_ARG(THIS->_array_type->_element_type) ))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1345] );
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[628] );
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init__Token_Type_CmdArgs( RogueClassCmdCreateArray* THIS, RogueClassToken* _auto_1592_0, RogueClassType* _auto_1593_1, RogueClassCmdArgs* args_2 )
{
  THIS->_array_type = _auto_1593_1;
  THIS->t = _auto_1592_0;
  if ((((void*)args_2) == ((void*)NULL) || args_2->count != 1))
  {
    ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[512] ))));
  }
  THIS->count_cmd = ((RogueClassCmd*)(args_2->data->as_objects[0]));
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueClassCmdCreateArray* RogueCmdCreateArray__init__Token_Type_Cmd( RogueClassCmdCreateArray* THIS, RogueClassToken* _auto_1594_0, RogueClassType* _auto_1595_1, RogueClassCmd* _auto_1596_2 )
{
  THIS->count_cmd = _auto_1596_2;
  THIS->_array_type = _auto_1595_1;
  THIS->t = _auto_1594_0;
  return (RogueClassCmdCreateArray*)(THIS);
}

RogueClassCmdReadArrayElement* RogueCmdReadArrayElement__init_object( RogueClassCmdReadArrayElement* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadArrayElement*)(THIS);
}

RogueString* RogueCmdReadArrayElement__type_name( RogueClassCmdReadArrayElement* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1538]);
}

RogueClassCmd* RogueCmdReadArrayElement__cloned__CloneArgs( RogueClassCmdReadArrayElement* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadArrayElement__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayElement*,ROGUE_CREATE_OBJECT(CmdReadArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->index), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdReadArrayElement__dispatch__Visitor( RogueClassCmdReadArrayElement* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdReadArrayElement( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdReadArrayElement__resolve__Scope( RogueClassCmdReadArrayElement* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
  THIS->_array_type = (Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) ));
  THIS->index = ((RogueCmd__require_integer( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->index), scope_0 ))) )));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassCmd* RogueCmdReadArrayElement__resolve_adjust__Scope_Int32( RogueClassCmdReadArrayElement* THIS, RogueClassScope* scope_0, RogueInt32 delta_1 )
{
  return (RogueClassCmd*)(((RogueCmdWriteArrayElement__resolve__Scope( ROGUE_ARG(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->context), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->index), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(((RogueClassCmd*)(((RogueClassCmdAdd*)(((RogueCmdBinary__init__Token_Cmd_Cmd( ROGUE_ARG(((RogueClassCmdBinary*)ROGUE_CREATE_REF(RogueClassCmdAdd*,ROGUE_CREATE_OBJECT(CmdAdd)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueClassCmd*)(THIS))), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), ROGUE_ARG(THIS->t), delta_1 )))))) )))))))) )))), scope_0 ))));
}

RogueClassType* Rogue_CmdReadArrayElement__type( RogueClassCmdReadArrayElement* THIS )
{
  return (RogueClassType*)(THIS->_array_type->_element_type);
}

void RogueCmdReadArrayElement__write_cpp__CPPWriter_Logical( RogueClassCmdReadArrayElement* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_array_type->_element_type));
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_open_cast__Type_Type( writer_0, element_type_2, element_type_2 );
  }
  if (((RogueType__is_reference( element_type_2 ))))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] );
    RogueCPPWriter__print__Type( writer_0, element_type_2 );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[822] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1346] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1347] );
  }
  else if (((RogueType__is_primitive( element_type_2 ))))
  {
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[145] );
    {
      if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1348] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1349] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1350] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1351] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1352] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1353] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1354] );
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1355] ))));
      }
    }
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[73] );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), element_type_2 )))), Rogue_literal_strings[1356] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1357] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[73] );
  }
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_close_cast__Type_Type( writer_0, element_type_2, element_type_2 );
  }
}

RogueClassCmdReadArrayElement* RogueCmdReadArrayElement__init__Token_Cmd_Cmd( RogueClassCmdReadArrayElement* THIS, RogueClassToken* _auto_1597_0, RogueClassCmd* _auto_1598_1, RogueClassCmd* _auto_1599_2 )
{
  THIS->index = _auto_1599_2;
  THIS->context = _auto_1598_1;
  THIS->t = _auto_1597_0;
  return (RogueClassCmdReadArrayElement*)(THIS);
}

RogueClassCmdReadArrayCount* RogueCmdReadArrayCount__init_object( RogueClassCmdReadArrayCount* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdReadArrayCount*)(THIS);
}

RogueString* RogueCmdReadArrayCount__type_name( RogueClassCmdReadArrayCount* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1208]);
}

RogueClassCmd* RogueCmdReadArrayCount__cloned__CloneArgs( RogueClassCmdReadArrayCount* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadArrayCount__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadArrayCount*,ROGUE_CREATE_OBJECT(CmdReadArrayCount))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdReadArrayCount__dispatch__Visitor( RogueClassCmdReadArrayCount* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdReadArrayCount( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdReadArrayCount__resolve__Scope( RogueClassCmdReadArrayCount* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
  THIS->_array_type = (Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdReadArrayCount__type( RogueClassCmdReadArrayCount* THIS )
{
  return (RogueClassType*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32);
}

void RogueCmdReadArrayCount__write_cpp__CPPWriter_Logical( RogueClassCmdReadArrayCount* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1358] );
}

RogueClassCmdReadArrayCount* RogueCmdReadArrayCount__init__Token_Cmd( RogueClassCmdReadArrayCount* THIS, RogueClassToken* _auto_1600_0, RogueClassCmd* _auto_1601_1 )
{
  THIS->context = _auto_1601_1;
  THIS->t = _auto_1600_0;
  return (RogueClassCmdReadArrayCount*)(THIS);
}

RogueClassCmdWriteArrayElement* RogueCmdWriteArrayElement__init_object( RogueClassCmdWriteArrayElement* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdWriteArrayElement*)(THIS);
}

RogueString* RogueCmdWriteArrayElement__type_name( RogueClassCmdWriteArrayElement* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1539]);
}

RogueClassCmd* RogueCmdWriteArrayElement__cloned__CloneArgs( RogueClassCmdWriteArrayElement* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteArrayElement*,ROGUE_CREATE_OBJECT(CmdWriteArrayElement))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->context), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->index), clone_args_0 ))), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->new_value), clone_args_0 ))) ))))));
}

RogueClassCmd* RogueCmdWriteArrayElement__dispatch__Visitor( RogueClassCmdWriteArrayElement* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdWriteArrayElement( v_0, ROGUE_ARG(THIS) ))));
}

RogueClassCmd* RogueCmdWriteArrayElement__resolve__Scope( RogueClassCmdWriteArrayElement* THIS, RogueClassScope* scope_0 )
{
  if (!!(THIS->_array_type))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
  }
  THIS->context = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->context), scope_0 ));
  THIS->_array_type = (Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->context) ));
  THIS->index = ((RogueCmd__require_integer( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->index), scope_0 ))) )));
  THIS->new_value = (Rogue_call_ROGUEM144( 43, ROGUE_ARG((Rogue_call_ROGUEM145( 19, ROGUE_ARG(((RogueCmd__require_value( ROGUE_ARG((Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->new_value), scope_0 ))) )))), ROGUE_ARG(THIS->_array_type->_element_type), scope_0, false, false ))), scope_0 ));
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdWriteArrayElement__type( RogueClassCmdWriteArrayElement* THIS )
{
  return (RogueClassType*)(THIS->_array_type->_element_type);
}

void RogueCmdWriteArrayElement__write_cpp__CPPWriter_Logical( RogueClassCmdWriteArrayElement* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassType*,element_type_2,(THIS->_array_type->_element_type));
  if (((RogueType__is_primitive( element_type_2 ))))
  {
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[145] );
    {
      if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real64))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1348] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Real32))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1349] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int64))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1350] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Int32))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1351] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Character))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1352] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Byte))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1353] );
      }
      else if ((Rogue_call_ROGUEM3( 6, ((RogueObject*)element_type_2), ROGUE_ARG(((RogueObject*)(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Logical))) )))
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1354] );
      }
    }
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[889] );
    if (((void*)(Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))) != ((void*)element_type_2))
    {
      RogueCPPWriter__print_cast__Type_Type( writer_0, ROGUE_ARG((Rogue_call_ROGUEM153( 49, ROGUE_ARG(THIS->new_value) ))), element_type_2 );
    }
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else if (((RogueType__is_reference( element_type_2 ))))
  {
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[145] );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1359] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[889] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), element_type_2 )))), Rogue_literal_strings[1356] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[1357] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->index), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[889] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->new_value), writer_0, false );
  }
}

RogueClassCmdWriteArrayElement* RogueCmdWriteArrayElement__init__Token_Cmd_Cmd_Cmd( RogueClassCmdWriteArrayElement* THIS, RogueClassToken* _auto_1602_0, RogueClassCmd* _auto_1603_1, RogueClassCmd* _auto_1604_2, RogueClassCmd* _auto_1605_3 )
{
  THIS->new_value = _auto_1605_3;
  THIS->index = _auto_1604_2;
  THIS->context = _auto_1603_1;
  THIS->t = _auto_1602_0;
  return (RogueClassCmdWriteArrayElement*)(THIS);
}

RogueClassCmdTaskControl* RogueCmdTaskControl__init_object( RogueClassCmdTaskControl* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  THIS->sections = ((RogueCmdTaskControlSection_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueCmdTaskControlSection_List*,ROGUE_CREATE_OBJECT(CmdTaskControlSection_List))) )));
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueString* RogueCmdTaskControl__type_name( RogueClassCmdTaskControl* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1209]);
}

RogueClassCmd* RogueCmdTaskControl__dispatch__Visitor( RogueClassCmdTaskControl* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTaskControl( v_0, ROGUE_ARG(THIS) ))));
}

RogueLogical RogueCmdTaskControl__requires_semicolon( RogueClassCmdTaskControl* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdTaskControl__resolve__Scope( RogueClassCmdTaskControl* THIS, RogueClassScope* scope_0 )
{
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3861_1,(THIS->sections));
    RogueInt32 _auto_3862_2 = (0);
    for (;_auto_3862_2 < _auto_3861_1->count;++_auto_3862_2)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_3,(((RogueClassCmdTaskControlSection*)(_auto_3861_1->data->as_objects[_auto_3862_2]))));
      RogueCmdStatementList__resolve__Scope_Logical( ROGUE_ARG(section_3->statements), scope_0, false );
    }
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdTaskControl__write_cpp__CPPWriter_Logical( RogueClassCmdTaskControl* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1360] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[170] );
  writer_0->indent += 2;
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3863_2,(THIS->sections));
    RogueInt32 _auto_3864_3 = (0);
    for (;_auto_3864_3 < _auto_3863_2->count;++_auto_3864_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_4,(((RogueClassCmdTaskControlSection*)(_auto_3863_2->data->as_objects[_auto_3864_3]))));
      RogueCPPWriter__println__String( ROGUE_ARG(((RogueCPPWriter__print__Int32( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[739] )))), ROGUE_ARG(section_4->ip) )))), Rogue_literal_strings[152] );
      RogueCmdStatementList__write_cpp__CPPWriter_Logical_Logical( ROGUE_ARG(section_4->statements), writer_0, false, false );
    }
  }
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[743] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1361] );
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[1362] );
  writer_0->indent -= 2;
  RogueCPPWriter__println__String( writer_0, Rogue_literal_strings[72] );
}

RogueClassCmdTaskControl* RogueCmdTaskControl__init__Token( RogueClassCmdTaskControl* THIS, RogueClassToken* _auto_1611_0 )
{
  THIS->t = _auto_1611_0;
  THIS->current_section = ((RogueCmdTaskControlSection__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControlSection*,ROGUE_CREATE_OBJECT(CmdTaskControlSection))), 1 )));
  RogueCmdTaskControlSection_List__add__CmdTaskControlSection( ROGUE_ARG(THIS->sections), ROGUE_ARG(THIS->current_section) );
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueClassCmdTaskControl* RogueCmdTaskControl__add__Cmd( RogueClassCmdTaskControl* THIS, RogueClassCmd* cmd_0 )
{
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->current_section->statements)), cmd_0 );
  return (RogueClassCmdTaskControl*)(THIS);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init_object( RogueCmdTaskControlSection_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init( RogueCmdTaskControlSection_List* THIS )
{
  RogueCmdTaskControlSection_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueString* RogueCmdTaskControlSection_List__to_String( RogueCmdTaskControlSection_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueCmdTaskControlSection_List*,_auto_3865_2,(THIS));
    RogueInt32 _auto_3866_3 = (0);
    for (;_auto_3866_3 < _auto_3865_2->count;++_auto_3866_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,value_4,(((RogueClassCmdTaskControlSection*)(_auto_3865_2->data->as_objects[_auto_3866_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG((Rogue_call_ROGUEM4( 11, ((RogueObject*)value_4) ))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueCmdTaskControlSection_List__type_name( RogueCmdTaskControlSection_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1071]);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__init__Int32( RogueCmdTaskControlSection_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueClassCmdTaskControlSection*), true );
  }
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__add__CmdTaskControlSection( RogueCmdTaskControlSection_List* THIS, RogueClassCmdTaskControlSection* value_0 )
{
  ((RogueCmdTaskControlSection_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueInt32 RogueCmdTaskControlSection_List__capacity( RogueCmdTaskControlSection_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueCmdTaskControlSection_List* RogueCmdTaskControlSection_List__reserve__Int32( RogueCmdTaskControlSection_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdTaskControlSection*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueCmdTaskControlSection_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueClassCmdTaskControlSection*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueCmdTaskControlSection_List*)(THIS);
}

RogueString* RogueArray_CmdTaskControlSection___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1128]);
}

RogueClassCmdNoAction* RogueCmdNoAction__init_object( RogueClassCmdNoAction* THIS )
{
  RogueCmd__init_object( ROGUE_ARG(((RogueClassCmd*)THIS)) );
  return (RogueClassCmdNoAction*)(THIS);
}

RogueString* RogueCmdNoAction__type_name( RogueClassCmdNoAction* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1540]);
}

void RogueCmdNoAction__add_to__CmdStatementList( RogueClassCmdNoAction* THIS, RogueClassCmdStatementList* statements_0 )
{
}

RogueClassCmdNoAction* RogueCmdNoAction__cloned__CloneArgs( RogueClassCmdNoAction* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmdNoAction*)(((RogueCmdNoAction__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdNoAction*,ROGUE_CREATE_OBJECT(CmdNoAction))), ROGUE_ARG(THIS->t) ))));
}

RogueClassCmd* RogueCmdNoAction__dispatch__Visitor( RogueClassCmdNoAction* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdNoAction( v_0, ROGUE_ARG(THIS) ))));
}

RogueLogical RogueCmdNoAction__generates_output( RogueClassCmdNoAction* THIS )
{
  return (RogueLogical)(false);
}

RogueLogical RogueCmdNoAction__requires_semicolon( RogueClassCmdNoAction* THIS )
{
  return (RogueLogical)(false);
}

RogueClassCmd* RogueCmdNoAction__resolve__Scope( RogueClassCmdNoAction* THIS, RogueClassScope* scope_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

RogueClassType* Rogue_CmdNoAction__type( RogueClassCmdNoAction* THIS )
{
  return (RogueClassType*)(((RogueClassType*)(NULL)));
}

void RogueCmdNoAction__write_cpp__CPPWriter_Logical( RogueClassCmdNoAction* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
}

RogueClassCmdNoAction* RogueCmdNoAction__init__Token( RogueClassCmdNoAction* THIS, RogueClassToken* _auto_1615_0 )
{
  THIS->t = _auto_1615_0;
  return (RogueClassCmdNoAction*)(THIS);
}

RogueClassListRewriter_Type_* RogueListRewriter_Type___init_object( RogueClassListRewriter_Type_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassListRewriter_Type_*)(THIS);
}

RogueString* RogueListRewriter_Type___type_name( RogueClassListRewriter_Type_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1027]);
}

RogueClassListRewriter_Type_* RogueListRewriter_Type___init__Type_List( RogueClassListRewriter_Type_* THIS, RogueType_List* _auto_1622_0 )
{
  THIS->list = _auto_1622_0;
  return (RogueClassListRewriter_Type_*)(THIS);
}

RogueLogical RogueListRewriter_Type___has_another( RogueClassListRewriter_Type_* THIS )
{
  if (THIS->read_index < THIS->list->count)
  {
    return (RogueLogical)(true);
  }
  else
  {
    RogueType_List__discard_from__Int32( ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->write_index) );
    return (RogueLogical)(false);
  }
  return (RogueLogical)(THIS->read_index < THIS->list->count);
}

RogueClassType* RogueListRewriter_Type___read( RogueClassListRewriter_Type_* THIS )
{
  ++THIS->read_index;
  return (RogueClassType*)(((RogueClassType*)(THIS->list->data->as_objects[(THIS->read_index - 1)])));
}

RogueClassListRewriter_Type_* RogueListRewriter_Type___write__Type( RogueClassListRewriter_Type_* THIS, RogueClassType* value_0 )
{
  if (THIS->write_index == THIS->read_index)
  {
    RogueType_List__reserve__Int32( ROGUE_ARG(THIS->list), 1 );
    RogueInt32 unread_count_1 = ((THIS->list->count - THIS->read_index));
    RogueArray_set(THIS->list->data,(((RogueType_List__capacity( ROGUE_ARG(THIS->list) ))) - unread_count_1),((RogueArray*)(THIS->list->data)),THIS->read_index,unread_count_1);
    THIS->read_index += (((RogueType_List__capacity( ROGUE_ARG(THIS->list) ))) - THIS->list->count);
    THIS->list->count = ((RogueType_List__capacity( ROGUE_ARG(THIS->list) )));
  }
  THIS->list->data->as_objects[THIS->write_index] = value_0;
  ++THIS->write_index;
  return (RogueClassListRewriter_Type_*)(THIS);
}

RogueClassUpdateThisTypeVisitor* RogueUpdateThisTypeVisitor__init_object( RogueClassUpdateThisTypeVisitor* THIS )
{
  RogueVisitor__init_object( ROGUE_ARG(((RogueClassVisitor*)THIS)) );
  return (RogueClassUpdateThisTypeVisitor*)(THIS);
}

RogueString* RogueUpdateThisTypeVisitor__type_name( RogueClassUpdateThisTypeVisitor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1516]);
}

void RogueUpdateThisTypeVisitor__on_enter__CmdThisContext( RogueClassUpdateThisTypeVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  cmd_0->_this_type = THIS->_this_type;
}

RogueClassUpdateThisTypeVisitor* RogueUpdateThisTypeVisitor__init__Type_Method( RogueClassUpdateThisTypeVisitor* THIS, RogueClassType* _auto_1635_0, RogueClassMethod* _auto_1636_1 )
{
  THIS->this_method = _auto_1636_1;
  THIS->_this_type = _auto_1635_0;
  if (((RogueMethod__returns_this( ROGUE_ARG(THIS->this_method) ))))
  {
    THIS->this_method->_return_type = THIS->_this_type;
  }
  return (RogueClassUpdateThisTypeVisitor*)(THIS);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init_object( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init( RogueClassTable_String_TypeSpecializer_* THIS )
{
  RogueTable_String_TypeSpecializer___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueString* RogueTable_String_TypeSpecializer___to_String( RogueClassTable_String_TypeSpecializer_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_TypeSpecializer___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_TypeSpecializer___type_name( RogueClassTable_String_TypeSpecializer_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1028]);
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___init__Int32( RogueClassTable_String_TypeSpecializer_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true );
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___find__String( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_2,(((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_TypeSpecializer_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_TypeSpecializer_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_TypeSpecializer_*)(((RogueClassTableEntry_String_TypeSpecializer_*)(NULL)));
}

RogueClassTypeSpecializer* RogueTable_String_TypeSpecializer___get__String( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_1,(((RogueTable_String_TypeSpecializer___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassTypeSpecializer*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassTypeSpecializer*,default_value_2,0);
    return (RogueClassTypeSpecializer*)(default_value_2);
  }
}

RogueClassTable_String_TypeSpecializer_* RogueTable_String_TypeSpecializer___set__String_TypeSpecializer( RogueClassTable_String_TypeSpecializer_* THIS, RogueString* key_0, RogueClassTypeSpecializer* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,entry_2,(((RogueTable_String_TypeSpecializer___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_TypeSpecializer_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_TypeSpecializer____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_TypeSpecializer_*)((RogueTableEntry_String_TypeSpecializer___init__String_TypeSpecializer_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_TypeSpecializer_*,ROGUE_CREATE_OBJECT(TableEntry_String_TypeSpecializer_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_TypeSpecializer_*)(THIS);
}

RogueStringBuilder* RogueTable_String_TypeSpecializer___print_to__StringBuilder( RogueClassTable_String_TypeSpecializer_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_TypeSpecializer_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_TypeSpecializer____grow( RogueClassTable_String_TypeSpecializer_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_TypeSpecializer_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_TypeSpecializer_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_TypeSpecializer_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_TypeSpecializer_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_TypeSpecializer____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1129]);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTableEntry_String_TypeSpecializer___init_object( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_TypeSpecializer_*)(THIS);
}

RogueString* RogueTableEntry_String_TypeSpecializer___to_String( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_TypeSpecializer___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_TypeSpecializer___type_name( RogueClassTableEntry_String_TypeSpecializer_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[950]);
}

RogueClassTableEntry_String_TypeSpecializer_* RogueTableEntry_String_TypeSpecializer___init__String_TypeSpecializer_Int32( RogueClassTableEntry_String_TypeSpecializer_* THIS, RogueString* _key_0, RogueClassTypeSpecializer* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_TypeSpecializer_*)(THIS);
}

RogueClassCmdCastToType* RogueCmdCastToType__init_object( RogueClassCmdCastToType* THIS )
{
  RogueCmdTypeOperator__init_object( ROGUE_ARG(((RogueClassCmdTypeOperator*)THIS)) );
  return (RogueClassCmdCastToType*)(THIS);
}

RogueString* RogueCmdCastToType__type_name( RogueClassCmdCastToType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1500]);
}

RogueClassCmd* RogueCmdCastToType__cloned__CloneArgs( RogueClassCmdCastToType* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCastToType*)(((RogueCmdTypeOperator__init__Token_Cmd_Type( ROGUE_ARG(((RogueClassCmdTypeOperator*)ROGUE_CREATE_REF(RogueClassCmdCastToType*,ROGUE_CREATE_OBJECT(CmdCastToType)))), ROGUE_ARG(THIS->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->operand), clone_args_0 ))), ROGUE_ARG(THIS->_target_type) ))))))));
}

RogueClassCmd* RogueCmdCastToType__dispatch__Visitor( RogueClassCmdCastToType* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdTypeOperator( v_0, ROGUE_ARG(((RogueClassCmdTypeOperator*)(THIS))) ))));
}

RogueClassCmd* RogueCmdCastToType__resolve__Scope( RogueClassCmdCastToType* THIS, RogueClassScope* scope_0 )
{
  THIS->operand = (Rogue_call_ROGUEM144( 43, ROGUE_ARG(THIS->operand), scope_0 ));
  RogueType__organize__Scope( ROGUE_ARG(THIS->_target_type), scope_0 );
  if (((void*)(Rogue_call_ROGUEM153( 40, ROGUE_ARG(THIS->operand) ))) == ((void*)THIS->_target_type))
  {
    return (RogueClassCmd*)(THIS->operand);
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCastToType__write_cpp__CPPWriter_Logical( RogueClassCmdCastToType* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (is_statement_1)
  {
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->operand), writer_0, false );
  }
  else
  {
    RogueCPPWriter__print__String( ROGUE_ARG(((RogueCPPWriter__print__Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[666] )))), ROGUE_ARG(THIS->_target_type) )))), Rogue_literal_strings[822] );
    Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->operand), writer_0, false );
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[611] );
  }
}

RogueClassTraceUsedCodeVisitor* RogueTraceUsedCodeVisitor__init_object( RogueClassTraceUsedCodeVisitor* THIS )
{
  RogueVisitor__init_object( ROGUE_ARG(((RogueClassVisitor*)THIS)) );
  return (RogueClassTraceUsedCodeVisitor*)(THIS);
}

RogueString* RogueTraceUsedCodeVisitor__type_name( RogueClassTraceUsedCodeVisitor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1517]);
}

void RogueTraceUsedCodeVisitor__on_enter__Type( RogueClassTraceUsedCodeVisitor* THIS, RogueClassType* type_0 )
{
  RogueType__trace_used_code( type_0 );
}

void RogueTraceUsedCodeVisitor__on_enter__Method( RogueClassTraceUsedCodeVisitor* THIS, RogueClassMethod* m_0 )
{
  RogueMethod__trace_used_code( m_0 );
}

void RogueTraceUsedCodeVisitor__on_enter__CmdLiteralString( RogueClassTraceUsedCodeVisitor* THIS, RogueClassCmdLiteralString* cmd_0 )
{
  cmd_0->index = ((RogueProgram__add_literal_string__String( ((RogueClassProgram*)ROGUE_SINGLETON(Program)), ROGUE_ARG(cmd_0->value) )));
}

void RogueTraceUsedCodeVisitor__on_leave__CmdCallDynamicMethod( RogueClassTraceUsedCodeVisitor* THIS, RogueClassCmdCallDynamicMethod* cmd_0 )
{
  if (((RogueMethod__is_overridden( ROGUE_ARG(cmd_0->method_info) ))))
  {
    cmd_0->method_info->called_dynamically = true;
  }
}

RogueClassCloneMethodArgs* RogueCloneMethodArgs__init_object( RogueClassCloneMethodArgs* THIS )
{
  RogueCloneArgs__init_object( ROGUE_ARG(((RogueClassCloneArgs*)THIS)) );
  return (RogueClassCloneMethodArgs*)(THIS);
}

RogueString* RogueCloneMethodArgs__type_name( RogueClassCloneMethodArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1435]);
}

RogueClassCmdLabel* RogueCloneMethodArgs__register_label__CmdLabel( RogueClassCloneMethodArgs* THIS, RogueClassCmdLabel* label_0 )
{
  RogueCmdLabel_List__add__CmdLabel( ROGUE_ARG(THIS->cloned_method->label_list), label_0 );
  RogueTable_String_CmdLabel___set__String_CmdLabel( ROGUE_ARG(THIS->cloned_method->label_lookup), ROGUE_ARG(label_0->name), label_0 );
  return (RogueClassCmdLabel*)(label_0);
}

RogueClassCloneMethodArgs* RogueCloneMethodArgs__init__Method( RogueClassCloneMethodArgs* THIS, RogueClassMethod* _auto_2123_0 )
{
  THIS->cloned_method = _auto_2123_0;
  return (RogueClassCloneMethodArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__init_object( RogueClassTaskArgs* THIS )
{
  RogueCloneArgs__init_object( ROGUE_ARG(((RogueClassCloneArgs*)THIS)) );
  return (RogueClassTaskArgs*)(THIS);
}

RogueString* RogueTaskArgs__type_name( RogueClassTaskArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1436]);
}

RogueClassTaskArgs* RogueTaskArgs__init__Type_Method_Type_Method( RogueClassTaskArgs* THIS, RogueClassType* _auto_2140_0, RogueClassMethod* _auto_2141_1, RogueClassType* _auto_2142_2, RogueClassMethod* _auto_2143_3 )
{
  THIS->original_method = _auto_2143_3;
  THIS->_original_type = _auto_2142_2;
  THIS->task_method = _auto_2141_1;
  THIS->_task_type = _auto_2140_0;
  THIS->cmd_task_control = ((RogueCmdTaskControl__init__Token( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControl*,ROGUE_CREATE_OBJECT(CmdTaskControl))), ROGUE_ARG(THIS->task_method->t) )));
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add__Cmd( RogueClassTaskArgs* THIS, RogueClassCmd* cmd_0 )
{
  if (!!(cmd_0))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cmd_task_control->current_section->statements)), cmd_0 );
  }
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add_jump__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, to_section_1 );
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, true )))))) )))))) );
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassTaskArgs* RogueTaskArgs__add_conditional_jump__Cmd_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassCmd* condition_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassToken*,t_2,(condition_0->t));
  ROGUE_DEF_LOCAL_REF(RogueClassCmdIf*,cmd_if_3,(((RogueCmdIf__init__Token_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdIf*,ROGUE_CREATE_OBJECT(CmdIf))), t_2, condition_0, 2 )))));
  RogueInt32 ip_4 = (to_section_1->ip);
  if ((THIS->cmd_task_control->current_section->ip + 1) != ip_4)
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_2, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_2, ROGUE_ARG((ip_4 - 1)) )))))) )))))) );
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)cmd_if_3->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_2, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_2, true )))))) )))))) );
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(cmd_if_3))) );
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmd* RogueTaskArgs__create_return__Token_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmd* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  if (!!(value_1))
  {
    RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, Rogue_literal_strings[437] )))))), value_1 )))))) );
  }
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, -1 )))))) )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
}

RogueClassCmd* RogueTaskArgs__create_escape__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* escape_section_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdBlock*,result_2,(((RogueCmdBlock__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdBlock*,ROGUE_CREATE_OBJECT(CmdBlock))), t_0, 0 )))));
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, ROGUE_ARG((escape_section_1->ip - 1)) )))))) )))))) );
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)result_2->statements)), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  return (RogueClassCmd*)(((RogueClassCmd*)(result_2)));
}

RogueClassTaskArgs* RogueTaskArgs__add_yield__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,next_section_1,(((RogueTaskArgs__create_section( ROGUE_ARG(THIS) )))));
  RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, next_section_1 );
  RogueTaskArgs__add__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdReturn__init__Token_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReturn*,ROGUE_CREATE_OBJECT(CmdReturn))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralLogical__init__Token_Logical( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralLogical*,ROGUE_CREATE_OBJECT(CmdLiteralLogical))), t_0, false )))))) )))))) );
  RogueTaskArgs__begin_section__CmdTaskControlSection( ROGUE_ARG(THIS), next_section_1 );
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmdTaskControlSection* RogueTaskArgs__jump_to_new_section__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,new_section_1,(((RogueTaskArgs__create_section( ROGUE_ARG(THIS) )))));
  RogueTaskArgs__add_jump__Token_CmdTaskControlSection( ROGUE_ARG(THIS), t_0, new_section_1 );
  RogueTaskArgs__begin_section__CmdTaskControlSection( ROGUE_ARG(THIS), new_section_1 );
  return (RogueClassCmdTaskControlSection*)(new_section_1);
}

RogueClassTaskArgs* RogueTaskArgs__begin_section__CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassCmdTaskControlSection* section_0 )
{
  THIS->cmd_task_control->current_section = section_0;
  return (RogueClassTaskArgs*)(THIS);
}

RogueClassCmdTaskControlSection* RogueTaskArgs__create_section( RogueClassTaskArgs* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmdTaskControlSection*,section_0,(((RogueCmdTaskControlSection__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdTaskControlSection*,ROGUE_CREATE_OBJECT(CmdTaskControlSection))), ROGUE_ARG((THIS->cmd_task_control->sections->count + 1)) )))));
  RogueCmdTaskControlSection_List__add__CmdTaskControlSection( ROGUE_ARG(THIS->cmd_task_control->sections), section_0 );
  return (RogueClassCmdTaskControlSection*)(section_0);
}

RogueClassCmd* RogueTaskArgs__cmd_read_this__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) ))))));
}

RogueClassCmd* RogueTaskArgs__cmd_read_context__Token( RogueClassTaskArgs* THIS, RogueClassToken* t_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdReadProperty__init__Token_Cmd_Property( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdReadProperty*,ROGUE_CREATE_OBJECT(CmdReadProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->context_property) ))))));
}

RogueString* RogueTaskArgs__convert_local_name__Local( RogueClassTaskArgs* THIS, RogueClassLocal* local_info_0 )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_0->name) )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_0->index) )))) )))) ))));
}

RogueClassCmd* RogueTaskArgs__cmd_read__Token_Local( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) ))))));
}

RogueClassCmd* RogueTaskArgs__cmd_write__Token_Local_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1, RogueClassCmd* new_value_2 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) )))))), new_value_2 ))))));
}

RogueClassCmd* RogueTaskArgs__replace_write_local__Token_Local_Cmd( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassLocal* local_info_1, RogueClassCmd* _auto_5775 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,new_value_2,_auto_5775);
  if (((void*)new_value_2) == ((void*)NULL))
  {
    new_value_2 = ((RogueClassCmd*)((RogueType__create_default_value__Token( ROGUE_ARG(local_info_1->_type), t_0 ))));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdAccess__init__Token_Cmd_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->name) )))) )))), Rogue_literal_strings[313] )))), ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[0], ROGUE_ARG(local_info_1->index) )))) )))) )))) )))))), new_value_2 ))))));
}

RogueClassTaskArgs* RogueTaskArgs__set_next_ip__Token_CmdTaskControlSection( RogueClassTaskArgs* THIS, RogueClassToken* t_0, RogueClassCmdTaskControlSection* to_section_1 )
{
  RogueInt32 ip_2 = (to_section_1->ip);
  if ((THIS->cmd_task_control->current_section->ip + 1) != ip_2)
  {
    RogueCmdTaskControl__add__Cmd( ROGUE_ARG(THIS->cmd_task_control), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdWriteProperty__init__Token_Cmd_Property_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdWriteProperty*,ROGUE_CREATE_OBJECT(CmdWriteProperty))), t_0, ROGUE_ARG(((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), t_0, ROGUE_ARG(THIS->_task_type) )))))), ROGUE_ARG(THIS->ip_property), ROGUE_ARG(((RogueClassCmd*)(((RogueCmdLiteralInt32__init__Token_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdLiteralInt32*,ROGUE_CREATE_OBJECT(CmdLiteralInt32))), t_0, ROGUE_ARG((ip_2 - 1)) )))))) )))))) );
  }
  return (RogueClassTaskArgs*)(THIS);
}

RogueToken_List_List* RogueToken_List_List__init_object( RogueToken_List_List* THIS )
{
  RogueGenericList__init_object( ROGUE_ARG(((RogueClassGenericList*)THIS)) );
  return (RogueToken_List_List*)(THIS);
}

RogueToken_List_List* RogueToken_List_List__init( RogueToken_List_List* THIS )
{
  RogueToken_List_List__init__Int32( ROGUE_ARG(THIS), 0 );
  return (RogueToken_List_List*)(THIS);
}

RogueString* RogueToken_List_List__to_String( RogueToken_List_List* THIS )
{
  ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_0,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'[', true );
  RogueLogical first_1 = (true);
  {
    ROGUE_DEF_LOCAL_REF(RogueToken_List_List*,_auto_3992_2,(THIS));
    RogueInt32 _auto_3993_3 = (0);
    for (;_auto_3993_3 < _auto_3992_2->count;++_auto_3993_3)
    {
      ROGUE_DEF_LOCAL_REF(RogueToken_List*,value_4,(((RogueToken_List*)(_auto_3992_2->data->as_objects[_auto_3993_3]))));
      if (first_1)
      {
        first_1 = ((RogueLogical)false);
      }
      else
      {
        RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
      }
      if (((void*)value_4) == ((void*)NULL))
      {
        RogueStringBuilder__print__String( buffer_0, Rogue_literal_strings[1] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(((RogueToken_List__to_String( value_4 )))) );
      }
    }
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)']', true );
  return (RogueString*)(((RogueStringBuilder__to_String( buffer_0 ))));
}

RogueString* RogueToken_List_List__type_name( RogueToken_List_List* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1070]);
}

RogueToken_List_List* RogueToken_List_List__init__Int32( RogueToken_List_List* THIS, RogueInt32 initial_capacity_0 )
{
  if (!!(initial_capacity_0))
  {
    THIS->data = RogueType_create_array( initial_capacity_0, sizeof(RogueToken_List*), true );
  }
  return (RogueToken_List_List*)(THIS);
}

RogueToken_List_List* RogueToken_List_List__add__Token_List( RogueToken_List_List* THIS, RogueToken_List* value_0 )
{
  ((RogueToken_List_List__reserve__Int32( ROGUE_ARG(THIS), 1 )))->data->as_objects[THIS->count] = value_0;
  THIS->count = (THIS->count + 1);
  return (RogueToken_List_List*)(THIS);
}

RogueInt32 RogueToken_List_List__capacity( RogueToken_List_List* THIS )
{
  if (!(!!(THIS->data)))
  {
    return (RogueInt32)(0);
  }
  return (RogueInt32)(THIS->data->count);
}

RogueToken_List* RogueToken_List_List__last( RogueToken_List_List* THIS )
{
  return (RogueToken_List*)(((RogueToken_List*)(THIS->data->as_objects[(THIS->count - 1)])));
}

RogueToken_List_List* RogueToken_List_List__reserve__Int32( RogueToken_List_List* THIS, RogueInt32 additional_count_0 )
{
  RogueInt32 required_capacity_1 = ((THIS->count + additional_count_0));
  if (!(!!(THIS->data)))
  {
    if (required_capacity_1 < 10)
    {
      required_capacity_1 = ((RogueInt32)10);
    }
    THIS->data = RogueType_create_array( required_capacity_1, sizeof(RogueToken_List*), true );
  }
  else if (required_capacity_1 > THIS->data->count)
  {
    RogueInt32 cap_2 = (((RogueToken_List_List__capacity( ROGUE_ARG(THIS) ))));
    if (required_capacity_1 < (cap_2 + cap_2))
    {
      required_capacity_1 = ((RogueInt32)(cap_2 + cap_2));
    }
    ROGUE_DEF_LOCAL_REF(RogueArray*,new_data_3,(RogueType_create_array( required_capacity_1, sizeof(RogueToken_List*), true )));
    RogueArray_set(new_data_3,0,((RogueArray*)(THIS->data)),0,-1);
    THIS->data = new_data_3;
  }
  return (RogueToken_List_List*)(THIS);
}

RogueString* RogueArray_Token_List___type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1123]);
}

RogueClassDirectiveTokenType* RogueDirectiveTokenType__init_object( RogueClassDirectiveTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassDirectiveTokenType*)(THIS);
}

RogueString* RogueDirectiveTokenType__type_name( RogueClassDirectiveTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1150]);
}

RogueClassToken* RogueDirectiveTokenType__create_token__String_Int32_Int32( RogueClassDirectiveTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueDirectiveTokenType__is_directive( RogueClassDirectiveTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueClassStructuralDirectiveTokenType* RogueStructuralDirectiveTokenType__init_object( RogueClassStructuralDirectiveTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassStructuralDirectiveTokenType*)(THIS);
}

RogueString* RogueStructuralDirectiveTokenType__type_name( RogueClassStructuralDirectiveTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1151]);
}

RogueClassToken* RogueStructuralDirectiveTokenType__create_token__String_Int32_Int32( RogueClassStructuralDirectiveTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueStructuralDirectiveTokenType__is_directive( RogueClassStructuralDirectiveTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueLogical RogueStructuralDirectiveTokenType__is_structure( RogueClassStructuralDirectiveTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueClassEOLTokenType* RogueEOLTokenType__init_object( RogueClassEOLTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassEOLTokenType*)(THIS);
}

RogueString* RogueEOLTokenType__type_name( RogueClassEOLTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1152]);
}

RogueClassToken* RogueEOLTokenType__create_token__String_Int32_Int32( RogueClassEOLTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueEOLToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), Rogue_literal_strings[0] ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueEOLTokenType__create_token__String_Int32_Int32_String( RogueClassEOLTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueEOLToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassEOLToken*,ROGUE_CREATE_OBJECT(EOLToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueEOLTokenType__is_structure( RogueClassEOLTokenType* THIS )
{
  return (RogueLogical)(false);
}

RogueClassStructureTokenType* RogueStructureTokenType__init_object( RogueClassStructureTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassStructureTokenType*)(THIS);
}

RogueString* RogueStructureTokenType__type_name( RogueClassStructureTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1153]);
}

RogueClassToken* RogueStructureTokenType__create_token__String_Int32_Int32( RogueClassStructureTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueToken__init__TokenType( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassToken*,ROGUE_CREATE_OBJECT(Token))), ROGUE_ARG(((RogueClassTokenType*)(THIS))) )))), filepath_0, line_1, column_2 ))));
}

RogueLogical RogueStructureTokenType__is_structure( RogueClassStructureTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueClassNativeCodeTokenType* RogueNativeCodeTokenType__init_object( RogueClassNativeCodeTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassNativeCodeTokenType*)(THIS);
}

RogueString* RogueNativeCodeTokenType__type_name( RogueClassNativeCodeTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1154]);
}

RogueClassToken* RogueNativeCodeTokenType__create_token__String_Int32_Int32_String( RogueClassNativeCodeTokenType* THIS, RogueString* filepath_0, RogueInt32 line_1, RogueInt32 column_2, RogueString* value_3 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueNativeCodeToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassNativeCodeToken*,ROGUE_CREATE_OBJECT(NativeCodeToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_3 ))))), filepath_0, line_1, column_2 ))));
}

RogueClassToken* RogueNativeCodeTokenType__create_token__Token_String( RogueClassNativeCodeTokenType* THIS, RogueClassToken* existing_0, RogueString* value_1 )
{
  return (RogueClassToken*)(((RogueToken__set_location__String_Int32_Int32( ROGUE_ARG(((RogueClassToken*)((RogueNativeCodeToken__init__TokenType_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassNativeCodeToken*,ROGUE_CREATE_OBJECT(NativeCodeToken))), ROGUE_ARG(((RogueClassTokenType*)(THIS))), value_1 ))))), ROGUE_ARG(existing_0->filepath), ROGUE_ARG(existing_0->line), ROGUE_ARG(existing_0->column) ))));
}

RogueClassModifyAndAssignTokenType* RogueModifyAndAssignTokenType__init_object( RogueClassModifyAndAssignTokenType* THIS )
{
  RogueTokenType__init_object( ROGUE_ARG(((RogueClassTokenType*)THIS)) );
  return (RogueClassModifyAndAssignTokenType*)(THIS);
}

RogueString* RogueModifyAndAssignTokenType__type_name( RogueClassModifyAndAssignTokenType* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1155]);
}

RogueLogical RogueModifyAndAssignTokenType__is_op_with_assign( RogueClassModifyAndAssignTokenType* THIS )
{
  return (RogueLogical)(true);
}

RogueClassFunction_CmdNamedArg_RETURNSLogical* RogueFunction_CmdNamedArg_RETURNSLogical__init_object( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction_CmdNamedArg_RETURNSLogical*)(THIS);
}

RogueString* RogueFunction_CmdNamedArg_RETURNSLogical__type_name( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1029]);
}

RogueLogical RogueFunction_CmdNamedArg_RETURNSLogical__call__CmdNamedArg( RogueClassFunction_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* param1_0 )
{
  return (RogueLogical)(false);
}

RogueClassMacroArgs* RogueMacroArgs__init_object( RogueClassMacroArgs* THIS )
{
  RogueCloneArgs__init_object( ROGUE_ARG(((RogueClassCloneArgs*)THIS)) );
  return (RogueClassMacroArgs*)(THIS);
}

RogueString* RogueMacroArgs__type_name( RogueClassMacroArgs* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1437]);
}

RogueClassMacroArgs* RogueMacroArgs__init__Cmd_Method_CmdArgs( RogueClassMacroArgs* THIS, RogueClassCmd* _auto_2847_0, RogueClassMethod* _auto_2848_1, RogueClassCmdArgs* args_2 )
{
  THIS->method_info = _auto_2848_1;
  THIS->this_context = _auto_2847_0;
  if (!!(args_2))
  {
    THIS->arg_lookup = ((RogueTable_String_Cmd___init( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTable_String_Cmd_*,ROGUE_CREATE_OBJECT(Table_String_Cmd_))) )));
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_4361_3,(args_2));
      RogueInt32 index_4 = (0);
      for (;index_4 < _auto_4361_3->count;++index_4)
      {
        RogueTable_String_Cmd___set__String_Cmd( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->as_objects[index_4]))->name), ROGUE_ARG(((RogueClassCmd*)(args_2->data->as_objects[index_4]))) );
      }
    }
  }
  return (RogueClassMacroArgs*)(THIS);
}

RogueClassCmd* RogueMacroArgs__inline_this( RogueClassMacroArgs* THIS )
{
  return (RogueClassCmd*)((Rogue_call_ROGUEM146( 21, ROGUE_ARG(THIS->this_context), ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )));
}

RogueClassCmd* RogueMacroArgs__inline_access__CmdAccess( RogueClassMacroArgs* THIS, RogueClassCmdAccess* access_0 )
{
  if (!!(access_0->context))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(access_0)));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(access_0->name) )))));
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(access_0)));
  }
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,dup_2,((Rogue_call_ROGUEM146( 21, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))));
  if (!!(access_0->args))
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdAccess*,new_access_3,(((RogueClassCmdAccess*)(RogueObject_as(dup_2,RogueTypeCmdAccess)))));
    if (!!(new_access_3))
    {
      if (!!(new_access_3->args))
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(access_0->t), Rogue_literal_strings[1210] ))));
      }
      else
      {
        new_access_3->args = access_0->args;
      }
    }
    else
    {
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(access_0->t), Rogue_literal_strings[1210] ))));
    }
  }
  return (RogueClassCmd*)(dup_2);
}

RogueClassCmd* RogueMacroArgs__inline_read_local__CmdReadLocal( RogueClassMacroArgs* THIS, RogueClassCmdReadLocal* read_cmd_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(read_cmd_0->local_info->name) )))));
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(read_cmd_0)));
  }
  return (RogueClassCmd*)((Rogue_call_ROGUEM146( 21, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) )));
}

RogueClassCmd* RogueMacroArgs__inline_write_local__CmdWriteLocal( RogueClassMacroArgs* THIS, RogueClassCmdWriteLocal* write_cmd_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_1,(((RogueTable_String_Cmd___get__String( ROGUE_ARG(THIS->arg_lookup), ROGUE_ARG(write_cmd_0->local_info->name) )))));
  if (!(!!(arg_1)))
  {
    return (RogueClassCmd*)(((RogueClassCmd*)(write_cmd_0)));
  }
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAssign__init__Token_Cmd_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAssign*,ROGUE_CREATE_OBJECT(CmdAssign))), ROGUE_ARG(write_cmd_0->t), ROGUE_ARG((Rogue_call_ROGUEM146( 21, arg_1, ROGUE_ARG(((RogueClassCloneArgs*)(NULL))) ))), ROGUE_ARG(write_cmd_0->new_value) ))))));
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init_object( RogueClassTable_String_Cmd_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init( RogueClassTable_String_Cmd_* THIS )
{
  RogueTable_String_Cmd___init__Int32( ROGUE_ARG(THIS), 16 );
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueString* RogueTable_String_Cmd___to_String( RogueClassTable_String_Cmd_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueTable_String_Cmd___print_to__StringBuilder( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))) )))) ))));
}

RogueString* RogueTable_String_Cmd___type_name( RogueClassTable_String_Cmd_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1037]);
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___init__Int32( RogueClassTable_String_Cmd_* THIS, RogueInt32 bin_count_0 )
{
  RogueInt32 bins_power_of_2_1 = (1);
  while (bins_power_of_2_1 < bin_count_0)
  {
    bins_power_of_2_1 = ((RogueInt32)(bins_power_of_2_1 << 1));
  }
  bin_count_0 = ((RogueInt32)bins_power_of_2_1);
  THIS->bin_mask = (bin_count_0 - 1);
  THIS->bins = RogueType_create_array( bin_count_0, sizeof(RogueClassTableEntry_String_Cmd_*), true );
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueClassTableEntry_String_Cmd_* RogueTable_String_Cmd___find__String( RogueClassTable_String_Cmd_* THIS, RogueString* key_0 )
{
  RogueInt32 hash_1 = (((RogueString__hash_code( key_0 ))));
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_2,(((RogueClassTableEntry_String_Cmd_*)(THIS->bins->as_objects[(hash_1 & THIS->bin_mask)]))));
  while (!!(entry_2))
  {
    if ((entry_2->hash == hash_1 && ((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(entry_2->key), key_0 )))))
    {
      return (RogueClassTableEntry_String_Cmd_*)(entry_2);
    }
    entry_2 = ((RogueClassTableEntry_String_Cmd_*)entry_2->adjacent_entry);
  }
  return (RogueClassTableEntry_String_Cmd_*)(((RogueClassTableEntry_String_Cmd_*)(NULL)));
}

RogueClassCmd* RogueTable_String_Cmd___get__String( RogueClassTable_String_Cmd_* THIS, RogueString* key_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_1,(((RogueTable_String_Cmd___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_1))
  {
    return (RogueClassCmd*)(entry_1->value);
  }
  else
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmd*,default_value_2,0);
    return (RogueClassCmd*)(default_value_2);
  }
}

RogueClassTable_String_Cmd_* RogueTable_String_Cmd___set__String_Cmd( RogueClassTable_String_Cmd_* THIS, RogueString* key_0, RogueClassCmd* value_1 )
{
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,entry_2,(((RogueTable_String_Cmd___find__String( ROGUE_ARG(THIS), key_0 )))));
  if (!!(entry_2))
  {
    entry_2->value = value_1;
    return (RogueClassTable_String_Cmd_*)(THIS);
  }
  if (THIS->count >= THIS->bins->count)
  {
    RogueTable_String_Cmd____grow( ROGUE_ARG(THIS) );
  }
  RogueInt32 hash_3 = (((RogueString__hash_code( key_0 ))));
  RogueInt32 index_4 = ((hash_3 & THIS->bin_mask));
  if (!(!!(entry_2)))
  {
    entry_2 = ((RogueClassTableEntry_String_Cmd_*)((RogueTableEntry_String_Cmd___init__String_Cmd_Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassTableEntry_String_Cmd_*,ROGUE_CREATE_OBJECT(TableEntry_String_Cmd_))), key_0, value_1, hash_3 ))));
  }
  entry_2->adjacent_entry = ((RogueClassTableEntry_String_Cmd_*)(THIS->bins->as_objects[index_4]));
  THIS->bins->as_objects[index_4] = entry_2;
  if (!!(THIS->first_entry))
  {
    THIS->last_entry->next_entry = entry_2;
    entry_2->previous_entry = THIS->last_entry;
    THIS->last_entry = entry_2;
  }
  else
  {
    THIS->first_entry = entry_2;
    THIS->last_entry = entry_2;
  }
  THIS->count = (THIS->count + 1);
  return (RogueClassTable_String_Cmd_*)(THIS);
}

RogueStringBuilder* RogueTable_String_Cmd___print_to__StringBuilder( RogueClassTable_String_Cmd_* THIS, RogueStringBuilder* buffer_0 )
{
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'{', true );
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,cur_1,(THIS->first_entry));
  RogueInt32 i_2 = (0);
  while (!!(cur_1))
  {
    if (i_2 > 0)
    {
      RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)',', true );
    }
    RogueStringBuilder__print__String( buffer_0, ROGUE_ARG(cur_1->key) );
    RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)':', true );
    RogueStringBuilder__print__Object( buffer_0, ROGUE_ARG(((RogueObject*)(cur_1->value))) );
    cur_1 = ((RogueClassTableEntry_String_Cmd_*)cur_1->next_entry);
    ++i_2;
  }
  RogueStringBuilder__print__Character_Logical( buffer_0, (RogueCharacter)'}', true );
  return (RogueStringBuilder*)(buffer_0);
}

void RogueTable_String_Cmd____grow( RogueClassTable_String_Cmd_* THIS )
{
  THIS->bins = RogueType_create_array( (THIS->bins->count * 2), sizeof(RogueClassTableEntry_String_Cmd_*), true );
  THIS->bin_mask = ((THIS->bin_mask << 1) | 1);
  ROGUE_DEF_LOCAL_REF(RogueClassTableEntry_String_Cmd_*,cur_0,(THIS->first_entry));
  while (!!(cur_0))
  {
    RogueInt32 index_1 = ((cur_0->hash & THIS->bin_mask));
    cur_0->adjacent_entry = ((RogueClassTableEntry_String_Cmd_*)(THIS->bins->as_objects[index_1]));
    THIS->bins->as_objects[index_1] = cur_0;
    cur_0 = ((RogueClassTableEntry_String_Cmd_*)cur_0->next_entry);
  }
}

RogueString* RogueArray_TableEntry_String_Cmd____type_name( RogueArray* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1130]);
}

RogueClassTableEntry_String_Cmd_* RogueTableEntry_String_Cmd___init_object( RogueClassTableEntry_String_Cmd_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassTableEntry_String_Cmd_*)(THIS);
}

RogueString* RogueTableEntry_String_Cmd___to_String( RogueClassTableEntry_String_Cmd_* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[9] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueTableEntry_String_Cmd___type_name( ROGUE_ARG(THIS) )))) )))) )))), Rogue_literal_strings[620] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->key) )))) )))), Rogue_literal_strings[152] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->value))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueTableEntry_String_Cmd___type_name( RogueClassTableEntry_String_Cmd_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[951]);
}

RogueClassTableEntry_String_Cmd_* RogueTableEntry_String_Cmd___init__String_Cmd_Int32( RogueClassTableEntry_String_Cmd_* THIS, RogueString* _key_0, RogueClassCmd* _value_1, RogueInt32 _hash_2 )
{
  THIS->key = _key_0;
  THIS->value = _value_1;
  THIS->hash = _hash_2;
  return (RogueClassTableEntry_String_Cmd_*)(THIS);
}

RogueClassListRewriter_CmdNamedArg_* RogueListRewriter_CmdNamedArg___init_object( RogueClassListRewriter_CmdNamedArg_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassListRewriter_CmdNamedArg_*)(THIS);
}

RogueString* RogueListRewriter_CmdNamedArg___type_name( RogueClassListRewriter_CmdNamedArg_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1030]);
}

RogueClassListRewriter_CmdNamedArg_* RogueListRewriter_CmdNamedArg___init__CmdNamedArg_List( RogueClassListRewriter_CmdNamedArg_* THIS, RogueCmdNamedArg_List* _auto_2878_0 )
{
  THIS->list = _auto_2878_0;
  return (RogueClassListRewriter_CmdNamedArg_*)(THIS);
}

RogueLogical RogueListRewriter_CmdNamedArg___has_another( RogueClassListRewriter_CmdNamedArg_* THIS )
{
  if (THIS->read_index < THIS->list->count)
  {
    return (RogueLogical)(true);
  }
  else
  {
    RogueCmdNamedArg_List__discard_from__Int32( ROGUE_ARG(THIS->list), ROGUE_ARG(THIS->write_index) );
    return (RogueLogical)(false);
  }
  return (RogueLogical)(THIS->read_index < THIS->list->count);
}

RogueClassCmdNamedArg* RogueListRewriter_CmdNamedArg___read( RogueClassListRewriter_CmdNamedArg_* THIS )
{
  ++THIS->read_index;
  return (RogueClassCmdNamedArg*)(((RogueClassCmdNamedArg*)(THIS->list->data->as_objects[(THIS->read_index - 1)])));
}

RogueClassListRewriter_CmdNamedArg_* RogueListRewriter_CmdNamedArg___write__CmdNamedArg( RogueClassListRewriter_CmdNamedArg_* THIS, RogueClassCmdNamedArg* value_0 )
{
  if (THIS->write_index == THIS->read_index)
  {
    RogueCmdNamedArg_List__reserve__Int32( ROGUE_ARG(THIS->list), 1 );
    RogueInt32 unread_count_1 = ((THIS->list->count - THIS->read_index));
    RogueArray_set(THIS->list->data,(((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) ))) - unread_count_1),((RogueArray*)(THIS->list->data)),THIS->read_index,unread_count_1);
    THIS->read_index += (((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) ))) - THIS->list->count);
    THIS->list->count = ((RogueCmdNamedArg_List__capacity( ROGUE_ARG(THIS->list) )));
  }
  THIS->list->data->as_objects[THIS->write_index] = value_0;
  ++THIS->write_index;
  return (RogueClassListRewriter_CmdNamedArg_*)(THIS);
}

RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*)(THIS);
}

RogueString* RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__type_name( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1031]);
}

RogueLogical RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__call__CmdNamedArg_CmdNamedArg( RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical* THIS, RogueClassCmdNamedArg* param1_0, RogueClassCmdNamedArg* param2_1 )
{
  return (RogueLogical)(false);
}

RogueClassQuicksort_CmdNamedArg_* RogueQuicksort_CmdNamedArg___init_object( RogueClassQuicksort_CmdNamedArg_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassQuicksort_CmdNamedArg_*)(THIS);
}

RogueString* RogueQuicksort_CmdNamedArg___type_name( RogueClassQuicksort_CmdNamedArg_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1032]);
}

RogueClassCmdCallInlineNativeRoutine* RogueCmdCallInlineNativeRoutine__init_object( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  RogueCmdCallInlineNative__init_object( ROGUE_ARG(((RogueClassCmdCallInlineNative*)THIS)) );
  return (RogueClassCmdCallInlineNativeRoutine*)(THIS);
}

RogueString* RogueCmdCallInlineNativeRoutine__type_name( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1530]);
}

RogueClassCmd* RogueCmdCallInlineNativeRoutine__cloned__CloneArgs( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

RogueClassCmd* RogueCmdCallInlineNativeRoutine__dispatch__Visitor( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

RogueClassType* Rogue_CmdCallInlineNativeRoutine__type( RogueClassCmdCallInlineNativeRoutine* THIS )
{
  return (RogueClassType*)(THIS->method_info->_return_type);
}

RogueClassCmdCallInlineNativeRoutine* RogueCmdCallInlineNativeRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallInlineNativeRoutine* THIS, RogueClassToken* _auto_2908_0, RogueClassMethod* _auto_2909_1, RogueClassCmdArgs* _auto_2910_2 )
{
  THIS->args = _auto_2910_2;
  THIS->method_info = _auto_2909_1;
  THIS->t = _auto_2908_0;
  return (RogueClassCmdCallInlineNativeRoutine*)(THIS);
}

RogueClassCmdCallInlineNative* RogueCmdCallInlineNative__init_object( RogueClassCmdCallInlineNative* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallInlineNative*)(THIS);
}

RogueString* RogueCmdCallInlineNative__to_String( RogueClassCmdCallInlineNative* THIS )
{
  return (RogueString*)(THIS->method_info->signature);
}

RogueString* RogueCmdCallInlineNative__type_name( RogueClassCmdCallInlineNative* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1521]);
}

RogueClassCmd* RogueCmdCallInlineNative__dispatch__Visitor( RogueClassCmdCallInlineNative* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

RogueClassCmd* RogueCmdCallInlineNative__resolve_adjust__Scope_Int32( RogueClassCmdCallInlineNative* THIS, RogueClassScope* scope_0, RogueInt32 _auto_2907_1 )
{
  THIS->adjust_delta = _auto_2907_1;
  return (RogueClassCmd*)(((RogueClassCmd*)(THIS)));
}

void RogueCmdCallInlineNative__write_cpp__CPPWriter_Logical( RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  switch (THIS->adjust_delta)
  {
    case -1:
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[3] );
      break;
    }
    case 1:
    {
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[177] );
      break;
    }
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,st_2,(THIS->method_info->native_code));
  RogueOptionalInt32 dollar_3 = (((RogueString__locate__Character_OptionalInt32( st_2, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (dollar_3.exists)
  {
    RogueCPPWriter__print__String( writer_0, ROGUE_ARG(((RogueString__from__Int32_Int32( st_2, 0, ROGUE_ARG((dollar_3.value - 1)) )))) );
    st_2 = ((RogueString*)((RogueString__from__Int32( st_2, ROGUE_ARG((dollar_3.value + 1)) ))));
    ROGUE_DEF_LOCAL_REF(RogueString*,name_4,0);
    ROGUE_DEF_LOCAL_REF(RogueClassLocal*,param_5,0);
    if (((RogueString__begins_with__Character( st_2, (RogueCharacter)'(' ))))
    {
      name_4 = ((RogueString*)((RogueString__from__Int32( ROGUE_ARG(((RogueString__before_first__Character( st_2, (RogueCharacter)')' )))), 1 ))));
      st_2 = ((RogueString*)((RogueString__after_first__Character( st_2, (RogueCharacter)')' ))));
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_4379_7,(THIS->method_info->parameters));
        RogueInt32 _auto_4380_8 = (0);
        for (;_auto_4380_8 < _auto_4379_7->count;++_auto_4380_8)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_9,(((RogueClassLocal*)(_auto_4379_7->data->as_objects[_auto_4380_8]))));
          if (((RogueString__operatorEQUALSEQUALS__String( ROGUE_ARG(p_9->name), name_4 ))))
          {
            param_5 = ((RogueClassLocal*)p_9);
            goto _auto_4381;
          }
        }
      }
      _auto_4381:;
    }
    else
    {
      ROGUE_DEF_LOCAL_REF(RogueClassLocal*,best_match_6,0);
      {
        ROGUE_DEF_LOCAL_REF(RogueLocal_List*,_auto_4382_10,(THIS->method_info->parameters));
        RogueInt32 _auto_4383_11 = (0);
        for (;_auto_4383_11 < _auto_4382_10->count;++_auto_4383_11)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassLocal*,p_12,(((RogueClassLocal*)(_auto_4382_10->data->as_objects[_auto_4383_11]))));
          if (((RogueString__begins_with__String( st_2, ROGUE_ARG(p_12->name) ))))
          {
            if ((((void*)best_match_6) == ((void*)NULL) || p_12->name->character_count > best_match_6->name->character_count))
            {
              best_match_6 = ((RogueClassLocal*)p_12);
            }
          }
        }
      }
      if (!!(best_match_6))
      {
        param_5 = ((RogueClassLocal*)best_match_6);
        name_4 = ((RogueString*)param_5->name);
        st_2 = ((RogueString*)((RogueString__from__Int32( st_2, ROGUE_ARG(best_match_6->name->character_count) ))));
      }
      else if (((RogueString__begins_with__String( st_2, Rogue_literal_strings[139] ))))
      {
        Rogue_call_ROGUEM1299( 52, ROGUE_ARG(THIS), writer_0 );
        st_2 = ((RogueString*)((RogueString__from__Int32( st_2, 4 ))));
      }
    }
    if (!!(param_5))
    {
      Rogue_call_ROGUEM157( 50, ROGUE_ARG(((RogueClassCmd*)(THIS->args->data->as_objects[param_5->index]))), writer_0, false );
    }
    else if (!!(name_4))
    {
      RogueCPPWriter__print_native_marker__Token_Type_Method_Local_List_String( writer_0, ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info->type_context), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueLocal_List*)(NULL))), name_4 );
    }
    dollar_3 = ((RogueOptionalInt32)((RogueString__locate__Character_OptionalInt32( st_2, (RogueCharacter)'$', ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  RogueCPPWriter__print__String( writer_0, st_2 );
}

void RogueCmdCallInlineNative__print_this__CPPWriter( RogueClassCmdCallInlineNative* THIS, RogueClassCPPWriter* writer_0 )
{
  ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->t), Rogue_literal_strings[1363] ))));
}

RogueClassCmdCallNativeRoutine* RogueCmdCallNativeRoutine__init_object( RogueClassCmdCallNativeRoutine* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallNativeRoutine*)(THIS);
}

RogueString* RogueCmdCallNativeRoutine__type_name( RogueClassCmdCallNativeRoutine* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1522]);
}

RogueClassCmd* RogueCmdCallNativeRoutine__cloned__CloneArgs( RogueClassCmdCallNativeRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallNativeRoutine*,ROGUE_CREATE_OBJECT(CmdCallNativeRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

RogueClassCmd* RogueCmdCallNativeRoutine__dispatch__Visitor( RogueClassCmdCallNativeRoutine* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

void RogueCmdCallNativeRoutine__write_cpp__CPPWriter_Logical( RogueClassCmdCallNativeRoutine* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[623] );
  RogueInt32 i_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_4384_3,(THIS->args));
    RogueInt32 _auto_4385_4 = (0);
    for (;_auto_4385_4 < _auto_4384_3->count;++_auto_4385_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_4384_3->data->as_objects[_auto_4385_4]))));
      if (i_2 > 0)
      {
        RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
      }
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->as_objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      ++i_2;
    }
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[628] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCmdCallNativeRoutine* RogueCmdCallNativeRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallNativeRoutine* THIS, RogueClassToken* _auto_2911_0, RogueClassMethod* _auto_2912_1, RogueClassCmdArgs* _auto_2913_2 )
{
  THIS->args = _auto_2913_2;
  THIS->method_info = _auto_2912_1;
  THIS->t = _auto_2911_0;
  return (RogueClassCmdCallNativeRoutine*)(THIS);
}

RogueClassCmdCallRoutine* RogueCmdCallRoutine__init_object( RogueClassCmdCallRoutine* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallRoutine*)(THIS);
}

RogueString* RogueCmdCallRoutine__to_String( RogueClassCmdCallRoutine* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[947] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->args))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueCmdCallRoutine__type_name( RogueClassCmdCallRoutine* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1523]);
}

RogueClassCmd* RogueCmdCallRoutine__cloned__CloneArgs( RogueClassCmdCallRoutine* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdCallRoutine__init__Token_Method_CmdArgs( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdCallRoutine*,ROGUE_CREATE_OBJECT(CmdCallRoutine))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))));
}

RogueClassCmd* RogueCmdCallRoutine__dispatch__Visitor( RogueClassCmdCallRoutine* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

void RogueCmdCallRoutine__write_cpp__CPPWriter_Logical( RogueClassCmdCallRoutine* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] );
  if (!!(THIS->args->count))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
    RogueInt32 i_2 = (0);
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_4386_3,(THIS->args));
      RogueInt32 _auto_4387_4 = (0);
      for (;_auto_4387_4 < _auto_4386_3->count;++_auto_4387_4)
      {
        ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_4386_3->data->as_objects[_auto_4387_4]))));
        if (i_2 > 0)
        {
          RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
        }
        RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->as_objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
        ++i_2;
      }
    }
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[620] );
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCmdCallRoutine* RogueCmdCallRoutine__init__Token_Method_CmdArgs( RogueClassCmdCallRoutine* THIS, RogueClassToken* _auto_2916_0, RogueClassMethod* _auto_2917_1, RogueClassCmdArgs* _auto_2918_2 )
{
  THIS->args = _auto_2918_2;
  THIS->method_info = _auto_2917_1;
  THIS->t = _auto_2916_0;
  return (RogueClassCmdCallRoutine*)(THIS);
}

RogueClassCmdCallInlineNativeMethod* RogueCmdCallInlineNativeMethod__init_object( RogueClassCmdCallInlineNativeMethod* THIS )
{
  RogueCmdCallInlineNative__init_object( ROGUE_ARG(((RogueClassCmdCallInlineNative*)THIS)) );
  return (RogueClassCmdCallInlineNativeMethod*)(THIS);
}

RogueString* RogueCmdCallInlineNativeMethod__type_name( RogueClassCmdCallInlineNativeMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1531]);
}

RogueClassCmd* RogueCmdCallInlineNativeMethod__cloned__CloneArgs( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallInlineNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallInlineNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallInlineNativeMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

RogueClassCmd* RogueCmdCallInlineNativeMethod__dispatch__Visitor( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

RogueClassType* Rogue_CmdCallInlineNativeMethod__type( RogueClassCmdCallInlineNativeMethod* THIS )
{
  return (RogueClassType*)(THIS->method_info->_return_type);
}

void RogueCmdCallInlineNativeMethod__print_this__CPPWriter( RogueClassCmdCallInlineNativeMethod* THIS, RogueClassCPPWriter* writer_0 )
{
  Rogue_call_ROGUEM157( 50, ROGUE_ARG(THIS->context), writer_0, false );
}

RogueClassCmdCallNativeMethod* RogueCmdCallNativeMethod__init_object( RogueClassCmdCallNativeMethod* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallNativeMethod*)(THIS);
}

RogueString* RogueCmdCallNativeMethod__type_name( RogueClassCmdCallNativeMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1524]);
}

RogueClassCmd* RogueCmdCallNativeMethod__cloned__CloneArgs( RogueClassCmdCallNativeMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallNativeMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallNativeMethod*,ROGUE_CREATE_OBJECT(CmdCallNativeMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

RogueClassCmd* RogueCmdCallNativeMethod__dispatch__Visitor( RogueClassCmdCallNativeMethod* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

void RogueCmdCallNativeMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallNativeMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[623] );
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassType*)(NULL))) );
  RogueInt32 i_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_4388_3,(THIS->args));
    RogueInt32 _auto_4389_4 = (0);
    for (;_auto_4389_4 < _auto_4388_3->count;++_auto_4389_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_4388_3->data->as_objects[_auto_4389_4]))));
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->as_objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      ++i_2;
    }
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[628] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCmdCallAspectMethod* RogueCmdCallAspectMethod__init_object( RogueClassCmdCallAspectMethod* THIS )
{
  RogueCmdCall__init_object( ROGUE_ARG(((RogueClassCmdCall*)THIS)) );
  return (RogueClassCmdCallAspectMethod*)(THIS);
}

RogueString* RogueCmdCallAspectMethod__type_name( RogueClassCmdCallAspectMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1525]);
}

RogueClassCmd* RogueCmdCallAspectMethod__cloned__CloneArgs( RogueClassCmdCallAspectMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallAspectMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallAspectMethod*,ROGUE_CREATE_OBJECT(CmdCallAspectMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

RogueClassCmd* RogueCmdCallAspectMethod__dispatch__Visitor( RogueClassCmdCallAspectMethod* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

void RogueCmdCallAspectMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallAspectMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[623] );
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(((RogueClassProgram*)ROGUE_SINGLETON(Program))->type_Object) );
  RogueInt32 i_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_4390_3,(THIS->args));
    RogueInt32 _auto_4391_4 = (0);
    for (;_auto_4391_4 < _auto_4390_3->count;++_auto_4391_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_4390_3->data->as_objects[_auto_4391_4]))));
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->as_objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      ++i_2;
    }
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[628] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassCandidateMethods* RogueCandidateMethods__init_object( RogueClassCandidateMethods* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->available = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  THIS->compatible = ((RogueMethod_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueMethod_List*,ROGUE_CREATE_OBJECT(Method_List))) )));
  return (RogueClassCandidateMethods*)(THIS);
}

RogueString* RogueCandidateMethods__to_String( RogueClassCandidateMethods* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[948] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->available))) )))) )))), Rogue_literal_strings[949] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->compatible))) )))) )))) ))));
}

RogueString* RogueCandidateMethods__type_name( RogueClassCandidateMethods* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1033]);
}

RogueClassCandidateMethods* RogueCandidateMethods__init__Type_CmdAccess_Logical( RogueClassCandidateMethods* THIS, RogueClassType* _auto_2922_0, RogueClassCmdAccess* _auto_2923_1, RogueLogical _auto_2924_2 )
{
  THIS->error_on_fail = _auto_2924_2;
  THIS->access = _auto_2923_1;
  THIS->type_context = _auto_2922_0;
  return (RogueClassCandidateMethods*)(THIS);
}

RogueLogical RogueCandidateMethods__has_match( RogueClassCandidateMethods* THIS )
{
  return (RogueLogical)(THIS->available->count == 1);
}

RogueClassMethod* RogueCandidateMethods__match( RogueClassCandidateMethods* THIS )
{
  if (THIS->available->count != 1)
  {
    return (RogueClassMethod*)(((RogueClassMethod*)(NULL)));
  }
  return (RogueClassMethod*)(((RogueClassMethod*)(THIS->available->data->as_objects[0])));
}

RogueLogical RogueCandidateMethods__refine_matches( RogueClassCandidateMethods* THIS )
{
  return (RogueLogical)(((RogueCandidateMethods__update__Logical( ROGUE_ARG(THIS), false ))));
}

RogueLogical RogueCandidateMethods__update_matches( RogueClassCandidateMethods* THIS )
{
  return (RogueLogical)(((RogueCandidateMethods__update__Logical( ROGUE_ARG(THIS), true ))));
}

RogueLogical RogueCandidateMethods__update__Logical( RogueClassCandidateMethods* THIS, RogueLogical require_compatible_0 )
{
  if (THIS->compatible->count == 0)
  {
    if (THIS->available->count == 0)
    {
      if (!(THIS->error_on_fail))
      {
        return (RogueLogical)(false);
      }
      ROGUE_DEF_LOCAL_REF(RogueClassType*,scope_type_1,(THIS->type_context));
      while ((((RogueString__begins_with__String( ROGUE_ARG(scope_type_1->name), Rogue_literal_strings[476] ))) && !!(scope_type_1->base_class)))
      {
        scope_type_1 = ((RogueClassType*)scope_type_1->base_class);
      }
      if (((RogueString__begins_with__String( ROGUE_ARG(THIS->access->name), Rogue_literal_strings[369] ))))
      {
        ROGUE_DEF_LOCAL_REF(RogueString*,base_name_2,(((RogueString__after_first__String( ROGUE_ARG(THIS->access->name), Rogue_literal_strings[369] )))));
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[477] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], base_name_2 )))) )))), Rogue_literal_strings[478] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->access->name) )))) )))), Rogue_literal_strings[479] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(scope_type_1))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
      }
      else
      {
        ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[480] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->access->name) )))) )))), Rogue_literal_strings[479] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(scope_type_1))) )))) )))), Rogue_literal_strings[154] )))) )))) ))));
      }
    }
    else if (require_compatible_0)
    {
      if (!(THIS->error_on_fail))
      {
        return (RogueLogical)(false);
      }
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,call_sig_buffer_3,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( call_sig_buffer_3, ROGUE_ARG(THIS->type_context->name) )))), Rogue_literal_strings[154] );
      RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( call_sig_buffer_3, ROGUE_ARG(THIS->access->name) )))), Rogue_literal_strings[9] );
      RogueLogical printed_arg_4 = (false);
      if (!!(THIS->access->args))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_4392_9,(THIS->access->args));
          RogueInt32 _auto_4393_10 = (0);
          for (;_auto_4393_10 < _auto_4392_9->count;++_auto_4393_10)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_11,(((RogueClassCmd*)(_auto_4392_9->data->as_objects[_auto_4393_10]))));
            if (printed_arg_4)
            {
              RogueStringBuilder__print__Character_Logical( call_sig_buffer_3, (RogueCharacter)',', true );
            }
            ROGUE_DEF_LOCAL_REF(RogueClassType*,arg_type_5,((Rogue_call_ROGUEM153( 40, arg_11 ))));
            while ((((RogueString__begins_with__String( ROGUE_ARG(arg_type_5->name), Rogue_literal_strings[476] ))) && !!(arg_type_5->base_class)))
            {
              arg_type_5 = ((RogueClassType*)arg_type_5->base_class);
            }
            RogueStringBuilder__print__String( call_sig_buffer_3, ROGUE_ARG(arg_type_5->name) );
            printed_arg_4 = ((RogueLogical)true);
          }
        }
      }
      if (!!(THIS->access->named_args))
      {
        {
          ROGUE_DEF_LOCAL_REF(RogueCmdNamedArg_List*,_auto_4394_12,(THIS->access->named_args));
          RogueInt32 _auto_4395_13 = (0);
          for (;_auto_4395_13 < _auto_4394_12->count;++_auto_4395_13)
          {
            ROGUE_DEF_LOCAL_REF(RogueClassCmdNamedArg*,arg_14,(((RogueClassCmdNamedArg*)(_auto_4394_12->data->as_objects[_auto_4395_13]))));
            if (printed_arg_4)
            {
              RogueStringBuilder__print__Character_Logical( call_sig_buffer_3, (RogueCharacter)',', true );
            }
            RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__Character_Logical( call_sig_buffer_3, (RogueCharacter)'&', true )))), ROGUE_ARG(arg_14->name) );
            printed_arg_4 = ((RogueLogical)true);
          }
        }
      }
      RogueStringBuilder__print__String( call_sig_buffer_3, Rogue_literal_strings[12] );
      ROGUE_DEF_LOCAL_REF(RogueString*,call_sig_6,(((RogueStringBuilder__to_String( call_sig_buffer_3 )))));
      ROGUE_DEF_LOCAL_REF(RogueStringBuilder*,buffer_7,(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))));
      if (THIS->available->count > 1)
      {
        RogueStringBuilder__print__String( buffer_7, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[483] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCandidateMethods__remove_module_names__String( ROGUE_ARG(THIS), call_sig_6 )))) )))) )))) )))) );
        if (!!(THIS->access->named_args))
        {
          RogueStringBuilder__print__String( buffer_7, Rogue_literal_strings[484] );
        }
        RogueStringBuilder__print__String( buffer_7, Rogue_literal_strings[485] );
      }
      else
      {
        RogueStringBuilder__print__String( buffer_7, ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[486] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(((RogueCandidateMethods__remove_module_names__String( ROGUE_ARG(THIS), call_sig_6 )))) )))) )))), Rogue_literal_strings[487] )))) )))) );
        if (!!(THIS->access->named_args))
        {
          RogueStringBuilder__print__String( buffer_7, Rogue_literal_strings[488] );
        }
        else
        {
          RogueStringBuilder__print__String( buffer_7, Rogue_literal_strings[489] );
        }
      }
      buffer_7->indent += 2;
      {
        ROGUE_DEF_LOCAL_REF(RogueMethod_List*,_auto_4396_15,(THIS->available));
        RogueInt32 _auto_4397_16 = (0);
        for (;_auto_4397_16 < _auto_4396_15->count;++_auto_4397_16)
        {
          ROGUE_DEF_LOCAL_REF(RogueClassMethod*,m_17,(((RogueClassMethod*)(_auto_4396_15->data->as_objects[_auto_4397_16]))));
          ROGUE_DEF_LOCAL_REF(RogueString*,sig_8,(((((THIS->access->named_args))) ? (ROGUE_ARG(((RogueMethod__signature_with_named_args( m_17 ))))) : ROGUE_ARG(m_17->signature))));
          RogueStringBuilder__println__String( buffer_7, ROGUE_ARG(((RogueCandidateMethods__remove_module_names__String( ROGUE_ARG(THIS), ROGUE_ARG(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(m_17->type_context->name) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], sig_8 )))) )))) )))) )))) );
        }
      }
      buffer_7->indent -= 2;
      ROGUE_THROW(RogueClassRogueError,((RogueToken__error__String( ROGUE_ARG(THIS->access->t), ROGUE_ARG(((RogueStringBuilder__to_String( buffer_7 )))) ))));
    }
    return (RogueLogical)(true);
  }
  RogueMethod_List__clear( ROGUE_ARG(THIS->available) );
  RogueMethod_List__add__Method_List( ROGUE_ARG(THIS->available), ROGUE_ARG(THIS->compatible) );
  RogueMethod_List__clear( ROGUE_ARG(THIS->compatible) );
  return (RogueLogical)(true);
}

RogueString* RogueCandidateMethods__remove_module_names__String( RogueClassCandidateMethods* THIS, RogueString* _auto_5776 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,sig_0,_auto_5776);
  RogueOptionalInt32 pos_1 = (((RogueString__locate__String_OptionalInt32( sig_0, Rogue_literal_strings[195], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  while (pos_1.exists)
  {
    RogueInt32 i_2 = (pos_1.value);
    while ((i_2 > 0 && ((RogueCharacter__is_alphanumeric( ROGUE_ARG(RogueString_character_at(sig_0,(i_2 - 1))) )))))
    {
      --i_2;
    }
    sig_0 = ((RogueString*)((RogueString__operatorPLUS__String( ROGUE_ARG(((RogueString__leftmost__Int32( sig_0, i_2 )))), ROGUE_ARG(((RogueString__from__Int32( sig_0, ROGUE_ARG((pos_1.value + 2)) )))) ))));
    pos_1 = ((RogueOptionalInt32)((RogueString__locate__String_OptionalInt32( sig_0, Rogue_literal_strings[195], ROGUE_ARG((RogueOptionalInt32__create())) ))));
  }
  return (RogueString*)(sig_0);
}

RogueClassFunction_2953* RogueFunction_2953__init_object( RogueClassFunction_2953* THIS )
{
  RogueFunction_CmdNamedArg_RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction_CmdNamedArg_RETURNSLogical*)THIS)) );
  return (RogueClassFunction_2953*)(THIS);
}

RogueString* RogueFunction_2953__type_name( RogueClassFunction_2953* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1528]);
}

RogueLogical RogueFunction_2953__call__CmdNamedArg( RogueClassFunction_2953* THIS, RogueClassCmdNamedArg* arg_0 )
{
  return (RogueLogical)((arg_0->inferred_index.exists && arg_0->inferred_index.value != -1));
}

RogueClassFunction_2954* RogueFunction_2954__init_object( RogueClassFunction_2954* THIS )
{
  RogueFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical__init_object( ROGUE_ARG(((RogueClassFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical*)THIS)) );
  return (RogueClassFunction_2954*)(THIS);
}

RogueString* RogueFunction_2954__type_name( RogueClassFunction_2954* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1529]);
}

RogueLogical RogueFunction_2954__call__CmdNamedArg_CmdNamedArg( RogueClassFunction_2954* THIS, RogueClassCmdNamedArg* a_0, RogueClassCmdNamedArg* b_1 )
{
  return (RogueLogical)(a_0->inferred_index.value < b_1->inferred_index.value);
}

RogueClassIOError* RogueIOError__init_object( RogueClassIOError* THIS )
{
  RogueError__init_object( ROGUE_ARG(((RogueClassError*)THIS)) );
  return (RogueClassIOError*)(THIS);
}

RogueString* RogueIOError__type_name( RogueClassIOError* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1412]);
}

RogueClassFileReader* RogueFileReader__init_object( RogueClassFileReader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->buffer = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), 1024 )));
  return (RogueClassFileReader*)(THIS);
}

RogueString* RogueFileReader__type_name( RogueClassFileReader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1034]);
}

RogueLogical RogueFileReader__has_another( RogueClassFileReader* THIS )
{
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueByte RogueFileReader__peek( RogueClassFileReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueByte)(((RogueByte)(0)));
  }
  if (THIS->buffer_position == THIS->buffer->count)
  {
    THIS->buffer->count = (RogueInt32) fread( THIS->buffer->data->as_bytes, 1, 1024, THIS->fp );

    THIS->buffer_position = 0;
  }
  return (RogueByte)(THIS->buffer->data->as_bytes[THIS->buffer_position]);
}

RogueByte RogueFileReader__read( RogueClassFileReader* THIS )
{
  if (THIS->position == THIS->count)
  {
    return (RogueByte)(((RogueByte)(0)));
  }
  RogueByte result_0 = (((RogueFileReader__peek( ROGUE_ARG(THIS) ))));
  THIS->position = (THIS->position + 1);
  ++THIS->buffer_position;
  if (THIS->position == THIS->count)
  {
    RogueFileReader__close( ROGUE_ARG(THIS) );
  }
  return (RogueByte)(result_0);
}

RogueClassFileReader* RogueFileReader__init__String( RogueClassFileReader* THIS, RogueString* _filepath_0 )
{
  RogueFileReader__open__String( ROGUE_ARG(THIS), _filepath_0 );
  return (RogueClassFileReader*)(THIS);
}

void RogueFileReader__clean_up( RogueClassFileReader* THIS )
{
  RogueFileReader__close( ROGUE_ARG(THIS) );
}

RogueClassFileReader* RogueFileReader__close( RogueClassFileReader* THIS )
{
  if (!!(THIS->fp))
  {
    fclose( THIS->fp );
    THIS->fp = 0;

  }
  THIS->position = 0;
  THIS->count = 0;
  return (RogueClassFileReader*)(THIS);
}

RogueLogical RogueFileReader__open__String( RogueClassFileReader* THIS, RogueString* _auto_3282_0 )
{
  THIS->filepath = _auto_3282_0;
  RogueFileReader__close( ROGUE_ARG(THIS) );
  THIS->fp = fopen( (char*)THIS->filepath->utf8, "rb" );
  if (THIS->fp)
  {
    fseek( THIS->fp, 0, SEEK_END );
    THIS->count = (RogueInt32) ftell( THIS->fp );
    fseek( THIS->fp, 0, SEEK_SET );
  }

  if (THIS->count == 0)
  {
    RogueFileReader__close( ROGUE_ARG(THIS) );
  }
  return (RogueLogical)(THIS->position < THIS->count);
}

RogueClassFileWriter* RogueFileWriter__init_object( RogueClassFileWriter* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  THIS->buffer = ((RogueByte_List__init__Int32( ROGUE_ARG(ROGUE_CREATE_REF(RogueByte_List*,ROGUE_CREATE_OBJECT(Byte_List))), 1024 )));
  return (RogueClassFileWriter*)(THIS);
}

RogueString* RogueFileWriter__type_name( RogueClassFileWriter* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1035]);
}

RogueClassFileWriter* RogueFileWriter__close( RogueClassFileWriter* THIS )
{
  RogueFileWriter__flush( ROGUE_ARG(THIS) );
  if (!!(THIS->fp))
  {
    fclose( THIS->fp ); THIS->fp = 0;

  }
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__flush( RogueClassFileWriter* THIS )
{
  if ((THIS->buffer->count == 0 || !(!!(THIS->fp))))
  {
    return (RogueClassFileWriter*)(THIS);
  }
  fwrite( THIS->buffer->data->as_bytes, 1, THIS->buffer->count, THIS->fp );
  fflush( THIS->fp );

  RogueByte_List__clear( ROGUE_ARG(THIS->buffer) );
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__write__Byte( RogueClassFileWriter* THIS, RogueByte ch_0 )
{
  if (!(!!(THIS->fp)))
  {
    return (RogueClassFileWriter*)(THIS);
  }
  THIS->position = (THIS->position + 1);
  RogueByte_List__add__Byte( ROGUE_ARG(THIS->buffer), ch_0 );
  if (THIS->buffer->count == 1024)
  {
    return (RogueClassFileWriter*)(((RogueFileWriter__flush( ROGUE_ARG(THIS) ))));
  }
  return (RogueClassFileWriter*)(THIS);
}

RogueClassFileWriter* RogueFileWriter__init__String_Logical( RogueClassFileWriter* THIS, RogueString* _filepath_0, RogueLogical append_1 )
{
  RogueFileWriter__open__String_Logical( ROGUE_ARG(THIS), _filepath_0, append_1 );
  return (RogueClassFileWriter*)(THIS);
}

void RogueFileWriter__clean_up( RogueClassFileWriter* THIS )
{
  RogueFileWriter__close( ROGUE_ARG(THIS) );
}

RogueLogical RogueFileWriter__open__String_Logical( RogueClassFileWriter* THIS, RogueString* _auto_3284_0, RogueLogical append_1 )
{
  THIS->filepath = _auto_3284_0;
  RogueFileWriter__close( ROGUE_ARG(THIS) );
  THIS->error = false;
  if (append_1)
  {
    THIS->fp = fopen( (char*)THIS->filepath->utf8, "ab" );

  }
  else
  {
    THIS->fp = fopen( (char*)THIS->filepath->utf8, "wb" );

  }
  THIS->error = !(THIS->fp);

  return (RogueLogical)(THIS->error);
}

RogueClassFileWriter* RogueFileWriter__write__String( RogueClassFileWriter* THIS, RogueString* data_0 )
{
  if (!(!!(THIS->fp)))
  {
    return (RogueClassFileWriter*)(THIS);
  }
  if (data_0->character_count < 1024)
  {
    {
      RogueInt32 i_1 = (0);
      RogueInt32 _auto_3283_2 = (data_0->byte_count);
      for (;i_1 < _auto_3283_2;++i_1)
      {
        RogueFileWriter__write__Byte( ROGUE_ARG(THIS), ROGUE_ARG(data_0->utf8[ i_1 ]) );
      }
    }
  }
  else
  {
    RogueFileWriter__flush( ROGUE_ARG(THIS) );
    THIS->position += data_0->byte_count;
    fwrite( data_0->utf8, 1, data_0->byte_count, THIS->fp );

  }
  return (RogueClassFileWriter*)(THIS);
}

RogueClassUTF8Reader* RogueUTF8Reader__init_object( RogueClassUTF8Reader* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassUTF8Reader*)(THIS);
}

RogueString* RogueUTF8Reader__type_name( RogueClassUTF8Reader* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1036]);
}

RogueLogical RogueUTF8Reader__has_another( RogueClassUTF8Reader* THIS )
{
  return (RogueLogical)((THIS->next.exists || (RogueReader_Byte___has_another( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) ))));
}

RogueCharacter RogueUTF8Reader__peek( RogueClassUTF8Reader* THIS )
{
  if (THIS->next.exists)
  {
    return (RogueCharacter)(THIS->next.value);
  }
  if (!((RogueReader_Byte___has_another( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) ))))
  {
    return (RogueCharacter)(((RogueCharacter)(0)));
  }
  RogueCharacter ch_0 = (((RogueCharacter)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))));
  if (!!((((RogueInt32)(ch_0)) & 128)))
  {
    if (!!((((RogueInt32)(ch_0)) & 32)))
    {
      if (!!((((RogueInt32)(ch_0)) & 16)))
      {
        ch_0 = ((RogueCharacter)((RogueCharacter)((((((RogueInt32)(ch_0)) & 7) << 18) | ((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 12)))));
        ch_0 |= ((RogueCharacter)(((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 6)));
        ch_0 |= ((RogueCharacter)((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)));
      }
      else
      {
        ch_0 = ((RogueCharacter)((RogueCharacter)((((((RogueInt32)(ch_0)) & 15) << 12) | ((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63) << 6)))));
        ch_0 |= ((RogueCharacter)((((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)));
      }
    }
    else
    {
      ch_0 = ((RogueCharacter)((RogueCharacter)((((((RogueInt32)(ch_0)) & 31) << 6) | (((RogueInt32)((RogueReader_Byte___read( ROGUE_ARG(((RogueObject*)THIS->byte_reader)) )))) & 63)))));
    }
  }
  THIS->next = RogueOptionalCharacter( ch_0, true );
  return (RogueCharacter)(ch_0);
}

RogueCharacter RogueUTF8Reader__read( RogueClassUTF8Reader* THIS )
{
  RogueCharacter result_0 = (((RogueUTF8Reader__peek( ROGUE_ARG(THIS) ))));
  THIS->next = (RogueOptionalCharacter__create());
  THIS->position = (THIS->position + 1);
  return (RogueCharacter)(result_0);
}

RogueClassUTF8Reader* RogueUTF8Reader__init__Reader_Byte_( RogueClassUTF8Reader* THIS, RogueClassReader_Byte_* _auto_3290_0 )
{
  THIS->byte_reader = _auto_3290_0;
  THIS->next = (RogueOptionalCharacter__create());
  return (RogueClassUTF8Reader*)(THIS);
}

RogueClassQueryToGenericFunctionConversionVisitor* RogueQueryToGenericFunctionConversionVisitor__init_object( RogueClassQueryToGenericFunctionConversionVisitor* THIS )
{
  RogueVisitor__init_object( ROGUE_ARG(((RogueClassVisitor*)THIS)) );
  return (RogueClassQueryToGenericFunctionConversionVisitor*)(THIS);
}

RogueString* RogueQueryToGenericFunctionConversionVisitor__type_name( RogueClassQueryToGenericFunctionConversionVisitor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1518]);
}

RogueClassCmd* RogueQueryToGenericFunctionConversionVisitor__visit__CmdAccess( RogueClassQueryToGenericFunctionConversionVisitor* THIS, RogueClassCmdAccess* cmd_0 )
{
  if (((RogueContainsImplicitAccessVisitor__check__Cmd( ((RogueClassContainsImplicitAccessVisitor*)ROGUE_SINGLETON(ContainsImplicitAccessVisitor)), ROGUE_ARG(((RogueClassCmd*)(cmd_0))) ))))
  {
    return (RogueClassCmd*)((RogueVisitor__visit__CmdAccess( ROGUE_ARG(((RogueClassVisitor*)THIS)), cmd_0 )));
  }
  else
  {
    return (RogueClassCmd*)(((RogueQueryToGenericFunctionConversionVisitor__convert_to_fn_with_arg__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(cmd_0))) ))));
  }
}

RogueClassCmd* RogueQueryToGenericFunctionConversionVisitor__visit__CmdThisContext( RogueClassQueryToGenericFunctionConversionVisitor* THIS, RogueClassCmdThisContext* cmd_0 )
{
  return (RogueClassCmd*)(((RogueQueryToGenericFunctionConversionVisitor__convert_to_fn_with_arg__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(cmd_0))) ))));
}

RogueClassCmd* RogueQueryToGenericFunctionConversionVisitor__visit__CmdReadLocal( RogueClassQueryToGenericFunctionConversionVisitor* THIS, RogueClassCmdReadLocal* cmd_0 )
{
  return (RogueClassCmd*)(((RogueQueryToGenericFunctionConversionVisitor__convert_to_fn_with_arg__Cmd( ROGUE_ARG(THIS), ROGUE_ARG(((RogueClassCmd*)(cmd_0))) ))));
}

RogueClassCmd* RogueQueryToGenericFunctionConversionVisitor__visit__CmdImplicitAccess( RogueClassQueryToGenericFunctionConversionVisitor* THIS, RogueClassCmdImplicitAccess* cmd_0 )
{
  return (RogueClassCmd*)(((RogueCmdImplicitAccess__convert_to_explicit_access( cmd_0 ))));
}

RogueClassCmd* RogueQueryToGenericFunctionConversionVisitor__visit__CmdImplicitIDAccess( RogueClassQueryToGenericFunctionConversionVisitor* THIS, RogueClassCmdImplicitIDAccess* cmd_0 )
{
  return (RogueClassCmd*)(((RogueCmdImplicitIDAccess__convert_to_explicit_access( cmd_0 ))));
}

void RogueQueryToGenericFunctionConversionVisitor__convert__Cmd_CmdCreateFunction( RogueClassQueryToGenericFunctionConversionVisitor* THIS, RogueClassCmd* cmd_0, RogueClassCmdCreateFunction* _auto_3630_1 )
{
  THIS->cmd_create_fn = _auto_3630_1;
  RogueCmd_List__add__Cmd( ROGUE_ARG(((RogueCmd_List*)THIS->cmd_create_fn->statements)), ROGUE_ARG((Rogue_call_ROGUEM148( 27, cmd_0, ROGUE_ARG(((RogueClassVisitor*)(THIS))) ))) );
}

RogueClassCmd* RogueQueryToGenericFunctionConversionVisitor__convert_to_fn_with_arg__Cmd( RogueClassQueryToGenericFunctionConversionVisitor* THIS, RogueClassCmd* cmd_0 )
{
  if (!(!!(THIS->cmd_create_fn->with_args)))
  {
    THIS->cmd_create_fn->with_args = ((RogueFnArg_List__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueFnArg_List*,ROGUE_CREATE_OBJECT(FnArg_List))) )));
  }
  ROGUE_DEF_LOCAL_REF(RogueString*,name_1,(((RogueString__operatorPLUS__Int32( ROGUE_ARG(((RogueString__operatorPLUS__Int32( Rogue_literal_strings[1519], ROGUE_ARG(THIS->cmd_create_fn->with_args->count) )))), 1 )))));
  RogueFnArg_List__add__FnArg( ROGUE_ARG(THIS->cmd_create_fn->with_args), ROGUE_ARG(((RogueFnArg__init__String_Cmd( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassFnArg*,ROGUE_CREATE_OBJECT(FnArg))), name_1, cmd_0 )))) );
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueCmdAccess__init__Token_String( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdAccess*,ROGUE_CREATE_OBJECT(CmdAccess))), ROGUE_ARG(cmd_0->t), name_1 ))))));
}

RogueClassListReader_CmdSelectCase_* RogueListReader_CmdSelectCase___init_object( RogueClassListReader_CmdSelectCase_* THIS )
{
  RogueObject__init_object( ROGUE_ARG(((RogueObject*)THIS)) );
  return (RogueClassListReader_CmdSelectCase_*)(THIS);
}

RogueString* RogueListReader_CmdSelectCase___type_name( RogueClassListReader_CmdSelectCase_* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1532]);
}

RogueLogical RogueListReader_CmdSelectCase___has_another( RogueClassListReader_CmdSelectCase_* THIS )
{
  if (THIS->is_limited)
  {
    return (RogueLogical)(THIS->position < THIS->limit);
  }
  else
  {
    return (RogueLogical)(THIS->position < THIS->list->count);
  }
}

RogueClassCmdSelectCase* RogueListReader_CmdSelectCase___read( RogueClassListReader_CmdSelectCase_* THIS )
{
  THIS->position = (THIS->position + 1);
  return (RogueClassCmdSelectCase*)(((RogueClassCmdSelectCase*)(THIS->list->data->as_objects[(THIS->position - 1)])));
}

RogueClassListReader_CmdSelectCase_* RogueListReader_CmdSelectCase___init__CmdSelectCase_List_Int32( RogueClassListReader_CmdSelectCase_* THIS, RogueCmdSelectCase_List* _auto_3708_0, RogueInt32 _auto_3709_1 )
{
  THIS->position = _auto_3709_1;
  THIS->list = _auto_3708_0;
  return (RogueClassListReader_CmdSelectCase_*)(THIS);
}

RogueClassCmdCallStaticMethod* RogueCmdCallStaticMethod__init_object( RogueClassCmdCallStaticMethod* THIS )
{
  RogueCmdCallMethod__init_object( ROGUE_ARG(((RogueClassCmdCallMethod*)THIS)) );
  return (RogueClassCmdCallStaticMethod*)(THIS);
}

RogueString* RogueCmdCallStaticMethod__to_String( RogueClassCmdCallStaticMethod* THIS )
{
  return (RogueString*)(((RogueStringBuilder__to_String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__print__String( ROGUE_ARG(((RogueStringBuilder__init( ROGUE_ARG(ROGUE_CREATE_REF(RogueStringBuilder*,ROGUE_CREATE_OBJECT(StringBuilder))) )))), Rogue_literal_strings[1364] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->method_info->type_context))) )))) )))), Rogue_literal_strings[154] )))), ROGUE_ARG(((RogueString__operatorPLUS__String( Rogue_literal_strings[0], ROGUE_ARG(THIS->method_info->signature) )))) )))), Rogue_literal_strings[7] )))), ROGUE_ARG(((RogueString__operatorPLUS__Object( Rogue_literal_strings[0], ROGUE_ARG(((RogueObject*)(THIS->args))) )))) )))), Rogue_literal_strings[12] )))) ))));
}

RogueString* RogueCmdCallStaticMethod__type_name( RogueClassCmdCallStaticMethod* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1527]);
}

RogueClassCmd* RogueCmdCallStaticMethod__cloned__CloneArgs( RogueClassCmdCallStaticMethod* THIS, RogueClassCloneArgs* clone_args_0 )
{
  return (RogueClassCmd*)(((RogueClassCmd*)(((RogueClassCmdCallStaticMethod*)(((RogueCmdCall__init__Token_Cmd_Method_CmdArgs( ROGUE_ARG(((RogueClassCmdCall*)ROGUE_CREATE_REF(RogueClassCmdCallStaticMethod*,ROGUE_CREATE_OBJECT(CmdCallStaticMethod)))), ROGUE_ARG(THIS->t), ROGUE_ARG(((RogueCmd__cloned__Cmd_CloneArgs( ROGUE_ARG(((RogueClassCmd*)THIS)), ROGUE_ARG(THIS->context), clone_args_0 )))), ROGUE_ARG(THIS->method_info), ROGUE_ARG(((RogueCmdArgs__cloned__CloneArgs( ROGUE_ARG(THIS->args), clone_args_0 )))) ))))))));
}

RogueClassCmd* RogueCmdCallStaticMethod__dispatch__Visitor( RogueClassCmdCallStaticMethod* THIS, RogueClassVisitor* v_0 )
{
  return (RogueClassCmd*)(((RogueVisitor__visit__CmdCall( v_0, ROGUE_ARG(((RogueClassCmdCall*)(THIS))) ))));
}

RogueClassCmd* RogueCmdCallStaticMethod__resolve__Scope( RogueClassCmdCallStaticMethod* THIS, RogueClassScope* scope_0 )
{
  if (!(!!(THIS->context)))
  {
    THIS->context = ((RogueClassCmd*)(((RogueCmdThisContext__init__Token_Type( ROGUE_ARG(ROGUE_CREATE_REF(RogueClassCmdThisContext*,ROGUE_CREATE_OBJECT(CmdThisContext))), ROGUE_ARG(THIS->t), ROGUE_ARG(THIS->method_info->type_context) )))));
  }
  return (RogueClassCmd*)((RogueCmdCall__resolve__Scope( ROGUE_ARG(((RogueClassCmdCall*)THIS)), scope_0 )));
}

void RogueCmdCallStaticMethod__write_cpp__CPPWriter_Logical( RogueClassCmdCallStaticMethod* THIS, RogueClassCPPWriter* writer_0, RogueLogical is_statement_1 )
{
  if (!(is_statement_1))
  {
    RogueCPPWriter__print_cast__Type_Type( ROGUE_ARG(((RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[9] )))), ROGUE_ARG(THIS->method_info->_return_type), ROGUE_ARG(THIS->method_info->_return_type) );
  }
  RogueCPPWriter__print__String( writer_0, ROGUE_ARG(THIS->method_info->cpp_name) );
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[623] );
  RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, ROGUE_ARG(THIS->context), ROGUE_ARG(((RogueClassType*)(NULL))), ROGUE_ARG(THIS->method_info->type_context) );
  RogueInt32 i_2 = (0);
  {
    ROGUE_DEF_LOCAL_REF(RogueClassCmdArgs*,_auto_4681_3,(THIS->args));
    RogueInt32 _auto_4682_4 = (0);
    for (;_auto_4682_4 < _auto_4681_3->count;++_auto_4682_4)
    {
      ROGUE_DEF_LOCAL_REF(RogueClassCmd*,arg_5,(((RogueClassCmd*)(_auto_4681_3->data->as_objects[_auto_4682_4]))));
      RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[625] );
      RogueCPPWriter__print_arg__Cmd_Type_Type( writer_0, arg_5, ROGUE_ARG(((RogueClassLocal*)(THIS->method_info->parameters->data->as_objects[i_2]))->_type), ROGUE_ARG(((RogueClassType*)(NULL))) );
      ++i_2;
    }
  }
  RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[628] );
  if (!(is_statement_1))
  {
    RogueCPPWriter__print__String( writer_0, Rogue_literal_strings[12] );
  }
}

RogueClassNativeCodeToken* RogueNativeCodeToken__init_object( RogueClassNativeCodeToken* THIS )
{
  RogueToken__init_object( ROGUE_ARG(((RogueClassToken*)THIS)) );
  return (RogueClassNativeCodeToken*)(THIS);
}

RogueString* RogueNativeCodeToken__to_String( RogueClassNativeCodeToken* THIS )
{
  return (RogueString*)(THIS->value);
}

RogueString* RogueNativeCodeToken__type_name( RogueClassNativeCodeToken* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1533]);
}

RogueString* RogueNativeCodeToken__quoted_name( RogueClassNativeCodeToken* THIS )
{
  if (((void*)THIS->_type) == ((void*)RogueTokenType_keyword_nativeHeader))
  {
    return (RogueString*)(Rogue_literal_strings[102]);
  }
  return (RogueString*)(Rogue_literal_strings[101]);
}

RogueClassNativeCodeToken* RogueNativeCodeToken__init__TokenType_String( RogueClassNativeCodeToken* THIS, RogueClassTokenType* _auto_4359_0, RogueString* _auto_4360_1 )
{
  THIS->value = _auto_4360_1;
  THIS->_type = _auto_4359_0;
  return (RogueClassNativeCodeToken*)(THIS);
}

RogueClassContainsImplicitAccessVisitor* RogueContainsImplicitAccessVisitor__init_object( RogueClassContainsImplicitAccessVisitor* THIS )
{
  RogueVisitor__init_object( ROGUE_ARG(((RogueClassVisitor*)THIS)) );
  return (RogueClassContainsImplicitAccessVisitor*)(THIS);
}

RogueString* RogueContainsImplicitAccessVisitor__type_name( RogueClassContainsImplicitAccessVisitor* THIS )
{
  return (RogueString*)(Rogue_literal_strings[1541]);
}

RogueClassCmd* RogueContainsImplicitAccessVisitor__visit__CmdImplicitAccess( RogueClassContainsImplicitAccessVisitor* THIS, RogueClassCmdImplicitAccess* cmd_0 )
{
  THIS->contains_implicit_identifier_access = true;
  return (RogueClassCmd*)((RogueVisitor__visit__CmdImplicitAccess( ROGUE_ARG(((RogueClassVisitor*)THIS)), cmd_0 )));
}

RogueClassCmd* RogueContainsImplicitAccessVisitor__visit__CmdImplicitIDAccess( RogueClassContainsImplicitAccessVisitor* THIS, RogueClassCmdImplicitIDAccess* cmd_0 )
{
  THIS->contains_implicit_identifier_access = true;
  return (RogueClassCmd*)((RogueVisitor__visit__CmdImplicitIDAccess( ROGUE_ARG(((RogueClassVisitor*)THIS)), cmd_0 )));
}

RogueLogical RogueContainsImplicitAccessVisitor__check__Cmd( RogueClassContainsImplicitAccessVisitor* THIS, RogueClassCmd* cmd_0 )
{
  THIS->contains_implicit_identifier_access = false;
  Rogue_call_ROGUEM148( 27, cmd_0, ROGUE_ARG(((RogueClassVisitor*)(THIS))) );
  return (RogueLogical)(THIS->contains_implicit_identifier_access);
}

RogueString* RogueSystemEnvironment__get__String( RogueClassSystemEnvironment THIS, RogueString* name_0 )
{
  ROGUE_DEF_LOCAL_REF(RogueString*,result_1,0);
  char* c_result = getenv( (char*)name_0->utf8 );
  if (c_result)
  {
    result_1 = RogueString_create_from_utf8( c_result );
  }

  return (RogueString*)(((((result_1))) ? (ROGUE_ARG(result_1)) : ROGUE_ARG(((RogueString*)(NULL)))));
}


void Rogue_configure( int argc, const char* argv[] )
{
  if (Rogue_configured) return;
  Rogue_configured = 1;
  
  Rogue_argc = argc;
  Rogue_argv = argv;
  
  Rogue_configure_gc();
  Rogue_configure_types();
  std::set_terminate( Rogue_terminate_handler );
  RogueTypeObject = &Rogue_types[ 0 ];
  RogueTypeGlobal = &Rogue_types[ 1 ];
  RogueTypePrintWriter_global_output_buffer_ = &Rogue_types[ 2 ];
  RogueTypePrintWriter = &Rogue_types[ 3 ];
  RogueTypeStringBuilder = &Rogue_types[ 4 ];
  RogueTypeByte_List = &Rogue_types[ 5 ];
  RogueTypeGenericList = &Rogue_types[ 6 ];
  RogueTypeByte = &Rogue_types[ 7 ];
  RogueTypeArray = &Rogue_types[ 9 ];
  RogueTypeInt32 = &Rogue_types[ 10 ];
  RogueTypeLogical = &Rogue_types[ 11 ];
  RogueTypeFunction___List = &Rogue_types[ 12 ];
  RogueTypeFunction__ = &Rogue_types[ 13 ];
  RogueTypeException = &Rogue_types[ 15 ];
  RogueTypeString = &Rogue_types[ 16 ];
  RogueTypeStackTrace = &Rogue_types[ 17 ];
  RogueTypeString_List = &Rogue_types[ 18 ];
  RogueTypeReal64 = &Rogue_types[ 20 ];
  RogueTypeInt64 = &Rogue_types[ 21 ];
  RogueTypeCharacter = &Rogue_types[ 22 ];
  RogueTypeValue = &Rogue_types[ 23 ];
  RogueTypeTypeInfo = &Rogue_types[ 24 ];
  RogueTypePropertyInfo_List = &Rogue_types[ 25 ];
  RogueTypePropertyInfo = &Rogue_types[ 26 ];
  RogueTypeValueTable = &Rogue_types[ 28 ];
  RogueTypeTable_String_Value_ = &Rogue_types[ 29 ];
  RogueTypeTableEntry_String_Value_ = &Rogue_types[ 31 ];
  RogueTypeCharacter_List = &Rogue_types[ 32 ];
  RogueTypeStringTable_String_ = &Rogue_types[ 34 ];
  RogueTypeTable_String_String_ = &Rogue_types[ 35 ];
  RogueTypeTableEntry_String_String_ = &Rogue_types[ 37 ];
  RogueTypeStringReader = &Rogue_types[ 38 ];
  RogueTypeReader_Character_ = &Rogue_types[ 39 ];
  RogueTypeListReader_String_ = &Rogue_types[ 40 ];
  RogueTypeReader_String_ = &Rogue_types[ 41 ];
  RogueTypePrimitiveWorkBuffer = &Rogue_types[ 42 ];
  RogueTypeMath = &Rogue_types[ 43 ];
  RogueTypeRuntime = &Rogue_types[ 44 ];
  RogueTypeTable_String_TypeInfo_ = &Rogue_types[ 45 ];
  RogueTypeTableEntry_String_TypeInfo_ = &Rogue_types[ 47 ];
  RogueTypeConsole = &Rogue_types[ 48 ];
  RogueTypeReader_Byte_ = &Rogue_types[ 49 ];
  RogueTypePrintWriter_output_buffer_ = &Rogue_types[ 50 ];
  RogueTypeConsoleIOHandler = &Rogue_types[ 51 ];
  RogueTypeFunction_161 = &Rogue_types[ 52 ];
  RogueTypeRogueC = &Rogue_types[ 53 ];
  RogueTypeSet_String_ = &Rogue_types[ 54 ];
  RogueTypeTable_String_Logical_ = &Rogue_types[ 55 ];
  RogueTypeTableEntry_String_Logical_ = &Rogue_types[ 57 ];
  RogueTypeParser_List = &Rogue_types[ 58 ];
  RogueTypeParser = &Rogue_types[ 59 ];
  RogueTypeTokenReader = &Rogue_types[ 60 ];
  RogueTypeToken_List = &Rogue_types[ 61 ];
  RogueTypeToken = &Rogue_types[ 62 ];
  RogueTypeTokenType = &Rogue_types[ 63 ];
  RogueTypeTable_String_TokenType_ = &Rogue_types[ 64 ];
  RogueTypeTableEntry_String_TokenType_ = &Rogue_types[ 66 ];
  RogueTypeType = &Rogue_types[ 68 ];
  RogueTypeType_List = &Rogue_types[ 69 ];
  RogueTypeAttributes = &Rogue_types[ 71 ];
  RogueTypeTemplate = &Rogue_types[ 72 ];
  RogueTypeTypeParameter_List = &Rogue_types[ 73 ];
  RogueTypeTypeParameter = &Rogue_types[ 74 ];
  RogueTypeTable_Int32_Template_ = &Rogue_types[ 76 ];
  RogueTypeTableEntry_Int32_Template_ = &Rogue_types[ 78 ];
  RogueTypeTypeSpecializer_List = &Rogue_types[ 79 ];
  RogueTypeTypeSpecializer = &Rogue_types[ 80 ];
  RogueTypeDefinition_List = &Rogue_types[ 82 ];
  RogueTypeDefinition = &Rogue_types[ 83 ];
  RogueTypeCmd = &Rogue_types[ 84 ];
  RogueTypeTable_String_Definition_ = &Rogue_types[ 86 ];
  RogueTypeTableEntry_String_Definition_ = &Rogue_types[ 88 ];
  RogueTypeProperty_List = &Rogue_types[ 89 ];
  RogueTypeProperty = &Rogue_types[ 90 ];
  RogueTypeTable_String_Property_ = &Rogue_types[ 92 ];
  RogueTypeTableEntry_String_Property_ = &Rogue_types[ 94 ];
  RogueTypeMethod_List = &Rogue_types[ 95 ];
  RogueTypeMethod = &Rogue_types[ 96 ];
  RogueTypeLocal_List = &Rogue_types[ 97 ];
  RogueTypeLocal = &Rogue_types[ 98 ];
  RogueTypeCmdStatementList = &Rogue_types[ 100 ];
  RogueTypeCmd_List = &Rogue_types[ 101 ];
  RogueTypeCmdLabel_List = &Rogue_types[ 103 ];
  RogueTypeCmdLabel = &Rogue_types[ 104 ];
  RogueTypeTable_String_CmdLabel_ = &Rogue_types[ 106 ];
  RogueTypeTableEntry_String_CmdLabel_ = &Rogue_types[ 108 ];
  RogueTypeMethodTemplate = &Rogue_types[ 109 ];
  RogueTypeMethodTemplate_List = &Rogue_types[ 110 ];
  RogueTypeTable_String_Method_List_ = &Rogue_types[ 113 ];
  RogueTypeTableEntry_String_Method_List_ = &Rogue_types[ 115 ];
  RogueTypeTable_String_Method_ = &Rogue_types[ 116 ];
  RogueTypeTableEntry_String_Method_ = &Rogue_types[ 118 ];
  RogueTypeMethodTemplates = &Rogue_types[ 119 ];
  RogueTypeTable_String_ParseReader_ = &Rogue_types[ 121 ];
  RogueTypeTableEntry_String_ParseReader_ = &Rogue_types[ 123 ];
  RogueTypeParseReader = &Rogue_types[ 124 ];
  RogueTypeStopwatch = &Rogue_types[ 125 ];
  RogueTypeStringTable_Stopwatch_ = &Rogue_types[ 126 ];
  RogueTypeTable_String_Stopwatch_ = &Rogue_types[ 127 ];
  RogueTypeTableEntry_String_Stopwatch_ = &Rogue_types[ 129 ];
  RogueTypePlugin_List = &Rogue_types[ 130 ];
  RogueTypePlugin = &Rogue_types[ 131 ];
  RogueTypeFunction__RETURNSLogical = &Rogue_types[ 132 ];
  RogueTypeFunction_Object_ = &Rogue_types[ 133 ];
  RogueTypeProgram = &Rogue_types[ 135 ];
  RogueTypeTemplate_List = &Rogue_types[ 136 ];
  RogueTypeTable_String_Template_ = &Rogue_types[ 138 ];
  RogueTypeTableEntry_String_Template_ = &Rogue_types[ 140 ];
  RogueTypeTable_String_Augment_List_ = &Rogue_types[ 141 ];
  RogueTypeTableEntry_String_Augment_List_ = &Rogue_types[ 143 ];
  RogueTypeAugment_List = &Rogue_types[ 144 ];
  RogueTypeAugment = &Rogue_types[ 145 ];
  RogueTypeTable_String_Type_ = &Rogue_types[ 147 ];
  RogueTypeTableEntry_String_Type_ = &Rogue_types[ 149 ];
  RogueTypeTable_String_Int32_ = &Rogue_types[ 150 ];
  RogueTypeTableEntry_String_Int32_ = &Rogue_types[ 152 ];
  RogueTypeTable_String_String_List_ = &Rogue_types[ 153 ];
  RogueTypeTableEntry_String_String_List_ = &Rogue_types[ 155 ];
  RogueTypeTable_Type_CyClass_ = &Rogue_types[ 156 ];
  RogueTypeTableEntry_Type_CyClass_ = &Rogue_types[ 158 ];
  RogueTypeCyClass = &Rogue_types[ 159 ];
  RogueTypeTable_String_CyMethod_List_ = &Rogue_types[ 160 ];
  RogueTypeTableEntry_String_CyMethod_List_ = &Rogue_types[ 162 ];
  RogueTypeCyMethod_List = &Rogue_types[ 163 ];
  RogueTypeCyMethod = &Rogue_types[ 164 ];
  RogueTypeTable_String_CyProperty_ = &Rogue_types[ 166 ];
  RogueTypeTableEntry_String_CyProperty_ = &Rogue_types[ 168 ];
  RogueTypeCyProperty = &Rogue_types[ 169 ];
  RogueTypeTable_Type_Type_ = &Rogue_types[ 170 ];
  RogueTypeTableEntry_Type_Type_ = &Rogue_types[ 172 ];
  RogueTypeError = &Rogue_types[ 173 ];
  RogueTypeRogueError = &Rogue_types[ 174 ];
  RogueTypePreprocessor = &Rogue_types[ 175 ];
  RogueTypeTable_String_Token_List_ = &Rogue_types[ 176 ];
  RogueTypeTableEntry_String_Token_List_ = &Rogue_types[ 178 ];
  RogueTypePreprocessorTokenReader = &Rogue_types[ 179 ];
  RogueTypeTokenizer = &Rogue_types[ 180 ];
  RogueTypeLiteralCharacterToken = &Rogue_types[ 181 ];
  RogueTypeLiteralInt64Token = &Rogue_types[ 182 ];
  RogueTypeLiteralInt32Token = &Rogue_types[ 183 ];
  RogueTypeLiteralReal64Token = &Rogue_types[ 184 ];
  RogueTypeStringDataToken = &Rogue_types[ 185 ];
  RogueTypeListRewriter_Token_ = &Rogue_types[ 186 ];
  RogueTypeProgram_cy_create_delegates__ = &Rogue_types[ 187 ];
  RogueTypeProgram_cy_on_header_end_Object_ = &Rogue_types[ 188 ];
  RogueTypeProgram_cy_on_code_end_Object_ = &Rogue_types[ 189 ];
  RogueTypeCmdAccess = &Rogue_types[ 190 ];
  RogueTypeCmdArgs = &Rogue_types[ 191 ];
  RogueTypeCmdNamedArg_List = &Rogue_types[ 192 ];
  RogueTypeCmdNamedArg = &Rogue_types[ 193 ];
  RogueTypeFunction_Type_RETURNSLogical = &Rogue_types[ 195 ];
  RogueTypeCmdDefaultValue = &Rogue_types[ 196 ];
  RogueTypeCmdLiteral = &Rogue_types[ 197 ];
  RogueTypeCmdReturn = &Rogue_types[ 198 ];
  RogueTypeCmdStatement = &Rogue_types[ 199 ];
  RogueTypeScope = &Rogue_types[ 200 ];
  RogueTypeCmdControlStructure_List = &Rogue_types[ 201 ];
  RogueTypeCmdControlStructure = &Rogue_types[ 202 ];
  RogueTypeCmdTaskControlSection = &Rogue_types[ 203 ];
  RogueTypeFunction_431 = &Rogue_types[ 205 ];
  RogueTypeFunction_432 = &Rogue_types[ 206 ];
  RogueTypeCPPWriter = &Rogue_types[ 207 ];
  RogueTypeInt32_List = &Rogue_types[ 208 ];
  RogueTypeTableValueReader_Type_CyClass_ = &Rogue_types[ 210 ];
  RogueTypeReader_CyClass_ = &Rogue_types[ 211 ];
  RogueTypeCyClass_List = &Rogue_types[ 212 ];
  RogueTypeTableValueReader_String_CyProperty_ = &Rogue_types[ 214 ];
  RogueTypeReader_CyProperty_ = &Rogue_types[ 215 ];
  RogueTypeTableValueReader_String_CyMethod_List_ = &Rogue_types[ 216 ];
  RogueTypeReader_CyMethod_List_ = &Rogue_types[ 217 ];
  RogueTypeCyMethod_List_List = &Rogue_types[ 218 ];
  RogueTypeRequirementError = &Rogue_types[ 220 ];
  RogueTypeSet_Type_ = &Rogue_types[ 221 ];
  RogueTypeTable_Type_Logical_ = &Rogue_types[ 222 ];
  RogueTypeTableEntry_Type_Logical_ = &Rogue_types[ 224 ];
  RogueTypeSystem = &Rogue_types[ 225 ];
  RogueTypeWeakReference = &Rogue_types[ 226 ];
  RogueTypeWriter_Byte_ = &Rogue_types[ 227 ];
  RogueTypeReal64Value = &Rogue_types[ 228 ];
  RogueTypeNullValue = &Rogue_types[ 229 ];
  RogueTypeObjectValue = &Rogue_types[ 230 ];
  RogueTypeStringValue = &Rogue_types[ 231 ];
  RogueTypeUndefinedValue = &Rogue_types[ 232 ];
  RogueTypeFile = &Rogue_types[ 233 ];
  RogueTypeFunction_1094 = &Rogue_types[ 234 ];
  RogueTypeBlockingConsoleIOHandler = &Rogue_types[ 235 ];
  RogueTypeCmdMakeRequisite = &Rogue_types[ 236 ];
  RogueTypeLineReader = &Rogue_types[ 237 ];
  RogueTypeFunction_1125 = &Rogue_types[ 238 ];
  RogueTypeEOLToken = &Rogue_types[ 239 ];
  RogueTypeCmdLiteralLogical = &Rogue_types[ 240 ];
  RogueTypeCmdLiteralInt32 = &Rogue_types[ 241 ];
  RogueTypeCloneArgs = &Rogue_types[ 242 ];
  RogueTypeCmdAdd = &Rogue_types[ 243 ];
  RogueTypeCmdBinary = &Rogue_types[ 244 ];
  RogueTypeCmdNativeHeader = &Rogue_types[ 245 ];
  RogueTypeCmdNativeSource = &Rogue_types[ 246 ];
  RogueTypeCmdNativeCode = &Rogue_types[ 247 ];
  RogueTypeCmdIncludeNative = &Rogue_types[ 248 ];
  RogueTypeCmdIf = &Rogue_types[ 249 ];
  RogueTypeCmdWhich = &Rogue_types[ 250 ];
  RogueTypeCmdWhichCase_List = &Rogue_types[ 251 ];
  RogueTypeCmdWhichCase = &Rogue_types[ 252 ];
  RogueTypeCmdBlock = &Rogue_types[ 254 ];
  RogueTypeCmdContingent = &Rogue_types[ 255 ];
  RogueTypeCmdGenericLoop = &Rogue_types[ 256 ];
  RogueTypeCmdTry = &Rogue_types[ 257 ];
  RogueTypeCmdCatch_List = &Rogue_types[ 258 ];
  RogueTypeCmdCatch = &Rogue_types[ 259 ];
  RogueTypeCmdAwait = &Rogue_types[ 261 ];
  RogueTypeCmdYield = &Rogue_types[ 262 ];
  RogueTypeCmdThrow = &Rogue_types[ 263 ];
  RogueTypeCmdLiteralString = &Rogue_types[ 264 ];
  RogueTypeCmdFormattedString = &Rogue_types[ 265 ];
  RogueTypeCmdTrace = &Rogue_types[ 266 ];
  RogueTypeCmdLocalDeclaration = &Rogue_types[ 267 ];
  RogueTypeCmdAssert = &Rogue_types[ 268 ];
  RogueTypeCmdEscape = &Rogue_types[ 269 ];
  RogueTypeCmdNextIteration = &Rogue_types[ 270 ];
  RogueTypeCmdNecessary = &Rogue_types[ 271 ];
  RogueTypeCmdSufficient = &Rogue_types[ 272 ];
  RogueTypeCmdAdjust = &Rogue_types[ 273 ];
  RogueTypeCmdAssign = &Rogue_types[ 274 ];
  RogueTypeCmdModifyAndAssign = &Rogue_types[ 275 ];
  RogueTypeCmdTryExpression = &Rogue_types[ 276 ];
  RogueTypeCmdReadLocal = &Rogue_types[ 277 ];
  RogueTypeCmdAdjustLocal = &Rogue_types[ 278 ];
  RogueTypeCmdCompareLE = &Rogue_types[ 279 ];
  RogueTypeCmdComparison = &Rogue_types[ 280 ];
  RogueTypeCmdRange = &Rogue_types[ 281 ];
  RogueTypeCmdModifyAndAssignLocal = &Rogue_types[ 282 ];
  RogueTypeCmdResolvedModifyAndAssign = &Rogue_types[ 283 ];
  RogueTypeCmdRangeUpTo = &Rogue_types[ 284 ];
  RogueTypeCmdRangeUpToLessThan = &Rogue_types[ 285 ];
  RogueTypeCmdCompareLT = &Rogue_types[ 286 ];
  RogueTypeCmdCompareGE = &Rogue_types[ 287 ];
  RogueTypeCmdForEach = &Rogue_types[ 288 ];
  RogueTypeCmdRangeDownTo = &Rogue_types[ 289 ];
  RogueTypeCmdLogicalXor = &Rogue_types[ 290 ];
  RogueTypeCmdBinaryLogical = &Rogue_types[ 291 ];
  RogueTypeCmdLogicalOr = &Rogue_types[ 292 ];
  RogueTypeCmdLogicalAnd = &Rogue_types[ 293 ];
  RogueTypeCmdCompareEQ = &Rogue_types[ 294 ];
  RogueTypeCmdCompareIsNot = &Rogue_types[ 295 ];
  RogueTypeCmdCompareIs = &Rogue_types[ 296 ];
  RogueTypeCmdCompareNE = &Rogue_types[ 297 ];
  RogueTypeCmdCompareGT = &Rogue_types[ 298 ];
  RogueTypeCmdInstanceOf = &Rogue_types[ 299 ];
  RogueTypeCmdTypeOperator = &Rogue_types[ 300 ];
  RogueTypeCmdLogicalNot = &Rogue_types[ 301 ];
  RogueTypeCmdUnary = &Rogue_types[ 302 ];
  RogueTypeCmdBitwiseXor = &Rogue_types[ 303 ];
  RogueTypeCmdBitwiseOp = &Rogue_types[ 304 ];
  RogueTypeCmdBitwiseOr = &Rogue_types[ 305 ];
  RogueTypeCmdBitwiseAnd = &Rogue_types[ 306 ];
  RogueTypeCmdBitwiseShiftLeft = &Rogue_types[ 307 ];
  RogueTypeCmdBitwiseShiftRight = &Rogue_types[ 308 ];
  RogueTypeCmdBitwiseShiftRightX = &Rogue_types[ 309 ];
  RogueTypeCmdSubtract = &Rogue_types[ 310 ];
  RogueTypeCmdMultiply = &Rogue_types[ 311 ];
  RogueTypeCmdDivide = &Rogue_types[ 312 ];
  RogueTypeCmdMod = &Rogue_types[ 313 ];
  RogueTypeCmdPower = &Rogue_types[ 314 ];
  RogueTypeCmdNegate = &Rogue_types[ 315 ];
  RogueTypeCmdBitwiseNot = &Rogue_types[ 316 ];
  RogueTypeCmdLogicalize = &Rogue_types[ 317 ];
  RogueTypeCmdIsReference = &Rogue_types[ 318 ];
  RogueTypeCmdElementAccess = &Rogue_types[ 319 ];
  RogueTypeCmdConvertToType = &Rogue_types[ 320 ];
  RogueTypeCmdCreateCallback = &Rogue_types[ 321 ];
  RogueTypeCmdAs = &Rogue_types[ 322 ];
  RogueTypeFnParam = &Rogue_types[ 323 ];
  RogueTypeFnParam_List = &Rogue_types[ 324 ];
  RogueTypeCmdCreateFunction = &Rogue_types[ 326 ];
  RogueTypeFnArg_List = &Rogue_types[ 327 ];
  RogueTypeFnArg = &Rogue_types[ 328 ];
  RogueTypeCmdLiteralNull = &Rogue_types[ 330 ];
  RogueTypeCmdLiteralReal64 = &Rogue_types[ 331 ];
  RogueTypeCmdLiteralInt64 = &Rogue_types[ 332 ];
  RogueTypeCmdLiteralCharacter = &Rogue_types[ 333 ];
  RogueTypeCmdLiteralThis = &Rogue_types[ 334 ];
  RogueTypeCmdThisContext = &Rogue_types[ 335 ];
  RogueTypeCmdCreateList = &Rogue_types[ 336 ];
  RogueTypeCmdCallPriorMethod = &Rogue_types[ 337 ];
  RogueTypeCmdInlineNative = &Rogue_types[ 338 ];
  RogueTypeCmdSelect = &Rogue_types[ 339 ];
  RogueTypeCmdSelectCase_List = &Rogue_types[ 340 ];
  RogueTypeCmdSelectCase = &Rogue_types[ 341 ];
  RogueTypeCmdImplicitIDAccess = &Rogue_types[ 343 ];
  RogueTypeCmdImplicitAccess = &Rogue_types[ 344 ];
  RogueTypeCmdRequire = &Rogue_types[ 345 ];
  RogueTypeCmdEnsure = &Rogue_types[ 346 ];
  RogueTypeCmdTypedLiteralList = &Rogue_types[ 347 ];
  RogueTypeCmdCreateCompound = &Rogue_types[ 348 ];
  RogueTypeVisitor = &Rogue_types[ 349 ];
  RogueTypeCmdSwitch = &Rogue_types[ 350 ];
  RogueTypeCmdCreateObject = &Rogue_types[ 351 ];
  RogueTypeCmdReadSingleton = &Rogue_types[ 352 ];
  RogueTypeCmdWriteSingleton = &Rogue_types[ 353 ];
  RogueTypeCmdWriteLocal = &Rogue_types[ 354 ];
  RogueTypeCmdReadGlobal = &Rogue_types[ 355 ];
  RogueTypeCmdWriteGlobal = &Rogue_types[ 356 ];
  RogueTypeCmdReadProperty = &Rogue_types[ 357 ];
  RogueTypeCmdWriteProperty = &Rogue_types[ 358 ];
  RogueTypeCmdCall = &Rogue_types[ 359 ];
  RogueTypeCmdCallDynamicMethod = &Rogue_types[ 360 ];
  RogueTypeCmdCallMethod = &Rogue_types[ 361 ];
  RogueTypeCmdAdjustProperty = &Rogue_types[ 362 ];
  RogueTypeCmdAdjustGlobal = &Rogue_types[ 363 ];
  RogueTypeCmdModifyAndAssignGlobal = &Rogue_types[ 364 ];
  RogueTypeCmdModifyAndAssignProperty = &Rogue_types[ 365 ];
  RogueTypeCmdCreateArray = &Rogue_types[ 366 ];
  RogueTypeCmdReadArrayElement = &Rogue_types[ 367 ];
  RogueTypeCmdReadArrayCount = &Rogue_types[ 368 ];
  RogueTypeCmdWriteArrayElement = &Rogue_types[ 369 ];
  RogueTypeCmdTaskControl = &Rogue_types[ 370 ];
  RogueTypeCmdTaskControlSection_List = &Rogue_types[ 371 ];
  RogueTypeCmdNoAction = &Rogue_types[ 373 ];
  RogueTypeListRewriter_Type_ = &Rogue_types[ 374 ];
  RogueTypeUpdateThisTypeVisitor = &Rogue_types[ 375 ];
  RogueTypeTable_String_TypeSpecializer_ = &Rogue_types[ 376 ];
  RogueTypeTableEntry_String_TypeSpecializer_ = &Rogue_types[ 378 ];
  RogueTypeCmdCastToType = &Rogue_types[ 379 ];
  RogueTypeTraceUsedCodeVisitor = &Rogue_types[ 380 ];
  RogueTypeCloneMethodArgs = &Rogue_types[ 381 ];
  RogueTypeTaskArgs = &Rogue_types[ 382 ];
  RogueTypeToken_List_List = &Rogue_types[ 383 ];
  RogueTypeDirectiveTokenType = &Rogue_types[ 385 ];
  RogueTypeStructuralDirectiveTokenType = &Rogue_types[ 386 ];
  RogueTypeEOLTokenType = &Rogue_types[ 387 ];
  RogueTypeStructureTokenType = &Rogue_types[ 388 ];
  RogueTypeNativeCodeTokenType = &Rogue_types[ 389 ];
  RogueTypeModifyAndAssignTokenType = &Rogue_types[ 390 ];
  RogueTypeFunction_CmdNamedArg_RETURNSLogical = &Rogue_types[ 391 ];
  RogueTypeMacroArgs = &Rogue_types[ 392 ];
  RogueTypeTable_String_Cmd_ = &Rogue_types[ 393 ];
  RogueTypeTableEntry_String_Cmd_ = &Rogue_types[ 395 ];
  RogueTypeListRewriter_CmdNamedArg_ = &Rogue_types[ 396 ];
  RogueTypeFunction_CmdNamedArg_CmdNamedArg_RETURNSLogical = &Rogue_types[ 397 ];
  RogueTypeQuicksort_CmdNamedArg_ = &Rogue_types[ 398 ];
  RogueTypeCmdCallInlineNativeRoutine = &Rogue_types[ 399 ];
  RogueTypeCmdCallInlineNative = &Rogue_types[ 400 ];
  RogueTypeCmdCallNativeRoutine = &Rogue_types[ 401 ];
  RogueTypeCmdCallRoutine = &Rogue_types[ 402 ];
  RogueTypeCmdCallInlineNativeMethod = &Rogue_types[ 403 ];
  RogueTypeCmdCallNativeMethod = &Rogue_types[ 404 ];
  RogueTypeCmdCallAspectMethod = &Rogue_types[ 405 ];
  RogueTypeCandidateMethods = &Rogue_types[ 406 ];
  RogueTypeFunction_2953 = &Rogue_types[ 407 ];
  RogueTypeFunction_2954 = &Rogue_types[ 408 ];
  RogueTypeIOError = &Rogue_types[ 409 ];
  RogueTypeFileReader = &Rogue_types[ 410 ];
  RogueTypeFileWriter = &Rogue_types[ 411 ];
  RogueTypeUTF8Reader = &Rogue_types[ 412 ];
  RogueTypeQueryToGenericFunctionConversionVisitor = &Rogue_types[ 413 ];
  RogueTypeListReader_CmdSelectCase_ = &Rogue_types[ 414 ];
  RogueTypeReader_CmdSelectCase_ = &Rogue_types[ 415 ];
  RogueTypeCmdCallStaticMethod = &Rogue_types[ 416 ];
  RogueTypeNativeCodeToken = &Rogue_types[ 417 ];
  RogueTypeContainsImplicitAccessVisitor = &Rogue_types[ 418 ];
  RogueTypeOptionalInt32 = &Rogue_types[ 419 ];
  RogueTypeOptionalCharacter = &Rogue_types[ 420 ];
  RogueTypeOptionalByte = &Rogue_types[ 421 ];
  RogueTypeSystemEnvironment = &Rogue_types[ 422 ];
  RogueTypeOptionalString = &Rogue_types[ 423 ];
  RogueTypeOptionalType = &Rogue_types[ 424 ];
  RogueTypeOptionalMethod = &Rogue_types[ 425 ];
  RogueTypeOptionalCmd = &Rogue_types[ 426 ];

  Rogue_literal_strings[0] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "", 0 ) ); 
  Rogue_literal_strings[1] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "null", 4 ) ); 
  Rogue_literal_strings[2] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/Libraries/", 11 ) ); 
  Rogue_literal_strings[3] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--", 2 ) ); 
  Rogue_literal_strings[4] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--output", 8 ) ); 
  Rogue_literal_strings[5] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Exception", 9 ) ); 
  Rogue_literal_strings[6] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "===============================================================================", 79 ) ); 
  Rogue_literal_strings[7] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ",", 1 ) ); 
  Rogue_literal_strings[8] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\n", 1 ) ); 
  Rogue_literal_strings[9] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(", 1 ) ); 
  Rogue_literal_strings[10] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Object", 6 ) ); 
  Rogue_literal_strings[11] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " 0x", 3 ) ); 
  Rogue_literal_strings[12] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")", 1 ) ); 
  Rogue_literal_strings[13] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No stack trace", 14 ) ); 
  Rogue_literal_strings[14] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unknown", 7 ) ); 
  Rogue_literal_strings[15] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ERROR in \"", 10 ) ); 
  Rogue_literal_strings[16] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"  line ", 8 ) ); 
  Rogue_literal_strings[17] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-9223372036854775808", 20 ) ); 
  Rogue_literal_strings[18] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", column ", 9 ) ); 
  Rogue_literal_strings[19] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ERROR", 5 ) ); 
  Rogue_literal_strings[20] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Output filepath expected after \"--output=\".", 43 ) ); 
  Rogue_literal_strings[21] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--compile", 9 ) ); 
  Rogue_literal_strings[22] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--execute", 9 ) ); 
  Rogue_literal_strings[23] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--debug", 7 ) ); 
  Rogue_literal_strings[24] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--define", 8 ) ); 
  Rogue_literal_strings[25] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Expected \"name\" or \"name:value\" after \"--define=\".", 50 ) ); 
  Rogue_literal_strings[26] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$define", 7 ) ); 
  Rogue_literal_strings[27] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$include", 8 ) ); 
  Rogue_literal_strings[28] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$if", 3 ) ); 
  Rogue_literal_strings[29] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$elseIf", 7 ) ); 
  Rogue_literal_strings[30] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$else", 5 ) ); 
  Rogue_literal_strings[31] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$endIf", 6 ) ); 
  Rogue_literal_strings[32] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$essential", 10 ) ); 
  Rogue_literal_strings[33] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "module", 6 ) ); 
  Rogue_literal_strings[34] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "using", 5 ) ); 
  Rogue_literal_strings[35] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$id", 3 ) ); 
  Rogue_literal_strings[36] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "end of line", 11 ) ); 
  Rogue_literal_strings[37] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "end of input", 12 ) ); 
  Rogue_literal_strings[38] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(beginning of augment)", 22 ) ); 
  Rogue_literal_strings[39] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "augment", 7 ) ); 
  Rogue_literal_strings[40] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "case", 4 ) ); 
  Rogue_literal_strings[41] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "catch", 5 ) ); 
  Rogue_literal_strings[42] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class", 5 ) ); 
  Rogue_literal_strings[43] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "DEFINITIONS", 11 ) ); 
  Rogue_literal_strings[44] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "DEPENDENCIES", 12 ) ); 
  Rogue_literal_strings[45] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else", 4 ) ); 
  Rogue_literal_strings[46] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "elseIf", 6 ) ); 
  Rogue_literal_strings[47] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endAugment", 10 ) ); 
  Rogue_literal_strings[48] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endBlock", 8 ) ); 
  Rogue_literal_strings[49] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endClass", 8 ) ); 
  Rogue_literal_strings[50] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endContingent", 13 ) ); 
  Rogue_literal_strings[51] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endForEach", 10 ) ); 
  Rogue_literal_strings[52] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endFunction", 11 ) ); 
  Rogue_literal_strings[53] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endIf", 5 ) ); 
  Rogue_literal_strings[54] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endInstance", 11 ) ); 
  Rogue_literal_strings[55] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endLoop", 7 ) ); 
  Rogue_literal_strings[56] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endRoutine", 10 ) ); 
  Rogue_literal_strings[57] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endTry", 6 ) ); 
  Rogue_literal_strings[58] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endUnitTest", 11 ) ); 
  Rogue_literal_strings[59] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endWhich", 8 ) ); 
  Rogue_literal_strings[60] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endWhile", 8 ) ); 
  Rogue_literal_strings[61] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ENUMERATE", 9 ) ); 
  Rogue_literal_strings[62] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GLOBAL", 6 ) ); 
  Rogue_literal_strings[63] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "instance", 8 ) ); 
  Rogue_literal_strings[64] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method", 6 ) ); 
  Rogue_literal_strings[65] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "METHODS", 7 ) ); 
  Rogue_literal_strings[66] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "others", 6 ) ); 
  Rogue_literal_strings[67] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PROPERTIES", 10 ) ); 
  Rogue_literal_strings[68] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "routine", 7 ) ); 
  Rogue_literal_strings[69] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied", 9 ) ); 
  Rogue_literal_strings[70] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied", 11 ) ); 
  Rogue_literal_strings[71] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "with", 4 ) ); 
  Rogue_literal_strings[72] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}", 1 ) ); 
  Rogue_literal_strings[73] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "]", 1 ) ); 
  Rogue_literal_strings[74] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}#", 2 ) ); 
  Rogue_literal_strings[75] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>", 2 ) ); 
  Rogue_literal_strings[76] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "assert", 6 ) ); 
  Rogue_literal_strings[77] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "await", 5 ) ); 
  Rogue_literal_strings[78] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "block", 5 ) ); 
  Rogue_literal_strings[79] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "contingent", 10 ) ); 
  Rogue_literal_strings[80] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ensure", 6 ) ); 
  Rogue_literal_strings[81] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeBlock", 11 ) ); 
  Rogue_literal_strings[82] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeContingent", 16 ) ); 
  Rogue_literal_strings[83] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeForEach", 13 ) ); 
  Rogue_literal_strings[84] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeIf", 8 ) ); 
  Rogue_literal_strings[85] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeLoop", 10 ) ); 
  Rogue_literal_strings[86] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeTry", 9 ) ); 
  Rogue_literal_strings[87] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeWhich", 11 ) ); 
  Rogue_literal_strings[88] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escapeWhile", 11 ) ); 
  Rogue_literal_strings[89] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "forEach", 7 ) ); 
  Rogue_literal_strings[90] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "function", 8 ) ); 
  Rogue_literal_strings[91] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global", 6 ) ); 
  Rogue_literal_strings[92] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if", 2 ) ); 
  Rogue_literal_strings[93] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "in", 2 ) ); 
  Rogue_literal_strings[94] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "includeNativeCode", 17 ) ); 
  Rogue_literal_strings[95] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "includeNativeHeader", 19 ) ); 
  Rogue_literal_strings[96] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is", 2 ) ); 
  Rogue_literal_strings[97] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "isReference", 11 ) ); 
  Rogue_literal_strings[98] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local", 5 ) ); 
  Rogue_literal_strings[99] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "loop", 4 ) ); 
  Rogue_literal_strings[100] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "native", 6 ) ); 
  Rogue_literal_strings[101] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nativeCode", 10 ) ); 
  Rogue_literal_strings[102] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nativeHeader", 12 ) ); 
  Rogue_literal_strings[103] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "necessary", 9 ) ); 
  Rogue_literal_strings[104] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "noAction", 8 ) ); 
  Rogue_literal_strings[105] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "of", 2 ) ); 
  Rogue_literal_strings[106] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "require", 7 ) ); 
  Rogue_literal_strings[107] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return", 6 ) ); 
  Rogue_literal_strings[108] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "select", 6 ) ); 
  Rogue_literal_strings[109] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "nextIteration", 13 ) ); 
  Rogue_literal_strings[110] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "step", 4 ) ); 
  Rogue_literal_strings[111] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "sufficient", 10 ) ); 
  Rogue_literal_strings[112] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "throw", 5 ) ); 
  Rogue_literal_strings[113] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "trace", 5 ) ); 
  Rogue_literal_strings[114] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@trace", 6 ) ); 
  Rogue_literal_strings[115] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "try", 3 ) ); 
  Rogue_literal_strings[116] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unitTest", 8 ) ); 
  Rogue_literal_strings[117] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "which", 5 ) ); 
  Rogue_literal_strings[118] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while", 5 ) ); 
  Rogue_literal_strings[119] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "yield", 5 ) ); 
  Rogue_literal_strings[120] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "identifier", 10 ) ); 
  Rogue_literal_strings[121] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type identifier", 15 ) ); 
  Rogue_literal_strings[122] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character", 9 ) ); 
  Rogue_literal_strings[123] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32", 5 ) ); 
  Rogue_literal_strings[124] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int64", 5 ) ); 
  Rogue_literal_strings[125] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Real64", 6 ) ); 
  Rogue_literal_strings[126] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "String", 6 ) ); 
  Rogue_literal_strings[127] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "and", 3 ) ); 
  Rogue_literal_strings[128] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as", 2 ) ); 
  Rogue_literal_strings[129] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "downTo", 6 ) ); 
  Rogue_literal_strings[130] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "false", 5 ) ); 
  Rogue_literal_strings[131] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "instanceOf", 10 ) ); 
  Rogue_literal_strings[132] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "infinity", 8 ) ); 
  Rogue_literal_strings[133] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "meta", 4 ) ); 
  Rogue_literal_strings[134] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NaN", 3 ) ); 
  Rogue_literal_strings[135] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "not", 3 ) ); 
  Rogue_literal_strings[136] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "or", 2 ) ); 
  Rogue_literal_strings[137] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pi", 2 ) ); 
  Rogue_literal_strings[138] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prior", 5 ) ); 
  Rogue_literal_strings[139] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this", 4 ) ); 
  Rogue_literal_strings[140] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "true", 4 ) ); 
  Rogue_literal_strings[141] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "xor", 3 ) ); 
  Rogue_literal_strings[142] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&", 1 ) ); 
  Rogue_literal_strings[143] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&=", 2 ) ); 
  Rogue_literal_strings[144] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&&", 2 ) ); 
  Rogue_literal_strings[145] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->", 2 ) ); 
  Rogue_literal_strings[146] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@", 1 ) ); 
  Rogue_literal_strings[147] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@{", 2 ) ); 
  Rogue_literal_strings[148] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@[", 2 ) ); 
  Rogue_literal_strings[149] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\", 1 ) ); 
  Rogue_literal_strings[150] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "^", 1 ) ); 
  Rogue_literal_strings[151] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "^=", 2 ) ); 
  Rogue_literal_strings[152] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":", 1 ) ); 
  Rogue_literal_strings[153] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<>", 2 ) ); 
  Rogue_literal_strings[154] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".", 1 ) ); 
  Rogue_literal_strings[155] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".=", 2 ) ); 
  Rogue_literal_strings[156] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..>", 3 ) ); 
  Rogue_literal_strings[157] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{}", 2 ) ); 
  Rogue_literal_strings[158] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[]", 2 ) ); 
  Rogue_literal_strings[159] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "==", 2 ) ); 
  Rogue_literal_strings[160] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=", 1 ) ); 
  Rogue_literal_strings[161] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!", 1 ) ); 
  Rogue_literal_strings[162] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=>", 2 ) ); 
  Rogue_literal_strings[163] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">=", 2 ) ); 
  Rogue_literal_strings[164] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">", 1 ) ); 
  Rogue_literal_strings[165] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<=", 2 ) ); 
  Rogue_literal_strings[166] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<", 1 ) ); 
  Rogue_literal_strings[167] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-", 1 ) ); 
  Rogue_literal_strings[168] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-=", 2 ) ); 
  Rogue_literal_strings[169] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!=", 2 ) ); 
  Rogue_literal_strings[170] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{", 1 ) ); 
  Rogue_literal_strings[171] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[", 1 ) ); 
  Rogue_literal_strings[172] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<", 2 ) ); 
  Rogue_literal_strings[173] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "%", 1 ) ); 
  Rogue_literal_strings[174] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "%=", 2 ) ); 
  Rogue_literal_strings[175] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "+", 1 ) ); 
  Rogue_literal_strings[176] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "+=", 2 ) ); 
  Rogue_literal_strings[177] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "++", 2 ) ); 
  Rogue_literal_strings[178] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "?", 1 ) ); 
  Rogue_literal_strings[179] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ";", 1 ) ); 
  Rogue_literal_strings[180] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":<<:", 4 ) ); 
  Rogue_literal_strings[181] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":>>:", 4 ) ); 
  Rogue_literal_strings[182] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":>>>:", 5 ) ); 
  Rogue_literal_strings[183] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/", 1 ) ); 
  Rogue_literal_strings[184] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "/=", 2 ) ); 
  Rogue_literal_strings[185] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "//", 2 ) ); 
  Rogue_literal_strings[186] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "~", 1 ) ); 
  Rogue_literal_strings[187] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "~=", 2 ) ); 
  Rogue_literal_strings[188] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*", 1 ) ); 
  Rogue_literal_strings[189] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*=", 2 ) ); 
  Rogue_literal_strings[190] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..", 2 ) ); 
  Rogue_literal_strings[191] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "..<", 3 ) ); 
  Rogue_literal_strings[192] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "|", 1 ) ); 
  Rogue_literal_strings[193] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "|=", 2 ) ); 
  Rogue_literal_strings[194] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "||", 2 ) ); 
  Rogue_literal_strings[195] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::", 2 ) ); 
  Rogue_literal_strings[196] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Identifier expected.", 20 ) ); 
  Rogue_literal_strings[197] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endNativeCode", 13 ) ); 
  Rogue_literal_strings[198] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'endNativeCode' expected before EOF.", 36 ) ); 
  Rogue_literal_strings[199] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "endNativeHeader", 15 ) ); 
  Rogue_literal_strings[200] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'endNativeHeader' expected before EOF.", 38 ) ); 
  Rogue_literal_strings[201] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character expected.", 19 ) ); 
  Rogue_literal_strings[202] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character expected; found end of line.", 38 ) ); 
  Rogue_literal_strings[203] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Escaped character expected; found end of input.", 47 ) ); 
  Rogue_literal_strings[204] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-digit hex value expected; found end of file.", 45 ) ); 
  Rogue_literal_strings[205] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid hex digit ", 18 ) ); 
  Rogue_literal_strings[206] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'", 1 ) ); 
  Rogue_literal_strings[207] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Closing ']' expected.", 21 ) ); 
  Rogue_literal_strings[208] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid escape sequence.  Supported: \\n \\r \\s \\t \\0 \\/ \\' \\\\ \\\" \\", 65 ) ); 
  Rogue_literal_strings[209] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "uXXXX \\", 7 ) ); 
  Rogue_literal_strings[210] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "xXX.", 4 ) ); 
  Rogue_literal_strings[211] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of file reached while looking for end of string.", 52 ) ); 
  Rogue_literal_strings[212] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of input reached while looking for end of string.", 53 ) ); 
  Rogue_literal_strings[213] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Digit out of range for base ", 28 ) ); 
  Rogue_literal_strings[214] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more digits expected.", 28 ) ); 
  Rogue_literal_strings[215] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of File reached while looking for end of verbatim string.", 61 ) ); 
  Rogue_literal_strings[216] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "define", 6 ) ); 
  Rogue_literal_strings[217] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "include", 7 ) ); 
  Rogue_literal_strings[218] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "essential", 9 ) ); 
  Rogue_literal_strings[219] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$", 1 ) ); 
  Rogue_literal_strings[220] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "End of line expected after '...'.", 33 ) ); 
  Rogue_literal_strings[221] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<:", 3 ) ); 
  Rogue_literal_strings[222] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>:", 3 ) ); 
  Rogue_literal_strings[223] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">>>:", 4 ) ); 
  Rogue_literal_strings[224] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected input '", 18 ) ); 
  Rogue_literal_strings[225] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'.", 2 ) ); 
  Rogue_literal_strings[226] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOL", 3 ) ); 
  Rogue_literal_strings[227] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(Unicode ", 9 ) ); 
  Rogue_literal_strings[228] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected input ", 31 ) ); 
  Rogue_literal_strings[229] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Command Line]", 14 ) ); 
  Rogue_literal_strings[230] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--exhaustive", 12 ) ); 
  Rogue_literal_strings[231] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"--exhaustive\" takes no arguments.", 34 ) ); 
  Rogue_literal_strings[232] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--libraries", 11 ) ); 
  Rogue_literal_strings[233] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more paths expected after \"--libraries=\".", 48 ) ); 
  Rogue_literal_strings[234] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--libraries option specifies non-existent folder \"", 50 ) ); 
  Rogue_literal_strings[235] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\".", 2 ) ); 
  Rogue_literal_strings[236] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--main", 6 ) ); 
  Rogue_literal_strings[237] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected value for '--main' option.", 37 ) ); 
  Rogue_literal_strings[238] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--package", 9 ) ); 
  Rogue_literal_strings[239] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Java package name expected after \"--package=\" (e.g. \"com.developer.app\").", 73 ) ); 
  Rogue_literal_strings[240] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--api", 5 ) ); 
  Rogue_literal_strings[241] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"--api\" takes no arguments.", 27 ) ); 
  Rogue_literal_strings[242] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--essential", 11 ) ); 
  Rogue_literal_strings[243] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "**", 2 ) ); 
  Rogue_literal_strings[244] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--essential-file", 16 ) ); 
  Rogue_literal_strings[245] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".rogue", 6 ) ); 
  Rogue_literal_strings[246] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Can not find file \"", 19 ) ); 
  Rogue_literal_strings[247] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" for \"--essential-file\".", 25 ) ); 
  Rogue_literal_strings[248] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Could not get absolute path", 27 ) ); 
  Rogue_literal_strings[249] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--target", 8 ) ); 
  Rogue_literal_strings[250] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "One or more comma-separated target names expected after \"--target=\" (e.g. \"C++\").", 81 ) ); 
  Rogue_literal_strings[251] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--gc", 4 ) ); 
  Rogue_literal_strings[252] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "auto", 4 ) ); 
  Rogue_literal_strings[253] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "manual", 6 ) ); 
  Rogue_literal_strings[254] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "boehm", 5 ) ); 
  Rogue_literal_strings[255] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unknown GC mode (--gc=", 22 ) ); 
  Rogue_literal_strings[256] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--gc-threshold", 14 ) ); 
  Rogue_literal_strings[257] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A value such as 1.1MB, 512K, or 65536 expected after \"--gc-threshold=\".", 71 ) ); 
  Rogue_literal_strings[258] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "mb", 2 ) ); 
  Rogue_literal_strings[259] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "kb", 2 ) ); 
  Rogue_literal_strings[260] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--plugin-test", 13 ) ); 
  Rogue_literal_strings[261] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Test", 4 ) ); 
  Rogue_literal_strings[262] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--test", 6 ) ); 
  Rogue_literal_strings[263] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "--version", 9 ) ); 
  Rogue_literal_strings[264] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected argument to --version option.", 40 ) ); 
  Rogue_literal_strings[265] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unknown option '", 16 ) ); 
  Rogue_literal_strings[266] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "C++", 3 ) ); 
  Rogue_literal_strings[267] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cython", 6 ) ); 
  Rogue_literal_strings[268] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "1.0.91.8", 8 ) ); 
  Rogue_literal_strings[269] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "August 8, 2016", 14 ) ); 
  Rogue_literal_strings[270] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue Compiler v", 16 ) ); 
  Rogue_literal_strings[271] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\nUSAGE\n  roguec [options] file1.rogue [file2.rogue ...]\n\nOPTIONS\n  --api\n    Mark all classes as [api] - all methods of any referenced class are included\n    in the compiled program whether they're used or not.\n\n  --main\n    Include a main() function in the output file.\n\n  --compile\n    Use command line directives to compile the output of the\n    compiled .rogue program.  Automatically enables the --main option.\n\n  --debug\n    Enables exception stack traces.\n\n  --define=\"name[:value]\"\n    Adds a single preprocessor define.\n    Defining \"name:value\" is equivalent to: $define name value\n    Defining \"name\" is equivalent to:       $define name true\n\n  --execute[=\"args\"]\n    Use command line directives to compile and run the output of the\n    compiled .rogue program.  Automatically enables the --main option.\n\n  --exhaustive\n    Make every class and method [essential].\n\n  --gc[=[manual|auto|boehm]]\n    Set the garbage collection mode:\n      (no --gc)   - Manual GC mode, the default (see below).\n      --gc        - Auto GC mode (see below).\n      --gc=manual - Rogue_collect_garbage() must be called in-between calls\n                    into the Rogue runtime.\n      --gc=auto   - Rogue collects garbage as it executes.  Slower than\n                    'manual' without optimizations enabled.\n      --gc=boehm  - Uses the Boehm garbage collector.  The Boehm's GC library\n                    must be obtained separately and linked in.\n\n  --gc-threshold={number}[MB|K]\n    Specifies the default garbage collection threshold of the compiled program.\n    Default is 1MB.  If neither MB nor K is specified then the number is\n    assumed to be bytes.\n\n  --libraries=\"path1[;path2...]\"\n    Add one or more additional library folders to the search path.\n\n  --output=destpath/[filename]\n    Specify the destination folder and optionally the base filename for the\n    output.\n\n  --essential=[ClassName|ClassName.method_name(ParamType1,ParamType2,...)],...\n    Makes the given class or method essential (\"do not cull if unused\").\n    See also: --exhaustive\n\n  --essential-file[=file.rogue]\n    With an argument, makes the entire file essential.  With no argument,\n    all files explicitly listed on the commandline become essential.\n\n  --target=", 2244 ) ); 
  Rogue_literal_strings[272] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ",...]\n", 6 ) ); 
  Rogue_literal_strings[273] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    Specify one or more compile targets that are used with conditional code\n    compilation ('$if (\"C++\") ...').  C++ is the only supported language\n    target.  \"Cython\" is an optional plug-in target.  Arbitrary platforms\n    may be added at will, e.g. \"iOS\", \"MacOS\", etc.\n\n  --test\n    Compiled program includes any defined unit tests and runs them on launch.\n    Enables --debug automatically.\n\n  --version\n    Print the version number and release date.", 457 ) ); 
  Rogue_literal_strings[274] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue", 5 ) ); 
  Rogue_literal_strings[275] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue_program", 13 ) ); 
  Rogue_literal_strings[276] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PointerInt", 10 ) ); 
  Rogue_literal_strings[277] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compiler-generated", 18 ) ); 
  Rogue_literal_strings[278] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unsupported platform pointer size", 33 ) ); 
  Rogue_literal_strings[279] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class PyRogueError : Error [essential]\n  PROPERTIES\n    exc_type : String\n    exc_value : String\n    exc_traceback : String\n  METHODS\n    method init (exc_type, exc_value, exc_traceback) [essential]\n      prior.init(\"Python $: $\" (exc_type, exc_value))\nendClass", 261 ) ); 
  Rogue_literal_strings[280] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive definition for \"", 26 ) ); 
  Rogue_literal_strings[281] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unexpected end of input.", 24 ) ); 
  Rogue_literal_strings[282] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Identifier expected, found ", 27 ) ); 
  Rogue_literal_strings[283] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Filepath expected.", 18 ) ); 
  Rogue_literal_strings[284] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such file \"", 14 ) ); 
  Rogue_literal_strings[285] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $elseIf does not match any previous $if.", 55 ) ); 
  Rogue_literal_strings[286] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $else does not match any previous $if.", 53 ) ); 
  Rogue_literal_strings[287] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error - $endIf does not match any previous $if.", 54 ) ); 
  Rogue_literal_strings[288] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Expected '", 10 ) ); 
  Rogue_literal_strings[289] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error in directive: '", 28 ) ); 
  Rogue_literal_strings[290] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(compiler-generated-error)", 26 ) ); 
  Rogue_literal_strings[291] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot target folder \"", 22 ) ); 
  Rogue_literal_strings[292] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" for a native include.", 23 ) ); 
  Rogue_literal_strings[293] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "header", 6 ) ); 
  Rogue_literal_strings[294] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "code", 4 ) ); 
  Rogue_literal_strings[295] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Global", 6 ) ); 
  Rogue_literal_strings[296] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "on_launch", 9 ) ); 
  Rogue_literal_strings[297] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "run_tests", 9 ) ); 
  Rogue_literal_strings[298] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "insert", 6 ) ); 
  Rogue_literal_strings[299] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "All methods implicitly define the label <<insert>> at the beginning of the method.  No duplicates are allowed.", 110 ) ); 
  Rogue_literal_strings[300] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "append", 6 ) ); 
  Rogue_literal_strings[301] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "All methods implicitly define the label <<append>> at the end of the method.  No duplicates are allowed.", 104 ) ); 
  Rogue_literal_strings[302] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected, found ", 17 ) ); 
  Rogue_literal_strings[303] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unable to determine type for metadata access.", 45 ) ); 
  Rogue_literal_strings[304] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "default_value", 13 ) ); 
  Rogue_literal_strings[305] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'default_value' expected after 'meta.'.", 39 ) ); 
  Rogue_literal_strings[306] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ValueTable", 10 ) ); 
  Rogue_literal_strings[307] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ValueList", 9 ) ); 
  Rogue_literal_strings[308] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Closing '>>' expected before end of line.", 41 ) ); 
  Rogue_literal_strings[309] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function", 8 ) ); 
  Rogue_literal_strings[310] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "call", 4 ) ); 
  Rogue_literal_strings[311] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "param", 5 ) ); 
  Rogue_literal_strings[312] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "value", 5 ) ); 
  Rogue_literal_strings[313] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_", 1 ) ); 
  Rogue_literal_strings[314] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_auto_", 6 ) ); 
  Rogue_literal_strings[315] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_", 3 ) ); 
  Rogue_literal_strings[316] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected, found empty parentheses ().", 43 ) ); 
  Rogue_literal_strings[317] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "function parameters must all be typed or all be generic.", 56 ) ); 
  Rogue_literal_strings[318] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A function with generic parameters must use '=>' to define its body.", 68 ) ); 
  Rogue_literal_strings[319] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A function with typed parameters must use '->' to define its return type (if desired) and cannot use the generic function definition symbol '=>'.", 145 ) ); 
  Rogue_literal_strings[320] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "file_type == \"code\" or file_type == \"header\" in CmdIncludeNative.init()", 71 ) ); 
  Rogue_literal_strings[321] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Requirement failed:  ", 21 ) ); 
  Rogue_literal_strings[322] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Requirement failed.", 19 ) ); 
  Rogue_literal_strings[323] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Single identifier expected for control variable name.", 53 ) ); 
  Rogue_literal_strings[324] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "at", 2 ) ); 
  Rogue_literal_strings[325] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Missing element name before 'at'.", 33 ) ); 
  Rogue_literal_strings[326] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Variable name expected before '='.", 34 ) ); 
  Rogue_literal_strings[327] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'at' with a range.", 29 ) ); 
  Rogue_literal_strings[328] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'at' with forEach-of.", 32 ) ); 
  Rogue_literal_strings[329] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Use forEach-in with a literal range instead of forEach-of.", 58 ) ); 
  Rogue_literal_strings[330] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error in forEach - keyword 'in' or 'of' expected.", 56 ) ); 
  Rogue_literal_strings[331] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid syntax in forEach.", 26 ) ); 
  Rogue_literal_strings[332] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Parser.parse_for_each() Parser.rogue:1984]", 43 ) ); 
  Rogue_literal_strings[333] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL ERROR]", 16 ) ); 
  Rogue_literal_strings[334] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Omit the 'return' in a macro method with a return type.", 55 ) ); 
  Rogue_literal_strings[335] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() ", 3 ) ); 
  Rogue_literal_strings[336] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  ", 2 ) ); 
  Rogue_literal_strings[337] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":$", 2 ) ); 
  Rogue_literal_strings[338] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A comma-separated list of values is expected.", 45 ) ); 
  Rogue_literal_strings[339] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment section labels should be defined in the outer scope of the method and cannot be nested inside a control structure.", 122 ) ); 
  Rogue_literal_strings[340] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[][]", 4 ) ); 
  Rogue_literal_strings[341] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal list content contains more dimensions than literal list type.", 69 ) ); 
  Rogue_literal_strings[342] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "add", 3 ) ); 
  Rogue_literal_strings[343] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "set", 3 ) ); 
  Rogue_literal_strings[344] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal string expected.", 24 ) ); 
  Rogue_literal_strings[345] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The last part of a select{} must be a single expression.", 56 ) ); 
  Rogue_literal_strings[346] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The last part of a select{} cannot have a condition.", 52 ) ); 
  Rogue_literal_strings[347] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " in ", 4 ) ); 
  Rogue_literal_strings[348] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "()", 2 ) ); 
  Rogue_literal_strings[349] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected '", 26 ) ); 
  Rogue_literal_strings[350] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "abstract", 8 ) ); 
  Rogue_literal_strings[351] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "aspect", 6 ) ); 
  Rogue_literal_strings[352] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class cannot be both '", 24 ) ); 
  Rogue_literal_strings[353] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' and '", 7 ) ); 
  Rogue_literal_strings[354] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "primitive", 9 ) ); 
  Rogue_literal_strings[355] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compound", 8 ) ); 
  Rogue_literal_strings[356] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "fallback", 8 ) ); 
  Rogue_literal_strings[357] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "immutable", 9 ) ); 
  Rogue_literal_strings[358] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "macro", 5 ) ); 
  Rogue_literal_strings[359] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "propagated", 10 ) ); 
  Rogue_literal_strings[360] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "singleton", 9 ) ); 
  Rogue_literal_strings[361] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "special", 7 ) ); 
  Rogue_literal_strings[362] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task", 4 ) ); 
  Rogue_literal_strings[363] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "api", 3 ) ); 
  Rogue_literal_strings[364] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid attribute: ", 19 ) ); 
  Rogue_literal_strings[365] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A routine named ", 16 ) ); 
  Rogue_literal_strings[366] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already exists.", 16 ) ); 
  Rogue_literal_strings[367] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class named ", 14 ) ); 
  Rogue_literal_strings[368] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected, found end of file.", 29 ) ); 
  Rogue_literal_strings[369] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "set_", 4 ) ); 
  Rogue_literal_strings[370] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal placeholder type in augment.  Write '", 45 ) ); 
  Rogue_literal_strings[371] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' without the specializers (<<...>>) to apply the augment to all template instances or write specific types such as ", 116 ) ); 
  Rogue_literal_strings[372] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<String>> to restrict the augment to that type.", 48 ) ); 
  Rogue_literal_strings[373] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Syntax error: unexpected ", 25 ) ); 
  Rogue_literal_strings[374] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Internal", 8 ) ); 
  Rogue_literal_strings[375] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Built-in Type]", 15 ) ); 
  Rogue_literal_strings[376] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Real32", 6 ) ); 
  Rogue_literal_strings[377] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte", 4 ) ); 
  Rogue_literal_strings[378] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Logical", 7 ) ); 
  Rogue_literal_strings[379] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringBuilder", 13 ) ); 
  Rogue_literal_strings[380] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeInfo", 8 ) ); 
  Rogue_literal_strings[381] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeArray", 11 ) ); 
  Rogue_literal_strings[382] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GenericList", 11 ) ); 
  Rogue_literal_strings[383] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "WeakReference", 13 ) ); 
  Rogue_literal_strings[384] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value", 5 ) ); 
  Rogue_literal_strings[385] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Standard/NativeCode.rogue", 25 ) ); 
  Rogue_literal_strings[386] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Standard", 8 ) ); 
  Rogue_literal_strings[387] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Command Line Arguments]", 24 ) ); 
  Rogue_literal_strings[388] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot infer the type of the global property from its initial value.  Assign a type by appending ': TypeName' to the end of the declaration.", 140 ) ); 
  Rogue_literal_strings[389] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine the type of the global property - either assign an initial value (global ", 90 ) ); 
  Rogue_literal_strings[390] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...) or assign a type (global ", 33 ) ); 
  Rogue_literal_strings[391] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : Int32).", 10 ) ); 
  Rogue_literal_strings[392] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Optional", 8 ) ); 
  Rogue_literal_strings[393] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "List", 4 ) ); 
  Rogue_literal_strings[394] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No ", 3 ) ); 
  Rogue_literal_strings[395] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " template accepting ", 20 ) ); 
  Rogue_literal_strings[396] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# parameter", 11 ) ); 
  Rogue_literal_strings[397] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#", 1 ) ); 
  Rogue_literal_strings[398] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "es", 2 ) ); 
  Rogue_literal_strings[399] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "s", 1 ) ); 
  Rogue_literal_strings[400] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is defined.", 12 ) ); 
  Rogue_literal_strings[401] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "$DataType", 9 ) ); 
  Rogue_literal_strings[402] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "In ", 3 ) ); 
  Rogue_literal_strings[403] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " the overridden return type (", 29 ) ); 
  Rogue_literal_strings[404] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") is not compatible with the prior definition return type (", 59 ) ); 
  Rogue_literal_strings[405] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ").", 2 ) ); 
  Rogue_literal_strings[406] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A macro method cannot override an existing non-macro method.", 60 ) ); 
  Rogue_literal_strings[407] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Macro methods cannot be overridden by a non-macro method.", 57 ) ); 
  Rogue_literal_strings[408] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No corresponding label <<", 25 ) ); 
  Rogue_literal_strings[409] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">> in augmented code.", 21 ) ); 
  Rogue_literal_strings[410] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type ", 5 ) ); 
  Rogue_literal_strings[411] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already defines method ", 24 ) ); 
  Rogue_literal_strings[412] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] ", 11 ) ); 
  Rogue_literal_strings[413] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cmd", 3 ) ); 
  Rogue_literal_strings[414] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cloned() is not implemented.", 29 ) ); 
  Rogue_literal_strings[415] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Visitor", 7 ) ); 
  Rogue_literal_strings[416] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " does not overload method visit(", 32 ) ); 
  Rogue_literal_strings[417] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init", 4 ) ); 
  Rogue_literal_strings[418] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init() methods cannot be global methods.  Rename your method create_class() if you need to perform one-time setup.", 114 ) ); 
  Rogue_literal_strings[419] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compounds cannot have initializers.  Use global create(...) methods instead.", 76 ) ); 
  Rogue_literal_strings[420] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Global methods and routines cannot be tasks.", 44 ) ); 
  Rogue_literal_strings[421] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskWithResult<<", 16 ) ); 
  Rogue_literal_strings[422] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Task", 4 ) ); 
  Rogue_literal_strings[423] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A property named \"", 18 ) ); 
  Rogue_literal_strings[424] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" already exists.", 17 ) ); 
  Rogue_literal_strings[425] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No type declared for parameter \"", 32 ) ); 
  Rogue_literal_strings[426] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A routine with the signature ", 29 ) ); 
  Rogue_literal_strings[427] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is already defined.", 20 ) ); 
  Rogue_literal_strings[428] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A global method with the signature ", 35 ) ); 
  Rogue_literal_strings[429] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A method with the signature ", 28 ) ); 
  Rogue_literal_strings[430] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__", 2 ) ); 
  Rogue_literal_strings[431] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__task", 6 ) ); 
  Rogue_literal_strings[432] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "context", 7 ) ); 
  Rogue_literal_strings[433] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "update", 6 ) ); 
  Rogue_literal_strings[434] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "execute", 7 ) ); 
  Rogue_literal_strings[435] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ip", 2 ) ); 
  Rogue_literal_strings[436] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__task_resolver", 15 ) ); 
  Rogue_literal_strings[437] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "result", 6 ) ); 
  Rogue_literal_strings[438] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A local variable named \"", 24 ) ); 
  Rogue_literal_strings[439] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".resolve() is not defined.", 26 ) ); 
  Rogue_literal_strings[440] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "locals left on scope stack", 26 ) ); 
  Rogue_literal_strings[441] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control stucture left on scope stack", 36 ) ); 
  Rogue_literal_strings[442] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is not declared as returning a value.", 38 ) ); 
  Rogue_literal_strings[443] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Conflicting initial values are given for property \"", 51 ) ); 
  Rogue_literal_strings[444] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" in unrelated types ", 21 ) ); 
  Rogue_literal_strings[445] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " and ", 5 ) ); 
  Rogue_literal_strings[446] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Conflicting types given for property \"", 38 ) ); 
  Rogue_literal_strings[447] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" - ", 4 ) ); 
  Rogue_literal_strings[448] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_name", 9 ) ); 
  Rogue_literal_strings[449] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_info", 9 ) ); 
  Rogue_literal_strings[450] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Runtime", 7 ) ); 
  Rogue_literal_strings[451] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already defines global method ", 31 ) ); 
  Rogue_literal_strings[452] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator", 8 ) ); 
  Rogue_literal_strings[453] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to", 2 ) ); 
  Rogue_literal_strings[454] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method template ", 16 ) ); 
  Rogue_literal_strings[455] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<{", 3 ) ); 
  Rogue_literal_strings[456] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}>>({", 5 ) ); 
  Rogue_literal_strings[457] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "}) is already defined.", 22 ) ); 
  Rogue_literal_strings[458] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "string", 6 ) ); 
  Rogue_literal_strings[459] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "count", 5 ) ); 
  Rogue_literal_strings[460] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Native expression types cannot be specified in macro methods - remove the \"->", 77 ) ); 
  Rogue_literal_strings[461] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Class ", 6 ) ); 
  Rogue_literal_strings[462] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " does not supply a concrete definition for abstract method ", 59 ) ); 
  Rogue_literal_strings[463] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".  Either mark the class [abstract] or define the method.", 57 ) ); 
  Rogue_literal_strings[464] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_class()", 12 ) ); 
  Rogue_literal_strings[465] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::init_class() must be declared under GLOBAL METHODS.", 53 ) ); 
  Rogue_literal_strings[466] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_class", 10 ) ); 
  Rogue_literal_strings[467] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_object()", 13 ) ); 
  Rogue_literal_strings[468] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init_object", 11 ) ); 
  Rogue_literal_strings[469] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clean_up()", 10 ) ); 
  Rogue_literal_strings[470] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clean_up() cannot return a value.", 33 ) ); 
  Rogue_literal_strings[471] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_String()", 11 ) ); 
  Rogue_literal_strings[472] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_String", 9 ) ); 
  Rogue_literal_strings[473] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "A class that is instanceOf NativeArray must also be instanceOf Array<<DataType>>.", 81 ) ); 
  Rogue_literal_strings[474] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<", 7 ) ); 
  Rogue_literal_strings[475] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "create", 6 ) ); 
  Rogue_literal_strings[476] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_", 9 ) ); 
  Rogue_literal_strings[477] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such variable \"", 18 ) ); 
  Rogue_literal_strings[478] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" or method \"", 13 ) ); 
  Rogue_literal_strings[479] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" exists in current scope of type ", 34 ) ); 
  Rogue_literal_strings[480] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method or variable \"", 28 ) ); 
  Rogue_literal_strings[481] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".type() is not defined.", 23 ) ); 
  Rogue_literal_strings[482] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected; this statement or expression does not result in a value.", 72 ) ); 
  Rogue_literal_strings[483] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No exact match for ambiguous call to ", 37 ) ); 
  Rogue_literal_strings[484] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " - possible incorrect parameter name", 36 ) ); 
  Rogue_literal_strings[485] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".  Candidates:\n\n", 16 ) ); 
  Rogue_literal_strings[486] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Call to ", 8 ) ); 
  Rogue_literal_strings[487] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " has arguments that are incompatible with the best candidate", 60 ) ); 
  Rogue_literal_strings[488] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " - possible incorrect parameter name.  Candidate:\n\n", 51 ) ); 
  Rogue_literal_strings[489] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":\n\n", 3 ) ); 
  Rogue_literal_strings[490] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid negation of a named parameter with a supplied value.", 60 ) ); 
  Rogue_literal_strings[491] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(", 9 ) ); 
  Rogue_literal_strings[492] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Incompatible function argument; ", 32 ) ); 
  Rogue_literal_strings[493] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " expected.", 10 ) ); 
  Rogue_literal_strings[494] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Incorrect number of parameters in generic function definition - expected ", 73 ) ); 
  Rogue_literal_strings[495] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", found ", 8 ) ); 
  Rogue_literal_strings[496] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Generic function argument does not match any compatible Function parameters in available methods.", 97 ) ); 
  Rogue_literal_strings[497] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Generic function argument ambiguously matches Function parameters in multiple available methods.", 96 ) ); 
  Rogue_literal_strings[498] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_Object", 9 ) ); 
  Rogue_literal_strings[499] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "to_Value", 8 ) ); 
  Rogue_literal_strings[500] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Called method does not have a parameter named '", 47 ) ); 
  Rogue_literal_strings[501] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type name expected, e.g. \"", 26 ) ); 
  Rogue_literal_strings[502] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".\".", 3 ) ); 
  Rogue_literal_strings[503] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type name expected.", 19 ) ); 
  Rogue_literal_strings[504] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Missing return value in macro method.", 37 ) ); 
  Rogue_literal_strings[505] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Only single line macros are supported.", 38 ) ); 
  Rogue_literal_strings[506] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid arguments to array count.", 33 ) ); 
  Rogue_literal_strings[507] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init(", 5 ) ); 
  Rogue_literal_strings[508] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "create(", 7 ) ); 
  Rogue_literal_strings[509] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "exists", 6 ) ); 
  Rogue_literal_strings[510] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator?", 9 ) ); 
  Rogue_literal_strings[511] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid arguments to class selector ", 36 ) ); 
  Rogue_literal_strings[512] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array count expected.", 21 ) ); 
  Rogue_literal_strings[513] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32 value expected.", 21 ) ); 
  Rogue_literal_strings[514] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive call to getter ", 25 ) ); 
  Rogue_literal_strings[515] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() - write @", 12 ) ); 
  Rogue_literal_strings[516] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " instead.", 9 ) ); 
  Rogue_literal_strings[517] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot access object property '", 31 ) ); 
  Rogue_literal_strings[518] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' from a global method.", 23 ) ); 
  Rogue_literal_strings[519] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot read properties using aspect references.  Add a getter to the aspect definition - ", 89 ) ); 
  Rogue_literal_strings[520] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'method ", 8 ) ); 
  Rogue_literal_strings[521] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ": return @", 10 ) ); 
  Rogue_literal_strings[522] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".to->", 5 ) ); 
  Rogue_literal_strings[523] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() conversion method exists - use \"<expression> as ", 51 ) ); 
  Rogue_literal_strings[524] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" instead.", 10 ) ); 
  Rogue_literal_strings[525] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " cannot be cast to required type ", 33 ) ); 
  Rogue_literal_strings[526] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid reference to 'this' object - global methods have no object context.", 75 ) ); 
  Rogue_literal_strings[527] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CompoundIntrospection<<", 23 ) ); 
  Rogue_literal_strings[528] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition expected.", 20 ) ); 
  Rogue_literal_strings[529] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property", 8 ) ); 
  Rogue_literal_strings[530] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global property", 15 ) ); 
  Rogue_literal_strings[531] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine ", 17 ) ); 
  Rogue_literal_strings[532] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " type from initial value; append an explicit type declaration such as \": Object\" ", 81 ) ); 
  Rogue_literal_strings[533] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "An initial value or ", 20 ) ); 
  Rogue_literal_strings[534] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " type (for example, \": Object\") must be specified.", 50 ) ); 
  Rogue_literal_strings[535] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reference to ", 13 ) ); 
  Rogue_literal_strings[536] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is missing required type parameters (", 38 ) ); 
  Rogue_literal_strings[537] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "<<...>>).", 9 ) ); 
  Rogue_literal_strings[538] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Too many type specializers given.", 33 ) ); 
  Rogue_literal_strings[539] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Insufficient number of type parameters in ", 42 ) ); 
  Rogue_literal_strings[540] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "; ", 2 ) ); 
  Rogue_literal_strings[541] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " given, ", 8 ) ); 
  Rogue_literal_strings[542] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type parameters given for non-template type.", 44 ) ); 
  Rogue_literal_strings[543] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reference to undefined type '", 29 ) ); 
  Rogue_literal_strings[544] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "An aspect can only specify one base class (", 43 ) ); 
  Rogue_literal_strings[545] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " are both specified).", 21 ) ); 
  Rogue_literal_strings[546] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compounds can only extend aspects.", 34 ) ); 
  Rogue_literal_strings[547] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cyclic inheritance attempted - ", 31 ) ); 
  Rogue_literal_strings[548] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " cannot extend ", 15 ) ); 
  Rogue_literal_strings[549] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " because ", 9 ) ); 
  Rogue_literal_strings[550] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " already extends ", 17 ) ); 
  Rogue_literal_strings[551] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " can only have one base class (", 31 ) ); 
  Rogue_literal_strings[552] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " are both specified as base classes).", 37 ) ); 
  Rogue_literal_strings[553] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "init()", 6 ) ); 
  Rogue_literal_strings[554] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this:", 5 ) ); 
  Rogue_literal_strings[555] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " index:", 7 ) ); 
  Rogue_literal_strings[556] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " overridden_method:", 19 ) ); 
  Rogue_literal_strings[557] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " overridden_method.index:", 25 ) ); 
  Rogue_literal_strings[558] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "index == overridden_method.index  in Method.validate()", 54 ) ); 
  Rogue_literal_strings[559] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueProgram", 12 ) ); 
  Rogue_literal_strings[560] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp", 4 ) ); 
  Rogue_literal_strings[561] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type", 4 ) ); 
  Rogue_literal_strings[562] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RETURNS", 7 ) ); 
  Rogue_literal_strings[563] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_List", 5 ) ); 
  Rogue_literal_strings[564] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NOT", 3 ) ); 
  Rogue_literal_strings[565] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MOD", 3 ) ); 
  Rogue_literal_strings[566] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "AND", 3 ) ); 
  Rogue_literal_strings[567] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TIMES", 5 ) ); 
  Rogue_literal_strings[568] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PLUS", 4 ) ); 
  Rogue_literal_strings[569] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MINUS", 5 ) ); 
  Rogue_literal_strings[570] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SLASH", 5 ) ); 
  Rogue_literal_strings[571] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LE", 2 ) ); 
  Rogue_literal_strings[572] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LT", 2 ) ); 
  Rogue_literal_strings[573] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EQUALS", 6 ) ); 
  Rogue_literal_strings[574] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GE", 2 ) ); 
  Rogue_literal_strings[575] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "GT", 2 ) ); 
  Rogue_literal_strings[576] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "POWER", 5 ) ); 
  Rogue_literal_strings[577] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "OR", 2 ) ); 
  Rogue_literal_strings[578] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "XOR", 3 ) ); 
  Rogue_literal_strings[579] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray", 10 ) ); 
  Rogue_literal_strings[580] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array", 5 ) ); 
  Rogue_literal_strings[581] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueClass", 10 ) ); 
  Rogue_literal_strings[582] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType", 9 ) ); 
  Rogue_literal_strings[583] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Writing ", 8 ) ); 
  Rogue_literal_strings[584] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h...", 5 ) ); 
  Rogue_literal_strings[585] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h", 2 ) ); 
  Rogue_literal_strings[586] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "//-----------------------------------------------------------------------------", 79 ) ); 
  Rogue_literal_strings[587] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "//  Generated by the Rogue compiler", 35 ) ); 
  Rogue_literal_strings[588] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#pragma once", 12 ) ); 
  Rogue_literal_strings[589] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_MANUAL ", 29 ) ); 
  Rogue_literal_strings[590] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "1", 1 ) ); 
  Rogue_literal_strings[591] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0", 1 ) ); 
  Rogue_literal_strings[592] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_AUTO ", 27 ) ); 
  Rogue_literal_strings[593] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#define ROGUE_GC_MODE_BOEHM ", 28 ) ); 
  Rogue_literal_strings[594] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#ifndef ROGUE_GC_THRESHOLD_DEFAULT", 34 ) ); 
  Rogue_literal_strings[595] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  #define ROGUE_GC_THRESHOLD_DEFAULT ", 37 ) ); 
  Rogue_literal_strings[596] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#endif", 6 ) ); 
  Rogue_literal_strings[597] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// NATIVE HEADERS", 17 ) ); 
  Rogue_literal_strings[598] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include <cmath>", 16 ) ); 
  Rogue_literal_strings[599] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// FORWARD DECLARATIONS", 23 ) ); 
  Rogue_literal_strings[600] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "struct ", 7 ) ); 
  Rogue_literal_strings[601] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "; // ", 5 ) ); 
  Rogue_literal_strings[602] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// COMPOUND DEFINITIONS", 23 ) ); 
  Rogue_literal_strings[603] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : ", 3 ) ); 
  Rogue_literal_strings[604] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void", 4 ) ); 
  Rogue_literal_strings[605] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : RogueObject", 14 ) ); 
  Rogue_literal_strings[606] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// PROPERTIES", 13 ) ); 
  Rogue_literal_strings[607] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_COMPOUND_REF_PROP(", 28 ) ); 
  Rogue_literal_strings[608] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ");", 2 ) ); 
  Rogue_literal_strings[609] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "release", 7 ) ); 
  Rogue_literal_strings[610] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_release(", 20 ) ); 
  Rogue_literal_strings[611] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "))", 2 ) ); 
  Rogue_literal_strings[612] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "retain", 6 ) ); 
  Rogue_literal_strings[613] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_retain(", 19 ) ); 
  Rogue_literal_strings[614] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Unrecognized native code insertion marker: ", 43 ) ); 
  Rogue_literal_strings[615] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "THIS", 4 ) ); 
  Rogue_literal_strings[616] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[Parser.parse_specialization_type() Parser.rogue:2429]", 54 ) ); 
  Rogue_literal_strings[617] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Invalid specializer index: ", 38 ) ); 
  Rogue_literal_strings[618] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "THIS->", 6 ) ); 
  Rogue_literal_strings[619] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "THIS.", 5 ) ); 
  Rogue_literal_strings[620] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ", 1 ) ); 
  Rogue_literal_strings[621] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() { memset( this, 0, sizeof(", 29 ) ); 
  Rogue_literal_strings[622] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ); }", 6 ) ); 
  Rogue_literal_strings[623] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( ", 2 ) ); 
  Rogue_literal_strings[624] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " value, bool exists=true ) : value(value), exists(exists) {}", 60 ) ); 
  Rogue_literal_strings[625] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", ", 2 ) ); 
  Rogue_literal_strings[626] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ) : ", 5 ) ); 
  Rogue_literal_strings[627] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " {}", 3 ) ); 
  Rogue_literal_strings[628] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " )", 2 ) ); 
  Rogue_literal_strings[629] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "memset( this, 0, sizeof(", 24 ) ); 
  Rogue_literal_strings[630] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") );", 4 ) ); 
  Rogue_literal_strings[631] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this->", 6 ) ); 
  Rogue_literal_strings[632] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ", 3 ) ); 
  Rogue_literal_strings[633] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool operator==( const ", 23 ) ); 
  Rogue_literal_strings[634] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " &other ) const", 15 ) ); 
  Rogue_literal_strings[635] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (exists)\n{\n  if (other.exists) return value == other.value;\n  else              return false;\n}\nelse\n{\n  if (other.exists) return false;\n  else              return true;\n}", 174 ) ); 
  Rogue_literal_strings[636] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return (0 == memcmp(this,&other,sizeof(", 39 ) ); 
  Rogue_literal_strings[637] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")));", 4 ) ); 
  Rogue_literal_strings[638] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool operator!=( const ", 23 ) ); 
  Rogue_literal_strings[639] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "{\n  return !(*this == other);\n}\n", 32 ) ); 
  Rogue_literal_strings[640] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "};", 2 ) ); 
  Rogue_literal_strings[641] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// GLOBAL PROPERTIES", 20 ) ); 
  Rogue_literal_strings[642] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extern ", 7 ) ); 
  Rogue_literal_strings[643] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " Rogue", 6 ) ); 
  Rogue_literal_strings[644] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// CLASS DEFINITIONS", 20 ) ); 
  Rogue_literal_strings[645] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// ROGUE TYPES", 14 ) ); 
  Rogue_literal_strings[646] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extern RogueType* RogueType", 27 ) ); 
  Rogue_literal_strings[647] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// ROUTINE PROTOTYPES", 21 ) ); 
  Rogue_literal_strings[648] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " THIS", 5 ) ); 
  Rogue_literal_strings[649] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// METHOD PROTOTYPES", 20 ) ); 
  Rogue_literal_strings[650] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// INTERNAL PROTOTYPES", 22 ) ); 
  Rogue_literal_strings[651] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_trace();", 19 ) ); 
  Rogue_literal_strings[652] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*)(", 4 ) ); 
  Rogue_literal_strings[653] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUEM", 6 ) ); 
  Rogue_literal_strings[654] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " Rogue_call_", 12 ) ); 
  Rogue_literal_strings[655] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( int i, ", 9 ) ); 
  Rogue_literal_strings[656] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " p", 2 ) ); 
  Rogue_literal_strings[657] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " );", 3 ) ); 
  Rogue_literal_strings[658] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp...", 7 ) ); 
  Rogue_literal_strings[659] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include <stdio.h>", 18 ) ); 
  Rogue_literal_strings[660] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#include \"", 10 ) ); 
  Rogue_literal_strings[661] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h\"", 3 ) ); 
  Rogue_literal_strings[662] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "typedef ", 8 ) ); 
  Rogue_literal_strings[663] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*)", 3 ) ); 
  Rogue_literal_strings[664] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*", 2 ) ); 
  Rogue_literal_strings[665] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return ", 7 ) ); 
  Rogue_literal_strings[666] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "((", 2 ) ); 
  Rogue_literal_strings[667] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(THIS->type->methods[i]))( THIS", 32 ) ); 
  Rogue_literal_strings[668] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", p", 3 ) ); 
  Rogue_literal_strings[669] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue", 10 ) ); 
  Rogue_literal_strings[670] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( void* obj );", 20 ) ); 
  Rogue_literal_strings[671] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( void* obj )", 19 ) ); 
  Rogue_literal_strings[672] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void* link;", 11 ) ); 
  Rogue_literal_strings[673] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=((", 12 ) ); 
  Rogue_literal_strings[674] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)obj)->", 8 ) ); 
  Rogue_literal_strings[675] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")) ((RogueObject*)link)->type->trace_fn( link );", 48 ) ); 
  Rogue_literal_strings[676] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( &", 9 ) ); 
  Rogue_literal_strings[677] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=", 10 ) ); 
  Rogue_literal_strings[678] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")) Rogue", 8 ) ); 
  Rogue_literal_strings[679] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( link );", 15 ) ); 
  Rogue_literal_strings[680] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray* array = (RogueArray*) obj;\nint count;", 49 ) ); 
  Rogue_literal_strings[681] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "* cur;", 6 ) ); 
  Rogue_literal_strings[682] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\nif ( !array || array->object_size < 0 ) return;\narray->object_size = ~array->object_size;\n\ncount = array->count;", 113 ) ); 
  Rogue_literal_strings[683] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur = ((", 8 ) ); 
  Rogue_literal_strings[684] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)(array->as_bytes)) - 1;", 25 ) ); 
  Rogue_literal_strings[685] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while (--count >= 0)", 20 ) ); 
  Rogue_literal_strings[686] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  Rogue", 7 ) ); 
  Rogue_literal_strings[687] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace( ++cur );", 16 ) ); 
  Rogue_literal_strings[688] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ( !obj || ((RogueObject*)obj)->object_size < 0 ) return;\n((RogueObject*)obj)->object_size = ~((RogueObject*)obj)->object_size;\n", 130 ) ); 
  Rogue_literal_strings[689] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_name_index_table[] =", 35 ) ); 
  Rogue_literal_strings[690] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueInitFn Rogue_init_object_fn_table[] =", 42 ) ); 
  Rogue_literal_strings[691] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueInitFn) ", 14 ) ); 
  Rogue_literal_strings[692] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueInitFn Rogue_init_fn_table[] =", 35 ) ); 
  Rogue_literal_strings[693] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueCleanUpFn Rogue_clean_up_fn_table[] =", 42 ) ); 
  Rogue_literal_strings[694] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueCleanUpFn) ", 17 ) ); 
  Rogue_literal_strings[695] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueToStringFn Rogue_to_string_fn_table[] =", 44 ) ); 
  Rogue_literal_strings[696] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueToStringFn) ", 18 ) ); 
  Rogue_literal_strings[697] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueTraceFn Rogue_trace_fn_table[] =", 37 ) ); 
  Rogue_literal_strings[698] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueArray_trace", 16 ) ); 
  Rogue_literal_strings[699] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_trace", 6 ) ); 
  Rogue_literal_strings[700] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_trace", 17 ) ); 
  Rogue_literal_strings[701] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_trace()", 18 ) ); 
  Rogue_literal_strings[702] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int i;", 6 ) ); 
  Rogue_literal_strings[703] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Trace GLOBAL PROPERTIES", 26 ) ); 
  Rogue_literal_strings[704] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ((link=Rogue", 15 ) ); 
  Rogue_literal_strings[705] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Trace Class objects and singletons\nfor (i=Rogue_type_count; --i>=0; )\n{\n  RogueType* type = &Rogue_types[i];\n  if (type->type_info) RogueTypeInfo_trace( type->type_info );\n  if (type->_singleton) type->trace_fn( type->_singleton );\n}", 236 ) ); 
  Rogue_literal_strings[706] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void* Rogue_dynamic_method_table[] =", 36 ) ); 
  Rogue_literal_strings[707] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(void*) (", 9 ) ); 
  Rogue_literal_strings[708] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ", 2 ) ); 
  Rogue_literal_strings[709] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0,", 2 ) ); 
  Rogue_literal_strings[710] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " // ", 4 ) ); 
  Rogue_literal_strings[711] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_info_table[", 26 ) ); 
  Rogue_literal_strings[712] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] =", 3 ) ); 
  Rogue_literal_strings[713] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// allocator_index, dynamic_method_table_index, base_class_count, base_class_index[base_class_count], ...", 105 ) ); 
  Rogue_literal_strings[714] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\\"", 2 ) ); 
  Rogue_literal_strings[715] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"", 1 ) ); 
  Rogue_literal_strings[716] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\'", 2 ) ); 
  Rogue_literal_strings[717] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\\\", 2 ) ); 
  Rogue_literal_strings[718] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\n", 2 ) ); 
  Rogue_literal_strings[719] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"\"", 2 ) ); 
  Rogue_literal_strings[720] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\\x", 2 ) ); 
  Rogue_literal_strings[721] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void* Rogue_global_property_pointers[] =", 40 ) ); 
  Rogue_literal_strings[722] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(void*) &Rogue", 14 ) ); 
  Rogue_literal_strings[723] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_property_offsets[] =", 30 ) ); 
  Rogue_literal_strings[724] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(int)(intptr_t)&((", 18 ) ); 
  Rogue_literal_strings[725] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)0)->", 6 ) ); 
  Rogue_literal_strings[726] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_object_size_table[", 28 ) ); 
  Rogue_literal_strings[727] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(int) sizeof(", 13 ) ); 
  Rogue_literal_strings[728] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_attributes_table[", 27 ) ); 
  Rogue_literal_strings[729] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_allocator_count = ", 28 ) ); 
  Rogue_literal_strings[730] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueAllocator Rogue_allocators[", 32 ) ); 
  Rogue_literal_strings[731] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "];", 2 ) ); 
  Rogue_literal_strings[732] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_type_count = ", 23 ) ); 
  Rogue_literal_strings[733] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType Rogue_types[", 22 ) ); 
  Rogue_literal_strings[734] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType* RogueType", 20 ) ); 
  Rogue_literal_strings[735] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int Rogue_literal_string_count = ", 33 ) ); 
  Rogue_literal_strings[736] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueString* Rogue_literal_strings[", 35 ) ); 
  Rogue_literal_strings[737] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_LOCAL_REF(", 20 ) ); 
  Rogue_literal_strings[738] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (THIS->type->index)", 26 ) ); 
  Rogue_literal_strings[739] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "case ", 5 ) ); 
  Rogue_literal_strings[740] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return ", 9 ) ); 
  Rogue_literal_strings[741] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "( (", 3 ) ); 
  Rogue_literal_strings[742] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")THIS", 5 ) ); 
  Rogue_literal_strings[743] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "default:", 8 ) ); 
  Rogue_literal_strings[744] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueDebugTrace __trace( \"", 26 ) ); 
  Rogue_literal_strings[745] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\", \"", 4 ) ); 
  Rogue_literal_strings[746] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(unknown)", 9 ) ); 
  Rogue_literal_strings[747] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\", ", 3 ) ); 
  Rogue_literal_strings[748] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ";__trace.filename = \"", 21 ) ); 
  Rogue_literal_strings[749] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\";", 2 ) ); 
  Rogue_literal_strings[750] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ";__trace.line = ", 16 ) ); 
  Rogue_literal_strings[751] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::write_cpp() is not defined.", 29 ) ); 
  Rogue_literal_strings[752] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_configure( int argc, const char* argv[] )", 52 ) ); 
  Rogue_literal_strings[753] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (Rogue_configured) return;\nRogue_configured = 1;\n\nRogue_argc = argc;\nRogue_argv = argv;\n\nRogue_configure_gc();\nRogue_configure_types();\nstd::set_terminate( Rogue_terminate_handler );\n", 186 ) ); 
  Rogue_literal_strings[754] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = &Rogue_types[ ", 17 ) ); 
  Rogue_literal_strings[755] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ];", 3 ) ); 
  Rogue_literal_strings[756] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue_literal_strings[", 22 ) ); 
  Rogue_literal_strings[757] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", 69 ) ); 
  Rogue_literal_strings[758] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ) ); ", 6 ) ); 
  Rogue_literal_strings[759] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void Rogue_launch()", 19 ) ); 
  Rogue_literal_strings[760] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "();", 3 ) ); 
  Rogue_literal_strings[761] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueSystem_executable_filepath = RogueString_create_from_utf8(\n    Rogue_argc ? Rogue_argv[0] : \"Rogue\", -1 );\n\nfor (int i=1; i<Rogue_argc; ++i)\n{\n  RogueString_List__add__String( RogueSystem_command_line_arguments,\n      RogueString_create_from_utf8( Rogue_argv[i], -1 ) );\n}", 277 ) ); 
  Rogue_literal_strings[762] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "// Instantiate essential singletons", 35 ) ); 
  Rogue_literal_strings[763] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_SINGLETON( ", 17 ) ); 
  Rogue_literal_strings[764] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueGlobal__on_launch( (RogueClassGlobal*) (RogueType_singleton(RogueTypeGlobal)) );\nRogue_collect_garbage();", 110 ) ); 
  Rogue_literal_strings[765] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bool Rogue_update_tasks()\n{\n  // Returns true if any tasks are still active\n  try\n  {", 85 ) ); 
  Rogue_literal_strings[766] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskManager", 11 ) ); 
  Rogue_literal_strings[767] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    RogueClassTaskManager* task_manager = (RogueClassTaskManager*) ROGUE_SINGLETON(TaskManager);\n    bool result = RogueTaskManager__update( task_manager );\n    Rogue_collect_garbage();\n    return result;", 204 ) ); 
  Rogue_literal_strings[768] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    Rogue_collect_garbage();\n    return false;", 46 ) ); 
  Rogue_literal_strings[769] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  }\n  catch (RogueException* err)\n  {\n    printf( \"Uncaught exception\\n\" );\n    RogueException__display( err );\n    return false;\n  }\n}\n", 136 ) ); 
  Rogue_literal_strings[770] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "int main( int argc, const char* argv[] )\n{\n  try\n  {\n    Rogue_configure( argc, argv );\n    Rogue_launch();\n\n    while (Rogue_update_tasks()) {}\n\n    Rogue_quit();\n  }\n  catch (RogueException* err)\n  {\n    printf( \"Uncaught exception\\n\" );\n    RogueException__display( err );\n  }\n\n  return 0;\n}", 294 ) ); 
  Rogue_literal_strings[771] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "and       del       from      not       while\nas        elif      global    or        with\nassert    else      if        pass      yield\nbreak     except    import    print\nclass     exec      in        raise\ncontinue  finally   is        return\ndef       for       lambda    try", 279 ) ); 
  Rogue_literal_strings[772] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clean_up", 8 ) ); 
  Rogue_literal_strings[773] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__str__", 7 ) ); 
  Rogue_literal_strings[774] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator==", 10 ) ); 
  Rogue_literal_strings[775] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_eq_", 4 ) ); 
  Rogue_literal_strings[776] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<=", 10 ) ); 
  Rogue_literal_strings[777] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_le_", 4 ) ); 
  Rogue_literal_strings[778] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator>=", 10 ) ); 
  Rogue_literal_strings[779] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_ge_", 4 ) ); 
  Rogue_literal_strings[780] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator!=", 10 ) ); 
  Rogue_literal_strings[781] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_ne_", 4 ) ); 
  Rogue_literal_strings[782] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<", 9 ) ); 
  Rogue_literal_strings[783] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_lt_", 4 ) ); 
  Rogue_literal_strings[784] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator>", 9 ) ); 
  Rogue_literal_strings[785] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_gt_", 4 ) ); 
  Rogue_literal_strings[786] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator+", 9 ) ); 
  Rogue_literal_strings[787] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_add_", 5 ) ); 
  Rogue_literal_strings[788] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_array", 6 ) ); 
  Rogue_literal_strings[789] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(<", 2 ) ); 
  Rogue_literal_strings[790] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*>check_type(self, ", 19 ) ); 
  Rogue_literal_strings[791] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pyrogue_get_string(%)", 21 ) ); 
  Rogue_literal_strings[792] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "get_wrapper(<intptr_t>%)", 24 ) ); 
  Rogue_literal_strings[793] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_NO_DEFAULT", 11 ) ); 
  Rogue_literal_strings[794] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "0.0", 3 ) ); 
  Rogue_literal_strings[795] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "-infinity", 9 ) ); 
  Rogue_literal_strings[796] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\"\"\"", 3 ) ); 
  Rogue_literal_strings[797] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "True", 4 ) ); 
  Rogue_literal_strings[798] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "False", 5 ) ); 
  Rogue_literal_strings[799] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "None", 4 ) ); 
  Rogue_literal_strings[800] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_PYROGUE_ACCESS", 15 ) ); 
  Rogue_literal_strings[801] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ", 3 ) ); 
  Rogue_literal_strings[802] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is _PYROGUE_ACCESS: ", 21 ) ); 
  Rogue_literal_strings[803] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = Global.singleton.", 20 ) ); 
  Rogue_literal_strings[804] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">cast_object(%, ", 16 ) ); 
  Rogue_literal_strings[805] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ">%", 2 ) ); 
  Rogue_literal_strings[806] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Dubious routine ", 27 ) ); 
  Rogue_literal_strings[807] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_init_", 6 ) ); 
  Rogue_literal_strings[808] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")).", 3 ) ); 
  Rogue_literal_strings[809] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_module.pyx...", 14 ) ); 
  Rogue_literal_strings[810] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_module.pyx", 11 ) ); 
  Rogue_literal_strings[811] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "#!python\n#cython: optimize.unpack_method_calls=False", 52 ) ); 
  Rogue_literal_strings[812] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# Generated by the Rogue compiler\nimport sys\nfrom cpython cimport PyObject, Py_XINCREF, Py_XDECREF\nfrom libcpp cimport bool\nfrom libc.stdlib cimport malloc, free\nfrom libc.stdint cimport intptr_t, uint32_t\ncdef object Int32\nclass Int32:\n  pass\ncdef object Int64\nclass Int64:\n  pass\ncdef object Logical\nclass Logical:\n  pass\ncdef object Real32\nclass Real32:\n  pass\ncdef object Real64\nclass Real64:\n  pass\ncdef object Character\nclass Character:\n  pass\ncdef object Byte\nclass Byte:\n  pass", 485 ) ); 
  Rogue_literal_strings[813] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cdef extern from \"", 18 ) ); 
  Rogue_literal_strings[814] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".h\":", 4 ) ); 
  Rogue_literal_strings[815] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  void Rogue_configure ( int argc, const char* argv[] )\n  void Rogue_launch ()\n  cdef cppclass RogueString:\n    int byte_count # in UTF-8 bytes\n    int character_count # in whole characters\n    int is_ascii\n    int hash_code\n    int utf8[]\n  cdef cppclass RogueType:\n    int index\n  cdef cppclass RogueObject:\n    RogueType * type\n  cdef cppclass RogueArray:\n    pass\n\n  cdef void PyRogue_handle_rogue_exception()\n\n  cdef cppclass PyRogueDelegateContext:\n    void * f\n    RogueObject * exception\n\n  ctypedef float RogueReal\n  ctypedef float RogueFloat\n  ctypedef int RogueLong\n  ctypedef int RogueInt32\n  ctypedef float RogueReal64\n  ctypedef float RogueReal32\n  ctypedef long RogueInt64\n  ctypedef int RogueInt32\n  ctypedef int RogueCharacter\n  ctypedef int RogueByte\n  ctypedef bool RogueLogical\n\n  RogueLogical RogueObject_instance_of( RogueObject* THIS, RogueType* ancestor_type )\n  RogueObject* RogueType_singleton( RogueType* THIS )\n  RogueObject* RogueType_create_object( RogueType* THIS, RogueInt32 size )\n  cdef RogueString* RogueString_create_from_utf8( const char* c_string, int count )\n  void* RogueObject_retain( RogueObject* THIS )\n  void* RogueObject_release( RogueObject* THIS )\n\ncdef object pyrogue_get_string (RogueString * str):\n  # May return bytes or Unicode string.  For Python 3,\n  # we probably should always do the latter.\n  if str.is_ascii:\n    return (<char*>str.utf8)[:str.byte_count]\n  return ((<char*>str.utf8)[:str.byte_count]).decode('UTF-8')\n\nRogue_configure(0, NULL)\nRogue_launch()\n\ncdef class PyRogueBase: #Should this merge into Object?\n  def __dealloc__ (self):\n    RogueObject_release(<RogueObject*>self.thisptr)\n    (<PyRogueBase>self).thisptr = NULL\n  def __richcmp__ (a, b, int op):\n    # Should we be replicating Rogue's missing-operator behavior in here?\n    if op == 0:\n      return a._lt_(b)\n    elif op == 1:\n      return a._le_(b)\n    elif op == 2:\n      return a._eq_(b)\n    elif op == 3:\n      return a._ne_(b)\n    elif op == 4:\n      return a._gt_(b)\n    elif op == 5:\n      return a._ge_(b)\n  def __add__ (self, other):\n    if hasattr(self, '_add_'):\n      return self._add_(other)\n    return TypeError(\"unsupported operand type(s) for +: '%s' and '%s'\", type(self).__name__, type(other).__name__)\n  # We can't really copy Rogue objects, so don't try...\n  def __deepcopy__ (self, memo):\n    return self\n  def __copy__ (self):\n    return self\n  def __hash__ (self):\n    try:\n      return self.hash_code()\n    except:\n      return self.hash_code\n  def __getitem__ (self, key):\n    if hasattr(self, '_get_element'):\n      try:\n        return self._get_element(key)\n      except:\n        raise IndexError(str(sys.exc_info()[1]))\n    return self.get(key)\n  def __setitem__ (self, key, value):\n    if hasattr(self, '_set_element'):\n      try:\n        self._set_element(key, value)\n      except:\n        raise IndexError(str(sys.exc_info()[1]))\n      return\n    self.set(key, value)\n  def __len__ (self):\n    length = self.count\n    if callable(length): return length()\n    return length\n  cdef RogueObject *thisptr\n  def __repr__ (self):\n    return \"<%s at %s (%s)>\" % (type(self).__name__, hex(<intptr_t>self.thisptr), hex(id(self)))\n  def cast_to (self, othertype):\n    cdef PyRogueBase this\n    this = <PyRogueBase>self\n    cdef RogueType * other_ctype\n    other_ctype = <RogueType*><intptr_t>othertype._pyrogue_type()\n    if RogueObject_instance_of(this.thisptr, other_ctype):\n      return othertype(__pyrogue_new_instance=<intptr_t>this.thisptr)\n    raise TypeError(\"Object of type %s not compatible with type %s\" % (type(self).__name__, othertype.__name__))\n\ncdef RogueObject * check_type (PyRogueBase o, t):\n  if isinstance(o, t): return o.thisptr\n  raise RuntimeError(\"Object %s is not of type %s\" % (o, t))\n\ncdef object _rogue_type_index_to_pyclass = {}\ncdef object get_wrapper (intptr_t native_object_ptr):\n  cdef RogueObject * thisptr = <RogueObject*>native_object_ptr\n  cls = _rogue_type_index_to_pyclass[thisptr.type.index]\n  return cls(__pyrogue_new_instance=native_object_ptr)\n\ncdef void * cast_object (python_object, t) except <void*>-1:\n  \"\"\"Cast a Python object to Rogue type t\"\"\"\n  if t is String:\n    if isinstance(python_object, str):\n      return RogueString_create_from_utf8(python_object, -1)\n    raise TypeError(\"Object %s is not of type %s\" % (repr(python_object), t))\n  if python_object is None:\n    return NULL # Null pointers okay\n  if issubclass(t, _PyDelegate):\n    if hasattr(python_object, \"__call__\"):\n      return (<PyRogueBase>t._from_callable(python_object)).thisptr\n  cdef PyRogueBase rogue_object\n  rogue_object = python_object # Casting\n  if isinstance(rogue_object, t):\n    return rogue_object.thisptr\n  raise TypeError(\"Object %s is not of type %s\" % (repr(python_object), t))\n\n# Method overload machinery\nclass OverloadException (RuntimeError):\n  pass\n\ncdef object _PyDelegate\nclass _PyDelegate (object):\n  \"\"\"\"We mark all function types with this\"\"\"\n  @classmethod\n  def _from_callable (cls, f):\n    assert f\n    #print \"_from_callable\", f, cls\n    d = cls._pyrogue_pydelegate_type()\n    cdef PyObject * fo\n    fo = <PyObject*>f\n    Py_XINCREF(fo)\n    d._callable = <intptr_t>fo\n    return d\n\ndef _objptr(o):\n  return <long>((<PyRogueBase>o).thisptr)\n\ncdef object _NOTHING\ncdef object _NO_DEFAULT\ncdef object _PYROGUE_ACCESS\ncdef object _Overload\ncdef object _call_overload\ncdef object _overloads\n\nclass _NOTHING:\n  pass\n\nclass _NO_DEFAULT:\n  pass\n\ncdef int _M_PERFECT = 4\ncdef int _M_WIDEN = 3\ncdef int _M_NARROW = 1\nclass _Overload (object):\n  def __init__ (self, types, keywords, defaults, func, static):\n    self.num_args = len(keywords)\n    self.types = types\n    self.keywords = keywords\n    self.defaults = defaults\n    self.func = func\n    self.static = static\n    nodefault = False\n    for i in range(len(defaults)-1, -1, -1):\n      if nodefault:\n        defaults[i] = _NO_DEFAULT\n      elif defaults[i] is _NO_DEFAULT:\n        nodefault = True\n  @property\n  def max_args_count (self):\n    return self.num_args\n  @property\n  def min_arg_count (self):\n    num_with_defaults = len(x for x in self.defaults if x is not _NO_DEFAULT)\n    return self.max_args_count - num_with_defaults\n  def keyword_index (self, kw):\n    return self.keywords.index(kw)\n  def is_compatible (self, arg, param_type):\n    # The match system is a bit funny, but I didn't immediately\n    # have better ideas given the availability of types in\n    # Python and Rogue.\n    if isinstance(arg, param_type): return _M_PERFECT\n    if param_type is Int32:\n      if type(arg) is int: return _M_PERFECT\n    elif param_type is Int64:\n      if type(arg) is long: return _M_PERFECT # Not really, but as good as it gets\n      if type(arg) is int: return _M_PERFECT # Close enough, and there's no better\n    elif param_type is Real64:\n      if type(arg) is float: return _M_PERFECT\n      if type(arg) is int: return _M_WIDEN #?\n      if type(arg) is long: return _M_NARROW\n    elif param_type is Real32:\n      if type(arg) is float: return _M_NARROW\n      if type(arg) is int: return _M_NARROW\n      if type(arg) is long: return _M_NARROW\n    elif param_type is Logical:\n      if arg is True or arg is False: return _M_PERFECT\n    elif param_type is Byte:\n      if type(arg) is int: return _M_NARROW\n    elif param_type is String:\n      if type(arg) is str: return _M_PERFECT\n    elif issubclass(param_type, _PyDelegate):\n      if hasattr(arg, '__call__'): return _M_PERFECT\n    elif arg is None and issubclass(param_type, PyRogueBase):\n      return _M_PERFECT\n    return False\n  def format (self):\n    r = []\n    for i,n in enumerate(self.keywords):\n      s = \"%s %s\" % (self.types[i], n)\n      if self.defaults[i] != _NO_DEFAULT: n += \"=\" + self.defaults[i]\n    return \", \".join(r)\n  def map_args (self, args, kws):\n    # Checks if an overload is acceptable.\n    # Returns a match \"score\".  Higher is a closer match.  False if\n    # it flat out doesn't match.\n    # Also returns the \"mapped\" args (e.g., actual args to use to\n    # call this overload).\n    try:\n      if len(args) > self.num_args: return False,False\n      if len(kws) > self.num_args: return False,False\n      if self.max_args_count == 0: return _M_PERFECT,[]\n      mapping = [_NOTHING] * self.max_args_count\n      for kwname,kwvalue in kws.items():\n        kwindex = self.keyword_index(kwname)\n        # The above will throw an exception if we don't have the keyword;\n        # we treat exceptions as meaning a non-match, so that's fine.\n        mapping[kwindex] = kwvalue\n      for i,arg in enumerate(args):\n        if mapping[i] is not _NOTHING:\n          return False,False # Can't specify same param with keyword and positional\n        mapping[i] = arg\n      score = 0\n      for i,value in enumerate(mapping):\n        if value is _NOTHING:\n          if self.defaults[i] is _NO_DEFAULT:\n            return False,False # Didn't have an argument or a default\n          mapping[i] = self.defaults[i]\n        else:\n          arg_score = self.is_compatible(value, self.types[i])\n          if arg_score is False: return False,False\n          score += arg_score\n      score /= float(self.max_args_count)\n      return score,mapping\n    except:\n      #import traceback\n      #traceback.print_exc()\n      return False,False\n\ndef _call_overload (target, num, args, kw):\n  candidates = []\n  for o in _overloads[num]:\n    score,mapped = o.map_args(args, kw)\n    if mapped is not False:\n      candidates.append((score,-o.max_args_count,mapped,o))\n  if not candidates:\n    if args and kw: argstr = \"%s %s\" % (args, kw)\n    elif args: argstr = str(args)\n    elif kw: argstr = str(args)\n    else: argstr = \"<Empty>\"\n    raise OverloadException(\"No overload for compatible with given arguments: \" + argstr)\n  candidates.sort()\n  _,_,mapped,o = candidates[-1]\n  if o.static:\n    return o.func(*mapped)\n  else:\n    if target is None:\n      raise RuntimeError(\"Instance method called with no 'self'\")\n    return o.func(target, *mapped)\n\ncdef object _OverloadedMethod\nclass _OverloadMethod (object):\n  \"\"\"\n  Decorator for overloaded methods which may be either static or dynamic\n  \"\"\"\n  def __init__ (self, f):\n    self.f = f\n  def __get__ (self, obj, cls):\n    def function (*args, **kw):\n      return self.f(obj, *args, **kw)\n    return function\n\n_overloads = []\n\ncdef object _SingletonDescriptor\nclass _SingletonDescriptor (object):\n  def __init__ (self, f):\n    self.f = f\n  def __get__ (self, obj, cls):\n    return self.f()\n\n# We do some magic here so that we can expose Rogue global properties\n# in a way that seems natural.\ncdef object _StaticProperty\nclass _StaticProperty (object):\n  def __init__ (self, getter, setter=None):\n    self._getter = getter\n    self._setter = setter\n  def setter (self, setter):\n    self._setter = setter\n    return self\n  def __get__ (self, obj, cls=None):\n    return self._getter()\n  def __set__ (self, obj, value):\n    if self._setter is None:\n      raise AttributeError(\"Property is read-only\")\n    self._setter(value)\ncdef object _PyRogueMetaclass\nclass _PyRogueMetaclass (type):\n  def __setattr__ (self, key, value):\n    obj = self.__dict__.get(key)\n    if obj and isinstance(obj, _StaticProperty):\n      return obj.__set__(self, value)\n    return super(_PyRogueMetaclass, self).__setattr__(key, value)", 11252 ) ); 
  Rogue_literal_strings[816] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  # Function pointers we fill in.\n  cdef void (*PyRogue_XDECREF)(void*)\n  cdef void (*PyRogue_XINCREF)(void*)\ncdef void PyRogue_XDECREF_impl (void * o):\n  Py_XDECREF(<PyObject *>o)\ncdef void PyRogue_XINCREF_impl (void * o):\n  Py_XINCREF(<PyObject *>o)\nPyRogue_XDECREF = PyRogue_XDECREF_impl\nPyRogue_XINCREF = PyRogue_XINCREF_impl", 329 ) ); 
  Rogue_literal_strings[817] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  cdef RogueType * RogueType", 28 ) ); 
  Rogue_literal_strings[818] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  cdef cppclass ", 16 ) ); 
  Rogue_literal_strings[819] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    pass # Aspect:", 18 ) ); 
  Rogue_literal_strings[820] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    ", 4 ) ); 
  Rogue_literal_strings[821] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " (*PyRogue_delegate_", 20 ) ); 
  Rogue_literal_strings[822] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(", 2 ) ); 
  Rogue_literal_strings[823] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  cdef ", 7 ) ); 
  Rogue_literal_strings[824] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# Delegate thunks", 17 ) ); 
  Rogue_literal_strings[825] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " param", 6 ) ); 
  Rogue_literal_strings[826] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cdef ", 5 ) ); 
  Rogue_literal_strings[827] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " PyRogue_delegate_", 18 ) ); 
  Rogue_literal_strings[828] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_thunk (", 8 ) ); 
  Rogue_literal_strings[829] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "):", 2 ) ); 
  Rogue_literal_strings[830] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  cdef PyRogueDelegateContext* context\n  context = <PyRogueDelegateContext*>param0\n  f = <object><PyObject *>context.f\n  assert f, 'Delegate has no callable'\n  try:\n    retval = f(", 180 ) ); 
  Rogue_literal_strings[831] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    )", 5 ) ); 
  Rogue_literal_strings[832] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "retval", 6 ) ); 
  Rogue_literal_strings[833] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    return ", 11 ) ); 
  Rogue_literal_strings[834] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  except:\n    import traceback\n    e = sys.exc_info()\n    tb = traceback.format_exc()\n    context.exception = (<PyRogueBase>PyRogueError( str(e[0].__name__), str(e[1]), tb )).thisptr", 182 ) ); 
  Rogue_literal_strings[835] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PyRogue_delegate_", 17 ) ); 
  Rogue_literal_strings[836] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = PyRogue_delegate_", 20 ) ); 
  Rogue_literal_strings[837] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_thunk", 6 ) ); 
  Rogue_literal_strings[838] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# --- Prototypes of Rogue Methods ---", 37 ) ); 
  Rogue_literal_strings[839] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\":", 2 ) ); 
  Rogue_literal_strings[840] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  pass", 6 ) ); 
  Rogue_literal_strings[841] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " except +PyRogue_handle_rogue_exception", 39 ) ); 
  Rogue_literal_strings[842] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# cyclass ", 10 ) ); 
  Rogue_literal_strings[843] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " (", 2 ) ); 
  Rogue_literal_strings[844] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") except +PyRogue_handle_rogue_exception", 40 ) ); 
  Rogue_literal_strings[845] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# --- Backing variables for global properties ---", 49 ) ); 
  Rogue_literal_strings[846] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  cdef extern ", 14 ) ); 
  Rogue_literal_strings[847] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# --- Wrapper for Class ", 24 ) ); 
  Rogue_literal_strings[848] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ---", 4 ) ); 
  Rogue_literal_strings[849] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PyRogueBase", 11 ) ); 
  Rogue_literal_strings[850] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_PyDelegate", 11 ) ); 
  Rogue_literal_strings[851] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class ", 6 ) ); 
  Rogue_literal_strings[852] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  __metaclass__ = _PyRogueMetaclass\n  def __init__ (self, *args, **kwargs):\n    cdef PyRogueBase base\n    cdef PyRogueBase other\n    base = self\n    if '__pyrogue_new_instance' in kwargs:\n      base.thisptr = <RogueObject*><intptr_t>kwargs['__pyrogue_new_instance']\n      RogueObject_retain(<RogueObject*>base.thisptr)\n    else:", 328 ) ); 
  Rogue_literal_strings[853] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "      base.thisptr = RogueType_create_object(RogueType", 54 ) ); 
  Rogue_literal_strings[854] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", 0)", 4 ) ); 
  Rogue_literal_strings[855] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "      if not base.thisptr: raise RuntimeError(\"Could not create object\")\n      RogueObject_retain(<RogueObject*>base.thisptr)\n      try:\n        other = self._init_(*args, **kwargs)\n        if other.thisptr != base.thisptr:\n          RogueObject_release(<RogueObject*>base.thisptr)\n          base.thisptr = other.thisptr\n          RogueObject_retain(<RogueObject*>base.thisptr)\n      except (AttributeError, OverloadException) as e:\n        # Old behavior -- always allow default constructor: if args or kwargs:\n        if True: # New behavior; correct constructor required\n          RogueObject_release(<RogueObject*>base.thisptr)\n          raise e", 649 ) ); 
  Rogue_literal_strings[856] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "._pyrogue_pydelegate_type = ", 28 ) ); 
  Rogue_literal_strings[857] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "singleton = _SingletonDescriptor(lambda:", 40 ) ); 
  Rogue_literal_strings[858] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(__pyrogue_new_instance=<intptr_t>RogueType_singleton(RogueType", 63 ) ); 
  Rogue_literal_strings[859] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")))", 3 ) ); 
  Rogue_literal_strings[860] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# --- Property wrappers ---", 27 ) ); 
  Rogue_literal_strings[861] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@_StaticProperty", 16 ) ); 
  Rogue_literal_strings[862] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "def ", 4 ) ); 
  Rogue_literal_strings[863] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " ():", 4 ) ); 
  Rogue_literal_strings[864] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".setter", 7 ) ); 
  Rogue_literal_strings[865] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " (value):", 9 ) ); 
  Rogue_literal_strings[866] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  global ", 9 ) ); 
  Rogue_literal_strings[867] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@property", 9 ) ); 
  Rogue_literal_strings[868] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " (self):", 8 ) ); 
  Rogue_literal_strings[869] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " (self, value):", 15 ) ); 
  Rogue_literal_strings[870] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# --- Wrapper for Routine ", 26 ) ); 
  Rogue_literal_strings[871] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " (object):", 10 ) ); 
  Rogue_literal_strings[872] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@staticmethod", 13 ) ); 
  Rogue_literal_strings[873] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "self", 4 ) ); 
  Rogue_literal_strings[874] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Rogue_call_", 11 ) ); 
  Rogue_literal_strings[875] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "@_OverloadMethod", 16 ) ); 
  Rogue_literal_strings[876] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " (self, *args, **kwargs):", 25 ) ); 
  Rogue_literal_strings[877] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return _call_overload(self, ", 30 ) ); 
  Rogue_literal_strings[878] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", args, kwargs)", 15 ) ); 
  Rogue_literal_strings[879] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "t.type.base_class in Program.cy_find_constructor_context()", 58 ) ); 
  Rogue_literal_strings[880] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "constraint in Program.cy_write_classes()", 40 ) ); 
  Rogue_literal_strings[881] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# Skipped ", 10 ) ); 
  Rogue_literal_strings[882] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "def _pyrogue_type ():", 21 ) ); 
  Rogue_literal_strings[883] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return <intptr_t>RogueType", 28 ) ); 
  Rogue_literal_strings[884] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "__call__ = call", 15 ) ); 
  Rogue_literal_strings[885] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "def __call__ (self, *args, **kw):", 33 ) ); 
  Rogue_literal_strings[886] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return self.", 14 ) ); 
  Rogue_literal_strings[887] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(*args, **kw)", 13 ) ); 
  Rogue_literal_strings[888] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_rogue_type_index_to_pyclass[", 29 ) ); 
  Rogue_literal_strings[889] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] = ", 4 ) ); 
  Rogue_literal_strings[890] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "# Overloads for ", 16 ) ); 
  Rogue_literal_strings[891] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " (#", 3 ) ); 
  Rogue_literal_strings[892] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_overloads.append( [", 20 ) ); 
  Rogue_literal_strings[893] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " _Overload( ", 12 ) ); 
  Rogue_literal_strings[894] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "], [", 4 ) ); 
  Rogue_literal_strings[895] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "], ", 3 ) ); 
  Rogue_literal_strings[896] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "] )", 3 ) ); 
  Rogue_literal_strings[897] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SUCCESS (", 9 ) ); 
  Rogue_literal_strings[898] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "clang++ -Wall -std=c++11 -fno-strict-aliasing ", 46 ) ); 
  Rogue_literal_strings[899] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".cpp -o ", 8 ) ); 
  Rogue_literal_strings[900] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " && ./", 6 ) ); 
  Rogue_literal_strings[901] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Process was not created", 23 ) ); 
  Rogue_literal_strings[902] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compile target \"", 16 ) ); 
  Rogue_literal_strings[903] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" is not supported.", 19 ) ); 
  Rogue_literal_strings[904] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_GC_THRESHOLD", 18 ) ); 
  Rogue_literal_strings[905] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MB", 2 ) ); 
  Rogue_literal_strings[906] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "KB", 2 ) ); 
  Rogue_literal_strings[907] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")->", 3 ) ); 
  Rogue_literal_strings[908] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Int32>>", 26 ) ); 
  Rogue_literal_strings[909] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAccess(", 10 ) ); 
  Rogue_literal_strings[910] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReturn(", 10 ) ); 
  Rogue_literal_strings[911] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReturn(nil)", 14 ) ); 
  Rogue_literal_strings[912] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local", 5 ) ); 
  Rogue_literal_strings[913] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CyClass", 7 ) ); 
  Rogue_literal_strings[914] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Value>>", 26 ) ); 
  Rogue_literal_strings[915] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String>>", 27 ) ); 
  Rogue_literal_strings[916] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeInfo>>", 29 ) ); 
  Rogue_literal_strings[917] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Logical>>", 28 ) ); 
  Rogue_literal_strings[918] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TokenType>>", 30 ) ); 
  Rogue_literal_strings[919] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<Int32,Template>>", 28 ) ); 
  Rogue_literal_strings[920] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Definition>>", 31 ) ); 
  Rogue_literal_strings[921] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Property>>", 29 ) ); 
  Rogue_literal_strings[922] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,CmdLabel>>", 29 ) ); 
  Rogue_literal_strings[923] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "})", 2 ) ); 
  Rogue_literal_strings[924] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method[]>>", 29 ) ); 
  Rogue_literal_strings[925] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Method>>", 27 ) ); 
  Rogue_literal_strings[926] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,ParseReader>>", 32 ) ); 
  Rogue_literal_strings[927] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " seconds", 8 ) ); 
  Rogue_literal_strings[928] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Stopwatch>>", 30 ) ); 
  Rogue_literal_strings[929] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Template>>", 29 ) ); 
  Rogue_literal_strings[930] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Augment[]>>", 30 ) ); 
  Rogue_literal_strings[931] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Type>>", 25 ) ); 
  Rogue_literal_strings[932] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,String[]>>", 29 ) ); 
  Rogue_literal_strings[933] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<Type,CyClass>>", 26 ) ); 
  Rogue_literal_strings[934] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,CyMethod[]>>", 31 ) ); 
  Rogue_literal_strings[935] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,CyProperty>>", 31 ) ); 
  Rogue_literal_strings[936] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<Type,Type>>", 23 ) ); 
  Rogue_literal_strings[937] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Token[]>>", 28 ) ); 
  Rogue_literal_strings[938] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<Type,Logical>>", 26 ) ); 
  Rogue_literal_strings[939] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBinary", 9 ) ); 
  Rogue_literal_strings[940] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadLocal(\"", 14 ) ); 
  Rogue_literal_strings[941] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\":\"", 3 ) ); 
  Rogue_literal_strings[942] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\")", 2 ) ); 
  Rogue_literal_strings[943] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdUnary", 8 ) ); 
  Rogue_literal_strings[944] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdConvertToType(", 17 ) ); 
  Rogue_literal_strings[945] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this<<", 6 ) ); 
  Rogue_literal_strings[946] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallDynamicMethod(", 21 ) ); 
  Rogue_literal_strings[947] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallRoutine(", 15 ) ); 
  Rogue_literal_strings[948] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "available:", 10 ) ); 
  Rogue_literal_strings[949] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\ncompatible:", 12 ) ); 
  Rogue_literal_strings[950] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,TypeSpecializer>>", 36 ) ); 
  Rogue_literal_strings[951] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableEntry<<String,Cmd>>", 24 ) ); 
  Rogue_literal_strings[952] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StackTrace", 10 ) ); 
  Rogue_literal_strings[953] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,String>>", 22 ) ); 
  Rogue_literal_strings[954] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringReader", 12 ) ); 
  Rogue_literal_strings[955] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListReader<<String>>", 20 ) ); 
  Rogue_literal_strings[956] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Math", 4 ) ); 
  Rogue_literal_strings[957] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Console", 7 ) ); 
  Rogue_literal_strings[958] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()", 10 ) ); 
  Rogue_literal_strings[959] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueC", 6 ) ); 
  Rogue_literal_strings[960] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Program", 7 ) ); 
  Rogue_literal_strings[961] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Template", 8 ) ); 
  Rogue_literal_strings[962] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Template>>", 24 ) ); 
  Rogue_literal_strings[963] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Augment[]>>", 25 ) ); 
  Rogue_literal_strings[964] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property", 8 ) ); 
  Rogue_literal_strings[965] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Method[]>>", 24 ) ); 
  Rogue_literal_strings[966] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type", 4 ) ); 
  Rogue_literal_strings[967] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Type>>", 20 ) ); 
  Rogue_literal_strings[968] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Int32>>", 21 ) ); 
  Rogue_literal_strings[969] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,String[]>>", 24 ) ); 
  Rogue_literal_strings[970] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<Type,CyClass>>", 21 ) ); 
  Rogue_literal_strings[971] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<Type,Type>>", 18 ) ); 
  Rogue_literal_strings[972] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<Int32,Template>>", 23 ) ); 
  Rogue_literal_strings[973] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Attributes", 10 ) ); 
  Rogue_literal_strings[974] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token", 5 ) ); 
  Rogue_literal_strings[975] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Logical>>", 23 ) ); 
  Rogue_literal_strings[976] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Plugin", 6 ) ); 
  Rogue_literal_strings[977] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Preprocessor", 12 ) ); 
  Rogue_literal_strings[978] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Tokenizer", 9 ) ); 
  Rogue_literal_strings[979] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ParseReader", 11 ) ); 
  Rogue_literal_strings[980] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Token[]>>", 23 ) ); 
  Rogue_literal_strings[981] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Parser", 6 ) ); 
  Rogue_literal_strings[982] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PreprocessorTokenReader", 23 ) ); 
  Rogue_literal_strings[983] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TokenType", 9 ) ); 
  Rogue_literal_strings[984] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListRewriter<<Token>>", 21 ) ); 
  Rogue_literal_strings[985] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()->Logical", 19 ) ); 
  Rogue_literal_strings[986] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(Object)", 16 ) ); 
  Rogue_literal_strings[987] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method", 6 ) ); 
  Rogue_literal_strings[988] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(Type)->Logical", 23 ) ); 
  Rogue_literal_strings[989] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Scope", 5 ) ); 
  Rogue_literal_strings[990] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Set<<String>>", 13 ) ); 
  Rogue_literal_strings[991] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CPPWriter", 9 ) ); 
  Rogue_literal_strings[992] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Method>>", 22 ) ); 
  Rogue_literal_strings[993] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableValueReader<<Type,CyClass>>", 32 ) ); 
  Rogue_literal_strings[994] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,CyMethod[]>>", 26 ) ); 
  Rogue_literal_strings[995] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CyMethod", 8 ) ); 
  Rogue_literal_strings[996] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,CyProperty>>", 26 ) ); 
  Rogue_literal_strings[997] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableValueReader<<String,CyProperty>>", 37 ) ); 
  Rogue_literal_strings[998] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CyProperty", 10 ) ); 
  Rogue_literal_strings[999] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TableValueReader<<String,CyMethod[]>>", 37 ) ); 
  Rogue_literal_strings[1000] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Set<<Type>>", 11 ) ); 
  Rogue_literal_strings[1001] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TypeInfo>>", 24 ) ); 
  Rogue_literal_strings[1002] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "System", 6 ) ); 
  Rogue_literal_strings[1003] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyInfo", 12 ) ); 
  Rogue_literal_strings[1004] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Value>>", 21 ) ); 
  Rogue_literal_strings[1005] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ConsoleIOHandler", 16 ) ); 
  Rogue_literal_strings[1006] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TokenReader", 11 ) ); 
  Rogue_literal_strings[1007] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TokenType>>", 25 ) ); 
  Rogue_literal_strings[1008] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeParameter", 13 ) ); 
  Rogue_literal_strings[1009] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeSpecializer", 15 ) ); 
  Rogue_literal_strings[1010] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition", 10 ) ); 
  Rogue_literal_strings[1011] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Definition>>", 26 ) ); 
  Rogue_literal_strings[1012] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Property>>", 24 ) ); 
  Rogue_literal_strings[1013] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,CmdLabel>>", 24 ) ); 
  Rogue_literal_strings[1014] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplate", 14 ) ); 
  Rogue_literal_strings[1015] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplates", 15 ) ); 
  Rogue_literal_strings[1016] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,ParseReader>>", 27 ) ); 
  Rogue_literal_strings[1017] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Stopwatch", 9 ) ); 
  Rogue_literal_strings[1018] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Stopwatch>>", 25 ) ); 
  Rogue_literal_strings[1019] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment", 7 ) ); 
  Rogue_literal_strings[1020] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControlSection", 21 ) ); 
  Rogue_literal_strings[1021] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<Type,Logical>>", 21 ) ); 
  Rogue_literal_strings[1022] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "File", 4 ) ); 
  Rogue_literal_strings[1023] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LineReader", 10 ) ); 
  Rogue_literal_strings[1024] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CloneArgs", 9 ) ); 
  Rogue_literal_strings[1025] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnParam", 7 ) ); 
  Rogue_literal_strings[1026] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnArg", 5 ) ); 
  Rogue_literal_strings[1027] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListRewriter<<Type>>", 20 ) ); 
  Rogue_literal_strings[1028] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,TypeSpecializer>>", 31 ) ); 
  Rogue_literal_strings[1029] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(CmdNamedArg)->Logical", 30 ) ); 
  Rogue_literal_strings[1030] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListRewriter<<CmdNamedArg>>", 27 ) ); 
  Rogue_literal_strings[1031] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function(CmdNamedArg,CmdNamedArg)->Logical", 42 ) ); 
  Rogue_literal_strings[1032] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Quicksort<<CmdNamedArg>>", 24 ) ); 
  Rogue_literal_strings[1033] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CandidateMethods", 16 ) ); 
  Rogue_literal_strings[1034] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FileReader", 10 ) ); 
  Rogue_literal_strings[1035] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FileWriter", 10 ) ); 
  Rogue_literal_strings[1036] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "UTF8Reader", 10 ) ); 
  Rogue_literal_strings[1037] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Table<<String,Cmd>>", 19 ) ); 
  Rogue_literal_strings[1038] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrimitiveWorkBuffer", 19 ) ); 
  Rogue_literal_strings[1039] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte[]", 6 ) ); 
  Rogue_literal_strings[1040] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character[]", 11 ) ); 
  Rogue_literal_strings[1041] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "String[]", 8 ) ); 
  Rogue_literal_strings[1042] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function()[]", 12 ) ); 
  Rogue_literal_strings[1043] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Template[]", 10 ) ); 
  Rogue_literal_strings[1044] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property[]", 10 ) ); 
  Rogue_literal_strings[1045] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type[]", 6 ) ); 
  Rogue_literal_strings[1046] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token[]", 7 ) ); 
  Rogue_literal_strings[1047] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Plugin[]", 8 ) ); 
  Rogue_literal_strings[1048] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cmd[]", 5 ) ); 
  Rogue_literal_strings[1049] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNamedArg[]", 13 ) ); 
  Rogue_literal_strings[1050] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method[]", 8 ) ); 
  Rogue_literal_strings[1051] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local[]", 7 ) ); 
  Rogue_literal_strings[1052] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeParameter[]", 15 ) ); 
  Rogue_literal_strings[1053] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32[]", 7 ) ); 
  Rogue_literal_strings[1054] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CyClass[]", 9 ) ); 
  Rogue_literal_strings[1055] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CyMethod[]", 10 ) ); 
  Rogue_literal_strings[1056] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CyMethod[][]", 12 ) ); 
  Rogue_literal_strings[1057] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PropertyInfo[]", 14 ) ); 
  Rogue_literal_strings[1058] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Parser[]", 8 ) ); 
  Rogue_literal_strings[1059] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TypeSpecializer[]", 17 ) ); 
  Rogue_literal_strings[1060] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Definition[]", 12 ) ); 
  Rogue_literal_strings[1061] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLabel[]", 10 ) ); 
  Rogue_literal_strings[1062] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MethodTemplate[]", 16 ) ); 
  Rogue_literal_strings[1063] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Augment[]", 9 ) ); 
  Rogue_literal_strings[1064] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdControlStructure[]", 21 ) ); 
  Rogue_literal_strings[1065] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhichCase[]", 14 ) ); 
  Rogue_literal_strings[1066] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCatch[]", 10 ) ); 
  Rogue_literal_strings[1067] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnParam[]", 9 ) ); 
  Rogue_literal_strings[1068] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FnArg[]", 7 ) ); 
  Rogue_literal_strings[1069] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelectCase[]", 15 ) ); 
  Rogue_literal_strings[1070] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Token[][]", 9 ) ); 
  Rogue_literal_strings[1071] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControlSection[]", 23 ) ); 
  Rogue_literal_strings[1072] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<String>>", 15 ) ); 
  Rogue_literal_strings[1073] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Function()>>", 19 ) ); 
  Rogue_literal_strings[1074] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Type>>", 13 ) ); 
  Rogue_literal_strings[1075] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Local>>", 14 ) ); 
  Rogue_literal_strings[1076] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Method>>", 15 ) ); 
  Rogue_literal_strings[1077] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Property>>", 17 ) ); 
  Rogue_literal_strings[1078] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Template>>", 17 ) ); 
  Rogue_literal_strings[1079] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Plugin>>", 15 ) ); 
  Rogue_literal_strings[1080] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Int32>>", 14 ) ); 
  Rogue_literal_strings[1081] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CyMethod>>", 17 ) ); 
  Rogue_literal_strings[1082] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CyMethod[]>>", 19 ) ); 
  Rogue_literal_strings[1083] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CyClass>>", 16 ) ); 
  Rogue_literal_strings[1084] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Byte>>", 13 ) ); 
  Rogue_literal_strings[1085] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<PropertyInfo>>", 21 ) ); 
  Rogue_literal_strings[1086] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Value>>>>", 35 ) ); 
  Rogue_literal_strings[1087] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Character>>", 18 ) ); 
  Rogue_literal_strings[1088] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,String>>>>", 36 ) ); 
  Rogue_literal_strings[1089] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TypeInfo>>>>", 38 ) ); 
  Rogue_literal_strings[1090] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Logical>>>>", 37 ) ); 
  Rogue_literal_strings[1091] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TokenType>>>>", 39 ) ); 
  Rogue_literal_strings[1092] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Token>>", 14 ) ); 
  Rogue_literal_strings[1093] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TypeParameter>>", 22 ) ); 
  Rogue_literal_strings[1094] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<Int32,Template>>>>", 37 ) ); 
  Rogue_literal_strings[1095] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TypeSpecializer>>", 24 ) ); 
  Rogue_literal_strings[1096] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Definition>>", 19 ) ); 
  Rogue_literal_strings[1097] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Definition>>>>", 40 ) ); 
  Rogue_literal_strings[1098] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Property>>>>", 38 ) ); 
  Rogue_literal_strings[1099] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Cmd>>", 12 ) ); 
  Rogue_literal_strings[1100] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdLabel>>", 17 ) ); 
  Rogue_literal_strings[1101] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,CmdLabel>>>>", 38 ) ); 
  Rogue_literal_strings[1102] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<MethodTemplate>>", 23 ) ); 
  Rogue_literal_strings[1103] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Method[]>>>>", 38 ) ); 
  Rogue_literal_strings[1104] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Method>>>>", 36 ) ); 
  Rogue_literal_strings[1105] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Parser>>", 15 ) ); 
  Rogue_literal_strings[1106] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,ParseReader>>>>", 41 ) ); 
  Rogue_literal_strings[1107] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Stopwatch>>>>", 39 ) ); 
  Rogue_literal_strings[1108] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Template>>>>", 38 ) ); 
  Rogue_literal_strings[1109] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Augment[]>>>>", 39 ) ); 
  Rogue_literal_strings[1110] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Augment>>", 16 ) ); 
  Rogue_literal_strings[1111] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Type>>>>", 34 ) ); 
  Rogue_literal_strings[1112] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Int32>>>>", 35 ) ); 
  Rogue_literal_strings[1113] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,String[]>>>>", 38 ) ); 
  Rogue_literal_strings[1114] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<Type,CyClass>>>>", 35 ) ); 
  Rogue_literal_strings[1115] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,CyMethod[]>>>>", 40 ) ); 
  Rogue_literal_strings[1116] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,CyProperty>>>>", 40 ) ); 
  Rogue_literal_strings[1117] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<Type,Type>>>>", 32 ) ); 
  Rogue_literal_strings[1118] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Token[]>>>>", 37 ) ); 
  Rogue_literal_strings[1119] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdNamedArg>>", 20 ) ); 
  Rogue_literal_strings[1120] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdControlStructure>>", 28 ) ); 
  Rogue_literal_strings[1121] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<Type,Logical>>>>", 35 ) ); 
  Rogue_literal_strings[1122] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdSelectCase>>", 22 ) ); 
  Rogue_literal_strings[1123] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<Token[]>>", 16 ) ); 
  Rogue_literal_strings[1124] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<FnParam>>", 16 ) ); 
  Rogue_literal_strings[1125] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdWhichCase>>", 21 ) ); 
  Rogue_literal_strings[1126] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdCatch>>", 17 ) ); 
  Rogue_literal_strings[1127] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<FnArg>>", 14 ) ); 
  Rogue_literal_strings[1128] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<CmdTaskControlSection>>", 30 ) ); 
  Rogue_literal_strings[1129] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,TypeSpecializer>>>>", 45 ) ); 
  Rogue_literal_strings[1130] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Array<<TableEntry<<String,Cmd>>>>", 33 ) ); 
  Rogue_literal_strings[1131] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_161", 12 ) ); 
  Rogue_literal_strings[1132] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_1094", 13 ) ); 
  Rogue_literal_strings[1133] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Error", 5 ) ); 
  Rogue_literal_strings[1134] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Real64Value", 11 ) ); 
  Rogue_literal_strings[1135] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NullValue", 9 ) ); 
  Rogue_literal_strings[1136] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ObjectValue", 11 ) ); 
  Rogue_literal_strings[1137] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringValue", 11 ) ); 
  Rogue_literal_strings[1138] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TRUE", 4 ) ); 
  Rogue_literal_strings[1139] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "yes", 3 ) ); 
  Rogue_literal_strings[1140] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "YES", 3 ) ); 
  Rogue_literal_strings[1141] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringTable<<String>>", 21 ) ); 
  Rogue_literal_strings[1142] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "BlockingConsoleIOHandler", 24 ) ); 
  Rogue_literal_strings[1143] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOL  # ", 7 ) ); 
  Rogue_literal_strings[1144] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralCharacterToken", 21 ) ); 
  Rogue_literal_strings[1145] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralInt64Token", 17 ) ); 
  Rogue_literal_strings[1146] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralInt32Token", 17 ) ); 
  Rogue_literal_strings[1147] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LiteralReal64Token", 18 ) ); 
  Rogue_literal_strings[1148] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringDataToken", 15 ) ); 
  Rogue_literal_strings[1149] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOLToken", 8 ) ); 
  Rogue_literal_strings[1150] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "DirectiveTokenType", 18 ) ); 
  Rogue_literal_strings[1151] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StructuralDirectiveTokenType", 28 ) ); 
  Rogue_literal_strings[1152] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "EOLTokenType", 12 ) ); 
  Rogue_literal_strings[1153] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StructureTokenType", 18 ) ); 
  Rogue_literal_strings[1154] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeCodeTokenType", 19 ) ); 
  Rogue_literal_strings[1155] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ModifyAndAssignTokenType", 24 ) ); 
  Rogue_literal_strings[1156] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAccess", 9 ) ); 
  Rogue_literal_strings[1157] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLabel", 8 ) ); 
  Rogue_literal_strings[1158] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteral", 10 ) ); 
  Rogue_literal_strings[1159] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdStatement", 12 ) ); 
  Rogue_literal_strings[1160] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNamedArg", 11 ) ); 
  Rogue_literal_strings[1161] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMakeRequisite", 16 ) ); 
  Rogue_literal_strings[1162] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNativeSource", 15 ) ); 
  Rogue_literal_strings[1163] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAwait", 8 ) ); 
  Rogue_literal_strings[1164] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdYield", 8 ) ); 
  Rogue_literal_strings[1165] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdThrow", 8 ) ); 
  Rogue_literal_strings[1166] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdFormattedString", 18 ) ); 
  Rogue_literal_strings[1167] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTrace", 8 ) ); 
  Rogue_literal_strings[1168] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAssert", 9 ) ); 
  Rogue_literal_strings[1169] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdEscape", 9 ) ); 
  Rogue_literal_strings[1170] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNextIteration", 16 ) ); 
  Rogue_literal_strings[1171] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNecessary", 12 ) ); 
  Rogue_literal_strings[1172] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSufficient", 13 ) ); 
  Rogue_literal_strings[1173] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjust", 9 ) ); 
  Rogue_literal_strings[1174] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAssign", 9 ) ); 
  Rogue_literal_strings[1175] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssign", 18 ) ); 
  Rogue_literal_strings[1176] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhichCase", 12 ) ); 
  Rogue_literal_strings[1177] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCatch", 8 ) ); 
  Rogue_literal_strings[1178] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTryExpression", 16 ) ); 
  Rogue_literal_strings[1179] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadLocal", 12 ) ); 
  Rogue_literal_strings[1180] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustLocal", 14 ) ); 
  Rogue_literal_strings[1181] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRange", 8 ) ); 
  Rogue_literal_strings[1182] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdResolvedModifyAndAssign", 26 ) ); 
  Rogue_literal_strings[1183] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTypeOperator", 15 ) ); 
  Rogue_literal_strings[1184] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdIsReference", 14 ) ); 
  Rogue_literal_strings[1185] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdElementAccess", 16 ) ); 
  Rogue_literal_strings[1186] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateCallback", 17 ) ); 
  Rogue_literal_strings[1187] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateFunction", 17 ) ); 
  Rogue_literal_strings[1188] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdThisContext", 14 ) ); 
  Rogue_literal_strings[1189] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateList", 13 ) ); 
  Rogue_literal_strings[1190] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallPriorMethod", 18 ) ); 
  Rogue_literal_strings[1191] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdInlineNative", 15 ) ); 
  Rogue_literal_strings[1192] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelect", 9 ) ); 
  Rogue_literal_strings[1193] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSelectCase", 13 ) ); 
  Rogue_literal_strings[1194] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdImplicitIDAccess", 19 ) ); 
  Rogue_literal_strings[1195] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdImplicitAccess", 17 ) ); 
  Rogue_literal_strings[1196] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRequire", 10 ) ); 
  Rogue_literal_strings[1197] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdEnsure", 9 ) ); 
  Rogue_literal_strings[1198] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTypedLiteralList", 19 ) ); 
  Rogue_literal_strings[1199] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateCompound", 17 ) ); 
  Rogue_literal_strings[1200] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateObject", 15 ) ); 
  Rogue_literal_strings[1201] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadSingleton", 16 ) ); 
  Rogue_literal_strings[1202] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadGlobal", 13 ) ); 
  Rogue_literal_strings[1203] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteGlobal", 14 ) ); 
  Rogue_literal_strings[1204] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadProperty", 15 ) ); 
  Rogue_literal_strings[1205] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteProperty", 16 ) ); 
  Rogue_literal_strings[1206] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCall", 7 ) ); 
  Rogue_literal_strings[1207] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCreateArray", 14 ) ); 
  Rogue_literal_strings[1208] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadArrayCount", 17 ) ); 
  Rogue_literal_strings[1209] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTaskControl", 14 ) ); 
  Rogue_literal_strings[1210] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal arguments on inline code.", 33 ) ); 
  Rogue_literal_strings[1211] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] CmdAwait should have been converted to other commands before being adapted to a task.", 96 ) ); 
  Rogue_literal_strings[1212] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Routine '", 9 ) ); 
  Rogue_literal_strings[1213] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' does not return a value.", 26 ) ); 
  Rogue_literal_strings[1214] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Value expected; call to ", 24 ) ); 
  Rogue_literal_strings[1215] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " does not return a value.", 25 ) ); 
  Rogue_literal_strings[1216] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method ", 15 ) ); 
  Rogue_literal_strings[1217] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " in type ", 9 ) ); 
  Rogue_literal_strings[1218] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".fn_name() is not defined.", 26 ) ); 
  Rogue_literal_strings[1219] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No method ", 10 ) ); 
  Rogue_literal_strings[1220] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1) is defined.", 15 ) ); 
  Rogue_literal_strings[1221] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Neither method ", 15 ) ); 
  Rogue_literal_strings[1222] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1) nor global method ", 22 ) ); 
  Rogue_literal_strings[1223] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(2) is defined.", 15 ) ); 
  Rogue_literal_strings[1224] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Types ", 6 ) ); 
  Rogue_literal_strings[1225] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " are incompatible.", 18 ) ); 
  Rogue_literal_strings[1226] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Caught value must be instanceOf class Error.", 44 ) ); 
  Rogue_literal_strings[1227] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "try/catch blocks cannot contain 'yield' statements.", 51 ) ); 
  Rogue_literal_strings[1228] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The 'await' command can only be used in [task] methods.", 55 ) ); 
  Rogue_literal_strings[1229] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Task method does not return a result.  Ensure you are not awaiting a task method that calls start() - remove the call to start().", 129 ) ); 
  Rogue_literal_strings[1230] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The 'yield' statement can only be used in [task] methods.", 57 ) ); 
  Rogue_literal_strings[1231] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Thrown value must be instanceOf class Error.", 44 ) ); 
  Rogue_literal_strings[1232] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "More arguments than format markers ('$') in formatted string.", 61 ) ); 
  Rogue_literal_strings[1233] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "print", 5 ) ); 
  Rogue_literal_strings[1234] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "More format markers ('$') than arguments in formatted string.", 61 ) ); 
  Rogue_literal_strings[1235] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "println", 7 ) ); 
  Rogue_literal_strings[1236] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot determine the type of the local variable - either assign an initial value (local ", 88 ) ); 
  Rogue_literal_strings[1237] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...) or assign a type (local ", 32 ) ); 
  Rogue_literal_strings[1238] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "AssertionError", 14 ) ); 
  Rogue_literal_strings[1239] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing structure to escape.", 33 ) ); 
  Rogue_literal_strings[1240] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing loop for 'nextIteration' to affect.", 48 ) ); 
  Rogue_literal_strings[1241] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No enclosing contingent.", 24 ) ); 
  Rogue_literal_strings[1242] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid target for increment/decrement. (", 41 ) ); 
  Rogue_literal_strings[1243] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Invalid assignment.", 19 ) ); 
  Rogue_literal_strings[1244] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Range", 5 ) ); 
  Rogue_literal_strings[1245] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RangeToLimit", 12 ) ); 
  Rogue_literal_strings[1246] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No suitable operator method found; type ", 40 ) ); 
  Rogue_literal_strings[1247] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " implements neither ", 20 ) ); 
  Rogue_literal_strings[1248] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "()(", 3 ) ); 
  Rogue_literal_strings[1249] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "), ", 3 ) ); 
  Rogue_literal_strings[1250] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "=(", 2 ) ); 
  Rogue_literal_strings[1251] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "), nor global method ", 21 ) ); 
  Rogue_literal_strings[1252] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "()(2).", 6 ) ); 
  Rogue_literal_strings[1253] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property or method name expected.", 33 ) ); 
  Rogue_literal_strings[1254] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Property or method name expected - '.=' cannot be used with a chain of references.", 82 ) ); 
  Rogue_literal_strings[1255] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "count()", 7 ) ); 
  Rogue_literal_strings[1256] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "at(Int32)", 9 ) ); 
  Rogue_literal_strings[1257] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "get(Int32)", 10 ) ); 
  Rogue_literal_strings[1258] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Literal integer value expected.", 31 ) ); 
  Rogue_literal_strings[1259] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "has_another", 11 ) ); 
  Rogue_literal_strings[1260] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "has_another()", 13 ) ); 
  Rogue_literal_strings[1261] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read()", 6 ) ); 
  Rogue_literal_strings[1262] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal iteration target - forEach requires either an indexed collection (.count, .get/.at) or a reader (.has_another, .read).", 126 ) ); 
  Rogue_literal_strings[1263] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Object's read() method does not return a value.", 47 ) ); 
  Rogue_literal_strings[1264] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot specify a step size for a reader - only for an indexed collection.", 73 ) ); 
  Rogue_literal_strings[1265] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read", 4 ) ); 
  Rogue_literal_strings[1266] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() is defined.", 14 ) ); 
  Rogue_literal_strings[1267] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "get", 3 ) ); 
  Rogue_literal_strings[1268] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No such method '", 16 ) ); 
  Rogue_literal_strings[1269] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' exists in type ", 17 ) ); 
  Rogue_literal_strings[1270] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Multiple candidates match ambiguous reference to '", 50 ) ); 
  Rogue_literal_strings[1271] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'; add qualifiying parameter types.", 35 ) ); 
  Rogue_literal_strings[1272] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TODO: [] -> Property[]", 22 ) ); 
  Rogue_literal_strings[1273] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal target - 'prior' can only be used to call overridden methods.", 69 ) ); 
  Rogue_literal_strings[1274] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Selection list cannot be empty.", 31 ) ); 
  Rogue_literal_strings[1275] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal use of implicit access; can only be used as a query argument in a call.", 79 ) ); 
  Rogue_literal_strings[1276] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RequirementError", 16 ) ); 
  Rogue_literal_strings[1277] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'ensure' can only be used with reference-type variables.", 56 ) ); 
  Rogue_literal_strings[1278] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot write properties using aspect references.  Add a setter to the aspect definition - ", 90 ) ); 
  Rogue_literal_strings[1279] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'method set_", 12 ) ); 
  Rogue_literal_strings[1280] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(@", 2 ) ); 
  Rogue_literal_strings[1281] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")'.", 3 ) ); 
  Rogue_literal_strings[1282] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The result of a call cannot be assigned a value.", 48 ) ); 
  Rogue_literal_strings[1283] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Recursive call to setter set_", 29 ) ); 
  Rogue_literal_strings[1284] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "() - write \"@", 13 ) ); 
  Rogue_literal_strings[1285] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " = ...\" instead.", 16 ) ); 
  Rogue_literal_strings[1286] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" exists in the current scope [1].", 34 ) ); 
  Rogue_literal_strings[1287] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot assign to inline native code without specifying its type.  For example, native(\"...\")->", 94 ) ); 
  Rogue_literal_strings[1288] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot increment or decrement inline native code without specifying its type.  For example, native(\"...\")->", 107 ) ); 
  Rogue_literal_strings[1289] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method '", 8 ) ); 
  Rogue_literal_strings[1290] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Local variable '", 16 ) ); 
  Rogue_literal_strings[1291] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' cannot be called like a method.", 33 ) ); 
  Rogue_literal_strings[1292] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[CmdAccess.expand_modify_and_assign() Cmd.rogue:2057]", 53 ) ); 
  Rogue_literal_strings[1293] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL]", 10 ) ); 
  Rogue_literal_strings[1294] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") nor ", 6 ) ); 
  Rogue_literal_strings[1295] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\" exists in the current scope. [2]", 34 ) ); 
  Rogue_literal_strings[1296] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[CmdElementAccess.resolve_modify_and_assign() Cmd.rogue:2188]", 61 ) ); 
  Rogue_literal_strings[1297] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot modify-and-assign inline native code without specifying its type.  For example, native(\"...\")->", 102 ) ); 
  Rogue_literal_strings[1298] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".type() is not defined (access name '", 37 ) ); 
  Rogue_literal_strings[1299] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "').", 3 ) ); 
  Rogue_literal_strings[1300] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_info in CmdEnsure.type()", 30 ) ); 
  Rogue_literal_strings[1301] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "::write_cpp() is not defined (access name ", 42 ) ); 
  Rogue_literal_strings[1302] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return (", 8 ) ); 
  Rogue_literal_strings[1303] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".symbol() is not defined.", 25 ) ); 
  Rogue_literal_strings[1304] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if (", 4 ) ); 
  Rogue_literal_strings[1305] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else ", 5 ) ); 
  Rogue_literal_strings[1306] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ":;", 2 ) ); 
  Rogue_literal_strings[1307] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "goto ", 5 ) ); 
  Rogue_literal_strings[1308] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "for (;", 6 ) ); 
  Rogue_literal_strings[1309] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "while (", 7 ) ); 
  Rogue_literal_strings[1310] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_TRY", 9 ) ); 
  Rogue_literal_strings[1311] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CATCH( ", 13 ) ); 
  Rogue_literal_strings[1312] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CATCH_NO_VAR(", 19 ) ); 
  Rogue_literal_strings[1313] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_END_TRY", 13 ) ); 
  Rogue_literal_strings[1314] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_THROW(", 12 ) ); 
  Rogue_literal_strings[1315] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_DEF_LOCAL_REF_NULL(", 25 ) ); 
  Rogue_literal_strings[1316] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "))?", 3 ) ); 
  Rogue_literal_strings[1317] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "continue", 8 ) ); 
  Rogue_literal_strings[1318] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "if ( !(", 7 ) ); 
  Rogue_literal_strings[1319] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ) goto ", 9 ) ); 
  Rogue_literal_strings[1320] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") goto ", 7 ) ); 
  Rogue_literal_strings[1321] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject_instance_of(", 24 ) ); 
  Rogue_literal_strings[1322] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")(RogueObject_as(", 17 ) ); 
  Rogue_literal_strings[1323] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NULL", 4 ) ); 
  Rogue_literal_strings[1324] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(1.0/0.0)", 9 ) ); 
  Rogue_literal_strings[1325] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(-1.0/0.0)", 10 ) ); 
  Rogue_literal_strings[1326] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(0.0/0.0)", 9 ) ); 
  Rogue_literal_strings[1327] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "LL", 2 ) ); 
  Rogue_literal_strings[1328] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(RogueCharacter)", 16 ) ); 
  Rogue_literal_strings[1329] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\n'", 4 ) ); 
  Rogue_literal_strings[1330] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\\\'", 4 ) ); 
  Rogue_literal_strings[1331] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "'\\''", 4 ) ); 
  Rogue_literal_strings[1332] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_ARG(", 10 ) ); 
  Rogue_literal_strings[1333] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " || ", 4 ) ); 
  Rogue_literal_strings[1334] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") ? (", 5 ) ); 
  Rogue_literal_strings[1335] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") : ", 4 ) ); 
  Rogue_literal_strings[1336] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (", 8 ) ); 
  Rogue_literal_strings[1337] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "break;", 6 ) ); 
  Rogue_literal_strings[1338] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CREATE_REF(", 17 ) ); 
  Rogue_literal_strings[1339] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ROGUE_CREATE_OBJECT(", 20 ) ); 
  Rogue_literal_strings[1340] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " is not a singleton.", 20 ) ); 
  Rogue_literal_strings[1341] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")ROGUE_SINGLETON(", 17 ) ); 
  Rogue_literal_strings[1342] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->_singleton = ", 15 ) ); 
  Rogue_literal_strings[1343] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueType_create_array( ", 24 ) ); 
  Rogue_literal_strings[1344] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", sizeof(", 9 ) ); 
  Rogue_literal_strings[1345] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", true", 6 ) ); 
  Rogue_literal_strings[1346] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->as_objects[", 13 ) ); 
  Rogue_literal_strings[1347] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "]))", 3 ) ); 
  Rogue_literal_strings[1348] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as_real64s[", 11 ) ); 
  Rogue_literal_strings[1349] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as_real32s[", 11 ) ); 
  Rogue_literal_strings[1350] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as_int64s[", 10 ) ); 
  Rogue_literal_strings[1351] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as_int32s[", 10 ) ); 
  Rogue_literal_strings[1352] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as_characters[", 14 ) ); 
  Rogue_literal_strings[1353] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as_bytes[", 9 ) ); 
  Rogue_literal_strings[1354] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as_logicals[", 12 ) ); 
  Rogue_literal_strings[1355] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Unhandled type in CmdReadArrayElement.", 49 ) ); 
  Rogue_literal_strings[1356] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "*)(", 3 ) ); 
  Rogue_literal_strings[1357] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->as_bytes))[", 13 ) ); 
  Rogue_literal_strings[1358] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "->count", 7 ) ); 
  Rogue_literal_strings[1359] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "as_objects[", 11 ) ); 
  Rogue_literal_strings[1360] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "switch (++THIS->ip)", 19 ) ); 
  Rogue_literal_strings[1361] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  THIS->ip = -1;", 16 ) ); 
  Rogue_literal_strings[1362] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  return false;", 15 ) ); 
  Rogue_literal_strings[1363] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Illegal use of '$this' in global method.", 40 ) ); 
  Rogue_literal_strings[1364] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallStaticMethod(", 20 ) ); 
  Rogue_literal_strings[1365] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdArgs", 7 ) ); 
  Rogue_literal_strings[1366] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdStatementList", 16 ) ); 
  Rogue_literal_strings[1367] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot call prior.", 18 ) ); 
  Rogue_literal_strings[1368] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " from class ", 12 ) ); 
  Rogue_literal_strings[1369] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " because the method is not an override - no prior version of it exists.", 71 ) ); 
  Rogue_literal_strings[1370] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "StringTable<<Stopwatch>>", 24 ) ); 
  Rogue_literal_strings[1371] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Program.cy_create_delegates()", 29 ) ); 
  Rogue_literal_strings[1372] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_1125", 13 ) ); 
  Rogue_literal_strings[1373] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PYROGUEFUNCTYPE", 15 ) ); 
  Rogue_literal_strings[1374] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Did not expect PYROGUEFUNCTYPE to be defined", 55 ) ); 
  Rogue_literal_strings[1375] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PyFunction", 10 ) ); 
  Rogue_literal_strings[1376] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] We can't currently handle type names that start with 'PyFunction'", 76 ) ); 
  Rogue_literal_strings[1377] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Function type ", 25 ) ); 
  Rogue_literal_strings[1378] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " not callable?", 14 ) ); 
  Rogue_literal_strings[1379] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] Function type callable in multiple ways?", 51 ) ); 
  Rogue_literal_strings[1380] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "&ctxt", 5 ) ); 
  Rogue_literal_strings[1381] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return_val = ", 13 ) ); 
  Rogue_literal_strings[1382] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local return_val : ", 19 ) ); 
  Rogue_literal_strings[1383] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return return_val", 17 ) ); 
  Rogue_literal_strings[1384] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "native(\"PyRogue_delegate_", 25 ) ); 
  Rogue_literal_strings[1385] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ")\")", 3 ) ); 
  Rogue_literal_strings[1386] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class PyFunction", 16 ) ); 
  Rogue_literal_strings[1387] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " : PYROGUEFUNCTYPE [essential]\n", 31 ) ); 
  Rogue_literal_strings[1388] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  PROPERTIES\n", 13 ) ); 
  Rogue_literal_strings[1389] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    _callable : Int64\n", 22 ) ); 
  Rogue_literal_strings[1390] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "  METHODS\n", 10 ) ); 
  Rogue_literal_strings[1391] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    method call (", 17 ) ); 
  Rogue_literal_strings[1392] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " [essential]\n", 13 ) ); 
  Rogue_literal_strings[1393] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "      ", 6 ) ); 
  Rogue_literal_strings[1394] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "      local _py_callable = _callable\n", 37 ) ); 
  Rogue_literal_strings[1395] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "      native \"PyRogueDelegateContext ctxt((void*)(intptr_t)$_py_callable);\"\n", 76 ) ); 
  Rogue_literal_strings[1396] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "      native(\";\")\n", 18 ) ); 
  Rogue_literal_strings[1397] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "      local err : Error\n      native \"$err = (RogueClassError*)(ctxt.exception);\"\n      if (err is not null) throw err", 118 ) ); 
  Rogue_literal_strings[1398] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "    method release\n      local _py_callable = _callable\n      _callable = 0\n      native \"PyRogue_XDECREF((void*)(intptr_t)$_py_callable);\"\n    method clean_up\n      release()\nendClass", 184 ) ); 
  Rogue_literal_strings[1399] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(compiler-generated)", 20 ) ); 
  Rogue_literal_strings[1400] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void*", 5 ) ); 
  Rogue_literal_strings[1401] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "All types resolved - generate additional types?", 47 ) ); 
  Rogue_literal_strings[1402] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Alpha", 5 ) ); 
  Rogue_literal_strings[1403] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "class Alpha [essential singleton]\n  METHODS\n    method init\n      @trace \"Alpha singleton instantiated!\"\nendClass", 113 ) ); 
  Rogue_literal_strings[1404] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Yes - compiling type Alpha:", 27 ) ); 
  Rogue_literal_strings[1405] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "No", 2 ) ); 
  Rogue_literal_strings[1406] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Program.cy_on_header_end(Object)", 32 ) ); 
  Rogue_literal_strings[1407] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Program.cy_on_code_end(Object)", 30 ) ); 
  Rogue_literal_strings[1408] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extern void (*PyRogue_XDECREF)(void*);\nextern void (*PyRogue_XINCREF)(void*);\nstruct PyRogueDelegateContext\n{\n  void * f;\n  RogueObject * exception;\n  PyRogueDelegateContext (void * f)\n  : f(f), exception(NULL)\n  {\n  }\n};\nextern void PyRogue_handle_rogue_exception ();", 268 ) ); 
  Rogue_literal_strings[1409] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "void (*PyRogue_XDECREF)(void*);\nvoid (*PyRogue_XINCREF)(void*);", 63 ) ); 
  Rogue_literal_strings[1410] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "\n#include <exception>\n#include <Python.h>\nvoid PyRogue_handle_rogue_exception ()\n{\n  try\n  {\n    throw;\n  }\n  catch (RogueException * e)\n  {\n    RogueString * msg = RogueException__format(e);\n    char buf[2048];\n    if (msg && msg->character_count)\n      strncpy(buf, (char*)msg->utf8, 2047);\n    else\n      strcpy(buf, \"Unknown Rogue exception\");\n    PyErr_SetString(PyExc_RuntimeError, buf);\n  }\n  catch (const std::exception& e)\n  {\n    PyErr_SetString(PyExc_RuntimeError, e.what());\n  }\n}", 492 ) ); 
  Rogue_literal_strings[1411] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueError", 10 ) ); 
  Rogue_literal_strings[1412] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "IOError", 7 ) ); 
  Rogue_literal_strings[1413] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_431", 12 ) ); 
  Rogue_literal_strings[1414] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_432", 12 ) ); 
  Rogue_literal_strings[1415] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdDefaultValue", 15 ) ); 
  Rogue_literal_strings[1416] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralLogical", 17 ) ); 
  Rogue_literal_strings[1417] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralInt32", 15 ) ); 
  Rogue_literal_strings[1418] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralString", 16 ) ); 
  Rogue_literal_strings[1419] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralNull", 14 ) ); 
  Rogue_literal_strings[1420] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralReal64", 16 ) ); 
  Rogue_literal_strings[1421] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralInt64", 15 ) ); 
  Rogue_literal_strings[1422] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralCharacter", 19 ) ); 
  Rogue_literal_strings[1423] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReturn", 9 ) ); 
  Rogue_literal_strings[1424] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdControlStructure", 19 ) ); 
  Rogue_literal_strings[1425] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLocalDeclaration", 19 ) ); 
  Rogue_literal_strings[1426] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdIf", 5 ) ); 
  Rogue_literal_strings[1427] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWhich", 8 ) ); 
  Rogue_literal_strings[1428] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBlock", 8 ) ); 
  Rogue_literal_strings[1429] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdContingent", 13 ) ); 
  Rogue_literal_strings[1430] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdGenericLoop", 14 ) ); 
  Rogue_literal_strings[1431] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdTry", 6 ) ); 
  Rogue_literal_strings[1432] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdForEach", 10 ) ); 
  Rogue_literal_strings[1433] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSwitch", 9 ) ); 
  Rogue_literal_strings[1434] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "UndefinedValue", 14 ) ); 
  Rogue_literal_strings[1435] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CloneMethodArgs", 15 ) ); 
  Rogue_literal_strings[1436] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TaskArgs", 8 ) ); 
  Rogue_literal_strings[1437] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "MacroArgs", 9 ) ); 
  Rogue_literal_strings[1438] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBinaryLogical", 16 ) ); 
  Rogue_literal_strings[1439] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ".combine_literal_operands(Logical,Logical) is not defined.", 58 ) ); 
  Rogue_literal_strings[1440] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "shift_right", 11 ) ); 
  Rogue_literal_strings[1441] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "mod", 3 ) ); 
  Rogue_literal_strings[1442] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "((void*)", 8 ) ); 
  Rogue_literal_strings[1443] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") != ((void*)", 13 ) ); 
  Rogue_literal_strings[1444] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") == ((void*)", 13 ) ); 
  Rogue_literal_strings[1445] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") pow((double)", 14 ) ); 
  Rogue_literal_strings[1446] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ", (double)", 10 ) ); 
  Rogue_literal_strings[1447] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] $.resolve_for_reference() is undefined.", 50 ) ); 
  Rogue_literal_strings[1448] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Compounds of type ", 18 ) ); 
  Rogue_literal_strings[1449] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( " cannot be compared without an operator<(", 41 ) ); 
  Rogue_literal_strings[1450] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( ") method.", 9 ) ); 
  Rogue_literal_strings[1451] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Incompatible types for comparison: ", 35 ) ); 
  Rogue_literal_strings[1452] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "The '", 5 ) ); 
  Rogue_literal_strings[1453] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "' operator cannot be applied to type ", 37 ) ); 
  Rogue_literal_strings[1454] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdd", 6 ) ); 
  Rogue_literal_strings[1455] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdComparison", 13 ) ); 
  Rogue_literal_strings[1456] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseOp", 12 ) ); 
  Rogue_literal_strings[1457] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdSubtract", 11 ) ); 
  Rogue_literal_strings[1458] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMultiply", 11 ) ); 
  Rogue_literal_strings[1459] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdDivide", 9 ) ); 
  Rogue_literal_strings[1460] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdMod", 6 ) ); 
  Rogue_literal_strings[1461] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdPower", 8 ) ); 
  Rogue_literal_strings[1462] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator~", 9 ) ); 
  Rogue_literal_strings[1463] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator|", 9 ) ); 
  Rogue_literal_strings[1464] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator&", 9 ) ); 
  Rogue_literal_strings[1465] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator:<<:", 12 ) ); 
  Rogue_literal_strings[1466] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator:>>:", 12 ) ); 
  Rogue_literal_strings[1467] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator:>>>:", 13 ) ); 
  Rogue_literal_strings[1468] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator-", 9 ) ); 
  Rogue_literal_strings[1469] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator*", 9 ) ); 
  Rogue_literal_strings[1470] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator/", 9 ) ); 
  Rogue_literal_strings[1471] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator%", 9 ) ); 
  Rogue_literal_strings[1472] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator^", 9 ) ); 
  Rogue_literal_strings[1473] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is not", 6 ) ); 
  Rogue_literal_strings[1474] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNativeHeader", 15 ) ); 
  Rogue_literal_strings[1475] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNativeCode", 13 ) ); 
  Rogue_literal_strings[1476] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdIncludeNative", 16 ) ); 
  Rogue_literal_strings[1477] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "[INTERNAL] TODO: 'is' for compounds.", 36 ) ); 
  Rogue_literal_strings[1478] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cannot use 'is not' between mixed type categories ", 50 ) ); 
  Rogue_literal_strings[1479] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareLE", 12 ) ); 
  Rogue_literal_strings[1480] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareLT", 12 ) ); 
  Rogue_literal_strings[1481] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareGE", 12 ) ); 
  Rogue_literal_strings[1482] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareEQ", 12 ) ); 
  Rogue_literal_strings[1483] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareIsNot", 15 ) ); 
  Rogue_literal_strings[1484] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareIs", 12 ) ); 
  Rogue_literal_strings[1485] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareNE", 12 ) ); 
  Rogue_literal_strings[1486] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCompareGT", 12 ) ); 
  Rogue_literal_strings[1487] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator<>", 10 ) ); 
  Rogue_literal_strings[1488] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeUpTo", 12 ) ); 
  Rogue_literal_strings[1489] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeUpToLessThan", 20 ) ); 
  Rogue_literal_strings[1490] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdRangeDownTo", 14 ) ); 
  Rogue_literal_strings[1491] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignLocal", 23 ) ); 
  Rogue_literal_strings[1492] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignGlobal", 24 ) ); 
  Rogue_literal_strings[1493] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdModifyAndAssignProperty", 26 ) ); 
  Rogue_literal_strings[1494] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalXor", 13 ) ); 
  Rogue_literal_strings[1495] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalOr", 12 ) ); 
  Rogue_literal_strings[1496] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalAnd", 13 ) ); 
  Rogue_literal_strings[1497] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdInstanceOf", 13 ) ); 
  Rogue_literal_strings[1498] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdConvertToType", 16 ) ); 
  Rogue_literal_strings[1499] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAs", 5 ) ); 
  Rogue_literal_strings[1500] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCastToType", 13 ) ); 
  Rogue_literal_strings[1501] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operator!", 9 ) ); 
  Rogue_literal_strings[1502] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalNot", 13 ) ); 
  Rogue_literal_strings[1503] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNegate", 9 ) ); 
  Rogue_literal_strings[1504] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseNot", 13 ) ); 
  Rogue_literal_strings[1505] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLogicalize", 13 ) ); 
  Rogue_literal_strings[1506] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "not ", 4 ) ); 
  Rogue_literal_strings[1507] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "(-", 2 ) ); 
  Rogue_literal_strings[1508] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "!!", 2 ) ); 
  Rogue_literal_strings[1509] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseXor", 13 ) ); 
  Rogue_literal_strings[1510] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseOr", 12 ) ); 
  Rogue_literal_strings[1511] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseAnd", 13 ) ); 
  Rogue_literal_strings[1512] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftLeft", 19 ) ); 
  Rogue_literal_strings[1513] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftRight", 20 ) ); 
  Rogue_literal_strings[1514] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdBitwiseShiftRightX", 21 ) ); 
  Rogue_literal_strings[1515] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdLiteralThis", 14 ) ); 
  Rogue_literal_strings[1516] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "UpdateThisTypeVisitor", 21 ) ); 
  Rogue_literal_strings[1517] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "TraceUsedCodeVisitor", 20 ) ); 
  Rogue_literal_strings[1518] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "QueryToGenericFunctionConversionVisitor", 39 ) ); 
  Rogue_literal_strings[1519] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "p", 1 ) ); 
  Rogue_literal_strings[1520] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallMethod", 13 ) ); 
  Rogue_literal_strings[1521] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNative", 19 ) ); 
  Rogue_literal_strings[1522] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallNativeRoutine", 20 ) ); 
  Rogue_literal_strings[1523] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallRoutine", 14 ) ); 
  Rogue_literal_strings[1524] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallNativeMethod", 19 ) ); 
  Rogue_literal_strings[1525] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallAspectMethod", 19 ) ); 
  Rogue_literal_strings[1526] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallDynamicMethod", 20 ) ); 
  Rogue_literal_strings[1527] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallStaticMethod", 19 ) ); 
  Rogue_literal_strings[1528] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_2953", 13 ) ); 
  Rogue_literal_strings[1529] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Function_2954", 13 ) ); 
  Rogue_literal_strings[1530] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNativeRoutine", 26 ) ); 
  Rogue_literal_strings[1531] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdCallInlineNativeMethod", 25 ) ); 
  Rogue_literal_strings[1532] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ListReader<<CmdSelectCase>>", 27 ) ); 
  Rogue_literal_strings[1533] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "NativeCodeToken", 15 ) ); 
  Rogue_literal_strings[1534] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteSingleton", 17 ) ); 
  Rogue_literal_strings[1535] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteLocal", 13 ) ); 
  Rogue_literal_strings[1536] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustProperty", 17 ) ); 
  Rogue_literal_strings[1537] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdAdjustGlobal", 15 ) ); 
  Rogue_literal_strings[1538] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdReadArrayElement", 19 ) ); 
  Rogue_literal_strings[1539] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdWriteArrayElement", 20 ) ); 
  Rogue_literal_strings[1540] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "CmdNoAction", 11 ) ); 
  Rogue_literal_strings[1541] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ContainsImplicitAccessVisitor", 29 ) ); 
  Rogue_literal_strings[1542] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriter<<global_output_buffer>>", 35 ) ); 
  Rogue_literal_strings[1543] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriter", 11 ) ); 
  Rogue_literal_strings[1544] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<Character>>", 19 ) ); 
  Rogue_literal_strings[1545] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<String>>", 16 ) ); 
  Rogue_literal_strings[1546] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<Byte>>", 14 ) ); 
  Rogue_literal_strings[1547] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "PrintWriter<<output_buffer>>", 28 ) ); 
  Rogue_literal_strings[1548] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<CyClass>>", 17 ) ); 
  Rogue_literal_strings[1549] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<CyProperty>>", 20 ) ); 
  Rogue_literal_strings[1550] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<CyMethod[]>>", 20 ) ); 
  Rogue_literal_strings[1551] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Writer<<Byte>>", 14 ) ); 
  Rogue_literal_strings[1552] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Reader<<CmdSelectCase>>", 23 ) ); 
  Rogue_literal_strings[1553] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Int32?", 6 ) ); 
  Rogue_literal_strings[1554] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Character?", 10 ) ); 
  Rogue_literal_strings[1555] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Byte?", 5 ) ); 
  Rogue_literal_strings[1556] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "SystemEnvironment", 17 ) ); 
  Rogue_literal_strings[1557] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "String?", 7 ) ); 
  Rogue_literal_strings[1558] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Type?", 5 ) ); 
  Rogue_literal_strings[1559] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Method?", 7 ) ); 
  Rogue_literal_strings[1560] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "Cmd?", 4 ) ); 
  Rogue_literal_strings[1561] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "standard_output", 15 ) ); 
  Rogue_literal_strings[1562] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_output_buffer", 20 ) ); 
  Rogue_literal_strings[1563] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "exit_functions", 14 ) ); 
  Rogue_literal_strings[1564] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "work_bytes", 10 ) ); 
  Rogue_literal_strings[1565] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "utf8", 4 ) ); 
  Rogue_literal_strings[1566] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "indent", 6 ) ); 
  Rogue_literal_strings[1567] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cursor_offset", 13 ) ); 
  Rogue_literal_strings[1568] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cursor_index", 12 ) ); 
  Rogue_literal_strings[1569] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "at_newline", 10 ) ); 
  Rogue_literal_strings[1570] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "data", 4 ) ); 
  Rogue_literal_strings[1571] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "message", 7 ) ); 
  Rogue_literal_strings[1572] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "stack_trace", 11 ) ); 
  Rogue_literal_strings[1573] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "entries", 7 ) ); 
  Rogue_literal_strings[1574] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_formatted", 12 ) ); 
  Rogue_literal_strings[1575] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "index", 5 ) ); 
  Rogue_literal_strings[1576] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "name", 4 ) ); 
  Rogue_literal_strings[1577] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_properties", 17 ) ); 
  Rogue_literal_strings[1578] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "properties", 10 ) ); 
  Rogue_literal_strings[1579] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_name_index", 19 ) ); 
  Rogue_literal_strings[1580] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_type_index", 19 ) ); 
  Rogue_literal_strings[1581] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "values", 6 ) ); 
  Rogue_literal_strings[1582] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bin_mask", 8 ) ); 
  Rogue_literal_strings[1583] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur_entry_index", 15 ) ); 
  Rogue_literal_strings[1584] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bins", 4 ) ); 
  Rogue_literal_strings[1585] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "first_entry", 11 ) ); 
  Rogue_literal_strings[1586] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "last_entry", 10 ) ); 
  Rogue_literal_strings[1587] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur_entry", 9 ) ); 
  Rogue_literal_strings[1588] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "key", 3 ) ); 
  Rogue_literal_strings[1589] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "adjacent_entry", 14 ) ); 
  Rogue_literal_strings[1590] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_entry", 10 ) ); 
  Rogue_literal_strings[1591] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "previous_entry", 14 ) ); 
  Rogue_literal_strings[1592] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "hash", 4 ) ); 
  Rogue_literal_strings[1593] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "position", 8 ) ); 
  Rogue_literal_strings[1594] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "list", 4 ) ); 
  Rogue_literal_strings[1595] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "limit", 5 ) ); 
  Rogue_literal_strings[1596] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_limited", 10 ) ); 
  Rogue_literal_strings[1597] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_info_lookup", 16 ) ); 
  Rogue_literal_strings[1598] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "output_buffer", 13 ) ); 
  Rogue_literal_strings[1599] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "input_buffer", 12 ) ); 
  Rogue_literal_strings[1600] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_input_byte", 15 ) ); 
  Rogue_literal_strings[1601] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "io_handler", 10 ) ); 
  Rogue_literal_strings[1602] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "termios original_terminal_settings;", 35 ) ); 
  Rogue_literal_strings[1603] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "included_files", 14 ) ); 
  Rogue_literal_strings[1604] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "manually_included_files", 23 ) ); 
  Rogue_literal_strings[1605] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prefix_path_list", 16 ) ); 
  Rogue_literal_strings[1606] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prefix_path_lookup", 18 ) ); 
  Rogue_literal_strings[1607] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compile_targets", 15 ) ); 
  Rogue_literal_strings[1608] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "target_list", 11 ) ); 
  Rogue_literal_strings[1609] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "libraries_folder", 16 ) ); 
  Rogue_literal_strings[1610] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "source_files", 12 ) ); 
  Rogue_literal_strings[1611] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "generate_main", 13 ) ); 
  Rogue_literal_strings[1612] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "first_filepath", 14 ) ); 
  Rogue_literal_strings[1613] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "output_filepath", 15 ) ); 
  Rogue_literal_strings[1614] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "supported_targets", 17 ) ); 
  Rogue_literal_strings[1615] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "essential_declarations", 22 ) ); 
  Rogue_literal_strings[1616] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "all_essential", 13 ) ); 
  Rogue_literal_strings[1617] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "all_api", 7 ) ); 
  Rogue_literal_strings[1618] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "essential_files", 15 ) ); 
  Rogue_literal_strings[1619] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "manual_files_essential", 22 ) ); 
  Rogue_literal_strings[1620] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "all_methods_callable_dynamically", 32 ) ); 
  Rogue_literal_strings[1621] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compile_output", 14 ) ); 
  Rogue_literal_strings[1622] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "execute_args", 12 ) ); 
  Rogue_literal_strings[1623] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "package_name", 12 ) ); 
  Rogue_literal_strings[1624] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "debug_mode", 10 ) ); 
  Rogue_literal_strings[1625] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "print_version", 13 ) ); 
  Rogue_literal_strings[1626] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parsers", 7 ) ); 
  Rogue_literal_strings[1627] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parsereaders_by_filepath", 24 ) ); 
  Rogue_literal_strings[1628] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "stopwatch", 9 ) ); 
  Rogue_literal_strings[1629] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "gc_mode", 7 ) ); 
  Rogue_literal_strings[1630] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "gc_threshold", 12 ) ); 
  Rogue_literal_strings[1631] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "plugins", 7 ) ); 
  Rogue_literal_strings[1632] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_t", 2 ) ); 
  Rogue_literal_strings[1633] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "reader", 6 ) ); 
  Rogue_literal_strings[1634] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "filepath", 8 ) ); 
  Rogue_literal_strings[1635] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_type", 9 ) ); 
  Rogue_literal_strings[1636] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_method", 11 ) ); 
  Rogue_literal_strings[1637] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_declarations", 18 ) ); 
  Rogue_literal_strings[1638] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_list", 13 ) ); 
  Rogue_literal_strings[1639] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "string_buffer", 13 ) ); 
  Rogue_literal_strings[1640] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur_statement_list", 18 ) ); 
  Rogue_literal_strings[1641] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parsing_augment", 15 ) ); 
  Rogue_literal_strings[1642] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "used_modules", 12 ) ); 
  Rogue_literal_strings[1643] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "module_id_map", 13 ) ); 
  Rogue_literal_strings[1644] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "inserted_module_prefixes", 24 ) ); 
  Rogue_literal_strings[1645] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "implicit_access_used", 20 ) ); 
  Rogue_literal_strings[1646] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "tokens", 6 ) ); 
  Rogue_literal_strings[1647] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "filepath_to_filename", 20 ) ); 
  Rogue_literal_strings[1648] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "line", 4 ) ); 
  Rogue_literal_strings[1649] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "column", 6 ) ); 
  Rogue_literal_strings[1650] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "lookup", 6 ) ); 
  Rogue_literal_strings[1651] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_define", 16 ) ); 
  Rogue_literal_strings[1652] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_include", 17 ) ); 
  Rogue_literal_strings[1653] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_if", 12 ) ); 
  Rogue_literal_strings[1654] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_elseIf", 16 ) ); 
  Rogue_literal_strings[1655] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_else", 14 ) ); 
  Rogue_literal_strings[1656] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_endIf", 15 ) ); 
  Rogue_literal_strings[1657] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_module", 16 ) ); 
  Rogue_literal_strings[1658] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_essential", 19 ) ); 
  Rogue_literal_strings[1659] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "directive_using", 15 ) ); 
  Rogue_literal_strings[1660] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "placeholder_id", 14 ) ); 
  Rogue_literal_strings[1661] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "begin_augment_tokens", 20 ) ); 
  Rogue_literal_strings[1662] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_augment", 15 ) ); 
  Rogue_literal_strings[1663] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_case", 12 ) ); 
  Rogue_literal_strings[1664] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_catch", 13 ) ); 
  Rogue_literal_strings[1665] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_class", 13 ) ); 
  Rogue_literal_strings[1666] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_DEFINITIONS", 19 ) ); 
  Rogue_literal_strings[1667] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_DEPENDENCIES", 20 ) ); 
  Rogue_literal_strings[1668] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_else", 12 ) ); 
  Rogue_literal_strings[1669] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_elseIf", 14 ) ); 
  Rogue_literal_strings[1670] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endAugment", 18 ) ); 
  Rogue_literal_strings[1671] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endBlock", 16 ) ); 
  Rogue_literal_strings[1672] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endClass", 16 ) ); 
  Rogue_literal_strings[1673] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endContingent", 21 ) ); 
  Rogue_literal_strings[1674] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endForEach", 18 ) ); 
  Rogue_literal_strings[1675] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endFunction", 19 ) ); 
  Rogue_literal_strings[1676] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endIf", 13 ) ); 
  Rogue_literal_strings[1677] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endInstance", 19 ) ); 
  Rogue_literal_strings[1678] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endLoop", 15 ) ); 
  Rogue_literal_strings[1679] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endRoutine", 18 ) ); 
  Rogue_literal_strings[1680] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endTry", 14 ) ); 
  Rogue_literal_strings[1681] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endUnitTest", 19 ) ); 
  Rogue_literal_strings[1682] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endWhich", 16 ) ); 
  Rogue_literal_strings[1683] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_endWhile", 16 ) ); 
  Rogue_literal_strings[1684] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_ENUMERATE", 17 ) ); 
  Rogue_literal_strings[1685] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_GLOBAL", 14 ) ); 
  Rogue_literal_strings[1686] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_includeNativeCode", 25 ) ); 
  Rogue_literal_strings[1687] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_includeNativeHeader", 27 ) ); 
  Rogue_literal_strings[1688] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_instance", 16 ) ); 
  Rogue_literal_strings[1689] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_method", 14 ) ); 
  Rogue_literal_strings[1690] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_METHODS", 15 ) ); 
  Rogue_literal_strings[1691] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_nativeCode", 18 ) ); 
  Rogue_literal_strings[1692] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_nativeHeader", 20 ) ); 
  Rogue_literal_strings[1693] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_others", 14 ) ); 
  Rogue_literal_strings[1694] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_PROPERTIES", 18 ) ); 
  Rogue_literal_strings[1695] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_routine", 15 ) ); 
  Rogue_literal_strings[1696] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_satisfied", 17 ) ); 
  Rogue_literal_strings[1697] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_unsatisfied", 19 ) ); 
  Rogue_literal_strings[1698] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_with", 12 ) ); 
  Rogue_literal_strings[1699] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_brace", 18 ) ); 
  Rogue_literal_strings[1700] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_bracket", 20 ) ); 
  Rogue_literal_strings[1701] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_comment", 20 ) ); 
  Rogue_literal_strings[1702] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_paren", 18 ) ); 
  Rogue_literal_strings[1703] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_close_specialize", 23 ) ); 
  Rogue_literal_strings[1704] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "eol", 3 ) ); 
  Rogue_literal_strings[1705] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "eoi", 3 ) ); 
  Rogue_literal_strings[1706] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_assert", 14 ) ); 
  Rogue_literal_strings[1707] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_await", 13 ) ); 
  Rogue_literal_strings[1708] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_block", 13 ) ); 
  Rogue_literal_strings[1709] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_contingent", 18 ) ); 
  Rogue_literal_strings[1710] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_ensure", 14 ) ); 
  Rogue_literal_strings[1711] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeBlock", 19 ) ); 
  Rogue_literal_strings[1712] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeContingent", 24 ) ); 
  Rogue_literal_strings[1713] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeForEach", 21 ) ); 
  Rogue_literal_strings[1714] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeIf", 16 ) ); 
  Rogue_literal_strings[1715] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeLoop", 18 ) ); 
  Rogue_literal_strings[1716] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeTry", 17 ) ); 
  Rogue_literal_strings[1717] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeWhich", 19 ) ); 
  Rogue_literal_strings[1718] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_escapeWhile", 19 ) ); 
  Rogue_literal_strings[1719] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_forEach", 15 ) ); 
  Rogue_literal_strings[1720] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_function", 16 ) ); 
  Rogue_literal_strings[1721] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_global", 14 ) ); 
  Rogue_literal_strings[1722] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_if", 10 ) ); 
  Rogue_literal_strings[1723] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_in", 10 ) ); 
  Rogue_literal_strings[1724] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_infinity", 16 ) ); 
  Rogue_literal_strings[1725] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_is", 10 ) ); 
  Rogue_literal_strings[1726] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_isReference", 19 ) ); 
  Rogue_literal_strings[1727] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_local", 13 ) ); 
  Rogue_literal_strings[1728] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_loop", 12 ) ); 
  Rogue_literal_strings[1729] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_NaN", 11 ) ); 
  Rogue_literal_strings[1730] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_native", 14 ) ); 
  Rogue_literal_strings[1731] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_necessary", 17 ) ); 
  Rogue_literal_strings[1732] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_noAction", 16 ) ); 
  Rogue_literal_strings[1733] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_null", 12 ) ); 
  Rogue_literal_strings[1734] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_of", 10 ) ); 
  Rogue_literal_strings[1735] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_require", 15 ) ); 
  Rogue_literal_strings[1736] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_return", 14 ) ); 
  Rogue_literal_strings[1737] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_select", 14 ) ); 
  Rogue_literal_strings[1738] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_nextIteration", 21 ) ); 
  Rogue_literal_strings[1739] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_step", 12 ) ); 
  Rogue_literal_strings[1740] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_sufficient", 18 ) ); 
  Rogue_literal_strings[1741] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_throw", 13 ) ); 
  Rogue_literal_strings[1742] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_trace", 13 ) ); 
  Rogue_literal_strings[1743] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_trace_args_only", 23 ) ); 
  Rogue_literal_strings[1744] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_try", 11 ) ); 
  Rogue_literal_strings[1745] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_unitTest", 16 ) ); 
  Rogue_literal_strings[1746] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_which", 13 ) ); 
  Rogue_literal_strings[1747] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_while", 13 ) ); 
  Rogue_literal_strings[1748] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_yield", 13 ) ); 
  Rogue_literal_strings[1749] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_identifier", 15 ) ); 
  Rogue_literal_strings[1750] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_character", 17 ) ); 
  Rogue_literal_strings[1751] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_integer", 15 ) ); 
  Rogue_literal_strings[1752] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_long", 12 ) ); 
  Rogue_literal_strings[1753] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_real", 12 ) ); 
  Rogue_literal_strings[1754] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_string", 14 ) ); 
  Rogue_literal_strings[1755] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_and", 11 ) ); 
  Rogue_literal_strings[1756] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_as", 10 ) ); 
  Rogue_literal_strings[1757] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_downTo", 14 ) ); 
  Rogue_literal_strings[1758] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_false", 13 ) ); 
  Rogue_literal_strings[1759] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_instanceOf", 18 ) ); 
  Rogue_literal_strings[1760] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_meta", 12 ) ); 
  Rogue_literal_strings[1761] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_not", 11 ) ); 
  Rogue_literal_strings[1762] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_or", 10 ) ); 
  Rogue_literal_strings[1763] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_pi", 10 ) ); 
  Rogue_literal_strings[1764] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_prior", 13 ) ); 
  Rogue_literal_strings[1765] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_this", 12 ) ); 
  Rogue_literal_strings[1766] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_true", 12 ) ); 
  Rogue_literal_strings[1767] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "keyword_xor", 11 ) ); 
  Rogue_literal_strings[1768] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_ampersand", 16 ) ); 
  Rogue_literal_strings[1769] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_ampersand_equals", 23 ) ); 
  Rogue_literal_strings[1770] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_double_ampersand", 23 ) ); 
  Rogue_literal_strings[1771] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_arrow", 12 ) ); 
  Rogue_literal_strings[1772] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_at", 9 ) ); 
  Rogue_literal_strings[1773] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_at_brace", 15 ) ); 
  Rogue_literal_strings[1774] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_at_bracket", 17 ) ); 
  Rogue_literal_strings[1775] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_backslash", 16 ) ); 
  Rogue_literal_strings[1776] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_caret", 12 ) ); 
  Rogue_literal_strings[1777] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_caret_equals", 19 ) ); 
  Rogue_literal_strings[1778] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_colon", 12 ) ); 
  Rogue_literal_strings[1779] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_comma", 12 ) ); 
  Rogue_literal_strings[1780] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_compare", 14 ) ); 
  Rogue_literal_strings[1781] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_dot", 10 ) ); 
  Rogue_literal_strings[1782] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_dot_equals", 17 ) ); 
  Rogue_literal_strings[1783] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_downToGreaterThan", 24 ) ); 
  Rogue_literal_strings[1784] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_empty_braces", 19 ) ); 
  Rogue_literal_strings[1785] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_empty_brackets", 21 ) ); 
  Rogue_literal_strings[1786] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_eq", 9 ) ); 
  Rogue_literal_strings[1787] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_equals", 13 ) ); 
  Rogue_literal_strings[1788] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_exclamation_point", 24 ) ); 
  Rogue_literal_strings[1789] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_fat_arrow", 16 ) ); 
  Rogue_literal_strings[1790] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_ge", 9 ) ); 
  Rogue_literal_strings[1791] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_gt", 9 ) ); 
  Rogue_literal_strings[1792] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_le", 9 ) ); 
  Rogue_literal_strings[1793] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_lt", 9 ) ); 
  Rogue_literal_strings[1794] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_minus", 12 ) ); 
  Rogue_literal_strings[1795] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_minus_equals", 19 ) ); 
  Rogue_literal_strings[1796] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_minus_minus", 18 ) ); 
  Rogue_literal_strings[1797] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_ne", 9 ) ); 
  Rogue_literal_strings[1798] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_open_brace", 17 ) ); 
  Rogue_literal_strings[1799] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_open_bracket", 19 ) ); 
  Rogue_literal_strings[1800] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_open_paren", 17 ) ); 
  Rogue_literal_strings[1801] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_open_specialize", 22 ) ); 
  Rogue_literal_strings[1802] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_percent", 14 ) ); 
  Rogue_literal_strings[1803] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_percent_equals", 21 ) ); 
  Rogue_literal_strings[1804] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_plus", 11 ) ); 
  Rogue_literal_strings[1805] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_plus_equals", 18 ) ); 
  Rogue_literal_strings[1806] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_plus_plus", 16 ) ); 
  Rogue_literal_strings[1807] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_question_mark", 20 ) ); 
  Rogue_literal_strings[1808] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_semicolon", 16 ) ); 
  Rogue_literal_strings[1809] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_shift_left", 17 ) ); 
  Rogue_literal_strings[1810] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_shift_right", 18 ) ); 
  Rogue_literal_strings[1811] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_shift_right_x", 20 ) ); 
  Rogue_literal_strings[1812] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_slash", 12 ) ); 
  Rogue_literal_strings[1813] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_slash_equals", 19 ) ); 
  Rogue_literal_strings[1814] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_slash_slash", 18 ) ); 
  Rogue_literal_strings[1815] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_tilde", 12 ) ); 
  Rogue_literal_strings[1816] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_tilde_equals", 19 ) ); 
  Rogue_literal_strings[1817] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_times", 12 ) ); 
  Rogue_literal_strings[1818] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_times_equals", 19 ) ); 
  Rogue_literal_strings[1819] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_upTo", 11 ) ); 
  Rogue_literal_strings[1820] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_upToLessThan", 19 ) ); 
  Rogue_literal_strings[1821] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_vertical_bar", 19 ) ); 
  Rogue_literal_strings[1822] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_vertical_bar_equals", 26 ) ); 
  Rogue_literal_strings[1823] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "symbol_double_vertical_bar", 26 ) ); 
  Rogue_literal_strings[1824] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_end_command", 14 ) ); 
  Rogue_literal_strings[1825] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_non_method", 13 ) ); 
  Rogue_literal_strings[1826] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "configure_chain", 15 ) ); 
  Rogue_literal_strings[1827] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "organize_chain", 14 ) ); 
  Rogue_literal_strings[1828] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "resolve_chain", 13 ) ); 
  Rogue_literal_strings[1829] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "t", 1 ) ); 
  Rogue_literal_strings[1830] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "attributes", 10 ) ); 
  Rogue_literal_strings[1831] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "source_template", 15 ) ); 
  Rogue_literal_strings[1832] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "specializers", 12 ) ); 
  Rogue_literal_strings[1833] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "defined", 7 ) ); 
  Rogue_literal_strings[1834] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "configured", 10 ) ); 
  Rogue_literal_strings[1835] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "organized", 9 ) ); 
  Rogue_literal_strings[1836] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "organizing", 10 ) ); 
  Rogue_literal_strings[1837] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "resolved", 8 ) ); 
  Rogue_literal_strings[1838] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "culled", 6 ) ); 
  Rogue_literal_strings[1839] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "base_class", 10 ) ); 
  Rogue_literal_strings[1840] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "base_types", 10 ) ); 
  Rogue_literal_strings[1841] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "extended_types", 14 ) ); 
  Rogue_literal_strings[1842] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "aspect_base_class", 17 ) ); 
  Rogue_literal_strings[1843] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_array", 8 ) ); 
  Rogue_literal_strings[1844] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_list", 7 ) ); 
  Rogue_literal_strings[1845] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_optional", 11 ) ); 
  Rogue_literal_strings[1846] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "element_type", 12 ) ); 
  Rogue_literal_strings[1847] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_used", 7 ) ); 
  Rogue_literal_strings[1848] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "simplify_name", 13 ) ); 
  Rogue_literal_strings[1849] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "definition_list", 15 ) ); 
  Rogue_literal_strings[1850] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "definition_lookup", 17 ) ); 
  Rogue_literal_strings[1851] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prev_enum_cmd", 13 ) ); 
  Rogue_literal_strings[1852] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_enum_offset", 16 ) ); 
  Rogue_literal_strings[1853] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_list", 11 ) ); 
  Rogue_literal_strings[1854] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_lookup", 13 ) ); 
  Rogue_literal_strings[1855] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_lookup", 15 ) ); 
  Rogue_literal_strings[1856] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_method_list", 18 ) ); 
  Rogue_literal_strings[1857] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_method_lookup_by_name", 28 ) ); 
  Rogue_literal_strings[1858] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_method_lookup_by_signature", 33 ) ); 
  Rogue_literal_strings[1859] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_list", 11 ) ); 
  Rogue_literal_strings[1860] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_lookup_by_name", 21 ) ); 
  Rogue_literal_strings[1861] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_lookup_by_signature", 26 ) ); 
  Rogue_literal_strings[1862] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "dynamic_method_table_index", 26 ) ); 
  Rogue_literal_strings[1863] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_function", 11 ) ); 
  Rogue_literal_strings[1864] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "callback_parameter_types", 24 ) ); 
  Rogue_literal_strings[1865] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "callback_return_type", 20 ) ); 
  Rogue_literal_strings[1866] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_templates", 16 ) ); 
  Rogue_literal_strings[1867] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "dependencies", 12 ) ); 
  Rogue_literal_strings[1868] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cpp_name", 8 ) ); 
  Rogue_literal_strings[1869] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cpp_class_name", 14 ) ); 
  Rogue_literal_strings[1870] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cpp_type_name", 13 ) ); 
  Rogue_literal_strings[1871] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "flags", 5 ) ); 
  Rogue_literal_strings[1872] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "tags", 4 ) ); 
  Rogue_literal_strings[1873] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_parameters", 15 ) ); 
  Rogue_literal_strings[1874] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "alternates_by_param_count", 25 ) ); 
  Rogue_literal_strings[1875] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "routine_return_type", 19 ) ); 
  Rogue_literal_strings[1876] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "routine_parameter_types", 23 ) ); 
  Rogue_literal_strings[1877] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "expression", 10 ) ); 
  Rogue_literal_strings[1878] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_enumeration", 14 ) ); 
  Rogue_literal_strings[1879] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_context", 12 ) ); 
  Rogue_literal_strings[1880] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "initial_value", 13 ) ); 
  Rogue_literal_strings[1881] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "signature", 9 ) ); 
  Rogue_literal_strings[1882] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return_type", 11 ) ); 
  Rogue_literal_strings[1883] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_result_type", 16 ) ); 
  Rogue_literal_strings[1884] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parameters", 10 ) ); 
  Rogue_literal_strings[1885] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "locals", 6 ) ); 
  Rogue_literal_strings[1886] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "min_args", 8 ) ); 
  Rogue_literal_strings[1887] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "statements", 10 ) ); 
  Rogue_literal_strings[1888] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "aspect_statements", 17 ) ); 
  Rogue_literal_strings[1889] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "incorporating_classes", 21 ) ); 
  Rogue_literal_strings[1890] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "overridden_method", 17 ) ); 
  Rogue_literal_strings[1891] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "overriding_methods", 18 ) ); 
  Rogue_literal_strings[1892] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "native_code", 11 ) ); 
  Rogue_literal_strings[1893] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "called_dynamically", 18 ) ); 
  Rogue_literal_strings[1894] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "label_list", 10 ) ); 
  Rogue_literal_strings[1895] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "label_lookup", 12 ) ); 
  Rogue_literal_strings[1896] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur_label", 9 ) ); 
  Rogue_literal_strings[1897] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "specializer_count", 17 ) ); 
  Rogue_literal_strings[1898] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unspecialized_name", 18 ) ); 
  Rogue_literal_strings[1899] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cpp_typedef", 11 ) ); 
  Rogue_literal_strings[1900] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "original_name", 13 ) ); 
  Rogue_literal_strings[1901] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_modified", 11 ) ); 
  Rogue_literal_strings[1902] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_cpp_name", 9 ) ); 
  Rogue_literal_strings[1903] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "_parameter_cpp_name", 19 ) ); 
  Rogue_literal_strings[1904] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "current", 7 ) ); 
  Rogue_literal_strings[1905] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_referenced", 13 ) ); 
  Rogue_literal_strings[1906] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_global", 9 ) ); 
  Rogue_literal_strings[1907] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "template_tokens", 15 ) ); 
  Rogue_literal_strings[1908] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parameter_count", 15 ) ); 
  Rogue_literal_strings[1909] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "overridden_m", 12 ) ); 
  Rogue_literal_strings[1910] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "overrides", 9 ) ); 
  Rogue_literal_strings[1911] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "templates", 9 ) ); 
  Rogue_literal_strings[1912] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "spaces_per_tab", 14 ) ); 
  Rogue_literal_strings[1913] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "stopwatches", 11 ) ); 
  Rogue_literal_strings[1914] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "start_time", 10 ) ); 
  Rogue_literal_strings[1915] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "collect_supported_types_callback", 32 ) ); 
  Rogue_literal_strings[1916] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "generate_additonal_types_callback", 33 ) ); 
  Rogue_literal_strings[1917] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "start_header_file_callback", 26 ) ); 
  Rogue_literal_strings[1918] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "finish_header_file_callback", 27 ) ); 
  Rogue_literal_strings[1919] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "start_code_file_callback", 24 ) ); 
  Rogue_literal_strings[1920] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "finish_code_file_callback", 25 ) ); 
  Rogue_literal_strings[1921] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "code_prefix", 11 ) ); 
  Rogue_literal_strings[1922] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "program_name", 12 ) ); 
  Rogue_literal_strings[1923] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unique_integer", 14 ) ); 
  Rogue_literal_strings[1924] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "template_list", 13 ) ); 
  Rogue_literal_strings[1925] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "template_lookup", 15 ) ); 
  Rogue_literal_strings[1926] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "augment_lookup", 14 ) ); 
  Rogue_literal_strings[1927] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "m_on_launch", 11 ) ); 
  Rogue_literal_strings[1928] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "m_run_tests", 11 ) ); 
  Rogue_literal_strings[1929] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "native_header", 13 ) ); 
  Rogue_literal_strings[1930] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "methods_by_signature", 20 ) ); 
  Rogue_literal_strings[1931] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_list", 9 ) ); 
  Rogue_literal_strings[1932] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_lookup", 11 ) ); 
  Rogue_literal_strings[1933] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_null", 9 ) ); 
  Rogue_literal_strings[1934] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Real64", 11 ) ); 
  Rogue_literal_strings[1935] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Real32", 11 ) ); 
  Rogue_literal_strings[1936] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Int64", 10 ) ); 
  Rogue_literal_strings[1937] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Int32", 10 ) ); 
  Rogue_literal_strings[1938] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Character", 14 ) ); 
  Rogue_literal_strings[1939] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Byte", 9 ) ); 
  Rogue_literal_strings[1940] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Logical", 12 ) ); 
  Rogue_literal_strings[1941] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Object", 11 ) ); 
  Rogue_literal_strings[1942] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_String", 11 ) ); 
  Rogue_literal_strings[1943] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_NativeArray", 16 ) ); 
  Rogue_literal_strings[1944] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_GenericList", 16 ) ); 
  Rogue_literal_strings[1945] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Global", 11 ) ); 
  Rogue_literal_strings[1946] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Exception", 14 ) ); 
  Rogue_literal_strings[1947] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_WeakReference", 18 ) ); 
  Rogue_literal_strings[1948] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_Value", 10 ) ); 
  Rogue_literal_strings[1949] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_StringBuilder", 18 ) ); 
  Rogue_literal_strings[1950] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "type_TypeInfo", 13 ) ); 
  Rogue_literal_strings[1951] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_string_lookup", 21 ) ); 
  Rogue_literal_strings[1952] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "literal_string_list", 19 ) ); 
  Rogue_literal_strings[1953] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ids_by_module", 13 ) ); 
  Rogue_literal_strings[1954] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cy_delegate_construction_pass", 29 ) ); 
  Rogue_literal_strings[1955] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cy_first_code_file", 18 ) ); 
  Rogue_literal_strings[1956] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cy_delegates", 12 ) ); 
  Rogue_literal_strings[1957] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cy_delegate_to_pydelegate", 25 ) ); 
  Rogue_literal_strings[1958] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cy_overload_count", 17 ) ); 
  Rogue_literal_strings[1959] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cy_plugin", 9 ) ); 
  Rogue_literal_strings[1960] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ctypes", 6 ) ); 
  Rogue_literal_strings[1961] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "bad_names", 9 ) ); 
  Rogue_literal_strings[1962] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pytype", 6 ) ); 
  Rogue_literal_strings[1963] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "funcs", 5 ) ); 
  Rogue_literal_strings[1964] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_routine", 10 ) ); 
  Rogue_literal_strings[1965] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cname", 5 ) ); 
  Rogue_literal_strings[1966] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pyname", 6 ) ); 
  Rogue_literal_strings[1967] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pyclass", 7 ) ); 
  Rogue_literal_strings[1968] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cproto_return", 13 ) ); 
  Rogue_literal_strings[1969] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "return_converter", 16 ) ); 
  Rogue_literal_strings[1970] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "call_args", 9 ) ); 
  Rogue_literal_strings[1971] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cproto_params", 13 ) ); 
  Rogue_literal_strings[1972] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "py_params", 9 ) ); 
  Rogue_literal_strings[1973] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_initializer", 14 ) ); 
  Rogue_literal_strings[1974] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_static_method", 16 ) ); 
  Rogue_literal_strings[1975] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "valid", 5 ) ); 
  Rogue_literal_strings[1976] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "defaults", 8 ) ); 
  Rogue_literal_strings[1977] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "py_types", 8 ) ); 
  Rogue_literal_strings[1978] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prologue", 8 ) ); 
  Rogue_literal_strings[1979] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "real_method", 11 ) ); 
  Rogue_literal_strings[1980] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_static", 9 ) ); 
  Rogue_literal_strings[1981] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prop", 4 ) ); 
  Rogue_literal_strings[1982] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ctype", 5 ) ); 
  Rogue_literal_strings[1983] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read_c_code", 11 ) ); 
  Rogue_literal_strings[1984] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "write_c_code", 12 ) ); 
  Rogue_literal_strings[1985] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "definitions", 11 ) ); 
  Rogue_literal_strings[1986] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "parser", 6 ) ); 
  Rogue_literal_strings[1987] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cur_module", 10 ) ); 
  Rogue_literal_strings[1988] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "queue", 5 ) ); 
  Rogue_literal_strings[1989] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "buffer", 6 ) ); 
  Rogue_literal_strings[1990] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_filepath", 13 ) ); 
  Rogue_literal_strings[1991] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_line", 9 ) ); 
  Rogue_literal_strings[1992] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_column", 11 ) ); 
  Rogue_literal_strings[1993] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "read_index", 10 ) ); 
  Rogue_literal_strings[1994] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "write_index", 11 ) ); 
  Rogue_literal_strings[1995] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "args", 4 ) ); 
  Rogue_literal_strings[1996] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "named_args", 10 ) ); 
  Rogue_literal_strings[1997] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_negative", 11 ) ); 
  Rogue_literal_strings[1998] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "inferred_index", 14 ) ); 
  Rogue_literal_strings[1999] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "of_type", 7 ) ); 
  Rogue_literal_strings[2000] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_body", 9 ) ); 
  Rogue_literal_strings[2001] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_statement", 14 ) ); 
  Rogue_literal_strings[2002] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "implicit_type", 13 ) ); 
  Rogue_literal_strings[2003] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_list", 10 ) ); 
  Rogue_literal_strings[2004] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control_stack", 13 ) ); 
  Rogue_literal_strings[2005] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control_type", 12 ) ); 
  Rogue_literal_strings[2006] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "contains_yield", 14 ) ); 
  Rogue_literal_strings[2007] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escape_label", 12 ) ); 
  Rogue_literal_strings[2008] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "escape_label_used", 17 ) ); 
  Rogue_literal_strings[2009] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "upkeep_label", 12 ) ); 
  Rogue_literal_strings[2010] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_escape_section", 19 ) ); 
  Rogue_literal_strings[2011] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_upkeep_section", 19 ) ); 
  Rogue_literal_strings[2012] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cloned_command", 14 ) ); 
  Rogue_literal_strings[2013] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "needs_indent", 12 ) ); 
  Rogue_literal_strings[2014] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "line_number", 11 ) ); 
  Rogue_literal_strings[2015] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "trace_token", 11 ) ); 
  Rogue_literal_strings[2016] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "temp_buffer", 11 ) ); 
  Rogue_literal_strings[2017] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "table", 5 ) ); 
  Rogue_literal_strings[2018] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "command_line_arguments", 22 ) ); 
  Rogue_literal_strings[2019] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "executable_filepath", 19 ) ); 
  Rogue_literal_strings[2020] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "environment", 11 ) ); 
  Rogue_literal_strings[2021] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next_weak_reference", 19 ) ); 
  Rogue_literal_strings[2022] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "RogueObject* value;", 19 ) ); 
  Rogue_literal_strings[2023] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "empty_string", 12 ) ); 
  Rogue_literal_strings[2024] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "console", 7 ) ); 
  Rogue_literal_strings[2025] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "pattern", 7 ) ); 
  Rogue_literal_strings[2026] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "source", 6 ) ); 
  Rogue_literal_strings[2027] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "next", 4 ) ); 
  Rogue_literal_strings[2028] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "prev", 4 ) ); 
  Rogue_literal_strings[2029] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "comment", 7 ) ); 
  Rogue_literal_strings[2030] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "left", 4 ) ); 
  Rogue_literal_strings[2031] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "right", 5 ) ); 
  Rogue_literal_strings[2032] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "file_type", 9 ) ); 
  Rogue_literal_strings[2033] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "condition", 9 ) ); 
  Rogue_literal_strings[2034] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else_statements", 15 ) ); 
  Rogue_literal_strings[2035] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cases", 5 ) ); 
  Rogue_literal_strings[2036] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "case_others", 11 ) ); 
  Rogue_literal_strings[2037] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "conditions", 10 ) ); 
  Rogue_literal_strings[2038] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied_statements", 20 ) ); 
  Rogue_literal_strings[2039] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied_statements", 22 ) ); 
  Rogue_literal_strings[2040] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied_label", 15 ) ); 
  Rogue_literal_strings[2041] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied_label", 17 ) ); 
  Rogue_literal_strings[2042] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "satisfied_section", 17 ) ); 
  Rogue_literal_strings[2043] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "unsatisfied_section", 19 ) ); 
  Rogue_literal_strings[2044] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control_statements", 18 ) ); 
  Rogue_literal_strings[2045] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "upkeep", 6 ) ); 
  Rogue_literal_strings[2046] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "catches", 7 ) ); 
  Rogue_literal_strings[2047] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "error_var", 9 ) ); 
  Rogue_literal_strings[2048] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "error_type", 10 ) ); 
  Rogue_literal_strings[2049] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "statement_list", 14 ) ); 
  Rogue_literal_strings[2050] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "result_var", 10 ) ); 
  Rogue_literal_strings[2051] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "format", 6 ) ); 
  Rogue_literal_strings[2052] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "info", 4 ) ); 
  Rogue_literal_strings[2053] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "local_info", 10 ) ); 
  Rogue_literal_strings[2054] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "skip_initialization", 19 ) ); 
  Rogue_literal_strings[2055] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "error", 5 ) ); 
  Rogue_literal_strings[2056] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "target_cmd", 10 ) ); 
  Rogue_literal_strings[2057] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "operand", 7 ) ); 
  Rogue_literal_strings[2058] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "delta", 5 ) ); 
  Rogue_literal_strings[2059] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "target", 6 ) ); 
  Rogue_literal_strings[2060] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "new_value", 9 ) ); 
  Rogue_literal_strings[2061] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "op", 2 ) ); 
  Rogue_literal_strings[2062] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "try_expression", 14 ) ); 
  Rogue_literal_strings[2063] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "else_expression", 15 ) ); 
  Rogue_literal_strings[2064] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "first", 5 ) ); 
  Rogue_literal_strings[2065] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "last", 4 ) ); 
  Rogue_literal_strings[2066] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "step_size", 9 ) ); 
  Rogue_literal_strings[2067] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "control_var_name", 16 ) ); 
  Rogue_literal_strings[2068] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "index_var_name", 14 ) ); 
  Rogue_literal_strings[2069] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "collection_var_name", 19 ) ); 
  Rogue_literal_strings[2070] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "collection", 10 ) ); 
  Rogue_literal_strings[2071] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "step_cmd", 8 ) ); 
  Rogue_literal_strings[2072] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "target_type", 11 ) ); 
  Rogue_literal_strings[2073] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "with_args", 9 ) ); 
  Rogue_literal_strings[2074] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "is_generic", 10 ) ); 
  Rogue_literal_strings[2075] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "query_cmd", 9 ) ); 
  Rogue_literal_strings[2076] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "list_type", 9 ) ); 
  Rogue_literal_strings[2077] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "result_type", 11 ) ); 
  Rogue_literal_strings[2078] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "modify_op", 9 ) ); 
  Rogue_literal_strings[2079] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "adjust_delta", 12 ) ); 
  Rogue_literal_strings[2080] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "value_type", 10 ) ); 
  Rogue_literal_strings[2081] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "condition_is_value", 18 ) ); 
  Rogue_literal_strings[2082] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "access", 6 ) ); 
  Rogue_literal_strings[2083] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cmd_read", 8 ) ); 
  Rogue_literal_strings[2084] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cmd_write", 9 ) ); 
  Rogue_literal_strings[2085] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "list_type_name", 14 ) ); 
  Rogue_literal_strings[2086] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "elements", 8 ) ); 
  Rogue_literal_strings[2087] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "global_info", 11 ) ); 
  Rogue_literal_strings[2088] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "property_info", 13 ) ); 
  Rogue_literal_strings[2089] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "method_info", 11 ) ); 
  Rogue_literal_strings[2090] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "array_type", 10 ) ); 
  Rogue_literal_strings[2091] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "count_cmd", 9 ) ); 
  Rogue_literal_strings[2092] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "sections", 8 ) ); 
  Rogue_literal_strings[2093] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "current_section", 15 ) ); 
  Rogue_literal_strings[2094] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cloned_method", 13 ) ); 
  Rogue_literal_strings[2095] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_type", 9 ) ); 
  Rogue_literal_strings[2096] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "task_method", 11 ) ); 
  Rogue_literal_strings[2097] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "original_type", 13 ) ); 
  Rogue_literal_strings[2098] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "original_method", 15 ) ); 
  Rogue_literal_strings[2099] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cmd_task_control", 16 ) ); 
  Rogue_literal_strings[2100] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "context_property", 16 ) ); 
  Rogue_literal_strings[2101] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "ip_property", 11 ) ); 
  Rogue_literal_strings[2102] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "this_context", 12 ) ); 
  Rogue_literal_strings[2103] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "arg_lookup", 10 ) ); 
  Rogue_literal_strings[2104] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "available", 9 ) ); 
  Rogue_literal_strings[2105] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "compatible", 10 ) ); 
  Rogue_literal_strings[2106] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "error_on_fail", 13 ) ); 
  Rogue_literal_strings[2107] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "buffer_position", 15 ) ); 
  Rogue_literal_strings[2108] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "FILE* fp;", 9 ) ); 
  Rogue_literal_strings[2109] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "byte_reader", 11 ) ); 
  Rogue_literal_strings[2110] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "cmd_create_fn", 13 ) ); 
  Rogue_literal_strings[2111] = (RogueString*) RogueObject_retain( RogueString_create_from_utf8( "contains_implicit_identifier_access", 35 ) ); 

}

void Rogue_launch()
{
  RogueStringBuilder__init_class();
  RogueRuntime__init_class();
  RogueToken__init_class();
  RogueTokenType__init_class();
  RogueType__init_class();
  RogueCmdStatementList__init_class();
  RogueStopwatch__init_class();
  RogueCyClass__init_class();
  RoguePreprocessor__init_class();
  RogueSystem__init_class();
  RogueStringValue__init_class();

  RogueSystem_executable_filepath = RogueString_create_from_utf8(
      Rogue_argc ? Rogue_argv[0] : "Rogue", -1 );
  
  for (int i=1; i<Rogue_argc; ++i)
  {
    RogueString_List__add__String( RogueSystem_command_line_arguments,
        RogueString_create_from_utf8( Rogue_argv[i], -1 ) );
  }

  // Instantiate essential singletons
  ROGUE_SINGLETON( Global );
  ROGUE_SINGLETON( Program );

  RogueGlobal__on_launch( (RogueClassGlobal*) (RogueType_singleton(RogueTypeGlobal)) );
  Rogue_collect_garbage();
}

bool Rogue_update_tasks()
{
  // Returns true if any tasks are still active
  try
  {
    Rogue_collect_garbage();
    return false;
  }
  catch (RogueException* err)
  {
    printf( "Uncaught exception\n" );
    RogueException__display( err );
    return false;
  }
}

int main( int argc, const char* argv[] )
{
  try
  {
    Rogue_configure( argc, argv );
    Rogue_launch();

    while (Rogue_update_tasks()) {}

    Rogue_quit();
  }
  catch (RogueException* err)
  {
    printf( "Uncaught exception\n" );
    RogueException__display( err );
  }

  return 0;
}
